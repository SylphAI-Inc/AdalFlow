Search.setIndex({"alltitles": {"1. FunctionTool": [[140, "functiontool"]], "1. Install AdalFlow": [[104, "install-adalflow"]], "2. Set up API keys": [[104, "set-up-api-keys"]], "2. ToolManager": [[140, "toolmanager"]], "3. Function Call end-to-end": [[140, "function-call-end-to-end"]], "3. Load environment variables": [[104, "load-environment-variables"]], "4. Install Optional Packages": [[104, "install-optional-packages"]], "API Reference": [[60, null]], "API References": [[111, null], [113, null], [120, null], [129, null], [133, null], [135, null], [138, null], [140, null]], "API reference": [[116, null], [121, null], [125, null], [131, null], [144, null], [155, null]], "About __output_fields__": [[113, "about-output-fields"]], "AdalComponent": [[110, null]], "AdalComponent to organize code": [[112, "adalcomponent-to-organize-code"]], "AdalFlow Eval API Reference": [[123, null]], "AdalFlow JSON Viewer": [[114, null]], "AdalFlow Trace Graph": [[141, null]], "AdalFlow vs DsPy on GPT-3.5-turbo": [[144, "id3"]], "Add notebooks for existing/new tutorials/use_cases/benchmarks": [[98, "add-notebooks-for-existing-new-tutorials-use-cases-benchmarks"]], "Additional Resources": [[120, null]], "Agent": [[29, "agent"], [111, null]], "Agent Essentials": [[126, "agent-essentials"]], "Agent In Action": [[111, "agent-in-action"]], "An Orchestrator": [[125, "an-orchestrator"]], "Auto Text-Grad": [[112, null]], "BM25Retriever": [[138, "bm25retriever"]], "Base Classes and Data Structures": [[61, "base-classes-and-data-structures"]], "Base classes": [[126, "base-classes"]], "BatchEmbedder": [[121, "batchembedder"]], "Benchmarking": [[101, "benchmarking"], [152, "benchmarking"], [153, "benchmarking"]], "BooleanParser": [[133, "booleanparser"]], "Build the task pipeline": [[101, "build-the-task-pipeline"], [152, "build-the-task-pipeline"], [153, "build-the-task-pipeline"]], "Building": [[126, "building"]], "Building Custom Model client": [[131, "building-custom-model-client"]], "Chunking Example Detailed": [[139, "id2"]], "Chunking Strategies": [[139, "chunking-strategies"]], "Chunking Tips": [[139, "chunking-tips"]], "Class Hierarchy": [[115, null]], "Classes": [[126, "classes"]], "Classicial String Metrics": [[123, "classicial-string-metrics"]], "Classification Optimization": [[144, null]], "Cloud database": [[120, "cloud-database"]], "Code Tips": [[97, "code-tips"]], "Coding": [[97, "coding"]], "Common Problems": [[100, "common-problems"]], "Community": [[102, null]], "Component": [[116, null]], "Component in Action": [[116, "component-in-action"]], "Components": [[29, null], [60, "components"]], "Configurations": [[117, null]], "Configure from file": [[116, "configure-from-file"]], "Content-Aware Chunking": [[139, "content-aware-chunking"]], "Context": [[133, "context"]], "Contributing Process": [[98, null]], "Contributor Guide": [[99, null], [99, null]], "Copilot": [[97, "copilot"]], "Core": [[46, null], [60, "core"]], "Create from Configs": [[125, "create-from-configs"]], "Customization": [[111, "customization"]], "Customization Tips": [[139, "customization-tips"]], "Data (Database/Pipeline)": [[120, null]], "Data Flow & LightRAG structure": [[128, "data-flow-lightrag-structure"]], "Data Flow in LLM applications": [[135, "data-flow-in-llm-applications"]], "Data Models": [[120, "data-models"]], "Data Pipeline": [[118, null], [120, "data-pipeline"]], "Data Pipeline and Storage": [[126, "data-pipeline-and-storage"]], "Data Preparation Pipeline": [[136, "data-preparation-pipeline"]], "Data Process": [[29, "data-process"]], "DataClass": [[113, null]], "DataClass Parser": [[133, "dataclass-parser"]], "DataClass in Action": [[113, "dataclass-in-action"]], "DataclassParser in Action": [[133, "dataclassparser-in-action"]], "Datasets": [[52, null], [60, "datasets"], [101, "datasets"], [119, null], [152, "datasets"], [153, "datasets"]], "Datasets and Benchmarks": [[123, "datasets-and-benchmarks"]], "Default Prompt Template": [[135, "default-prompt-template"]], "Define the AdalComponent": [[144, "define-the-adalcomponent"]], "Definitions": [[139, "definitions"]], "Demo Parameter": [[134, "demo-parameter"]], "Dependencies": [[97, "dependencies"]], "Describe the data format to LLMs": [[113, "describe-the-data-format-to-llms"]], "Describing the Data Format (Data Class)": [[113, "describing-the-data-format-data-class"]], "Design": [[111, "design"], [113, "design"], [116, "design"], [125, "design"], [129, "design"], [135, "design"], [138, "design"]], "Design Philosophy": [[127, null]], "Designing RAG": [[136, "designing-rag"], [143, null]], "Development Essentials": [[97, null]], "Diagnose": [[155, "diagnose"]], "Diagnose the task pipeline": [[101, "diagnose-the-task-pipeline"], [152, "diagnose-the-task-pipeline"], [153, "diagnose-the-task-pipeline"]], "DialogTurn": [[120, "dialogturn"]], "Document": [[120, "document"]], "Document Retrieval & Reranking": [[136, "document-retrieval-reranking"]], "Documentation": [[97, "documentation"]], "Documents filtering": [[138, "documents-filtering"]], "Embedder": [[121, null], [122, null]], "Embedder in Action": [[121, "embedder-in-action"]], "EmbedderOutput": [[121, "embedderoutput"]], "Embedding-based Metrics": [[123, "embedding-based-metrics"]], "End-to-end applications": [[105, "end-to-end-applications"]], "EvalFunction As Loss": [[112, "evalfunction-as-loss"]], "Evaluate the task pipeline": [[101, "evaluate-the-task-pipeline"], [152, "evaluate-the-task-pipeline"], [153, "evaluate-the-task-pipeline"]], "Evaluating RAG": [[145, null]], "Evaluation": [[59, null], [60, "evaluation"], [126, "evaluation"]], "Evaluation Metrics": [[123, "evaluation-metrics"]], "Examples Across the Library": [[125, "examples-across-the-library"]], "Experiment data": [[138, "experiment-data"]], "FAISSRetriever": [[138, "faissretriever"]], "Few Shot Optimizer": [[61, "few-shot-optimizer"]], "Few-shot Optimizer": [[124, null]], "File Reading": [[120, "file-reading"]], "First RAG Paper": [[143, "first-rag-paper"]], "Fixed-Size Chunking": [[139, "fixed-size-chunking"]], "FloatParser": [[133, "floatparser"]], "For Contributors": [[123, "for-contributors"]], "Foundation": [[105, "foundation"]], "FunComponent": [[116, "funcomponent"]], "Function Call in Action": [[140, "function-call-in-action"]], "Function Output Format": [[140, "function-output-format"]], "Function calls": [[140, null]], "FunctionExpression Output Format": [[140, "functionexpression-output-format"]], "G_Eval": [[123, "g-eval"]], "Generator": [[125, null]], "Generator Adaptation": [[112, "generator-adaptation"]], "Generator In Action": [[125, "generator-in-action"]], "Generator Prediction parameters": [[134, "generator-prediction-parameters"]], "Generator optimization": [[136, "generator-optimization"]], "GeneratorOutput": [[125, "generatoroutput"]], "Get Errors in GeneratorOutput": [[125, "get-errors-in-generatoroutput"]], "Get Started": [[103, null], [103, null]], "Groq LLM Chat - Multichat Usage": [[131, "groq-llm-chat-multichat-usage"]], "Groq LLM Chat - Multichat Usage - Asynchronous": [[131, "groq-llm-chat-multichat-usage-asynchronous"]], "Groq LLM Chat - Multichat Usage - Benchmark sync() vs async()": [[131, "groq-llm-chat-multichat-usage-benchmark-sync-vs-async"]], "HotPotQA dataset": [[155, "hotpotqa-dataset"]], "How does it work": [[139, "how-does-it-work"]], "How to assign priority": [[98, "how-to-assign-priority"]], "How to create an issue": [[98, "how-to-create-an-issue"]], "How to start?": [[105, "how-to-start"]], "How to use it": [[139, "how-to-use-it"]], "How we implemented the boostrap few-shot training": [[132, "how-we-implemented-the-boostrap-few-shot-training"]], "Implementation": [[132, "implementation"]], "Important Notes": [[100, "important-notes"]], "Installation": [[104, null]], "IntParser": [[133, "intparser"]], "Integrate a  model_client": [[98, "integrate-a-model-client"]], "Integrate a database retriever": [[98, "integrate-a-database-retriever"]], "Integration with Other Document Types": [[139, "integration-with-other-document-types"]], "Intermediate parameters": [[134, "intermediate-parameters"]], "Introduction": [[105, null], [126, "introduction"], [128, null], [137, "introduction"]], "Introduction to BaseDataClass": [[147, null]], "Introduction to LLM applations": [[128, "introduction-to-llm-applations"]], "Issue & Label System": [[98, "issue-label-system"]], "JsonOutputParser": [[133, "jsonoutputparser"]], "JsonParser": [[133, "jsonparser"]], "LLM Evaluation": [[123, null]], "LLM as Judge": [[123, "llm-as-judge"]], "LLM as Retriever": [[138, "llm-as-retriever"]], "LLM or model based judge for Retriever Recall": [[123, "llm-or-model-based-judge-for-retriever-recall"]], "Label overview": [[98, "id5"]], "LanceDBRetriever": [[138, "lancedbretriever"]], "Learn AdalFlow in 15 minutes": [[101, null]], "LightRAG": [[105, "lightrag"]], "LightRAG\u2019s Implementation": [[137, "lightrag-s-implementation"]], "ListParser": [[133, "listparser"]], "Load data from dataset as example": [[113, "load-data-from-dataset-as-example"]], "Local database": [[120, "local-database"]], "Logger Example": [[129, null]], "Logging": [[129, "logging"]], "Logging & Tracing": [[126, "logging-tracing"]], "Manual Prompt vs Optimized Prompt": [[101, "id4"], [152, "id9"], [153, "id7"]], "Manual Prompt vs Optimized Prompt (gpt-3.5-turbo)": [[101, "id2"], [152, "id7"], [153, "id5"]], "Memory": [[29, "memory"]], "Minimum Example": [[125, "minimum-example"]], "Model Inference SDKs": [[131, "model-inference-sdks"]], "ModelClient": [[29, "modelclient"], [131, null]], "ModelClient Protocol": [[131, "modelclient-protocol"]], "NLG Evaluation": [[123, "nlg-evaluation"]], "OPENAI EMBEDDER - Embedding Processing Example": [[131, "openai-embedder-embedding-processing-example"]], "OPENAI LLM Chat - Additional Utils": [[131, "openai-llm-chat-additional-utils"]], "OPENAI LLM Chat - Multichat Usage": [[131, "openai-llm-chat-multichat-usage"]], "OPENAI LLM Chat - Multichat Usage - Asynchronous": [[131, "openai-llm-chat-multichat-usage-asynchronous"]], "OPENAI LLM Chat - Multichat Usage - Benchmark sync() vs async()": [[131, "openai-llm-chat-multichat-usage-benchmark-sync-vs-async"]], "Optimization": [[60, "optimization"], [61, null], [126, "optimization"], [146, "optimization"]], "Optimized Scores comparison on the same prompt on test set (gpt-3.5-turbo)": [[101, "id5"], [101, "id9"], [152, "id10"], [152, "id15"], [153, "id8"], [153, "id12"]], "Optimizer": [[132, null]], "Optimizing strategy": [[132, "optimizing-strategy"]], "Optional[Under the hood]": [[152, "optional-under-the-hood"]], "Other Evaluation Metrics libraries": [[123, null]], "Our understanding of LLM workflow": [[127, "our-understanding-of-llm-workflow"]], "Output Parsers": [[29, "output-parsers"], [133, "output-parsers"]], "Output Parsers in Action": [[133, "output-parsers-in-action"]], "Overview": [[46, "overview"], [52, "overview"], [59, "overview"], [61, "module-optim"], [81, "overview"], [86, "overview"], [100, "overview"], [101, "overview"], [152, "overview"], [153, "overview"]], "Parallel Function Calls": [[140, "parallel-function-calls"]], "Parameter": [[134, null]], "Parser": [[133, null], [133, "id1"]], "Parser in Action": [[133, "parser-in-action"]], "Part 1: Structuring": [[98, "part-1-structuring"]], "Part 2: What to contribute": [[98, "part-2-what-to-contribute"]], "Part 3: Contributing Steps": [[98, "part-3-contributing-steps"]], "Part 4: Pull Request Process": [[98, "part-4-pull-request-process"]], "Part 5: Review Process": [[98, "part-5-review-process"]], "Performance & Benchmark": [[144, "performance-benchmark"]], "PostgresRetriever": [[138, "postgresretriever"]], "Prepare AdalComponent for training": [[101, "prepare-adalcomponent-for-training"], [152, "prepare-adalcomponent-for-training"], [153, "prepare-adalcomponent-for-training"]], "Prepare for Training": [[155, "prepare-for-training"]], "Prepare the codebase": [[98, "prepare-the-codebase"]], "Principle 1:  Simplicity over Complexity": [[127, "principle-1-simplicity-over-complexity"]], "Principle 2: Quality over Quantity": [[127, "principle-2-quality-over-quantity"]], "Principle 3: Optimizing over Building": [[127, "principle-3-optimizing-over-building"]], "Print the structure": [[116, "print-the-structure"]], "Prompt": [[135, null]], "Prompt and Data Models": [[111, "prompt-and-data-models"]], "Prompt class": [[135, "prompt-class"]], "Putting it all together": [[126, "putting-it-all-together"]], "Q&A Computation Graph": [[149, null]], "Q&A Few Shot Demo Trace Graph": [[150, null]], "Q&A Text Grad Trace Graph": [[151, null]], "Qdrant Retriever": [[138, "qdrant-retriever"]], "Question Answer with LLM as Judge": [[153, null]], "Question Answering": [[152, null]], "Quick Start": [[98, "quick-start"]], "Quick Walkthrough": [[140, "quick-walkthrough"]], "RAG End to end optimization": [[154, null]], "RAG Essentials": [[126, "rag-essentials"]], "RAG Evaluation": [[123, "rag-evaluation"]], "RAG Overview": [[136, "rag-overview"]], "RAG Playbook": [[136, null], [143, "rag-playbook"]], "RAG components": [[126, "rag-components"]], "RAG optimization": [[136, "rag-optimization"], [155, null]], "RAG pipeline optimization": [[136, "rag-pipeline-optimization"]], "RAGAS": [[123, "id31"]], "REALM": [[136, "realm"]], "ReAct Agent": [[137, null]], "ReAct Agent Deep Dive": [[137, "react-agent-deep-dive"]], "React Agent": [[111, "react-agent"]], "Reasoning": [[29, "reasoning"]], "References": [[111, null], [113, null], [121, null], [123, "references"], [129, null], [135, null], [136, "references"], [138, null], [140, null], [143, "references"], [145, null], [152, null], [153, null]], "Release Version Control Guide": [[100, null]], "Repo Structure": [[98, "repo-structure"]], "Reranker as Retriever": [[138, "reranker-as-retriever"]], "Resources": [[108, null], [109, null], [128, "resources"]], "Retrieval optimization": [[136, "retrieval-optimization"]], "Retriever": [[29, "retriever"], [138, null], [155, "retriever"]], "Retriever Adaptation": [[112, "retriever-adaptation"]], "Retriever Base Class": [[138, "retriever-base-class"]], "Retriever Data Types": [[138, "retriever-data-types"]], "Retriever in Action": [[138, "retriever-in-action"]], "Scope and Design": [[133, "scope-and-design"], [140, "scope-and-design"]], "Scope and Design Goals": [[138, "scope-and-design-goals"]], "Scores by Method and Split On High-performing Starting Prompt (gpt-3.5-turbo)": [[101, "id3"], [152, "id8"], [153, "id6"]], "Scores by Method and Split On Low-performing Starting Prompt (gpt-3.5-turbo)": [[101, "id1"], [152, "id6"], [153, "id4"]], "Scores by Split": [[101, "id6"], [152, "id11"], [153, "id9"]], "Scores by teacher mode (gpt-4o) on the same high-performing starting prompt": [[101, "id7"], [152, "id13"], [153, "id10"]], "Scores for One-shot Bootstrap": [[101, "id8"], [152, "id14"], [153, "id11"]], "Self-RAG": [[136, "self-rag"]], "Sequential": [[116, "sequential"]], "Serialization and deserialization": [[116, "serialization-and-deserialization"]], "Set Up": [[97, "set-up"]], "Show data examples & parse string to data instance": [[113, "show-data-examples-parse-string-to-data-instance"]], "Split by token": [[139, "split-by-token"]], "Split by word": [[139, "split-by-word"]], "Splitting Types": [[139, "splitting-types"]], "Steps to Release a New Version": [[100, "steps-to-release-a-new-version"]], "Structure": [[105, "structure"]], "Structuring": [[97, "structuring"]], "Submodules": [[0, "submodules"], [2, "submodules"], [5, "submodules"], [7, "submodules"], [18, "submodules"], [21, "submodules"], [63, "submodules"], [71, "submodules"], [77, "submodules"]], "Switch the model_client": [[125, "switch-the-model-client"]], "Task Pipeline with Structured Output": [[144, "task-pipeline-with-structured-output"]], "Tasks and Capabilities": [[123, "tasks-and-capabilities"]], "Testing": [[97, "testing"]], "Text Splitter": [[139, null]], "TextSplitter Overview": [[139, "textsplitter-overview"]], "Textual Gradient": [[61, "textual-gradient"]], "Textual Gradient Operators": [[112, "textual-gradient-operators"]], "Textual Gradient Optimizer": [[112, "textual-gradient-optimizer"]], "To optimize any task pipeline": [[112, "to-optimize-any-task-pipeline"]], "Token-Based Splitting": [[139, "token-based-splitting"]], "Tools": [[111, "tools"]], "Tracing": [[60, "tracing"], [81, null], [125, "tracing"], [130, null], [132, "tracing"]], "Train Setup": [[101, "train-setup"], [152, "train-setup"], [153, "train-setup"]], "Train in Debug mode": [[101, "train-in-debug-mode"], [152, "train-in-debug-mode"], [153, "train-in-debug-mode"]], "Train with Few-shot Bootstrap": [[101, "train-with-few-shot-bootstrap"], [152, "train-with-few-shot-bootstrap"], [153, "train-with-few-shot-bootstrap"]], "Train with Text-Gradient Descent": [[101, "train-with-text-gradient-descent"], [152, "train-with-text-gradient-descent"], [153, "train-with-text-gradient-descent"]], "Train/Align LLM Judge": [[123, "train-align-llm-judge"]], "Trainable RAG": [[155, "trainable-rag"]], "Trainer": [[142, null]], "Trainer and AdalComponent": [[61, "trainer-and-adalcomponent"]], "Trainer and Training Strategy": [[144, "trainer-and-training-strategy"]], "Trainer to put all together": [[112, "trainer-to-put-all-together"]], "Training": [[125, "training"], [126, "training"], [155, "training"]], "Tutorials": [[126, null]], "Unites Research and Production": [[106, null]], "Upcoming Splitting Features": [[139, "upcoming-splitting-features"]], "Use Cases": [[146, null]], "Use Local Model": [[121, "use-local-model"]], "Use Logger in Projects": [[129, "use-logger-in-projects"]], "Use ModelClient directly": [[131, "use-modelclient-directly"]], "Use OpenAI API": [[121, "use-openai-api"]], "Use Output Processors": [[121, "use-output-processors"]], "Use Score Threshold instead of top_k": [[138, "use-score-threshold-instead-of-top-k"]], "Use Template": [[125, "use-template"]], "Use output_processors": [[125, "use-output-processors"]], "Use the trainer": [[101, "use-the-trainer"], [152, "use-the-trainer"], [153, "use-the-trainer"]], "Use together with Database": [[138, "use-together-with-database"]], "Utils": [[60, "utils"], [86, null]], "Weigted sampling [test negative case]": [[132, "weigted-sampling-test-negative-case"]], "What is LightRAG?": [[105, "what-is-lightrag"]], "What is an agent and why you need it?": [[137, "what-is-an-agent-and-why-you-need-it"]], "What is not part of LightRAG?": [[105, "what-is-not-part-of-lightrag"]], "What to Contribute (by 7 Labels) and Example PRs": [[98, "id7"]], "What to code": [[97, "what-to-code"]], "Why Jinja2?": [[135, "why-jinja2"]], "Why do we need chat completion instead of the previous text completion?": [[128, "why-do-we-need-chat-completion-instead-of-the-previous-text-completion"]], "With Database": [[138, "with-database"]], "With GT for Retriever": [[123, "with-gt-for-retriever"]], "With LocalDB": [[138, "with-localdb"]], "Without gt_contexts": [[123, "without-gt-contexts"]], "Work on your PR": [[98, "work-on-your-pr"]], "Work with Data Instance": [[113, "work-with-data-instance"]], "YamlOutputParser": [[133, "yamloutputparser"]], "YamlParser": [[133, "yamlparser"]], "adal": [[78, null]], "agent": [[0, null]], "answer_match_acc": [[53, null]], "anthropic_client": [[8, null]], "auto-diff": [[134, "auto-diff"]], "azureai_client": [[9, null]], "backend_engine_prompt": [[72, null]], "base": [[54, null]], "base_data_class": [[30, null]], "bedrock_client": [[10, null]], "big_bench_hard": [[47, null]], "bm25_retriever": [[22, null]], "bootstrap_optimizer": [[64, null]], "cache": [[87, null]], "callback_manager": [[82, null]], "cohere_client": [[11, null]], "component": [[31, null]], "config": [[88, null]], "container": [[32, null]], "data": [[89, null]], "data_components": [[3, null]], "data_process": [[2, null]], "dataclass_parser": [[19, null]], "db": [[33, null]], "decorators": [[83, null]], "default_prompt_template": [[34, null]], "embedder": [[35, null]], "faiss_retriever": [[23, null]], "few_shot": [[63, null]], "file_io": [[90, null]], "func_tool": [[36, null]], "function": [[65, null]], "functional": [[37, null], [55, null]], "g_eval": [[56, null]], "generator": [[38, null]], "generator_call_logger": [[84, null]], "generator_state_logger": [[85, null]], "global_config": [[91, null]], "google_client": [[12, null]], "grad_component": [[66, null]], "groq_client": [[13, null]], "hotpot_qa": [[48, null]], "lancedb_retriver": [[24, null]], "lazy_import": [[92, null]], "llm_as_judge": [[57, null]], "llm_retriever": [[25, null]], "llm_text_loss": [[73, null]], "logger": [[93, null]], "loss_component": [[67, null]], "memory": [[5, null], [6, null]], "model_client": [[7, null], [39, null]], "ollama_client": [[14, null]], "openai_client": [[15, null]], "ops": [[74, null]], "optimizer": [[68, null]], "output_parsers": [[18, null]], "outputs": [[20, null]], "parameter": [[69, null]], "postgres_retriever": [[26, null]], "prompt_builder": [[40, null]], "qdrant_retriever": [[27, null]], "react": [[1, null]], "registry": [[94, null]], "reranker_retriever": [[28, null]], "retriever": [[21, null], [41, null]], "retriever_recall": [[58, null]], "sampler": [[70, null]], "serialization": [[95, null]], "setup_env": [[96, null]], "string_parser": [[42, null]], "teacher": [[134, "teacher"]], "text_grad": [[71, null]], "text_loss_with_eval_fn": [[75, null]], "text_splitter": [[4, null]], "tgd_optimizer": [[76, null]], "tokenizer": [[43, null]], "tool_manager": [[44, null]], "trainer": [[77, null], [79, null]], "transformers_client": [[16, null]], "trec": [[49, null]], "types": [[45, null], [50, null], [80, null]], "utils": [[17, null], [51, null]]}, "docnames": ["apis/components/components.agent", "apis/components/components.agent.react", "apis/components/components.data_process", "apis/components/components.data_process.data_components", "apis/components/components.data_process.text_splitter", "apis/components/components.memory", "apis/components/components.memory.memory", "apis/components/components.model_client", "apis/components/components.model_client.anthropic_client", "apis/components/components.model_client.azureai_client", "apis/components/components.model_client.bedrock_client", "apis/components/components.model_client.cohere_client", "apis/components/components.model_client.google_client", "apis/components/components.model_client.groq_client", "apis/components/components.model_client.ollama_client", "apis/components/components.model_client.openai_client", "apis/components/components.model_client.transformers_client", "apis/components/components.model_client.utils", "apis/components/components.output_parsers", "apis/components/components.output_parsers.dataclass_parser", "apis/components/components.output_parsers.outputs", "apis/components/components.retriever", "apis/components/components.retriever.bm25_retriever", "apis/components/components.retriever.faiss_retriever", "apis/components/components.retriever.lancedb_retriver", "apis/components/components.retriever.llm_retriever", "apis/components/components.retriever.postgres_retriever", "apis/components/components.retriever.qdrant_retriever", "apis/components/components.retriever.reranker_retriever", "apis/components/index", "apis/core/core.base_data_class", "apis/core/core.component", "apis/core/core.container", "apis/core/core.db", "apis/core/core.default_prompt_template", "apis/core/core.embedder", "apis/core/core.func_tool", "apis/core/core.functional", "apis/core/core.generator", "apis/core/core.model_client", "apis/core/core.prompt_builder", "apis/core/core.retriever", "apis/core/core.string_parser", "apis/core/core.tokenizer", "apis/core/core.tool_manager", "apis/core/core.types", "apis/core/index", "apis/datasets/datasets.big_bench_hard", "apis/datasets/datasets.hotpot_qa", "apis/datasets/datasets.trec", "apis/datasets/datasets.types", "apis/datasets/datasets.utils", "apis/datasets/index", "apis/eval/eval.answer_match_acc", "apis/eval/eval.base", "apis/eval/eval.functional", "apis/eval/eval.g_eval", "apis/eval/eval.llm_as_judge", "apis/eval/eval.retriever_recall", "apis/eval/index", "apis/index", "apis/optim/index", "apis/optim/optim._llm_optimizer", "apis/optim/optim.few_shot", "apis/optim/optim.few_shot.bootstrap_optimizer", "apis/optim/optim.function", "apis/optim/optim.grad_component", "apis/optim/optim.loss_component", "apis/optim/optim.optimizer", "apis/optim/optim.parameter", "apis/optim/optim.sampler", "apis/optim/optim.text_grad", "apis/optim/optim.text_grad.backend_engine_prompt", "apis/optim/optim.text_grad.llm_text_loss", "apis/optim/optim.text_grad.ops", "apis/optim/optim.text_grad.text_loss_with_eval_fn", "apis/optim/optim.text_grad.tgd_optimizer", "apis/optim/optim.trainer", "apis/optim/optim.trainer.adal", "apis/optim/optim.trainer.trainer", "apis/optim/optim.types", "apis/tracing/index", "apis/tracing/tracing.callback_manager", "apis/tracing/tracing.decorators", "apis/tracing/tracing.generator_call_logger", "apis/tracing/tracing.generator_state_logger", "apis/utils/index", "apis/utils/utils.cache", "apis/utils/utils.config", "apis/utils/utils.data", "apis/utils/utils.file_io", "apis/utils/utils.global_config", "apis/utils/utils.lazy_import", "apis/utils/utils.logger", "apis/utils/utils.registry", "apis/utils/utils.serialization", "apis/utils/utils.setup_env", "contributor/contribute_to_code", "contributor/contribution", "contributor/index", "contributor/version_control", "get_started/adalflow_in_15mins", "get_started/community", "get_started/index", "get_started/installation", "get_started/introduction", "index", "integrations/index", "resources/index", "resources/resources", "tutorials/adalcomponent", "tutorials/agent", "tutorials/auto_text_grad", "tutorials/base_data_class", "tutorials/ckpt_file", "tutorials/class_hierarchy", "tutorials/component", "tutorials/configs", "tutorials/data_pipeline", "tutorials/datasets", "tutorials/db", "tutorials/embedder", "tutorials/embedder_xy", "tutorials/evaluation", "tutorials/few_shot_optimizer", "tutorials/generator", "tutorials/index", "tutorials/lightrag_design_philosophy", "tutorials/llm_intro", "tutorials/logging", "tutorials/logging_tracing", "tutorials/model_client", "tutorials/optimizer", "tutorials/output_parsers", "tutorials/parameter", "tutorials/prompt", "tutorials/rag_playbook", "tutorials/react_agent_xy", "tutorials/retriever", "tutorials/text_splitter", "tutorials/tool_helper", "tutorials/trace_graph", "tutorials/trainer", "use_cases/build_a_rag", "use_cases/classification", "use_cases/eval_a_rag", "use_cases/index", "use_cases/introduction_to_basedataclass", "use_cases/logging", "use_cases/qa_computation_graph", "use_cases/qa_demo_trace_graph", "use_cases/qa_text_grad_trace_graph", "use_cases/question_answering", "use_cases/question_answering_word_sort", "use_cases/rag_end_to_end", "use_cases/rag_opt"], "envversion": {"nbsphinx": 4, "sphinx": 62, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1}, "filenames": ["apis/components/components.agent.rst", "apis/components/components.agent.react.rst", "apis/components/components.data_process.rst", "apis/components/components.data_process.data_components.rst", "apis/components/components.data_process.text_splitter.rst", "apis/components/components.memory.rst", "apis/components/components.memory.memory.rst", "apis/components/components.model_client.rst", "apis/components/components.model_client.anthropic_client.rst", "apis/components/components.model_client.azureai_client.rst", "apis/components/components.model_client.bedrock_client.rst", "apis/components/components.model_client.cohere_client.rst", "apis/components/components.model_client.google_client.rst", "apis/components/components.model_client.groq_client.rst", "apis/components/components.model_client.ollama_client.rst", "apis/components/components.model_client.openai_client.rst", "apis/components/components.model_client.transformers_client.rst", "apis/components/components.model_client.utils.rst", "apis/components/components.output_parsers.rst", "apis/components/components.output_parsers.dataclass_parser.rst", "apis/components/components.output_parsers.outputs.rst", "apis/components/components.retriever.rst", "apis/components/components.retriever.bm25_retriever.rst", "apis/components/components.retriever.faiss_retriever.rst", "apis/components/components.retriever.lancedb_retriver.rst", "apis/components/components.retriever.llm_retriever.rst", "apis/components/components.retriever.postgres_retriever.rst", "apis/components/components.retriever.qdrant_retriever.rst", "apis/components/components.retriever.reranker_retriever.rst", "apis/components/index.rst", "apis/core/core.base_data_class.rst", "apis/core/core.component.rst", "apis/core/core.container.rst", "apis/core/core.db.rst", "apis/core/core.default_prompt_template.rst", "apis/core/core.embedder.rst", "apis/core/core.func_tool.rst", "apis/core/core.functional.rst", "apis/core/core.generator.rst", "apis/core/core.model_client.rst", "apis/core/core.prompt_builder.rst", "apis/core/core.retriever.rst", "apis/core/core.string_parser.rst", "apis/core/core.tokenizer.rst", "apis/core/core.tool_manager.rst", "apis/core/core.types.rst", "apis/core/index.rst", "apis/datasets/datasets.big_bench_hard.rst", "apis/datasets/datasets.hotpot_qa.rst", "apis/datasets/datasets.trec.rst", "apis/datasets/datasets.types.rst", "apis/datasets/datasets.utils.rst", "apis/datasets/index.rst", "apis/eval/eval.answer_match_acc.rst", "apis/eval/eval.base.rst", "apis/eval/eval.functional.rst", "apis/eval/eval.g_eval.rst", "apis/eval/eval.llm_as_judge.rst", "apis/eval/eval.retriever_recall.rst", "apis/eval/index.rst", "apis/index.rst", "apis/optim/index.rst", "apis/optim/optim._llm_optimizer.rst", "apis/optim/optim.few_shot.rst", "apis/optim/optim.few_shot.bootstrap_optimizer.rst", "apis/optim/optim.function.rst", "apis/optim/optim.grad_component.rst", "apis/optim/optim.loss_component.rst", "apis/optim/optim.optimizer.rst", "apis/optim/optim.parameter.rst", "apis/optim/optim.sampler.rst", "apis/optim/optim.text_grad.rst", "apis/optim/optim.text_grad.backend_engine_prompt.rst", "apis/optim/optim.text_grad.llm_text_loss.rst", "apis/optim/optim.text_grad.ops.rst", "apis/optim/optim.text_grad.text_loss_with_eval_fn.rst", "apis/optim/optim.text_grad.tgd_optimizer.rst", "apis/optim/optim.trainer.rst", "apis/optim/optim.trainer.adal.rst", "apis/optim/optim.trainer.trainer.rst", "apis/optim/optim.types.rst", "apis/tracing/index.rst", "apis/tracing/tracing.callback_manager.rst", "apis/tracing/tracing.decorators.rst", "apis/tracing/tracing.generator_call_logger.rst", "apis/tracing/tracing.generator_state_logger.rst", "apis/utils/index.rst", "apis/utils/utils.cache.rst", "apis/utils/utils.config.rst", "apis/utils/utils.data.rst", "apis/utils/utils.file_io.rst", "apis/utils/utils.global_config.rst", "apis/utils/utils.lazy_import.rst", "apis/utils/utils.logger.rst", "apis/utils/utils.registry.rst", "apis/utils/utils.serialization.rst", "apis/utils/utils.setup_env.rst", "contributor/contribute_to_code.rst", "contributor/contribution.rst", "contributor/index.rst", "contributor/version_control.rst", "get_started/adalflow_in_15mins.rst", "get_started/community.rst", "get_started/index.rst", "get_started/installation.rst", "get_started/introduction.rst", "index.rst", "integrations/index.rst", "resources/index.rst", "resources/resources.rst", "tutorials/adalcomponent.rst", "tutorials/agent.rst", "tutorials/auto_text_grad.rst", "tutorials/base_data_class.rst", "tutorials/ckpt_file.rst", "tutorials/class_hierarchy.rst", "tutorials/component.rst", "tutorials/configs.rst", "tutorials/data_pipeline.rst", "tutorials/datasets.rst", "tutorials/db.rst", "tutorials/embedder.rst", "tutorials/embedder_xy.rst", "tutorials/evaluation.rst", "tutorials/few_shot_optimizer.rst", "tutorials/generator.rst", "tutorials/index.rst", "tutorials/lightrag_design_philosophy.rst", "tutorials/llm_intro.rst", "tutorials/logging.rst", "tutorials/logging_tracing.rst", "tutorials/model_client.rst", "tutorials/optimizer.rst", "tutorials/output_parsers.rst", "tutorials/parameter.rst", "tutorials/prompt.rst", "tutorials/rag_playbook.rst", "tutorials/react_agent_xy.rst", "tutorials/retriever.rst", "tutorials/text_splitter.rst", "tutorials/tool_helper.rst", "tutorials/trace_graph.rst", "tutorials/trainer.rst", "use_cases/build_a_rag.rst", "use_cases/classification.rst", "use_cases/eval_a_rag.rst", "use_cases/index.rst", "use_cases/introduction_to_basedataclass.rst", "use_cases/logging.rst", "use_cases/qa_computation_graph.rst", "use_cases/qa_demo_trace_graph.rst", "use_cases/qa_text_grad_trace_graph.rst", "use_cases/question_answering.rst", "use_cases/question_answering_word_sort.rst", "use_cases/rag_end_to_end.rst", "use_cases/rag_opt.rst"], "indexentries": {"acall() (anthropicapiclient method)": [[8, "components.model_client.anthropic_client.AnthropicAPIClient.acall", false]], "acall() (azureaiclient method)": [[9, "components.model_client.azureai_client.AzureAIClient.acall", false]], "acall() (cohereapiclient method)": [[11, "components.model_client.cohere_client.CohereAPIClient.acall", false]], "acall() (component method)": [[31, "core.component.Component.acall", false]], "acall() (embedder method)": [[35, "core.embedder.Embedder.acall", false]], "acall() (functiontool method)": [[36, "core.func_tool.FunctionTool.acall", false]], "acall() (generator method)": [[38, "core.generator.Generator.acall", false]], "acall() (gradcomponent method)": [[66, "optim.grad_component.GradComponent.acall", false]], "acall() (groqapiclient method)": [[13, "components.model_client.groq_client.GroqAPIClient.acall", false]], "acall() (modelclient method)": [[39, "core.model_client.ModelClient.acall", false]], "acall() (ollamaclient method)": [[14, "components.model_client.ollama_client.OllamaClient.acall", false]], "acall() (openaiclient method)": [[15, "components.model_client.openai_client.OpenAIClient.acall", false]], "acall() (retriever method)": [[41, "core.retriever.Retriever.acall", false]], "acall() (sequential method)": [[32, "core.container.Sequential.acall", false]], "action (functionexpression attribute)": [[45, "core.types.FunctionExpression.action", false]], "action (stepoutput attribute)": [[45, "core.types.StepOutput.action", false]], "adalcomponent (class in optim)": [[61, "optim.AdalComponent", false]], "adalcomponent (class in optim.trainer)": [[77, "optim.trainer.AdalComponent", false]], "adalcomponent (class in optim.trainer.adal)": [[78, "optim.trainer.adal.AdalComponent", false]], "adalflow_default_prompt_args (in module core.default_prompt_template)": [[34, "core.default_prompt_template.ADALFLOW_DEFAULT_PROMPT_ARGS", false]], "adalflow_default_prompt_trainable_params (in module core.default_prompt_template)": [[34, "core.default_prompt_template.ADALFLOW_DEFAULT_PROMPT_TRAINABLE_PARAMS", false]], "adaltask (trainer attribute)": [[61, "optim.Trainer.adaltask", false], [77, "optim.trainer.Trainer.adaltask", false], [79, "optim.trainer.trainer.Trainer.adaltask", false]], "add() (localdb method)": [[33, "core.db.LocalDB.add", false]], "add_component() (component method)": [[31, "core.component.Component.add_component", false]], "add_dialog_turn() (memory method)": [[6, "components.memory.memory.Memory.add_dialog_turn", false]], "add_documents() (lancedbretriever method)": [[24, "components.retriever.lancedb_retriver.LanceDBRetriever.add_documents", false]], "add_gradient() (parameter method)": [[61, "optim.Parameter.add_gradient", false], [69, "optim.parameter.Parameter.add_gradient", false]], "add_history() (tgdoptimizer method)": [[61, "optim.TGDOptimizer.add_history", false], [71, "optim.text_grad.TGDOptimizer.add_history", false], [76, "optim.text_grad.tgd_optimizer.TGDOptimizer.add_history", false]], "add_score_to_current_param() (tgdoptimizer method)": [[61, "optim.TGDOptimizer.add_score_to_current_param", false], [71, "optim.text_grad.TGDOptimizer.add_score_to_current_param", false], [76, "optim.text_grad.tgd_optimizer.TGDOptimizer.add_score_to_current_param", false]], "add_score_to_params() (tgdoptimizer method)": [[61, "optim.TGDOptimizer.add_score_to_params", false], [71, "optim.text_grad.TGDOptimizer.add_score_to_params", false], [76, "optim.text_grad.tgd_optimizer.TGDOptimizer.add_score_to_params", false]], "add_score_to_trace() (parameter method)": [[61, "optim.Parameter.add_score_to_trace", false], [69, "optim.parameter.Parameter.add_score_to_trace", false]], "add_scores() (bootstrapfewshot method)": [[61, "optim.BootstrapFewShot.add_scores", false], [64, "optim.few_shot.bootstrap_optimizer.BootstrapFewShot.add_scores", false]], "add_successor_map_fn() (parameter method)": [[61, "optim.Parameter.add_successor_map_fn", false], [69, "optim.parameter.Parameter.add_successor_map_fn", false]], "add_to_trace() (parameter method)": [[61, "optim.Parameter.add_to_trace", false], [69, "optim.parameter.Parameter.add_to_trace", false]], "additional_info (evaluationresult attribute)": [[54, "eval.base.EvaluationResult.additional_info", false]], "answer (example attribute)": [[50, "datasets.types.Example.answer", false], [52, "datasets.Example.answer", false]], "answermatchacc (class in eval)": [[59, "eval.AnswerMatchAcc", false]], "answermatchacc (class in eval.answer_match_acc)": [[53, "eval.answer_match_acc.AnswerMatchAcc", false]], "anthropic (modelclienttype attribute)": [[45, "core.types.ModelClientType.ANTHROPIC", false]], "anthropic (optionalpackages attribute)": [[92, "utils.lazy_import.OptionalPackages.ANTHROPIC", false]], "anthropicapiclient (class in components.model_client.anthropic_client)": [[8, "components.model_client.anthropic_client.AnthropicAPIClient", false]], "append() (sequential method)": [[32, "core.container.Sequential.append", false]], "append_dialog_turn() (conversation method)": [[45, "core.types.Conversation.append_dialog_turn", false]], "append_to_jsonl() (in module utils.file_io)": [[90, "utils.file_io.append_to_jsonl", false]], "args (function attribute)": [[45, "core.types.Function.args", false]], "assistant_response (dialogturn attribute)": [[45, "core.types.DialogTurn.assistant_response", false]], "assistant_response_timestamp (dialogturn attribute)": [[45, "core.types.DialogTurn.assistant_response_timestamp", false]], "assistantresponse (class in core.types)": [[45, "core.types.AssistantResponse", false]], "attempted_val_score (trainerstepresult attribute)": [[80, "optim.types.TrainerStepResult.attempted_val_score", false]], "average_pool() (in module components.model_client.transformers_client)": [[16, "components.model_client.transformers_client.average_pool", false]], "avg_score (evaluationresult attribute)": [[54, "eval.base.EvaluationResult.avg_score", false]], "avg_score (llmjudgeevalresult attribute)": [[57, "eval.llm_as_judge.LLMJudgeEvalResult.avg_score", false]], "azure (optionalpackages attribute)": [[92, "utils.lazy_import.OptionalPackages.AZURE", false]], "azureaiclient (class in components.model_client.azureai_client)": [[9, "components.model_client.azureai_client.AzureAIClient", false]], "backward() (evalfntotextloss method)": [[61, "optim.EvalFnToTextLoss.backward", false], [71, "optim.text_grad.EvalFnToTextLoss.backward", false], [75, "optim.text_grad.text_loss_with_eval_fn.EvalFnToTextLoss.backward", false]], "backward() (generator method)": [[38, "core.generator.Generator.backward", false]], "backward() (gradcomponent method)": [[66, "optim.grad_component.GradComponent.backward", false]], "backward() (losscomponent method)": [[67, "optim.loss_component.LossComponent.backward", false]], "backward() (parameter method)": [[61, "optim.Parameter.backward", false], [69, "optim.parameter.Parameter.backward", false]], "backward() (retriever method)": [[41, "core.retriever.Retriever.backward", false]], "backward() (sum method)": [[71, "optim.text_grad.Sum.backward", false], [74, "optim.text_grad.ops.Sum.backward", false]], "backward_engine (adalcomponent attribute)": [[61, "optim.AdalComponent.backward_engine", false], [77, "optim.trainer.AdalComponent.backward_engine", false], [78, "optim.trainer.adal.AdalComponent.backward_engine", false]], "backward_engine (gradcomponent attribute)": [[66, "optim.grad_component.GradComponent.backward_engine", false]], "backward_engine (losscomponent attribute)": [[67, "optim.loss_component.LossComponent.backward_engine", false]], "backward_engine (sum attribute)": [[74, "optim.text_grad.ops.Sum.backward_engine", false]], "backward_engine_disabled (parameter attribute)": [[61, "optim.Parameter.backward_engine_disabled", false], [69, "optim.parameter.Parameter.backward_engine_disabled", false]], "backwardcontext (class in optim)": [[61, "optim.BackwardContext", false]], "backwardcontext (class in optim.function)": [[65, "optim.function.BackwardContext", false]], "backwardengine (class in core.generator)": [[38, "core.generator.BackwardEngine", false]], "basedata (class in datasets.types)": [[50, "datasets.types.BaseData", false]], "baseevaluator (class in eval.base)": [[54, "eval.base.BaseEvaluator", false]], "batch_val_score_threshold (trainer attribute)": [[61, "optim.Trainer.batch_val_score_threshold", false], [77, "optim.trainer.Trainer.batch_val_score_threshold", false], [79, "optim.trainer.trainer.Trainer.batch_val_score_threshold", false]], "batchembedder (class in core.embedder)": [[35, "core.embedder.BatchEmbedder", false]], "bigbenchhard (class in datasets)": [[52, "datasets.BigBenchHard", false]], "bigbenchhard (class in datasets.big_bench_hard)": [[47, "datasets.big_bench_hard.BigBenchHard", false]], "bm25retriever (class in components.retriever)": [[21, "components.retriever.BM25Retriever", false]], "bm25retriever (class in components.retriever.bm25_retriever)": [[22, "components.retriever.bm25_retriever.BM25Retriever", false]], "booleanoutputparser (class in components.output_parsers.outputs)": [[20, "components.output_parsers.outputs.BooleanOutputParser", false]], "booleanparser (class in core.string_parser)": [[42, "core.string_parser.BooleanParser", false]], "bootstrapfewshot (class in optim)": [[61, "optim.BootstrapFewShot", false]], "bootstrapfewshot (class in optim.few_shot.bootstrap_optimizer)": [[64, "optim.few_shot.bootstrap_optimizer.BootstrapFewShot", false]], "boto3 (optionalpackages attribute)": [[92, "utils.lazy_import.OptionalPackages.BOTO3", false]], "build_index_from_documents() (bm25retriever method)": [[21, "components.retriever.BM25Retriever.build_index_from_documents", false], [22, "components.retriever.bm25_retriever.BM25Retriever.build_index_from_documents", false]], "build_index_from_documents() (faissretriever method)": [[23, "components.retriever.faiss_retriever.FAISSRetriever.build_index_from_documents", false]], "build_index_from_documents() (llmretriever method)": [[21, "components.retriever.LLMRetriever.build_index_from_documents", false], [25, "components.retriever.llm_retriever.LLMRetriever.build_index_from_documents", false]], "build_index_from_documents() (rerankerretriever method)": [[21, "components.retriever.RerankerRetriever.build_index_from_documents", false], [28, "components.retriever.reranker_retriever.RerankerRetriever.build_index_from_documents", false]], "build_index_from_documents() (retriever method)": [[41, "core.retriever.Retriever.build_index_from_documents", false]], "cachedengine (class in utils.cache)": [[87, "utils.cache.CachedEngine", false]], "calculate_class_weights() (in module datasets.trec)": [[49, "datasets.trec.calculate_class_weights", false]], "call() (anthropicapiclient method)": [[8, "components.model_client.anthropic_client.AnthropicAPIClient.call", false]], "call() (azureaiclient method)": [[9, "components.model_client.azureai_client.AzureAIClient.call", false]], "call() (batchembedder method)": [[35, "core.embedder.BatchEmbedder.call", false]], "call() (bm25retriever method)": [[21, "components.retriever.BM25Retriever.call", false], [22, "components.retriever.bm25_retriever.BM25Retriever.call", false]], "call() (booleanoutputparser method)": [[20, "components.output_parsers.outputs.BooleanOutputParser.call", false]], "call() (booleanparser method)": [[42, "core.string_parser.BooleanParser.call", false]], "call() (classsampler method)": [[61, "optim.ClassSampler.call", false], [70, "optim.sampler.ClassSampler.call", false]], "call() (cohereapiclient method)": [[11, "components.model_client.cohere_client.CohereAPIClient.call", false]], "call() (component method)": [[31, "core.component.Component.call", false]], "call() (dataclassparser method)": [[18, "components.output_parsers.DataClassParser.call", false], [19, "components.output_parsers.dataclass_parser.DataClassParser.call", false]], "call() (defaultllmjudge method)": [[57, "eval.llm_as_judge.DefaultLLMJudge.call", false]], "call() (embedder method)": [[35, "core.embedder.Embedder.call", false]], "call() (faissretriever method)": [[23, "components.retriever.faiss_retriever.FAISSRetriever.call", false]], "call() (floatparser method)": [[42, "core.string_parser.FloatParser.call", false]], "call() (funcomponent method)": [[31, "core.component.FunComponent.call", false]], "call() (functiontool method)": [[36, "core.func_tool.FunctionTool.call", false]], "call() (generator method)": [[38, "core.generator.Generator.call", false]], "call() (gevalllmjudge method)": [[56, "eval.g_eval.GEvalLLMJudge.call", false], [59, "eval.GEvalLLMJudge.call", false]], "call() (googlegenaiclient method)": [[12, "components.model_client.google_client.GoogleGenAIClient.call", false]], "call() (gradcomponent method)": [[66, "optim.grad_component.GradComponent.call", false]], "call() (groqapiclient method)": [[13, "components.model_client.groq_client.GroqAPIClient.call", false]], "call() (intparser method)": [[42, "core.string_parser.IntParser.call", false]], "call() (jsonoutputparser method)": [[18, "components.output_parsers.JsonOutputParser.call", false], [20, "components.output_parsers.outputs.JsonOutputParser.call", false]], "call() (jsonparser method)": [[42, "core.string_parser.JsonParser.call", false]], "call() (listoutputparser method)": [[18, "components.output_parsers.ListOutputParser.call", false], [20, "components.output_parsers.outputs.ListOutputParser.call", false]], "call() (listparser method)": [[42, "core.string_parser.ListParser.call", false]], "call() (llmretriever method)": [[21, "components.retriever.LLMRetriever.call", false], [25, "components.retriever.llm_retriever.LLMRetriever.call", false]], "call() (memory method)": [[6, "components.memory.memory.Memory.call", false]], "call() (modelclient method)": [[39, "core.model_client.ModelClient.call", false]], "call() (ollamaclient method)": [[14, "components.model_client.ollama_client.OllamaClient.call", false]], "call() (openaiclient method)": [[15, "components.model_client.openai_client.OpenAIClient.call", false]], "call() (outputparser method)": [[20, "components.output_parsers.outputs.OutputParser.call", false]], "call() (parser method)": [[42, "core.string_parser.Parser.call", false]], "call() (postgresretriever method)": [[26, "components.retriever.postgres_retriever.PostgresRetriever.call", false]], "call() (prompt method)": [[40, "core.prompt_builder.Prompt.call", false]], "call() (qdrantretriever method)": [[27, "components.retriever.qdrant_retriever.QdrantRetriever.call", false]], "call() (randomsampler method)": [[61, "optim.RandomSampler.call", false], [70, "optim.sampler.RandomSampler.call", false]], "call() (reactagent method)": [[0, "components.agent.ReActAgent.call", false], [1, "components.agent.react.ReActAgent.call", false]], "call() (rerankerretriever method)": [[21, "components.retriever.RerankerRetriever.call", false], [28, "components.retriever.reranker_retriever.RerankerRetriever.call", false]], "call() (retriever method)": [[41, "core.retriever.Retriever.call", false]], "call() (sampler method)": [[61, "optim.Sampler.call", false], [70, "optim.sampler.Sampler.call", false]], "call() (sequential method)": [[32, "core.container.Sequential.call", false]], "call() (textsplitter method)": [[2, "components.data_process.TextSplitter.call", false], [4, "components.data_process.text_splitter.TextSplitter.call", false]], "call() (transformersclient method)": [[16, "components.model_client.transformers_client.TransformersClient.call", false]], "call() (yamloutputparser method)": [[18, "components.output_parsers.YamlOutputParser.call", false], [20, "components.output_parsers.outputs.YamlOutputParser.call", false]], "call() (yamlparser method)": [[42, "core.string_parser.YamlParser.call", false]], "callbackmanager (class in tracing.callback_manager)": [[82, "tracing.callback_manager.CallbackManager", false]], "check_adal_dataclass() (in module core.base_data_class)": [[30, "core.base_data_class.check_adal_dataclass", false]], "check_data_class_field_args_one() (in module core.functional)": [[37, "core.functional.check_data_class_field_args_one", false]], "check_data_class_field_args_zero() (in module core.functional)": [[37, "core.functional.check_data_class_field_args_zero", false]], "check_if_already_computed_gradient_respect_to() (parameter method)": [[61, "optim.Parameter.check_if_already_computed_gradient_respect_to", false], [69, "optim.parameter.Parameter.check_if_already_computed_gradient_respect_to", false]], "check_if_class_field_args_one_exists() (in module core.functional)": [[37, "core.functional.check_if_class_field_args_one_exists", false]], "check_if_class_field_args_zero_exists() (in module core.functional)": [[37, "core.functional.check_if_class_field_args_zero_exists", false]], "check_object() (in module utils.serialization)": [[95, "utils.serialization.check_object", false]], "children() (component method)": [[31, "core.component.Component.children", false]], "ckpt_file (trainer attribute)": [[61, "optim.Trainer.ckpt_file", false], [77, "optim.trainer.Trainer.ckpt_file", false], [79, "optim.trainer.trainer.Trainer.ckpt_file", false]], "ckpt_path (trainer attribute)": [[61, "optim.Trainer.ckpt_path", false], [77, "optim.trainer.Trainer.ckpt_path", false], [79, "optim.trainer.trainer.Trainer.ckpt_path", false]], "class (objecttypes attribute)": [[95, "utils.serialization.ObjectTypes.CLASS", false]], "class_index (trecdata attribute)": [[50, "datasets.types.TrecData.class_index", false], [52, "datasets.TrecData.class_index", false]], "class_name (trecdata attribute)": [[50, "datasets.types.TrecData.class_name", false], [52, "datasets.TrecData.class_name", false]], "classsampler (class in optim)": [[61, "optim.ClassSampler", false]], "classsampler (class in optim.sampler)": [[70, "optim.sampler.ClassSampler", false]], "clean_device_cache() (in module components.model_client.transformers_client)": [[16, "components.model_client.transformers_client.clean_device_cache", false]], "cohere (modelclienttype attribute)": [[45, "core.types.ModelClientType.COHERE", false]], "cohere (optionalpackages attribute)": [[92, "utils.lazy_import.OptionalPackages.COHERE", false]], "cohereapiclient (class in components.model_client.cohere_client)": [[11, "components.model_client.cohere_client.CohereAPIClient", false]], "coherence (gevalmetric attribute)": [[56, "eval.g_eval.GEvalMetric.COHERENCE", false], [59, "eval.GEvalMetric.COHERENCE", false]], "completion_tokens (completionusage attribute)": [[45, "core.types.CompletionUsage.completion_tokens", false]], "completionusage (class in core.types)": [[45, "core.types.CompletionUsage", false]], "component (class in core.component)": [[31, "core.component.Component", false]], "components() (component method)": [[31, "core.component.Component.components", false]], "components.agent": [[0, "module-components.agent", false]], "components.agent.react": [[1, "module-components.agent.react", false]], "components.data_process": [[2, "module-components.data_process", false]], "components.data_process.data_components": [[3, "module-components.data_process.data_components", false]], "components.data_process.text_splitter": [[4, "module-components.data_process.text_splitter", false]], "components.memory": [[5, "module-components.memory", false]], "components.memory.memory": [[6, "module-components.memory.memory", false]], "components.model_client": [[7, "module-components.model_client", false]], "components.model_client.anthropic_client": [[8, "module-components.model_client.anthropic_client", false]], "components.model_client.azureai_client": [[9, "module-components.model_client.azureai_client", false]], "components.model_client.cohere_client": [[11, "module-components.model_client.cohere_client", false]], "components.model_client.google_client": [[12, "module-components.model_client.google_client", false]], "components.model_client.groq_client": [[13, "module-components.model_client.groq_client", false]], "components.model_client.ollama_client": [[14, "module-components.model_client.ollama_client", false]], "components.model_client.openai_client": [[15, "module-components.model_client.openai_client", false]], "components.model_client.transformers_client": [[16, "module-components.model_client.transformers_client", false]], "components.model_client.utils": [[17, "module-components.model_client.utils", false]], "components.output_parsers": [[18, "module-components.output_parsers", false]], "components.output_parsers.dataclass_parser": [[19, "module-components.output_parsers.dataclass_parser", false]], "components.output_parsers.outputs": [[20, "module-components.output_parsers.outputs", false]], "components.retriever": [[21, "module-components.retriever", false]], "components.retriever.bm25_retriever": [[22, "module-components.retriever.bm25_retriever", false]], "components.retriever.faiss_retriever": [[23, "module-components.retriever.faiss_retriever", false]], "components.retriever.lancedb_retriver": [[24, "module-components.retriever.lancedb_retriver", false]], "components.retriever.llm_retriever": [[25, "module-components.retriever.llm_retriever", false]], "components.retriever.postgres_retriever": [[26, "module-components.retriever.postgres_retriever", false]], "components.retriever.qdrant_retriever": [[27, "module-components.retriever.qdrant_retriever", false]], "components.retriever.reranker_retriever": [[28, "module-components.retriever.reranker_retriever", false]], "compose_model_kwargs() (in module core.functional)": [[37, "core.functional.compose_model_kwargs", false]], "compose_prompt_kwargs() (prompt method)": [[40, "core.prompt_builder.Prompt.compose_prompt_kwargs", false]], "compute() (answermatchacc method)": [[53, "eval.answer_match_acc.AnswerMatchAcc.compute", false], [59, "eval.AnswerMatchAcc.compute", false]], "compute() (baseevaluator method)": [[54, "eval.base.BaseEvaluator.compute", false]], "compute() (gevaljudgeevaluator method)": [[56, "eval.g_eval.GEvalJudgeEvaluator.compute", false], [59, "eval.GEvalJudgeEvaluator.compute", false]], "compute() (llmasjudge method)": [[57, "eval.llm_as_judge.LLMasJudge.compute", false], [59, "eval.LLMasJudge.compute", false]], "compute() (retrieverrecall method)": [[58, "eval.retriever_recall.RetrieverRecall.compute", false], [59, "eval.RetrieverRecall.compute", false]], "compute_single_item() (answermatchacc method)": [[53, "eval.answer_match_acc.AnswerMatchAcc.compute_single_item", false], [59, "eval.AnswerMatchAcc.compute_single_item", false]], "compute_single_item() (baseevaluator method)": [[54, "eval.base.BaseEvaluator.compute_single_item", false]], "compute_single_item() (gevaljudgeevaluator method)": [[56, "eval.g_eval.GEvalJudgeEvaluator.compute_single_item", false], [59, "eval.GEvalJudgeEvaluator.compute_single_item", false]], "confidence_interval (llmjudgeevalresult attribute)": [[57, "eval.llm_as_judge.LLMJudgeEvalResult.confidence_interval", false]], "confidence_interval() (in module eval.functional)": [[55, "eval.functional.confidence_interval", false]], "config_dataset() (bootstrapfewshot method)": [[61, "optim.BootstrapFewShot.config_dataset", false], [64, "optim.few_shot.bootstrap_optimizer.BootstrapFewShot.config_dataset", false]], "config_shots() (bootstrapfewshot method)": [[61, "optim.BootstrapFewShot.config_shots", false], [64, "optim.few_shot.bootstrap_optimizer.BootstrapFewShot.config_shots", false]], "config_shots() (demooptimizer method)": [[61, "optim.DemoOptimizer.config_shots", false], [68, "optim.optimizer.DemoOptimizer.config_shots", false]], "configure_backward_engine() (adalcomponent method)": [[61, "optim.AdalComponent.configure_backward_engine", false], [77, "optim.trainer.AdalComponent.configure_backward_engine", false], [78, "optim.trainer.adal.AdalComponent.configure_backward_engine", false]], "configure_backward_engine_helper() (adalcomponent method)": [[61, "optim.AdalComponent.configure_backward_engine_helper", false], [77, "optim.trainer.AdalComponent.configure_backward_engine_helper", false], [78, "optim.trainer.adal.AdalComponent.configure_backward_engine_helper", false]], "configure_callbacks() (adalcomponent method)": [[61, "optim.AdalComponent.configure_callbacks", false], [77, "optim.trainer.AdalComponent.configure_callbacks", false], [78, "optim.trainer.adal.AdalComponent.configure_callbacks", false]], "configure_demo_optimizer_helper() (adalcomponent method)": [[61, "optim.AdalComponent.configure_demo_optimizer_helper", false], [77, "optim.trainer.AdalComponent.configure_demo_optimizer_helper", false], [78, "optim.trainer.adal.AdalComponent.configure_demo_optimizer_helper", false]], "configure_optimizers() (adalcomponent method)": [[61, "optim.AdalComponent.configure_optimizers", false], [77, "optim.trainer.AdalComponent.configure_optimizers", false], [78, "optim.trainer.adal.AdalComponent.configure_optimizers", false]], "configure_teacher_generator() (adalcomponent method)": [[61, "optim.AdalComponent.configure_teacher_generator", false], [77, "optim.trainer.AdalComponent.configure_teacher_generator", false], [78, "optim.trainer.adal.AdalComponent.configure_teacher_generator", false]], "configure_teacher_generator_helper() (adalcomponent method)": [[61, "optim.AdalComponent.configure_teacher_generator_helper", false], [77, "optim.trainer.AdalComponent.configure_teacher_generator_helper", false], [78, "optim.trainer.adal.AdalComponent.configure_teacher_generator_helper", false]], "configure_text_optimizer_helper() (adalcomponent method)": [[61, "optim.AdalComponent.configure_text_optimizer_helper", false], [77, "optim.trainer.AdalComponent.configure_text_optimizer_helper", false], [78, "optim.trainer.adal.AdalComponent.configure_text_optimizer_helper", false]], "consistency (gevalmetric attribute)": [[56, "eval.g_eval.GEvalMetric.CONSISTENCY", false], [59, "eval.GEvalMetric.CONSISTENCY", false]], "constraint_text (tgdoptimizer property)": [[61, "optim.TGDOptimizer.constraint_text", false], [71, "optim.text_grad.TGDOptimizer.constraint_text", false], [76, "optim.text_grad.tgd_optimizer.TGDOptimizer.constraint_text", false]], "constraints (tgdoptimizer attribute)": [[61, "optim.TGDOptimizer.constraints", false], [71, "optim.text_grad.TGDOptimizer.constraints", false], [76, "optim.text_grad.tgd_optimizer.TGDOptimizer.constraints", false]], "context (gradientcontext attribute)": [[69, "optim.parameter.GradientContext.context", false]], "conver_db (in module components.memory.memory)": [[6, "components.memory.memory.conver_db", false]], "conversation (class in core.types)": [[45, "core.types.Conversation", false]], "conversation_id (dialogturn attribute)": [[45, "core.types.DialogTurn.conversation_id", false]], "convert_inputs_to_api_kwargs() (anthropicapiclient method)": [[8, "components.model_client.anthropic_client.AnthropicAPIClient.convert_inputs_to_api_kwargs", false]], "convert_inputs_to_api_kwargs() (azureaiclient method)": [[9, "components.model_client.azureai_client.AzureAIClient.convert_inputs_to_api_kwargs", false]], "convert_inputs_to_api_kwargs() (cohereapiclient method)": [[11, "components.model_client.cohere_client.CohereAPIClient.convert_inputs_to_api_kwargs", false]], "convert_inputs_to_api_kwargs() (googlegenaiclient method)": [[12, "components.model_client.google_client.GoogleGenAIClient.convert_inputs_to_api_kwargs", false]], "convert_inputs_to_api_kwargs() (groqapiclient method)": [[13, "components.model_client.groq_client.GroqAPIClient.convert_inputs_to_api_kwargs", false]], "convert_inputs_to_api_kwargs() (modelclient method)": [[39, "core.model_client.ModelClient.convert_inputs_to_api_kwargs", false]], "convert_inputs_to_api_kwargs() (ollamaclient method)": [[14, "components.model_client.ollama_client.OllamaClient.convert_inputs_to_api_kwargs", false]], "convert_inputs_to_api_kwargs() (openaiclient method)": [[15, "components.model_client.openai_client.OpenAIClient.convert_inputs_to_api_kwargs", false]], "convert_inputs_to_api_kwargs() (transformersclient method)": [[16, "components.model_client.transformers_client.TransformersClient.convert_inputs_to_api_kwargs", false]], "convert_schema_to_signature() (in module core.functional)": [[37, "core.functional.convert_schema_to_signature", false]], "core.base_data_class": [[30, "module-core.base_data_class", false]], "core.component": [[31, "module-core.component", false]], "core.container": [[32, "module-core.container", false]], "core.db": [[33, "module-core.db", false]], "core.default_prompt_template": [[34, "module-core.default_prompt_template", false]], "core.embedder": [[35, "module-core.embedder", false]], "core.func_tool": [[36, "module-core.func_tool", false]], "core.functional": [[37, "module-core.functional", false]], "core.generator": [[38, "module-core.generator", false]], "core.model_client": [[39, "module-core.model_client", false]], "core.prompt_builder": [[40, "module-core.prompt_builder", false]], "core.retriever": [[41, "module-core.retriever", false]], "core.string_parser": [[42, "module-core.string_parser", false]], "core.tokenizer": [[43, "module-core.tokenizer", false]], "core.tool_manager": [[44, "module-core.tool_manager", false]], "core.types": [[45, "module-core.types", false]], "cosine (distancetooperator attribute)": [[26, "components.retriever.postgres_retriever.DistanceToOperator.COSINE", false]], "count_tokens() (tokenizer method)": [[43, "core.tokenizer.Tokenizer.count_tokens", false]], "create_demo_data_instance() (generator method)": [[38, "core.generator.Generator.create_demo_data_instance", false]], "create_teacher_generator() (in module core.generator)": [[38, "core.generator.create_teacher_generator", false]], "created_at (conversation attribute)": [[45, "core.types.Conversation.created_at", false]], "current_conversation (in module components.memory.memory)": [[6, "components.memory.memory.current_conversation", false]], "custom_asdict() (in module core.functional)": [[37, "core.functional.custom_asdict", false]], "data (embedderoutput attribute)": [[45, "core.types.EmbedderOutput.data", false]], "data (generatoroutput attribute)": [[45, "core.types.GeneratorOutput.data", false]], "data (parameter attribute)": [[61, "optim.Parameter.data", false], [69, "optim.parameter.Parameter.data", false]], "data (promptdata attribute)": [[80, "optim.types.PromptData.data", false]], "data (sample attribute)": [[70, "optim.sampler.Sample.data", false]], "dataclass (class in core.base_data_class)": [[30, "core.base_data_class.DataClass", false]], "dataclass_obj_from_dict() (in module core.functional)": [[37, "core.functional.dataclass_obj_from_dict", false]], "dataclassformattype (class in core.base_data_class)": [[30, "core.base_data_class.DataClassFormatType", false]], "dataclassparser (class in components.output_parsers)": [[18, "components.output_parsers.DataClassParser", false]], "dataclassparser (class in components.output_parsers.dataclass_parser)": [[19, "components.output_parsers.dataclass_parser.DataClassParser", false]], "dataloader (class in utils.data)": [[89, "utils.data.DataLoader", false]], "dataset (class in utils.data)": [[89, "utils.data.Dataset", false]], "dataset (demooptimizer attribute)": [[61, "optim.DemoOptimizer.dataset", false], [68, "optim.optimizer.DemoOptimizer.dataset", false]], "dataset (sampler attribute)": [[61, "optim.Sampler.dataset", false], [70, "optim.sampler.Sampler.dataset", false]], "dataset (subset attribute)": [[89, "utils.data.Subset.dataset", false]], "datasets": [[52, "module-datasets", false]], "datasets (optionalpackages attribute)": [[92, "utils.lazy_import.OptionalPackages.DATASETS", false]], "datasets.big_bench_hard": [[47, "module-datasets.big_bench_hard", false]], "datasets.hotpot_qa": [[48, "module-datasets.hotpot_qa", false]], "datasets.trec": [[49, "module-datasets.trec", false]], "datasets.types": [[50, "module-datasets.types", false]], "datasets.utils": [[51, "module-datasets.utils", false]], "debug (trainer attribute)": [[61, "optim.Trainer.debug", false], [77, "optim.trainer.Trainer.debug", false], [79, "optim.trainer.trainer.Trainer.debug", false]], "debug_report() (trainer method)": [[61, "optim.Trainer.debug_report", false], [77, "optim.trainer.Trainer.debug_report", false], [79, "optim.trainer.trainer.Trainer.debug_report", false]], "decode() (tokenizer method)": [[43, "core.tokenizer.Tokenizer.decode", false]], "default() (in module utils.serialization)": [[95, "utils.serialization.default", false]], "default_adalflow_system_prompt (in module core.default_prompt_template)": [[34, "core.default_prompt_template.DEFAULT_ADALFLOW_SYSTEM_PROMPT", false], [34, "id0", false]], "default_react_agent_system_prompt (in module components.agent.react)": [[1, "components.agent.react.DEFAULT_REACT_AGENT_SYSTEM_PROMPT", false]], "defaultllmjudge (class in eval.llm_as_judge)": [[57, "eval.llm_as_judge.DefaultLLMJudge", false]], "delete() (localdb method)": [[33, "core.db.LocalDB.delete", false]], "delete_dialog_turn() (conversation method)": [[45, "core.types.Conversation.delete_dialog_turn", false]], "demo_optimizers (trainer attribute)": [[77, "optim.trainer.Trainer.demo_optimizers", false], [79, "optim.trainer.trainer.Trainer.demo_optimizers", false]], "demooptimizer (class in optim)": [[61, "optim.DemoOptimizer", false]], "demooptimizer (class in optim.optimizer)": [[68, "optim.optimizer.DemoOptimizer", false]], "demos (parametertype attribute)": [[80, "optim.types.ParameterType.DEMOS", false]], "deserialize() (in module utils.serialization)": [[95, "utils.serialization.deserialize", false]], "diagnose() (trainer method)": [[61, "optim.Trainer.diagnose", false], [77, "optim.trainer.Trainer.diagnose", false], [79, "optim.trainer.trainer.Trainer.diagnose", false]], "dialog_turns (conversation attribute)": [[45, "core.types.Conversation.dialog_turns", false]], "dialog_turns_input (conversation attribute)": [[45, "core.types.Conversation.dialog_turns_input", false]], "dialogturn (class in core.types)": [[45, "core.types.DialogTurn", false]], "dict_to_yaml() (dataclass method)": [[30, "core.base_data_class.DataClass.dict_to_yaml", false]], "direct() (in module utils.cache)": [[87, "utils.cache.direct", false]], "distancetooperator (class in components.retriever.postgres_retriever)": [[26, "components.retriever.postgres_retriever.DistanceToOperator", false]], "doc_indices (retrieveroutput attribute)": [[45, "core.types.RetrieverOutput.doc_indices", false]], "doc_scores (retrieveroutput attribute)": [[45, "core.types.RetrieverOutput.doc_scores", false]], "document (class in core.types)": [[45, "core.types.Document", false]], "documents (retrieveroutput attribute)": [[45, "core.types.RetrieverOutput.documents", false]], "draw_graph() (parameter method)": [[61, "optim.Parameter.draw_graph", false], [69, "optim.parameter.Parameter.draw_graph", false]], "dynamicdataclassfactory (class in core.base_data_class)": [[30, "core.base_data_class.DynamicDataClassFactory", false]], "effective_measure (trainerresult attribute)": [[80, "optim.types.TrainerResult.effective_measure", false]], "embedder (class in core.embedder)": [[35, "core.embedder.Embedder", false]], "embedder (modeltype attribute)": [[45, "core.types.ModelType.EMBEDDER", false]], "embedderoutput (class in core.types)": [[45, "core.types.EmbedderOutput", false]], "embedderoutputtype (in module core.types)": [[45, "core.types.EmbedderOutputType", false]], "embedding (class in core.types)": [[45, "core.types.Embedding", false]], "embedding (embedding attribute)": [[45, "core.types.Embedding.embedding", false]], "embedding_dim (embedderoutput property)": [[45, "core.types.EmbedderOutput.embedding_dim", false]], "encode() (tokenizer method)": [[43, "core.tokenizer.Tokenizer.encode", false]], "entitymapping (class in utils.registry)": [[94, "utils.registry.EntityMapping", false]], "error (embedderoutput attribute)": [[45, "core.types.EmbedderOutput.error", false]], "error (functionoutput attribute)": [[45, "core.types.FunctionOutput.error", false]], "error (generatoroutput attribute)": [[45, "core.types.GeneratorOutput.error", false]], "estimated_num_tokens (document attribute)": [[45, "core.types.Document.estimated_num_tokens", false]], "eval": [[59, "module-eval", false]], "eval() (component method)": [[31, "core.component.Component.eval", false]], "eval.answer_match_acc": [[53, "module-eval.answer_match_acc", false]], "eval.base": [[54, "module-eval.base", false]], "eval.functional": [[55, "module-eval.functional", false]], "eval.g_eval": [[56, "module-eval.g_eval", false]], "eval.llm_as_judge": [[57, "module-eval.llm_as_judge", false]], "eval.retriever_recall": [[58, "module-eval.retriever_recall", false]], "eval_fn (adalcomponent attribute)": [[61, "optim.AdalComponent.eval_fn", false], [77, "optim.trainer.AdalComponent.eval_fn", false], [78, "optim.trainer.adal.AdalComponent.eval_fn", false]], "eval_input (parameter attribute)": [[61, "optim.Parameter.eval_input", false], [69, "optim.parameter.Parameter.eval_input", false]], "eval_score (historyprompt attribute)": [[76, "optim.text_grad.tgd_optimizer.HistoryPrompt.eval_score", false]], "evalfntotextloss (class in optim)": [[61, "optim.EvalFnToTextLoss", false]], "evalfntotextloss (class in optim.text_grad)": [[71, "optim.text_grad.EvalFnToTextLoss", false]], "evalfntotextloss (class in optim.text_grad.text_loss_with_eval_fn)": [[75, "optim.text_grad.text_loss_with_eval_fn.EvalFnToTextLoss", false]], "evaluate_ast_node() (in module core.functional)": [[37, "core.functional.evaluate_ast_node", false]], "evaluate_samples() (adalcomponent method)": [[61, "optim.AdalComponent.evaluate_samples", false], [77, "optim.trainer.AdalComponent.evaluate_samples", false], [78, "optim.trainer.adal.AdalComponent.evaluate_samples", false]], "evaluationresult (class in eval.base)": [[54, "eval.base.EvaluationResult", false]], "evaluationresult (class in optim.types)": [[80, "optim.types.EvaluationResult", false]], "example (class in datasets)": [[52, "datasets.Example", false]], "example (class in datasets.types)": [[50, "datasets.types.Example", false]], "example_json (dataclassformattype attribute)": [[30, "core.base_data_class.DataClassFormatType.EXAMPLE_JSON", false]], "example_yaml (dataclassformattype attribute)": [[30, "core.base_data_class.DataClassFormatType.EXAMPLE_YAML", false]], "exclude_input_fields_from_bootstrap_demos (demooptimizer attribute)": [[61, "optim.DemoOptimizer.exclude_input_fields_from_bootstrap_demos", false], [68, "optim.optimizer.DemoOptimizer.exclude_input_fields_from_bootstrap_demos", false]], "excludetype (in module core.base_data_class)": [[30, "core.base_data_class.ExcludeType", false]], "execute() (functiontool method)": [[36, "core.func_tool.FunctionTool.execute", false]], "execute_func() (toolmanager method)": [[44, "core.tool_manager.ToolManager.execute_func", false]], "execute_func_async() (toolmanager method)": [[44, "core.tool_manager.ToolManager.execute_func_async", false]], "execute_func_expr() (toolmanager method)": [[44, "core.tool_manager.ToolManager.execute_func_expr", false]], "execute_func_expr_async() (toolmanager method)": [[44, "core.tool_manager.ToolManager.execute_func_expr_async", false]], "execute_func_expr_via_eval() (toolmanager method)": [[44, "core.tool_manager.ToolManager.execute_func_expr_via_eval", false]], "execute_func_expr_via_sandbox() (toolmanager method)": [[44, "core.tool_manager.ToolManager.execute_func_expr_via_sandbox", false]], "extend() (localdb method)": [[33, "core.db.LocalDB.extend", false]], "extend() (sequential method)": [[32, "core.container.Sequential.extend", false]], "extract_dataclass_type() (in module core.functional)": [[37, "core.functional.extract_dataclass_type", false]], "extract_first_boolean() (in module core.functional)": [[37, "core.functional.extract_first_boolean", false]], "extract_first_float() (in module core.functional)": [[37, "core.functional.extract_first_float", false]], "extract_first_int() (in module core.functional)": [[37, "core.functional.extract_first_int", false]], "extract_function_expression() (in module core.functional)": [[37, "core.functional.extract_function_expression", false]], "extract_json_str() (in module core.functional)": [[37, "core.functional.extract_json_str", false]], "extract_list_str() (in module core.functional)": [[37, "core.functional.extract_list_str", false]], "extract_new_variable() (in module optim.text_grad.tgd_optimizer)": [[76, "optim.text_grad.tgd_optimizer.extract_new_variable", false]], "extract_yaml_str() (in module core.functional)": [[37, "core.functional.extract_yaml_str", false]], "failure_message_to_backward_engine() (generator static method)": [[38, "core.generator.Generator.failure_message_to_backward_engine", false]], "failure_message_to_optimizer() (backwardengine static method)": [[38, "core.generator.BackwardEngine.failure_message_to_optimizer", false]], "faiss (optionalpackages attribute)": [[92, "utils.lazy_import.OptionalPackages.FAISS", false]], "faissretriever (class in components.retriever.faiss_retriever)": [[23, "components.retriever.faiss_retriever.FAISSRetriever", false]], "feedback (evaluationresult attribute)": [[80, "optim.types.EvaluationResult.feedback", false]], "fetch_items() (localdb method)": [[33, "core.db.LocalDB.fetch_items", false]], "fetch_transformed_items() (localdb method)": [[33, "core.db.LocalDB.fetch_transformed_items", false]], "find_demo_parameter() (generator static method)": [[38, "core.generator.Generator.find_demo_parameter", false]], "fit() (trainer method)": [[61, "optim.Trainer.fit", false], [77, "optim.trainer.Trainer.fit", false], [79, "optim.trainer.trainer.Trainer.fit", false]], "fix_json_escaped_single_quotes() (in module core.functional)": [[37, "core.functional.fix_json_escaped_single_quotes", false]], "fix_json_missing_commas() (in module core.functional)": [[37, "core.functional.fix_json_missing_commas", false]], "floatparser (class in core.string_parser)": [[42, "core.string_parser.FloatParser", false]], "fluency (gevalmetric attribute)": [[56, "eval.g_eval.GEvalMetric.FLUENCY", false], [59, "eval.GEvalMetric.FLUENCY", false]], "fn_schema_str() (functiondefinition method)": [[45, "core.types.FunctionDefinition.fn_schema_str", false]], "format_class_str() (dataclass class method)": [[30, "core.base_data_class.DataClass.format_class_str", false]], "format_example_str() (dataclass method)": [[30, "core.base_data_class.DataClass.format_example_str", false]], "format_instructions() (booleanoutputparser method)": [[20, "components.output_parsers.outputs.BooleanOutputParser.format_instructions", false]], "format_instructions() (jsonoutputparser method)": [[18, "components.output_parsers.JsonOutputParser.format_instructions", false], [20, "components.output_parsers.outputs.JsonOutputParser.format_instructions", false]], "format_instructions() (listoutputparser method)": [[18, "components.output_parsers.ListOutputParser.format_instructions", false], [20, "components.output_parsers.outputs.ListOutputParser.format_instructions", false]], "format_instructions() (outputparser method)": [[20, "components.output_parsers.outputs.OutputParser.format_instructions", false]], "format_instructions() (yamloutputparser method)": [[18, "components.output_parsers.YamlOutputParser.format_instructions", false], [20, "components.output_parsers.outputs.YamlOutputParser.format_instructions", false]], "format_vector_search_query() (postgresretriever class method)": [[26, "components.retriever.postgres_retriever.PostgresRetriever.format_vector_search_query", false]], "forward() (evalfntotextloss method)": [[61, "optim.EvalFnToTextLoss.forward", false], [71, "optim.text_grad.EvalFnToTextLoss.forward", false], [75, "optim.text_grad.text_loss_with_eval_fn.EvalFnToTextLoss.forward", false]], "forward() (generator method)": [[38, "core.generator.Generator.forward", false]], "forward() (gradcomponent method)": [[66, "optim.grad_component.GradComponent.forward", false]], "forward() (llmastextloss method)": [[61, "optim.LLMAsTextLoss.forward", false], [71, "optim.text_grad.LLMAsTextLoss.forward", false], [73, "optim.text_grad.llm_text_loss.LLMAsTextLoss.forward", false]], "forward() (losscomponent method)": [[67, "optim.loss_component.LossComponent.forward", false]], "forward() (retriever method)": [[41, "core.retriever.Retriever.forward", false]], "forward() (sum method)": [[71, "optim.text_grad.Sum.forward", false], [74, "optim.text_grad.ops.Sum.forward", false]], "from_config() (component class method)": [[31, "core.component.Component.from_config", false]], "from_config() (embedder class method)": [[35, "core.embedder.Embedder.from_config", false]], "from_config() (generator class method)": [[38, "core.generator.Generator.from_config", false]], "from_dict() (azureaiclient class method)": [[9, "components.model_client.azureai_client.AzureAIClient.from_dict", false]], "from_dict() (component class method)": [[31, "core.component.Component.from_dict", false]], "from_dict() (dataclass class method)": [[30, "core.base_data_class.DataClass.from_dict", false]], "from_dict() (document class method)": [[45, "core.types.Document.from_dict", false]], "from_dict() (dynamicdataclassfactory static method)": [[30, "core.base_data_class.DynamicDataClassFactory.from_dict", false]], "from_dict() (groqapiclient class method)": [[13, "components.model_client.groq_client.GroqAPIClient.from_dict", false]], "from_dict() (ollamaclient class method)": [[14, "components.model_client.ollama_client.OllamaClient.from_dict", false]], "from_dict() (openaiclient class method)": [[15, "components.model_client.openai_client.OpenAIClient.from_dict", false]], "from_dict() (parameter class method)": [[61, "optim.Parameter.from_dict", false], [69, "optim.parameter.Parameter.from_dict", false]], "from_dict() (prompt class method)": [[40, "core.prompt_builder.Prompt.from_dict", false]], "from_dict_to_json() (in module core.functional)": [[37, "core.functional.from_dict_to_json", false]], "from_dict_to_yaml() (in module core.functional)": [[37, "core.functional.from_dict_to_yaml", false]], "from_function() (functionexpression class method)": [[45, "core.types.FunctionExpression.from_function", false]], "from_json() (dataclass class method)": [[30, "core.base_data_class.DataClass.from_json", false]], "from_json_to_dict() (in module core.functional)": [[37, "core.functional.from_json_to_dict", false]], "from_response_id (parameter attribute)": [[61, "optim.Parameter.from_response_id", false], [69, "optim.parameter.Parameter.from_response_id", false]], "from_yaml() (dataclass class method)": [[30, "core.base_data_class.DataClass.from_yaml", false]], "from_yaml_to_dict() (in module core.functional)": [[37, "core.functional.from_yaml_to_dict", false]], "full_response (parameter attribute)": [[61, "optim.Parameter.full_response", false], [69, "optim.parameter.Parameter.full_response", false]], "fun_to_component() (in module core.component)": [[31, "core.component.fun_to_component", false]], "func_desc (functiondefinition attribute)": [[45, "core.types.FunctionDefinition.func_desc", false]], "func_name (functiondefinition attribute)": [[45, "core.types.FunctionDefinition.func_name", false]], "func_parameters (functiondefinition attribute)": [[45, "core.types.FunctionDefinition.func_parameters", false]], "funcomponent (class in core.component)": [[31, "core.component.FunComponent", false]], "function (class in core.types)": [[45, "core.types.Function", false]], "function (stepoutput attribute)": [[45, "core.types.StepOutput.function", false]], "function_definitions (toolmanager property)": [[44, "core.tool_manager.ToolManager.function_definitions", false]], "functiondefinition (class in core.types)": [[45, "core.types.FunctionDefinition", false]], "functionexpression (class in core.types)": [[45, "core.types.FunctionExpression", false]], "functionoutput (class in core.types)": [[45, "core.types.FunctionOutput", false]], "functiontool (class in core.func_tool)": [[36, "core.func_tool.FunctionTool", false]], "gather_trainer_states() (trainer method)": [[61, "optim.Trainer.gather_trainer_states", false], [77, "optim.trainer.Trainer.gather_trainer_states", false], [79, "optim.trainer.trainer.Trainer.gather_trainer_states", false]], "generate_function_call_expression_from_callable() (in module core.functional)": [[37, "core.functional.generate_function_call_expression_from_callable", false]], "generate_readable_key_for_function() (in module core.functional)": [[37, "core.functional.generate_readable_key_for_function", false]], "generator (class in core.generator)": [[38, "core.generator.Generator", false]], "generator_names (generatorstatelogger property)": [[85, "tracing.generator_state_logger.GeneratorStateLogger.generator_names", false]], "generator_names_to_files (generatorcalllogger property)": [[84, "tracing.generator_call_logger.GeneratorCallLogger.generator_names_to_files", false]], "generator_output (parametertype attribute)": [[80, "optim.types.ParameterType.GENERATOR_OUTPUT", false]], "generatorcalllogger (class in tracing.generator_call_logger)": [[84, "tracing.generator_call_logger.GeneratorCallLogger", false]], "generatorcallrecord (class in tracing.generator_call_logger)": [[84, "tracing.generator_call_logger.GeneratorCallRecord", false]], "generatoroutput (class in core.types)": [[45, "core.types.GeneratorOutput", false]], "generatorstatelogger (class in tracing.generator_state_logger)": [[85, "tracing.generator_state_logger.GeneratorStateLogger", false]], "generatorstatesrecord (class in tracing.generator_state_logger)": [[85, "tracing.generator_state_logger.GeneratorStatesRecord", false]], "get() (entitymapping class method)": [[94, "utils.registry.EntityMapping.get", false]], "get_adalflow_default_root_path() (in module utils.global_config)": [[91, "utils.global_config.get_adalflow_default_root_path", false]], "get_all() (entitymapping class method)": [[94, "utils.registry.EntityMapping.get_all", false]], "get_all_messages_content() (in module components.model_client.openai_client)": [[15, "components.model_client.openai_client.get_all_messages_content", false]], "get_cache_path() (generator method)": [[38, "core.generator.Generator.get_cache_path", false]], "get_calls() (generatorcalllogger method)": [[84, "tracing.generator_call_logger.GeneratorCallLogger.get_calls", false]], "get_chat_history_str() (conversation method)": [[45, "core.types.Conversation.get_chat_history_str", false]], "get_current_script_and_line() (in module utils.logger)": [[93, "utils.logger.get_current_script_and_line", false]], "get_dataclass_schema() (in module core.functional)": [[37, "core.functional.get_dataclass_schema", false]], "get_default_task_instruction() (bigbenchhard static method)": [[47, "datasets.big_bench_hard.BigBenchHard.get_default_task_instruction", false], [52, "datasets.BigBenchHard.get_default_task_instruction", false]], "get_device() (in module components.model_client.transformers_client)": [[16, "components.model_client.transformers_client.get_device", false]], "get_dialog_turns() (conversation method)": [[45, "core.types.Conversation.get_dialog_turns", false]], "get_enum_schema() (in module core.functional)": [[37, "core.functional.get_enum_schema", false]], "get_examples_str() (dataclassparser method)": [[18, "components.output_parsers.DataClassParser.get_examples_str", false], [19, "components.output_parsers.dataclass_parser.DataClassParser.get_examples_str", false]], "get_first_message_content() (in module components.model_client.anthropic_client)": [[8, "components.model_client.anthropic_client.get_first_message_content", false]], "get_first_message_content() (in module components.model_client.openai_client)": [[15, "components.model_client.openai_client.get_first_message_content", false]], "get_fun_schema() (in module core.functional)": [[37, "core.functional.get_fun_schema", false]], "get_grad_fn() (parameter method)": [[61, "optim.Parameter.get_grad_fn", false], [69, "optim.parameter.Parameter.get_grad_fn", false]], "get_gradient_and_context_text() (parameter method)": [[61, "optim.Parameter.get_gradient_and_context_text", false], [69, "optim.parameter.Parameter.get_gradient_and_context_text", false]], "get_gradient_memory_text() (tgdoptimizer method)": [[61, "optim.TGDOptimizer.get_gradient_memory_text", false], [71, "optim.text_grad.TGDOptimizer.get_gradient_memory_text", false], [76, "optim.text_grad.tgd_optimizer.TGDOptimizer.get_gradient_memory_text", false]], "get_gradients_names() (parameter method)": [[61, "optim.Parameter.get_gradients_names", false], [69, "optim.parameter.Parameter.get_gradients_names", false]], "get_input_fields() (dataclass class method)": [[30, "core.base_data_class.DataClass.get_input_fields", false]], "get_input_format_str() (dataclassparser method)": [[18, "components.output_parsers.DataClassParser.get_input_format_str", false], [19, "components.output_parsers.dataclass_parser.DataClassParser.get_input_format_str", false]], "get_input_str() (dataclassparser method)": [[18, "components.output_parsers.DataClassParser.get_input_str", false], [19, "components.output_parsers.dataclass_parser.DataClassParser.get_input_str", false]], "get_jinja2_environment() (in module core.prompt_builder)": [[40, "core.prompt_builder.get_jinja2_environment", false]], "get_log_location() (generatorcalllogger method)": [[84, "tracing.generator_call_logger.GeneratorCallLogger.get_log_location", false]], "get_log_location() (generatorstatelogger method)": [[85, "tracing.generator_state_logger.GeneratorStateLogger.get_log_location", false]], "get_logger() (in module utils.logger)": [[93, "utils.logger.get_logger", false]], "get_model_args() (in module core.types)": [[45, "core.types.get_model_args", false]], "get_next_order() (conversation method)": [[45, "core.types.Conversation.get_next_order", false]], "get_output_fields() (dataclass class method)": [[30, "core.base_data_class.DataClass.get_output_fields", false]], "get_output_format_str() (dataclassparser method)": [[18, "components.output_parsers.DataClassParser.get_output_format_str", false], [19, "components.output_parsers.dataclass_parser.DataClassParser.get_output_format_str", false]], "get_param_info() (parameter method)": [[61, "optim.Parameter.get_param_info", false], [69, "optim.parameter.Parameter.get_param_info", false]], "get_probabilities() (in module components.model_client.openai_client)": [[15, "components.model_client.openai_client.get_probabilities", false]], "get_prompt() (generator method)": [[38, "core.generator.Generator.get_prompt", false]], "get_prompt_variables() (prompt method)": [[40, "core.prompt_builder.Prompt.get_prompt_variables", false]], "get_short_value() (parameter method)": [[61, "optim.Parameter.get_short_value", false], [69, "optim.parameter.Parameter.get_short_value", false]], "get_string_tokens() (tokenizer method)": [[43, "core.tokenizer.Tokenizer.get_string_tokens", false]], "get_subcomponent() (component method)": [[31, "core.component.Component.get_subcomponent", false]], "get_task_desc() (dataclass class method)": [[30, "core.base_data_class.DataClass.get_task_desc", false]], "get_task_desc_str() (dataclassparser method)": [[18, "components.output_parsers.DataClassParser.get_task_desc_str", false], [19, "components.output_parsers.dataclass_parser.DataClassParser.get_task_desc_str", false]], "get_top_k_indices_scores() (in module core.functional)": [[37, "core.functional.get_top_k_indices_scores", false]], "get_transformed_data() (localdb method)": [[33, "core.db.LocalDB.get_transformed_data", false]], "get_transformer_keys() (localdb method)": [[33, "core.db.LocalDB.get_transformer_keys", false]], "get_type_schema() (in module core.functional)": [[37, "core.functional.get_type_schema", false]], "gevaljudgeevaluator (class in eval)": [[59, "eval.GEvalJudgeEvaluator", false]], "gevaljudgeevaluator (class in eval.g_eval)": [[56, "eval.g_eval.GEvalJudgeEvaluator", false]], "gevalllmjudge (class in eval)": [[59, "eval.GEvalLLMJudge", false]], "gevalllmjudge (class in eval.g_eval)": [[56, "eval.g_eval.GEvalLLMJudge", false]], "gevalmetric (class in eval)": [[59, "eval.GEvalMetric", false]], "gevalmetric (class in eval.g_eval)": [[56, "eval.g_eval.GEvalMetric", false]], "gold_titles (hotpotqadata attribute)": [[50, "datasets.types.HotPotQAData.gold_titles", false], [52, "datasets.HotPotQAData.gold_titles", false]], "google_genai (modelclienttype attribute)": [[45, "core.types.ModelClientType.GOOGLE_GENAI", false]], "google_generativeai (optionalpackages attribute)": [[92, "utils.lazy_import.OptionalPackages.GOOGLE_GENERATIVEAI", false]], "googlegenaiclient (class in components.model_client.google_client)": [[12, "components.model_client.google_client.GoogleGenAIClient", false]], "gradcomponent (class in optim.grad_component)": [[66, "optim.grad_component.GradComponent", false]], "gradient (parametertype attribute)": [[80, "optim.types.ParameterType.GRADIENT", false]], "gradient_prompt (parameter attribute)": [[69, "optim.parameter.Parameter.gradient_prompt", false]], "gradientcontext (class in optim.parameter)": [[69, "optim.parameter.GradientContext", false]], "gradients (parameter attribute)": [[69, "optim.parameter.Parameter.gradients", false]], "gradients_context (parameter attribute)": [[69, "optim.parameter.Parameter.gradients_context", false]], "groq (modelclienttype attribute)": [[45, "core.types.ModelClientType.GROQ", false]], "groq (optionalpackages attribute)": [[92, "utils.lazy_import.OptionalPackages.GROQ", false]], "groqapiclient (class in components.model_client.groq_client)": [[13, "components.model_client.groq_client.GroqAPIClient", false]], "gts (instruction attribute)": [[76, "optim.text_grad.tgd_optimizer.Instruction.gts", false]], "handle_streaming_response() (in module components.model_client.openai_client)": [[15, "components.model_client.openai_client.handle_streaming_response", false]], "hash_text() (in module utils.cache)": [[87, "utils.cache.hash_text", false]], "hash_text_sha1() (in module utils.cache)": [[87, "utils.cache.hash_text_sha1", false]], "historyprompt (class in optim.text_grad.tgd_optimizer)": [[76, "optim.text_grad.tgd_optimizer.HistoryPrompt", false]], "hotpotqa (class in datasets)": [[52, "datasets.HotPotQA", false]], "hotpotqa (class in datasets.hotpot_qa)": [[48, "datasets.hotpot_qa.HotPotQA", false]], "hotpotqadata (class in datasets)": [[52, "datasets.HotPotQAData", false]], "hotpotqadata (class in datasets.types)": [[50, "datasets.types.HotPotQAData", false]], "hyperparam (parametertype attribute)": [[80, "optim.types.ParameterType.HYPERPARAM", false]], "id (basedata attribute)": [[50, "datasets.types.BaseData.id", false]], "id (conversation attribute)": [[45, "core.types.Conversation.id", false]], "id (dialogturn attribute)": [[45, "core.types.DialogTurn.id", false]], "id (document attribute)": [[45, "core.types.Document.id", false]], "id (example attribute)": [[50, "datasets.types.Example.id", false], [52, "datasets.Example.id", false]], "id (generatoroutput attribute)": [[45, "core.types.GeneratorOutput.id", false]], "id (historyprompt attribute)": [[76, "optim.text_grad.tgd_optimizer.HistoryPrompt.id", false]], "id (parameter attribute)": [[61, "optim.Parameter.id", false], [69, "optim.parameter.Parameter.id", false]], "id (promptdata attribute)": [[80, "optim.types.PromptData.id", false]], "includetype (in module core.base_data_class)": [[30, "core.base_data_class.IncludeType", false]], "index (embedding attribute)": [[45, "core.types.Embedding.index", false]], "index (sample attribute)": [[70, "optim.sampler.Sample.index", false]], "index_keys (retriever attribute)": [[41, "core.retriever.Retriever.index_keys", false]], "index_path (localdb attribute)": [[33, "core.db.LocalDB.index_path", false]], "indexed (retriever attribute)": [[41, "core.retriever.Retriever.indexed", false]], "indices (subset attribute)": [[89, "utils.data.Subset.indices", false]], "infer_bge_reranker_base() (transformerreranker method)": [[16, "components.model_client.transformers_client.TransformerReranker.infer_bge_reranker_base", false]], "infer_gte_base_embedding() (transformerembedder method)": [[16, "components.model_client.transformers_client.TransformerEmbedder.infer_gte_base_embedding", false]], "infer_llm() (transformerllm method)": [[16, "components.model_client.transformers_client.TransformerLLM.infer_llm", false]], "init_async_client() (anthropicapiclient method)": [[8, "components.model_client.anthropic_client.AnthropicAPIClient.init_async_client", false]], "init_async_client() (azureaiclient method)": [[9, "components.model_client.azureai_client.AzureAIClient.init_async_client", false]], "init_async_client() (cohereapiclient method)": [[11, "components.model_client.cohere_client.CohereAPIClient.init_async_client", false]], "init_async_client() (groqapiclient method)": [[13, "components.model_client.groq_client.GroqAPIClient.init_async_client", false]], "init_async_client() (modelclient method)": [[39, "core.model_client.ModelClient.init_async_client", false]], "init_async_client() (ollamaclient method)": [[14, "components.model_client.ollama_client.OllamaClient.init_async_client", false]], "init_async_client() (openaiclient method)": [[15, "components.model_client.openai_client.OpenAIClient.init_async_client", false]], "init_llm_client() (transformersclient method)": [[16, "components.model_client.transformers_client.TransformersClient.init_llm_client", false]], "init_model() (transformerembedder method)": [[16, "components.model_client.transformers_client.TransformerEmbedder.init_model", false]], "init_model() (transformerllm method)": [[16, "components.model_client.transformers_client.TransformerLLM.init_model", false]], "init_model() (transformerreranker method)": [[16, "components.model_client.transformers_client.TransformerReranker.init_model", false]], "init_reranker_client() (transformersclient method)": [[16, "components.model_client.transformers_client.TransformersClient.init_reranker_client", false]], "init_sync_client() (anthropicapiclient method)": [[8, "components.model_client.anthropic_client.AnthropicAPIClient.init_sync_client", false]], "init_sync_client() (azureaiclient method)": [[9, "components.model_client.azureai_client.AzureAIClient.init_sync_client", false]], "init_sync_client() (cohereapiclient method)": [[11, "components.model_client.cohere_client.CohereAPIClient.init_sync_client", false]], "init_sync_client() (googlegenaiclient method)": [[12, "components.model_client.google_client.GoogleGenAIClient.init_sync_client", false]], "init_sync_client() (groqapiclient method)": [[13, "components.model_client.groq_client.GroqAPIClient.init_sync_client", false]], "init_sync_client() (modelclient method)": [[39, "core.model_client.ModelClient.init_sync_client", false]], "init_sync_client() (ollamaclient method)": [[14, "components.model_client.ollama_client.OllamaClient.init_sync_client", false]], "init_sync_client() (openaiclient method)": [[15, "components.model_client.openai_client.OpenAIClient.init_sync_client", false]], "init_sync_client() (transformersclient method)": [[16, "components.model_client.transformers_client.TransformersClient.init_sync_client", false]], "initial_validation() (trainer method)": [[61, "optim.Trainer.initial_validation", false], [77, "optim.trainer.Trainer.initial_validation", false], [79, "optim.trainer.trainer.Trainer.initial_validation", false]], "inner_product (distancetooperator attribute)": [[26, "components.retriever.postgres_retriever.DistanceToOperator.INNER_PRODUCT", false]], "input (embedderoutput attribute)": [[45, "core.types.EmbedderOutput.input", false]], "input (functionoutput attribute)": [[45, "core.types.FunctionOutput.input", false]], "input (generatorcallrecord attribute)": [[84, "tracing.generator_call_logger.GeneratorCallRecord.input", false]], "input (parametertype attribute)": [[80, "optim.types.ParameterType.INPUT", false]], "input_args (parameter attribute)": [[61, "optim.Parameter.input_args", false], [69, "optim.parameter.Parameter.input_args", false]], "insert() (sequential method)": [[32, "core.container.Sequential.insert", false]], "instance (objecttypes attribute)": [[95, "utils.serialization.ObjectTypes.INSTANCE", false]], "instruction (class in optim.text_grad.tgd_optimizer)": [[76, "optim.text_grad.tgd_optimizer.Instruction", false]], "instruction_to_backward_engine (parameter attribute)": [[69, "optim.parameter.Parameter.instruction_to_backward_engine", false]], "instruction_to_optimizer (parameter attribute)": [[69, "optim.parameter.Parameter.instruction_to_optimizer", false]], "intparser (class in core.string_parser)": [[42, "core.string_parser.IntParser", false]], "is_async (functiontool property)": [[36, "core.func_tool.FunctionTool.is_async", false]], "is_dataclass_instance() (in module core.functional)": [[37, "core.functional.is_dataclass_instance", false]], "is_key_in_template() (prompt method)": [[40, "core.prompt_builder.Prompt.is_key_in_template", false]], "is_normalized (embedderoutput property)": [[45, "core.types.EmbedderOutput.is_normalized", false]], "is_normalized() (in module core.functional)": [[37, "core.functional.is_normalized", false]], "is_picklable() (component method)": [[31, "core.component.Component.is_picklable", false]], "is_potential_dataclass() (in module core.functional)": [[37, "core.functional.is_potential_dataclass", false]], "is_running_in_event_loop() (in module core.func_tool)": [[36, "core.func_tool.is_running_in_event_loop", false]], "items (localdb attribute)": [[33, "core.db.LocalDB.items", false]], "json_definitions (toolmanager property)": [[44, "core.tool_manager.ToolManager.json_definitions", false]], "jsonoutputparser (class in components.output_parsers)": [[18, "components.output_parsers.JsonOutputParser", false]], "jsonoutputparser (class in components.output_parsers.outputs)": [[20, "components.output_parsers.outputs.JsonOutputParser", false]], "jsonparser (class in core.string_parser)": [[42, "core.string_parser.JsonParser", false]], "judgement_score_list (llmjudgeevalresult attribute)": [[57, "eval.llm_as_judge.LLMJudgeEvalResult.judgement_score_list", false]], "kwargs (function attribute)": [[45, "core.types.Function.kwargs", false]], "l1 (distancetooperator attribute)": [[26, "components.retriever.postgres_retriever.DistanceToOperator.L1", false]], "l2 (distancetooperator attribute)": [[26, "components.retriever.postgres_retriever.DistanceToOperator.L2", false]], "lancedb (optionalpackages attribute)": [[92, "utils.lazy_import.OptionalPackages.LANCEDB", false]], "lancedbretriever (class in components.retriever.lancedb_retriver)": [[24, "components.retriever.lancedb_retriver.LanceDBRetriever", false]], "lazyimport (class in utils.lazy_import)": [[92, "utils.lazy_import.LazyImport", false]], "length (embedderoutput property)": [[45, "core.types.EmbedderOutput.length", false]], "length (localdb property)": [[33, "core.db.LocalDB.length", false]], "listoutputparser (class in components.output_parsers)": [[18, "components.output_parsers.ListOutputParser", false]], "listoutputparser (class in components.output_parsers.outputs)": [[20, "components.output_parsers.outputs.ListOutputParser", false]], "listparser (class in core.string_parser)": [[42, "core.string_parser.ListParser", false]], "llm (modeltype attribute)": [[45, "core.types.ModelType.LLM", false]], "llmasjudge (class in eval)": [[59, "eval.LLMasJudge", false]], "llmasjudge (class in eval.llm_as_judge)": [[57, "eval.llm_as_judge.LLMasJudge", false]], "llmastextloss (class in optim)": [[61, "optim.LLMAsTextLoss", false]], "llmastextloss (class in optim.text_grad)": [[71, "optim.text_grad.LLMAsTextLoss", false]], "llmastextloss (class in optim.text_grad.llm_text_loss)": [[73, "optim.text_grad.llm_text_loss.LLMAsTextLoss", false]], "llmjudgeevalresult (class in eval.llm_as_judge)": [[57, "eval.llm_as_judge.LLMJudgeEvalResult", false]], "llmretriever (class in components.retriever)": [[21, "components.retriever.LLMRetriever", false]], "llmretriever (class in components.retriever.llm_retriever)": [[25, "components.retriever.llm_retriever.LLMRetriever", false]], "load() (generatorcalllogger method)": [[84, "tracing.generator_call_logger.GeneratorCallLogger.load", false]], "load() (generatorstatelogger method)": [[85, "tracing.generator_state_logger.GeneratorStateLogger.load", false]], "load() (in module utils.file_io)": [[90, "utils.file_io.load", false]], "load() (localdb method)": [[33, "core.db.LocalDB.load", false]], "load_class() (lazyimport method)": [[92, "utils.lazy_import.LazyImport.load_class", false]], "load_from_file() (bm25retriever class method)": [[21, "components.retriever.BM25Retriever.load_from_file", false], [22, "components.retriever.bm25_retriever.BM25Retriever.load_from_file", false]], "load_from_file() (retriever class method)": [[41, "core.retriever.Retriever.load_from_file", false]], "load_from_pickle() (component class method)": [[31, "core.component.Component.load_from_pickle", false]], "load_json() (in module utils.file_io)": [[90, "utils.file_io.load_json", false]], "load_jsonl() (in module utils.file_io)": [[90, "utils.file_io.load_jsonl", false]], "load_meta_data() (generatorcalllogger method)": [[84, "tracing.generator_call_logger.GeneratorCallLogger.load_meta_data", false]], "load_pickle() (in module utils.file_io)": [[90, "utils.file_io.load_pickle", false]], "load_state() (localdb class method)": [[33, "core.db.LocalDB.load_state", false]], "load_state_dict() (component method)": [[31, "core.component.Component.load_state_dict", false]], "load_state_pickle() (component class method)": [[31, "core.component.Component.load_state_pickle", false]], "localdb (class in core.db)": [[33, "core.db.LocalDB", false]], "log_call() (generatorcalllogger method)": [[84, "tracing.generator_call_logger.GeneratorCallLogger.log_call", false]], "log_prompt() (generatorstatelogger method)": [[85, "tracing.generator_state_logger.GeneratorStateLogger.log_prompt", false]], "logprob (tokenlogprob attribute)": [[45, "core.types.TokenLogProb.logprob", false]], "longest_common_substring() (in module eval.functional)": [[55, "eval.functional.longest_common_substring", false]], "loss_fn (adalcomponent attribute)": [[61, "optim.AdalComponent.loss_fn", false], [77, "optim.trainer.AdalComponent.loss_fn", false], [78, "optim.trainer.adal.AdalComponent.loss_fn", false]], "loss_output (parametertype attribute)": [[80, "optim.types.ParameterType.LOSS_OUTPUT", false]], "loss_step() (adalcomponent method)": [[61, "optim.AdalComponent.loss_step", false], [77, "optim.trainer.AdalComponent.loss_step", false], [78, "optim.trainer.adal.AdalComponent.loss_step", false]], "losscomponent (class in optim.loss_component)": [[67, "optim.loss_component.LossComponent", false]], "map_to_successor() (parameter method)": [[61, "optim.Parameter.map_to_successor", false], [69, "optim.parameter.Parameter.map_to_successor", false]], "mapper_setups (localdb attribute)": [[33, "core.db.LocalDB.mapper_setups", false]], "max_correct_samples (trainer attribute)": [[61, "optim.Trainer.max_correct_samples", false], [77, "optim.trainer.Trainer.max_correct_samples", false], [79, "optim.trainer.trainer.Trainer.max_correct_samples", false]], "max_error_samples (trainer attribute)": [[61, "optim.Trainer.max_error_samples", false], [77, "optim.trainer.Trainer.max_error_samples", false], [79, "optim.trainer.trainer.Trainer.max_error_samples", false]], "max_proposals_per_step (trainer attribute)": [[61, "optim.Trainer.max_proposals_per_step", false], [77, "optim.trainer.Trainer.max_proposals_per_step", false], [79, "optim.trainer.trainer.Trainer.max_proposals_per_step", false]], "max_score (trainervalidatestats attribute)": [[80, "optim.types.TrainerValidateStats.max_score", false]], "max_steps (trainer attribute)": [[61, "optim.Trainer.max_steps", false], [77, "optim.trainer.Trainer.max_steps", false], [79, "optim.trainer.trainer.Trainer.max_steps", false]], "mean_of_score (trainervalidatestats attribute)": [[80, "optim.types.TrainerValidateStats.mean_of_score", false]], "memory (class in components.memory.memory)": [[6, "components.memory.memory.Memory", false]], "meta_data (document attribute)": [[45, "core.types.Document.meta_data", false]], "metadata (assistantresponse attribute)": [[45, "core.types.AssistantResponse.metadata", false]], "metadata (conversation attribute)": [[45, "core.types.Conversation.metadata", false]], "metadata (dialogturn attribute)": [[45, "core.types.DialogTurn.metadata", false]], "metadata (generatorcallrecord attribute)": [[84, "tracing.generator_call_logger.GeneratorCallRecord.metadata", false]], "metadata (generatoroutput attribute)": [[45, "core.types.GeneratorOutput.metadata", false]], "metadata (userquery attribute)": [[45, "core.types.UserQuery.metadata", false]], "min_score (trainervalidatestats attribute)": [[80, "optim.types.TrainerValidateStats.min_score", false]], "model (embedderoutput attribute)": [[45, "core.types.EmbedderOutput.model", false]], "model_client (embedder attribute)": [[35, "core.embedder.Embedder.model_client", false]], "model_client (generator attribute)": [[38, "core.generator.Generator.model_client", false]], "model_kwargs (generatorcallrecord attribute)": [[84, "tracing.generator_call_logger.GeneratorCallRecord.model_kwargs", false]], "model_to_init_func (transformerllm attribute)": [[16, "components.model_client.transformers_client.TransformerLLM.model_to_init_func", false]], "model_type (embedder attribute)": [[35, "core.embedder.Embedder.model_type", false]], "model_type (generator attribute)": [[38, "core.generator.Generator.model_type", false]], "modelclient (class in core.model_client)": [[39, "core.model_client.ModelClient", false]], "modelclienttype (class in core.types)": [[45, "core.types.ModelClientType", false]], "models (transformerembedder attribute)": [[16, "components.model_client.transformers_client.TransformerEmbedder.models", false]], "models (transformerllm attribute)": [[16, "components.model_client.transformers_client.TransformerLLM.models", false]], "models (transformerreranker attribute)": [[16, "components.model_client.transformers_client.TransformerReranker.models", false]], "modeltype (class in core.types)": [[45, "core.types.ModelType", false]], "module": [[0, "module-components.agent", false], [1, "module-components.agent.react", false], [2, "module-components.data_process", false], [3, "module-components.data_process.data_components", false], [4, "module-components.data_process.text_splitter", false], [5, "module-components.memory", false], [6, "module-components.memory.memory", false], [7, "module-components.model_client", false], [8, "module-components.model_client.anthropic_client", false], [9, "module-components.model_client.azureai_client", false], [11, "module-components.model_client.cohere_client", false], [12, "module-components.model_client.google_client", false], [13, "module-components.model_client.groq_client", false], [14, "module-components.model_client.ollama_client", false], [15, "module-components.model_client.openai_client", false], [16, "module-components.model_client.transformers_client", false], [17, "module-components.model_client.utils", false], [18, "module-components.output_parsers", false], [19, "module-components.output_parsers.dataclass_parser", false], [20, "module-components.output_parsers.outputs", false], [21, "module-components.retriever", false], [22, "module-components.retriever.bm25_retriever", false], [23, "module-components.retriever.faiss_retriever", false], [24, "module-components.retriever.lancedb_retriver", false], [25, "module-components.retriever.llm_retriever", false], [26, "module-components.retriever.postgres_retriever", false], [27, "module-components.retriever.qdrant_retriever", false], [28, "module-components.retriever.reranker_retriever", false], [30, "module-core.base_data_class", false], [31, "module-core.component", false], [32, "module-core.container", false], [33, "module-core.db", false], [34, "module-core.default_prompt_template", false], [35, "module-core.embedder", false], [36, "module-core.func_tool", false], [37, "module-core.functional", false], [38, "module-core.generator", false], [39, "module-core.model_client", false], [40, "module-core.prompt_builder", false], [41, "module-core.retriever", false], [42, "module-core.string_parser", false], [43, "module-core.tokenizer", false], [44, "module-core.tool_manager", false], [45, "module-core.types", false], [47, "module-datasets.big_bench_hard", false], [48, "module-datasets.hotpot_qa", false], [49, "module-datasets.trec", false], [50, "module-datasets.types", false], [51, "module-datasets.utils", false], [52, "module-datasets", false], [53, "module-eval.answer_match_acc", false], [54, "module-eval.base", false], [55, "module-eval.functional", false], [56, "module-eval.g_eval", false], [57, "module-eval.llm_as_judge", false], [58, "module-eval.retriever_recall", false], [59, "module-eval", false], [61, "module-optim", false], [63, "module-optim.few_shot", false], [64, "module-optim.few_shot.bootstrap_optimizer", false], [65, "module-optim.function", false], [66, "module-optim.grad_component", false], [67, "module-optim.loss_component", false], [68, "module-optim.optimizer", false], [69, "module-optim.parameter", false], [70, "module-optim.sampler", false], [71, "module-optim.text_grad", false], [72, "module-optim.text_grad.backend_engine_prompt", false], [73, "module-optim.text_grad.llm_text_loss", false], [74, "module-optim.text_grad.ops", false], [75, "module-optim.text_grad.text_loss_with_eval_fn", false], [76, "module-optim.text_grad.tgd_optimizer", false], [77, "module-optim.trainer", false], [78, "module-optim.trainer.adal", false], [79, "module-optim.trainer.trainer", false], [80, "module-optim.types", false], [82, "module-tracing.callback_manager", false], [83, "module-tracing.decorators", false], [84, "module-tracing.generator_call_logger", false], [85, "module-tracing.generator_state_logger", false], [87, "module-utils.cache", false], [88, "module-utils.config", false], [89, "module-utils.data", false], [90, "module-utils.file_io", false], [91, "module-utils.global_config", false], [92, "module-utils.lazy_import", false], [93, "module-utils.logger", false], [94, "module-utils.registry", false], [95, "module-utils.serialization", false], [96, "module-utils.setup_env", false]], "name (component attribute)": [[31, "core.component.Component.name", false]], "name (conversation attribute)": [[45, "core.types.Conversation.name", false]], "name (function attribute)": [[45, "core.types.Function.name", false]], "name (functionoutput attribute)": [[45, "core.types.FunctionOutput.name", false]], "name (localdb attribute)": [[33, "core.db.LocalDB.name", false]], "name (parameter attribute)": [[61, "optim.Parameter.name", false], [69, "optim.parameter.Parameter.name", false]], "name (promptdata attribute)": [[80, "optim.types.PromptData.name", false]], "name (retriever attribute)": [[41, "core.retriever.Retriever.name", false]], "name (sum attribute)": [[71, "optim.text_grad.Sum.name", false], [74, "optim.text_grad.ops.Sum.name", false]], "named_children() (component method)": [[31, "core.component.Component.named_children", false]], "named_components() (component method)": [[31, "core.component.Component.named_components", false]], "named_parameters() (component method)": [[31, "core.component.Component.named_parameters", false]], "new_component() (in module utils.config)": [[88, "utils.config.new_component", false]], "new_components_from_config() (in module utils.config)": [[88, "utils.config.new_components_from_config", false]], "nlgtask (class in eval.g_eval)": [[56, "eval.g_eval.NLGTask", false]], "none (parametertype attribute)": [[80, "optim.types.ParameterType.NONE", false]], "normalize_np_array() (in module core.functional)": [[37, "core.functional.normalize_np_array", false]], "normalize_vector() (in module core.functional)": [[37, "core.functional.normalize_vector", false]], "num_shots (bootstrapfewshot property)": [[61, "optim.BootstrapFewShot.num_shots", false], [64, "optim.few_shot.bootstrap_optimizer.BootstrapFewShot.num_shots", false]], "num_workers (trainer attribute)": [[61, "optim.Trainer.num_workers", false], [77, "optim.trainer.Trainer.num_workers", false], [79, "optim.trainer.trainer.Trainer.num_workers", false]], "objecttypes (class in utils.serialization)": [[95, "utils.serialization.ObjectTypes", false]], "observation (stepoutput attribute)": [[45, "core.types.StepOutput.observation", false]], "ollama (modelclienttype attribute)": [[45, "core.types.ModelClientType.OLLAMA", false]], "ollama (optionalpackages attribute)": [[92, "utils.lazy_import.OptionalPackages.OLLAMA", false]], "ollamaclient (class in components.model_client.ollama_client)": [[14, "components.model_client.ollama_client.OllamaClient", false]], "openai (modelclienttype attribute)": [[45, "core.types.ModelClientType.OPENAI", false]], "openai (optionalpackages attribute)": [[92, "utils.lazy_import.OptionalPackages.OPENAI", false]], "openaiclient (class in components.model_client.openai_client)": [[15, "components.model_client.openai_client.OpenAIClient", false]], "optim": [[61, "module-optim", false]], "optim.few_shot": [[63, "module-optim.few_shot", false]], "optim.few_shot.bootstrap_optimizer": [[64, "module-optim.few_shot.bootstrap_optimizer", false]], "optim.function": [[65, "module-optim.function", false]], "optim.grad_component": [[66, "module-optim.grad_component", false]], "optim.loss_component": [[67, "module-optim.loss_component", false]], "optim.optimizer": [[68, "module-optim.optimizer", false]], "optim.parameter": [[69, "module-optim.parameter", false]], "optim.sampler": [[70, "module-optim.sampler", false]], "optim.text_grad": [[71, "module-optim.text_grad", false]], "optim.text_grad.backend_engine_prompt": [[72, "module-optim.text_grad.backend_engine_prompt", false]], "optim.text_grad.llm_text_loss": [[73, "module-optim.text_grad.llm_text_loss", false]], "optim.text_grad.ops": [[74, "module-optim.text_grad.ops", false]], "optim.text_grad.text_loss_with_eval_fn": [[75, "module-optim.text_grad.text_loss_with_eval_fn", false]], "optim.text_grad.tgd_optimizer": [[76, "module-optim.text_grad.tgd_optimizer", false]], "optim.trainer": [[77, "module-optim.trainer", false]], "optim.trainer.adal": [[78, "module-optim.trainer.adal", false]], "optim.trainer.trainer": [[79, "module-optim.trainer.trainer", false]], "optim.types": [[80, "module-optim.types", false]], "optimization_order (trainer attribute)": [[61, "optim.Trainer.optimization_order", false], [77, "optim.trainer.Trainer.optimization_order", false], [79, "optim.trainer.trainer.Trainer.optimization_order", false]], "optimizer (class in optim)": [[61, "optim.Optimizer", false]], "optimizer (class in optim.optimizer)": [[68, "optim.optimizer.Optimizer", false]], "optimizer (trainer attribute)": [[61, "optim.Trainer.optimizer", false], [77, "optim.trainer.Trainer.optimizer", false], [79, "optim.trainer.trainer.Trainer.optimizer", false]], "optionalpackages (class in utils.lazy_import)": [[92, "utils.lazy_import.OptionalPackages", false]], "order (dialogturn attribute)": [[45, "core.types.DialogTurn.order", false]], "order (document attribute)": [[45, "core.types.Document.order", false]], "output (functionoutput attribute)": [[45, "core.types.FunctionOutput.output", false]], "output (generatorcallrecord attribute)": [[84, "tracing.generator_call_logger.GeneratorCallRecord.output", false]], "output (parametertype attribute)": [[80, "optim.types.ParameterType.OUTPUT", false]], "output_processors (embedder attribute)": [[35, "core.embedder.Embedder.output_processors", false]], "outputparser (class in components.output_parsers.outputs)": [[20, "components.output_parsers.outputs.OutputParser", false]], "param_type (parameter attribute)": [[61, "optim.Parameter.param_type", false], [69, "optim.parameter.Parameter.param_type", false]], "parameter (class in optim)": [[61, "optim.Parameter", false]], "parameter (class in optim.parameter)": [[69, "optim.parameter.Parameter", false]], "parameters() (component method)": [[31, "core.component.Component.parameters", false]], "parametertype (class in optim.types)": [[80, "optim.types.ParameterType", false]], "params (demooptimizer attribute)": [[68, "optim.optimizer.DemoOptimizer.params", false]], "params (optimizer attribute)": [[61, "optim.Optimizer.params", false], [68, "optim.optimizer.Optimizer.params", false]], "params (tgdoptimizer attribute)": [[61, "optim.TGDOptimizer.params", false], [71, "optim.text_grad.TGDOptimizer.params", false], [76, "optim.text_grad.tgd_optimizer.TGDOptimizer.params", false]], "params_history (tgdoptimizer attribute)": [[61, "optim.TGDOptimizer.params_history", false], [71, "optim.text_grad.TGDOptimizer.params_history", false], [76, "optim.text_grad.tgd_optimizer.TGDOptimizer.params_history", false]], "parent_doc_id (document attribute)": [[45, "core.types.Document.parent_doc_id", false]], "parse_chat_completion() (anthropicapiclient method)": [[8, "components.model_client.anthropic_client.AnthropicAPIClient.parse_chat_completion", false]], "parse_chat_completion() (azureaiclient method)": [[9, "components.model_client.azureai_client.AzureAIClient.parse_chat_completion", false]], "parse_chat_completion() (googlegenaiclient method)": [[12, "components.model_client.google_client.GoogleGenAIClient.parse_chat_completion", false]], "parse_chat_completion() (groqapiclient method)": [[13, "components.model_client.groq_client.GroqAPIClient.parse_chat_completion", false]], "parse_chat_completion() (modelclient method)": [[39, "core.model_client.ModelClient.parse_chat_completion", false]], "parse_chat_completion() (ollamaclient method)": [[14, "components.model_client.ollama_client.OllamaClient.parse_chat_completion", false]], "parse_chat_completion() (openaiclient method)": [[15, "components.model_client.openai_client.OpenAIClient.parse_chat_completion", false]], "parse_chat_completion() (transformerllm method)": [[16, "components.model_client.transformers_client.TransformerLLM.parse_chat_completion", false]], "parse_chat_completion() (transformersclient method)": [[16, "components.model_client.transformers_client.TransformersClient.parse_chat_completion", false]], "parse_embedding_response() (azureaiclient method)": [[9, "components.model_client.azureai_client.AzureAIClient.parse_embedding_response", false]], "parse_embedding_response() (in module components.model_client.utils)": [[17, "components.model_client.utils.parse_embedding_response", false]], "parse_embedding_response() (modelclient method)": [[39, "core.model_client.ModelClient.parse_embedding_response", false]], "parse_embedding_response() (ollamaclient method)": [[14, "components.model_client.ollama_client.OllamaClient.parse_embedding_response", false]], "parse_embedding_response() (openaiclient method)": [[15, "components.model_client.openai_client.OpenAIClient.parse_embedding_response", false]], "parse_embedding_response() (transformersclient method)": [[16, "components.model_client.transformers_client.TransformersClient.parse_embedding_response", false]], "parse_func_expr() (toolmanager method)": [[44, "core.tool_manager.ToolManager.parse_func_expr", false]], "parse_function_call_expr() (in module core.functional)": [[37, "core.functional.parse_function_call_expr", false]], "parse_generate_response() (in module components.model_client.ollama_client)": [[14, "components.model_client.ollama_client.parse_generate_response", false]], "parse_json_str_to_obj() (in module core.functional)": [[37, "core.functional.parse_json_str_to_obj", false]], "parse_stream_response() (in module components.model_client.ollama_client)": [[14, "components.model_client.ollama_client.parse_stream_response", false]], "parse_stream_response() (in module components.model_client.openai_client)": [[15, "components.model_client.openai_client.parse_stream_response", false]], "parse_yaml_str_to_obj() (in module core.functional)": [[37, "core.functional.parse_yaml_str_to_obj", false]], "parsed_input (functionoutput attribute)": [[45, "core.types.FunctionOutput.parsed_input", false]], "parser (class in core.string_parser)": [[42, "core.string_parser.Parser", false]], "peers (parameter attribute)": [[61, "optim.Parameter.peers", false], [69, "optim.parameter.Parameter.peers", false]], "per_item_scores (evaluationresult attribute)": [[54, "eval.base.EvaluationResult.per_item_scores", false]], "pgvector (optionalpackages attribute)": [[92, "utils.lazy_import.OptionalPackages.PGVECTOR", false]], "pickle_to_file() (component method)": [[31, "core.component.Component.pickle_to_file", false]], "postgresretriever (class in components.retriever.postgres_retriever)": [[26, "components.retriever.postgres_retriever.PostgresRetriever", false]], "pred_step() (adalcomponent method)": [[61, "optim.AdalComponent.pred_step", false], [77, "optim.trainer.AdalComponent.pred_step", false], [78, "optim.trainer.adal.AdalComponent.pred_step", false]], "predecessors (parameter attribute)": [[61, "optim.Parameter.predecessors", false], [69, "optim.parameter.Parameter.predecessors", false]], "prep_ckpt_file_path() (trainer method)": [[61, "optim.Trainer.prep_ckpt_file_path", false], [77, "optim.trainer.Trainer.prep_ckpt_file_path", false], [79, "optim.trainer.trainer.Trainer.prep_ckpt_file_path", false]], "prepare_dataset_path() (in module datasets.utils)": [[51, "datasets.utils.prepare_dataset_path", false]], "prepare_datasets() (in module datasets.trec)": [[49, "datasets.trec.prepare_datasets", false]], "prepare_eval() (adalcomponent method)": [[61, "optim.AdalComponent.prepare_eval", false], [77, "optim.trainer.AdalComponent.prepare_eval", false], [78, "optim.trainer.adal.AdalComponent.prepare_eval", false]], "prepare_loss() (adalcomponent method)": [[61, "optim.AdalComponent.prepare_loss", false], [77, "optim.trainer.AdalComponent.prepare_loss", false], [78, "optim.trainer.adal.AdalComponent.prepare_loss", false]], "prepare_task() (adalcomponent method)": [[61, "optim.AdalComponent.prepare_task", false], [77, "optim.trainer.AdalComponent.prepare_task", false], [78, "optim.trainer.adal.AdalComponent.prepare_task", false]], "preprocess() (tokenizer method)": [[43, "core.tokenizer.Tokenizer.preprocess", false]], "print_prompt() (generator method)": [[38, "core.generator.Generator.print_prompt", false]], "print_prompt() (prompt method)": [[40, "core.prompt_builder.Prompt.print_prompt", false]], "print_prompt_template() (prompt method)": [[40, "core.prompt_builder.Prompt.print_prompt_template", false]], "printc() (in module utils.logger)": [[93, "utils.logger.printc", false]], "prompt (class in core.prompt_builder)": [[40, "core.prompt_builder.Prompt", false]], "prompt (parametertype attribute)": [[80, "optim.types.ParameterType.PROMPT", false]], "prompt (trainerstepresult attribute)": [[80, "optim.types.TrainerStepResult.prompt", false]], "prompt_kwargs (generatorcallrecord attribute)": [[84, "tracing.generator_call_logger.GeneratorCallRecord.prompt_kwargs", false]], "prompt_states (generatorstatesrecord attribute)": [[85, "tracing.generator_state_logger.GeneratorStatesRecord.prompt_states", false]], "prompt_tokens (completionusage attribute)": [[45, "core.types.CompletionUsage.prompt_tokens", false]], "prompt_tokens (usage attribute)": [[45, "core.types.Usage.prompt_tokens", false]], "promptdata (class in optim.types)": [[80, "optim.types.PromptData", false]], "prompts (trainerresult attribute)": [[80, "optim.types.TrainerResult.prompts", false]], "propose() (bootstrapfewshot method)": [[61, "optim.BootstrapFewShot.propose", false], [64, "optim.few_shot.bootstrap_optimizer.BootstrapFewShot.propose", false]], "propose() (optimizer method)": [[61, "optim.Optimizer.propose", false], [68, "optim.optimizer.Optimizer.propose", false]], "propose() (tgdoptimizer method)": [[61, "optim.TGDOptimizer.propose", false], [71, "optim.text_grad.TGDOptimizer.propose", false], [76, "optim.text_grad.tgd_optimizer.TGDOptimizer.propose", false]], "propose_data() (parameter method)": [[61, "optim.Parameter.propose_data", false], [69, "optim.parameter.Parameter.propose_data", false]], "proposing (optimizer attribute)": [[61, "optim.Optimizer.proposing", false], [68, "optim.optimizer.Optimizer.proposing", false]], "proposing (parameter attribute)": [[61, "optim.Parameter.proposing", false], [69, "optim.parameter.Parameter.proposing", false]], "proposing (tgdoptimizer attribute)": [[61, "optim.TGDOptimizer.proposing", false], [71, "optim.text_grad.TGDOptimizer.proposing", false], [76, "optim.text_grad.tgd_optimizer.TGDOptimizer.proposing", false]], "qdrant (optionalpackages attribute)": [[92, "utils.lazy_import.OptionalPackages.QDRANT", false]], "qdrantretriever (class in components.retriever.qdrant_retriever)": [[27, "components.retriever.qdrant_retriever.QdrantRetriever", false]], "query (retrieveroutput attribute)": [[45, "core.types.RetrieverOutput.query", false]], "query_str (userquery attribute)": [[45, "core.types.UserQuery.query_str", false]], "question (example attribute)": [[50, "datasets.types.Example.question", false], [52, "datasets.Example.question", false]], "question (trecdata attribute)": [[50, "datasets.types.TrecData.question", false], [52, "datasets.TrecData.question", false]], "random_replace() (classsampler method)": [[61, "optim.ClassSampler.random_replace", false], [70, "optim.sampler.ClassSampler.random_replace", false]], "random_replace() (randomsampler method)": [[61, "optim.RandomSampler.random_replace", false], [70, "optim.sampler.RandomSampler.random_replace", false]], "random_replace() (sampler method)": [[61, "optim.Sampler.random_replace", false], [70, "optim.sampler.Sampler.random_replace", false]], "random_sample() (classsampler method)": [[61, "optim.ClassSampler.random_sample", false], [70, "optim.sampler.ClassSampler.random_sample", false]], "random_sample() (in module core.functional)": [[37, "core.functional.random_sample", false]], "random_sample() (randomsampler method)": [[61, "optim.RandomSampler.random_sample", false], [70, "optim.sampler.RandomSampler.random_sample", false]], "randomsampler (class in optim)": [[61, "optim.RandomSampler", false]], "randomsampler (class in optim.sampler)": [[70, "optim.sampler.RandomSampler", false]], "raw_response (embedderoutput attribute)": [[45, "core.types.EmbedderOutput.raw_response", false]], "raw_response (generatoroutput attribute)": [[45, "core.types.GeneratorOutput.raw_response", false]], "reactagent (class in components.agent)": [[0, "components.agent.ReActAgent", false]], "reactagent (class in components.agent.react)": [[1, "components.agent.react.ReActAgent", false]], "register() (entitymapping class method)": [[94, "utils.registry.EntityMapping.register", false]], "register_callback() (callbackmanager method)": [[82, "tracing.callback_manager.CallbackManager.register_callback", false]], "register_component() (component method)": [[31, "core.component.Component.register_component", false]], "register_generator() (generatorcalllogger method)": [[84, "tracing.generator_call_logger.GeneratorCallLogger.register_generator", false]], "register_parameter() (component method)": [[31, "core.component.Component.register_parameter", false]], "register_transformer() (localdb method)": [[33, "core.db.LocalDB.register_transformer", false]], "relevance (gevalmetric attribute)": [[56, "eval.g_eval.GEvalMetric.RELEVANCE", false], [59, "eval.GEvalMetric.RELEVANCE", false]], "render_history() (tgdoptimizer method)": [[61, "optim.TGDOptimizer.render_history", false], [71, "optim.text_grad.TGDOptimizer.render_history", false], [76, "optim.text_grad.tgd_optimizer.TGDOptimizer.render_history", false]], "represent_ordereddict() (in module core.functional)": [[37, "core.functional.represent_ordereddict", false]], "required_field() (in module core.base_data_class)": [[30, "core.base_data_class.required_field", false]], "requires_opt (promptdata attribute)": [[80, "optim.types.PromptData.requires_opt", false]], "reranker (modeltype attribute)": [[45, "core.types.ModelType.RERANKER", false]], "rerankerretriever (class in components.retriever)": [[21, "components.retriever.RerankerRetriever", false]], "rerankerretriever (class in components.retriever.reranker_retriever)": [[28, "components.retriever.reranker_retriever.RerankerRetriever", false]], "reset() (generatorcalllogger method)": [[84, "tracing.generator_call_logger.GeneratorCallLogger.reset", false]], "reset() (localdb method)": [[33, "core.db.LocalDB.reset", false]], "reset() (reactagent method)": [[0, "components.agent.ReActAgent.reset", false], [1, "components.agent.react.ReActAgent.reset", false]], "reset_gradients() (parameter method)": [[61, "optim.Parameter.reset_gradients", false], [69, "optim.parameter.Parameter.reset_gradients", false]], "reset_gradients_context() (parameter method)": [[61, "optim.Parameter.reset_gradients_context", false], [69, "optim.parameter.Parameter.reset_gradients_context", false]], "reset_index() (bm25retriever method)": [[21, "components.retriever.BM25Retriever.reset_index", false], [22, "components.retriever.bm25_retriever.BM25Retriever.reset_index", false]], "reset_index() (faissretriever method)": [[23, "components.retriever.faiss_retriever.FAISSRetriever.reset_index", false]], "reset_index() (llmretriever method)": [[21, "components.retriever.LLMRetriever.reset_index", false], [25, "components.retriever.llm_retriever.LLMRetriever.reset_index", false]], "reset_index() (qdrantretriever method)": [[27, "components.retriever.qdrant_retriever.QdrantRetriever.reset_index", false]], "reset_index() (rerankerretriever method)": [[21, "components.retriever.RerankerRetriever.reset_index", false], [28, "components.retriever.reranker_retriever.RerankerRetriever.reset_index", false]], "reset_index() (retriever method)": [[41, "core.retriever.Retriever.reset_index", false]], "reset_mock_output() (generator method)": [[38, "core.generator.Generator.reset_mock_output", false]], "response_desc (gradientcontext attribute)": [[69, "optim.parameter.GradientContext.response_desc", false]], "response_str (assistantresponse attribute)": [[45, "core.types.AssistantResponse.response_str", false]], "responses (instruction attribute)": [[76, "optim.text_grad.tgd_optimizer.Instruction.responses", false]], "retrieve() (lancedbretriever method)": [[24, "components.retriever.lancedb_retriver.LanceDBRetriever.retrieve", false]], "retrieve_by_sql() (postgresretriever method)": [[26, "components.retriever.postgres_retriever.PostgresRetriever.retrieve_by_sql", false]], "retrieve_embedding_queries() (faissretriever method)": [[23, "components.retriever.faiss_retriever.FAISSRetriever.retrieve_embedding_queries", false]], "retrieve_string_queries() (faissretriever method)": [[23, "components.retriever.faiss_retriever.FAISSRetriever.retrieve_string_queries", false]], "retriever (class in core.retriever)": [[41, "core.retriever.Retriever", false]], "retriever_output (parametertype attribute)": [[80, "optim.types.ParameterType.RETRIEVER_OUTPUT", false]], "retriever_output_to_context_str() (in module components.data_process.data_components)": [[3, "components.data_process.data_components.retriever_output_to_context_str", false]], "retrieveroutput (class in core.types)": [[45, "core.types.RetrieverOutput", false]], "retrieveroutputtocontextstr (class in components.data_process)": [[2, "components.data_process.RetrieverOutputToContextStr", false]], "retrieveroutputtocontextstr (class in components.data_process.data_components)": [[3, "components.data_process.data_components.RetrieverOutputToContextStr", false]], "retrieverrecall (class in eval)": [[59, "eval.RetrieverRecall", false]], "retrieverrecall (class in eval.retriever_recall)": [[58, "eval.retriever_recall.RetrieverRecall", false]], "revert() (bootstrapfewshot method)": [[61, "optim.BootstrapFewShot.revert", false], [64, "optim.few_shot.bootstrap_optimizer.BootstrapFewShot.revert", false]], "revert() (optimizer method)": [[61, "optim.Optimizer.revert", false], [68, "optim.optimizer.Optimizer.revert", false]], "revert() (tgdoptimizer method)": [[61, "optim.TGDOptimizer.revert", false], [71, "optim.text_grad.TGDOptimizer.revert", false], [76, "optim.text_grad.tgd_optimizer.TGDOptimizer.revert", false]], "revert_data() (parameter method)": [[61, "optim.Parameter.revert_data", false], [69, "optim.parameter.Parameter.revert_data", false]], "role_desc (parameter attribute)": [[61, "optim.Parameter.role_desc", false], [69, "optim.parameter.Parameter.role_desc", false]], "run_async_in_new_loop() (in module core.tool_manager)": [[44, "core.tool_manager.run_async_in_new_loop", false]], "run_one_loss_sample() (adalcomponent method)": [[61, "optim.AdalComponent.run_one_loss_sample", false], [77, "optim.trainer.AdalComponent.run_one_loss_sample", false], [78, "optim.trainer.adal.AdalComponent.run_one_loss_sample", false]], "run_one_task_sample() (adalcomponent method)": [[61, "optim.AdalComponent.run_one_task_sample", false], [77, "optim.trainer.AdalComponent.run_one_task_sample", false], [78, "optim.trainer.adal.AdalComponent.run_one_task_sample", false]], "safe_import() (in module utils.lazy_import)": [[92, "utils.lazy_import.safe_import", false]], "sample (class in optim.sampler)": [[70, "optim.sampler.Sample", false]], "sample() (bootstrapfewshot method)": [[61, "optim.BootstrapFewShot.sample", false], [64, "optim.few_shot.bootstrap_optimizer.BootstrapFewShot.sample", false]], "sample_subset_dataset() (in module datasets.trec)": [[49, "datasets.trec.sample_subset_dataset", false]], "sampler (class in optim)": [[61, "optim.Sampler", false]], "sampler (class in optim.sampler)": [[70, "optim.sampler.Sampler", false]], "samples_to_str() (bootstrapfewshot static method)": [[61, "optim.BootstrapFewShot.samples_to_str", false], [64, "optim.few_shot.bootstrap_optimizer.BootstrapFewShot.samples_to_str", false]], "sandbox_exec() (in module core.functional)": [[37, "core.functional.sandbox_exec", false]], "save() (generatorstatelogger method)": [[85, "tracing.generator_state_logger.GeneratorStateLogger.save", false]], "save() (in module utils.file_io)": [[90, "utils.file_io.save", false]], "save_csv() (in module utils.file_io)": [[90, "utils.file_io.save_csv", false]], "save_json() (in module utils.file_io)": [[90, "utils.file_io.save_json", false]], "save_meta_data() (generatorcalllogger method)": [[84, "tracing.generator_call_logger.GeneratorCallLogger.save_meta_data", false]], "save_pickle() (in module utils.file_io)": [[90, "utils.file_io.save_pickle", false]], "save_state() (localdb method)": [[33, "core.db.LocalDB.save_state", false]], "save_to_file() (bm25retriever method)": [[21, "components.retriever.BM25Retriever.save_to_file", false], [22, "components.retriever.bm25_retriever.BM25Retriever.save_to_file", false]], "save_to_file() (retriever method)": [[41, "core.retriever.Retriever.save_to_file", false]], "schema (dataclassformattype attribute)": [[30, "core.base_data_class.DataClassFormatType.SCHEMA", false]], "score (document attribute)": [[45, "core.types.Document.score", false]], "score (evaluationresult attribute)": [[80, "optim.types.EvaluationResult.score", false]], "score (instruction attribute)": [[76, "optim.text_grad.tgd_optimizer.Instruction.score", false]], "sequential (class in core.container)": [[32, "core.container.Sequential", false]], "serialize() (in module utils.serialization)": [[95, "utils.serialization.serialize", false]], "set_assistant_response() (dialogturn method)": [[45, "core.types.DialogTurn.set_assistant_response", false]], "set_backward_engine() (evalfntotextloss method)": [[61, "optim.EvalFnToTextLoss.set_backward_engine", false], [71, "optim.text_grad.EvalFnToTextLoss.set_backward_engine", false], [75, "optim.text_grad.text_loss_with_eval_fn.EvalFnToTextLoss.set_backward_engine", false]], "set_backward_engine() (generator method)": [[38, "core.generator.Generator.set_backward_engine", false]], "set_backward_engine() (gradcomponent method)": [[66, "optim.grad_component.GradComponent.set_backward_engine", false]], "set_backward_engine() (losscomponent method)": [[67, "optim.loss_component.LossComponent.set_backward_engine", false]], "set_cache_path() (generator method)": [[38, "core.generator.Generator.set_cache_path", false]], "set_data_map_func() (generator method)": [[38, "core.generator.Generator.set_data_map_func", false]], "set_dataset() (demooptimizer method)": [[61, "optim.DemoOptimizer.set_dataset", false], [68, "optim.optimizer.DemoOptimizer.set_dataset", false]], "set_dataset() (randomsampler method)": [[61, "optim.RandomSampler.set_dataset", false], [70, "optim.sampler.RandomSampler.set_dataset", false]], "set_dataset() (sampler method)": [[61, "optim.Sampler.set_dataset", false], [70, "optim.sampler.Sampler.set_dataset", false]], "set_eval_fn_input() (parameter method)": [[61, "optim.Parameter.set_eval_fn_input", false], [69, "optim.parameter.Parameter.set_eval_fn_input", false]], "set_grad_fn() (parameter method)": [[61, "optim.Parameter.set_grad_fn", false], [69, "optim.parameter.Parameter.set_grad_fn", false]], "set_input_fields() (dataclass class method)": [[30, "core.base_data_class.DataClass.set_input_fields", false]], "set_llm_client() (transformersclient method)": [[16, "components.model_client.transformers_client.TransformersClient.set_llm_client", false]], "set_max_steps() (dataloader method)": [[89, "utils.data.DataLoader.set_max_steps", false]], "set_mock_output() (generator method)": [[38, "core.generator.Generator.set_mock_output", false]], "set_output_fields() (dataclass class method)": [[30, "core.base_data_class.DataClass.set_output_fields", false]], "set_parameters() (generator method)": [[38, "core.generator.Generator.set_parameters", false]], "set_peers() (parameter method)": [[61, "optim.Parameter.set_peers", false], [69, "optim.parameter.Parameter.set_peers", false]], "set_predecessors() (parameter method)": [[61, "optim.Parameter.set_predecessors", false], [69, "optim.parameter.Parameter.set_predecessors", false]], "set_score() (parameter method)": [[61, "optim.Parameter.set_score", false], [69, "optim.parameter.Parameter.set_score", false]], "set_task_desc() (dataclass class method)": [[30, "core.base_data_class.DataClass.set_task_desc", false]], "set_teacher_generator() (generator method)": [[38, "core.generator.Generator.set_teacher_generator", false]], "set_user_query() (dialogturn method)": [[45, "core.types.DialogTurn.set_user_query", false]], "setup_env() (in module utils.setup_env)": [[96, "utils.setup_env.setup_env", false]], "signature_json (dataclassformattype attribute)": [[30, "core.base_data_class.DataClassFormatType.SIGNATURE_JSON", false]], "signature_yaml (dataclassformattype attribute)": [[30, "core.base_data_class.DataClassFormatType.SIGNATURE_YAML", false]], "simple_default_adalflow_system_prompt (in module core.default_prompt_template)": [[34, "core.default_prompt_template.SIMPLE_DEFAULT_ADALFLOW_SYSTEM_PROMPT", false]], "split_text() (textsplitter method)": [[2, "components.data_process.TextSplitter.split_text", false], [4, "components.data_process.text_splitter.TextSplitter.split_text", false]], "split_text_by_word_fn() (in module components.retriever)": [[21, "components.retriever.split_text_by_word_fn", false]], "split_text_by_word_fn() (in module components.retriever.bm25_retriever)": [[22, "components.retriever.bm25_retriever.split_text_by_word_fn", false]], "split_text_by_word_fn_then_lower_tokenized() (in module components.retriever)": [[21, "components.retriever.split_text_by_word_fn_then_lower_tokenized", false]], "split_text_by_word_fn_then_lower_tokenized() (in module components.retriever.bm25_retriever)": [[22, "components.retriever.bm25_retriever.split_text_by_word_fn_then_lower_tokenized", false]], "split_text_tokenized() (in module components.retriever.bm25_retriever)": [[22, "components.retriever.bm25_retriever.split_text_tokenized", false]], "sqlalchemy (optionalpackages attribute)": [[92, "utils.lazy_import.OptionalPackages.SQLALCHEMY", false]], "state_dict() (component method)": [[31, "core.component.Component.state_dict", false]], "state_dict() (optimizer method)": [[61, "optim.Optimizer.state_dict", false], [68, "optim.optimizer.Optimizer.state_dict", false]], "std_of_score (trainervalidatestats attribute)": [[80, "optim.types.TrainerValidateStats.std_of_score", false]], "step (stepoutput attribute)": [[45, "core.types.StepOutput.step", false]], "step (trainerstepresult attribute)": [[80, "optim.types.TrainerStepResult.step", false]], "step() (bootstrapfewshot method)": [[61, "optim.BootstrapFewShot.step", false], [64, "optim.few_shot.bootstrap_optimizer.BootstrapFewShot.step", false]], "step() (optimizer method)": [[61, "optim.Optimizer.step", false], [68, "optim.optimizer.Optimizer.step", false]], "step() (tgdoptimizer method)": [[61, "optim.TGDOptimizer.step", false], [71, "optim.text_grad.TGDOptimizer.step", false], [76, "optim.text_grad.tgd_optimizer.TGDOptimizer.step", false]], "step_data() (parameter method)": [[61, "optim.Parameter.step_data", false], [69, "optim.parameter.Parameter.step_data", false]], "step_results (trainerresult attribute)": [[80, "optim.types.TrainerResult.step_results", false]], "stepoutput (class in core.types)": [[45, "core.types.StepOutput", false]], "steps (trainerresult attribute)": [[80, "optim.types.TrainerResult.steps", false]], "strategy (trainer attribute)": [[61, "optim.Trainer.strategy", false], [77, "optim.trainer.Trainer.strategy", false], [79, "optim.trainer.trainer.Trainer.strategy", false]], "subset (class in utils.data)": [[89, "utils.data.Subset", false]], "subset_dataset() (in module utils.data)": [[89, "utils.data.subset_dataset", false]], "successor_map_fn (parameter attribute)": [[61, "optim.Parameter.successor_map_fn", false], [69, "optim.parameter.Parameter.successor_map_fn", false]], "sum (class in optim.text_grad)": [[71, "optim.text_grad.Sum", false]], "sum (class in optim.text_grad.ops)": [[74, "optim.text_grad.ops.Sum", false]], "sum_ops() (in module optim.text_grad)": [[71, "optim.text_grad.sum_ops", false]], "sum_ops() (in module optim.text_grad.ops)": [[74, "optim.text_grad.ops.sum_ops", false]], "sum_output (parametertype attribute)": [[80, "optim.types.ParameterType.SUM_OUTPUT", false]], "summarization (nlgtask attribute)": [[56, "eval.g_eval.NLGTask.SUMMARIZATION", false]], "support_models (transformersclient attribute)": [[16, "components.model_client.transformers_client.TransformersClient.support_models", false]], "task (adalcomponent attribute)": [[61, "optim.AdalComponent.task", false], [77, "optim.trainer.AdalComponent.task", false], [78, "optim.trainer.adal.AdalComponent.task", false]], "teacher_mode (component attribute)": [[31, "core.component.Component.teacher_mode", false]], "test_dataset (trainer attribute)": [[61, "optim.Trainer.test_dataset", false], [77, "optim.trainer.Trainer.test_dataset", false], [79, "optim.trainer.trainer.Trainer.test_dataset", false]], "test_score (trainerstepresult attribute)": [[80, "optim.types.TrainerStepResult.test_score", false]], "test_scores (trainerresult attribute)": [[80, "optim.types.TrainerResult.test_scores", false]], "text (document attribute)": [[45, "core.types.Document.text", false]], "text (instruction attribute)": [[76, "optim.text_grad.tgd_optimizer.Instruction.text", false]], "text_optimizers (trainer attribute)": [[77, "optim.trainer.Trainer.text_optimizers", false], [79, "optim.trainer.trainer.Trainer.text_optimizers", false]], "textoptimizer (class in optim)": [[61, "optim.TextOptimizer", false]], "textoptimizer (class in optim.optimizer)": [[68, "optim.optimizer.TextOptimizer", false]], "textsplitter (class in components.data_process)": [[2, "components.data_process.TextSplitter", false]], "textsplitter (class in components.data_process.text_splitter)": [[4, "components.data_process.text_splitter.TextSplitter", false]], "tgdoptimizer (class in optim)": [[61, "optim.TGDOptimizer", false]], "tgdoptimizer (class in optim.text_grad)": [[71, "optim.text_grad.TGDOptimizer", false]], "tgdoptimizer (class in optim.text_grad.tgd_optimizer)": [[76, "optim.text_grad.tgd_optimizer.TGDOptimizer", false]], "thought (function attribute)": [[45, "core.types.Function.thought", false]], "thought (functionexpression attribute)": [[45, "core.types.FunctionExpression.thought", false]], "time_stamp (generatorcallrecord attribute)": [[84, "tracing.generator_call_logger.GeneratorCallRecord.time_stamp", false]], "time_stamp (generatorstatesrecord attribute)": [[85, "tracing.generator_state_logger.GeneratorStatesRecord.time_stamp", false]], "time_stamp (trainerresult attribute)": [[80, "optim.types.TrainerResult.time_stamp", false]], "to_dict() (azureaiclient method)": [[9, "components.model_client.azureai_client.AzureAIClient.to_dict", false]], "to_dict() (component method)": [[31, "core.component.Component.to_dict", false]], "to_dict() (dataclass method)": [[30, "core.base_data_class.DataClass.to_dict", false]], "to_dict() (generator method)": [[38, "core.generator.Generator.to_dict", false]], "to_dict() (groqapiclient method)": [[13, "components.model_client.groq_client.GroqAPIClient.to_dict", false]], "to_dict() (in module utils.serialization)": [[95, "utils.serialization.to_dict", false]], "to_dict() (ollamaclient method)": [[14, "components.model_client.ollama_client.OllamaClient.to_dict", false]], "to_dict() (openaiclient method)": [[15, "components.model_client.openai_client.OpenAIClient.to_dict", false]], "to_dict() (parameter method)": [[61, "optim.Parameter.to_dict", false], [69, "optim.parameter.Parameter.to_dict", false]], "to_dict() (prompt method)": [[40, "core.prompt_builder.Prompt.to_dict", false]], "to_dict() (sample method)": [[70, "optim.sampler.Sample.to_dict", false]], "to_dict_class() (dataclass class method)": [[30, "core.base_data_class.DataClass.to_dict_class", false]], "to_json() (dataclass method)": [[30, "core.base_data_class.DataClass.to_json", false]], "to_json_obj() (dataclass method)": [[30, "core.base_data_class.DataClass.to_json_obj", false]], "to_json_signature() (dataclass class method)": [[30, "core.base_data_class.DataClass.to_json_signature", false]], "to_schema() (dataclass class method)": [[30, "core.base_data_class.DataClass.to_schema", false]], "to_schema_str() (dataclass class method)": [[30, "core.base_data_class.DataClass.to_schema_str", false]], "to_yaml() (dataclass method)": [[30, "core.base_data_class.DataClass.to_yaml", false]], "to_yaml_obj() (dataclass method)": [[30, "core.base_data_class.DataClass.to_yaml_obj", false]], "to_yaml_signature() (dataclass class method)": [[30, "core.base_data_class.DataClass.to_yaml_signature", false]], "toembeddings (class in components.data_process)": [[2, "components.data_process.ToEmbeddings", false]], "toembeddings (class in components.data_process.data_components)": [[3, "components.data_process.data_components.ToEmbeddings", false]], "token (tokenlogprob attribute)": [[45, "core.types.TokenLogProb.token", false]], "tokenizer (class in core.tokenizer)": [[43, "core.tokenizer.Tokenizer", false]], "tokenizer (transformerllm attribute)": [[16, "components.model_client.transformers_client.TransformerLLM.tokenizer", false]], "tokenlogprob (class in core.types)": [[45, "core.types.TokenLogProb", false]], "toolmanager (class in core.tool_manager)": [[44, "core.tool_manager.ToolManager", false]], "top_k (retriever attribute)": [[41, "core.retriever.Retriever.top_k", false]], "torch (optionalpackages attribute)": [[92, "utils.lazy_import.OptionalPackages.TORCH", false]], "total_tokens (completionusage attribute)": [[45, "core.types.CompletionUsage.total_tokens", false]], "total_tokens (usage attribute)": [[45, "core.types.Usage.total_tokens", false]], "trace() (component method)": [[31, "core.component.Component.trace", false]], "trace_forward_pass() (parameter method)": [[61, "optim.Parameter.trace_forward_pass", false], [69, "optim.parameter.Parameter.trace_forward_pass", false]], "trace_generator_call() (in module tracing.decorators)": [[83, "tracing.decorators.trace_generator_call", false]], "trace_generator_states() (in module tracing.decorators)": [[83, "tracing.decorators.trace_generator_states", false]], "trace_graph() (parameter static method)": [[61, "optim.Parameter.trace_graph", false], [69, "optim.parameter.Parameter.trace_graph", false]], "tracing (component attribute)": [[31, "core.component.Component.tracing", false]], "tracing.callback_manager": [[82, "module-tracing.callback_manager", false]], "tracing.decorators": [[83, "module-tracing.decorators", false]], "tracing.generator_call_logger": [[84, "module-tracing.generator_call_logger", false]], "tracing.generator_state_logger": [[85, "module-tracing.generator_state_logger", false]], "track_completion_usage() (anthropicapiclient method)": [[8, "components.model_client.anthropic_client.AnthropicAPIClient.track_completion_usage", false]], "track_completion_usage() (azureaiclient method)": [[9, "components.model_client.azureai_client.AzureAIClient.track_completion_usage", false]], "track_completion_usage() (googlegenaiclient method)": [[12, "components.model_client.google_client.GoogleGenAIClient.track_completion_usage", false]], "track_completion_usage() (groqapiclient method)": [[13, "components.model_client.groq_client.GroqAPIClient.track_completion_usage", false]], "track_completion_usage() (modelclient method)": [[39, "core.model_client.ModelClient.track_completion_usage", false]], "track_completion_usage() (openaiclient method)": [[15, "components.model_client.openai_client.OpenAIClient.track_completion_usage", false]], "train() (component method)": [[31, "core.component.Component.train", false]], "train_batch_size (trainer attribute)": [[61, "optim.Trainer.train_batch_size", false], [77, "optim.trainer.Trainer.train_batch_size", false], [79, "optim.trainer.trainer.Trainer.train_batch_size", false]], "train_loader (trainer attribute)": [[61, "optim.Trainer.train_loader", false], [77, "optim.trainer.Trainer.train_loader", false], [79, "optim.trainer.trainer.Trainer.train_loader", false]], "train_step() (adalcomponent method)": [[61, "optim.AdalComponent.train_step", false], [77, "optim.trainer.AdalComponent.train_step", false], [78, "optim.trainer.adal.AdalComponent.train_step", false]], "trainer (class in optim)": [[61, "optim.Trainer", false]], "trainer (class in optim.trainer)": [[77, "optim.trainer.Trainer", false]], "trainer (class in optim.trainer.trainer)": [[79, "optim.trainer.trainer.Trainer", false]], "trainer_state (trainerresult attribute)": [[80, "optim.types.TrainerResult.trainer_state", false]], "trainerresult (class in optim.types)": [[80, "optim.types.TrainerResult", false]], "trainerstepresult (class in optim.types)": [[80, "optim.types.TrainerStepResult", false]], "trainervalidatestats (class in optim.types)": [[80, "optim.types.TrainerValidateStats", false]], "training (adalcomponent attribute)": [[77, "optim.trainer.AdalComponent.training", false], [78, "optim.trainer.adal.AdalComponent.training", false]], "training (component attribute)": [[31, "core.component.Component.training", false]], "training (sum attribute)": [[74, "optim.text_grad.ops.Sum.training", false]], "training (trainer attribute)": [[77, "optim.trainer.Trainer.training", false], [79, "optim.trainer.trainer.Trainer.training", false]], "transform() (localdb method)": [[33, "core.db.LocalDB.transform", false]], "transformed_items (localdb attribute)": [[33, "core.db.LocalDB.transformed_items", false]], "transformer_setups (localdb attribute)": [[33, "core.db.LocalDB.transformer_setups", false]], "transformerembedder (class in components.model_client.transformers_client)": [[16, "components.model_client.transformers_client.TransformerEmbedder", false]], "transformerllm (class in components.model_client.transformers_client)": [[16, "components.model_client.transformers_client.TransformerLLM", false]], "transformerreranker (class in components.model_client.transformers_client)": [[16, "components.model_client.transformers_client.TransformerReranker", false]], "transformers (modelclienttype attribute)": [[45, "core.types.ModelClientType.TRANSFORMERS", false]], "transformers (optionalpackages attribute)": [[92, "utils.lazy_import.OptionalPackages.TRANSFORMERS", false]], "transformersclient (class in components.model_client.transformers_client)": [[16, "components.model_client.transformers_client.TransformersClient", false]], "trecdata (class in datasets)": [[52, "datasets.TrecData", false]], "trecdata (class in datasets.types)": [[50, "datasets.types.TrecData", false]], "trecdataset (class in datasets)": [[52, "datasets.TrecDataset", false]], "trecdataset (class in datasets.trec)": [[49, "datasets.trec.TrecDataset", false]], "trigger_callbacks() (callbackmanager method)": [[82, "tracing.callback_manager.CallbackManager.trigger_callbacks", false]], "turn_db (in module components.memory.memory)": [[6, "components.memory.memory.turn_db", false]], "type (objecttypes attribute)": [[95, "utils.serialization.ObjectTypes.TYPE", false]], "undefined (modeltype attribute)": [[45, "core.types.ModelType.UNDEFINED", false]], "update_dialog_turn() (conversation method)": [[45, "core.types.Conversation.update_dialog_turn", false]], "update_gradient_memory() (tgdoptimizer method)": [[61, "optim.TGDOptimizer.update_gradient_memory", false], [71, "optim.text_grad.TGDOptimizer.update_gradient_memory", false], [76, "optim.text_grad.tgd_optimizer.TGDOptimizer.update_gradient_memory", false]], "update_prompt_kwargs() (prompt method)": [[40, "core.prompt_builder.Prompt.update_prompt_kwargs", false]], "update_value() (parameter method)": [[61, "optim.Parameter.update_value", false], [69, "optim.parameter.Parameter.update_value", false]], "usage (class in core.types)": [[45, "core.types.Usage", false]], "usage (embedderoutput attribute)": [[45, "core.types.EmbedderOutput.usage", false]], "usage (generatoroutput attribute)": [[45, "core.types.GeneratorOutput.usage", false]], "use_teacher() (component method)": [[31, "core.component.Component.use_teacher", false]], "use_weighted_sampling() (demooptimizer method)": [[61, "optim.DemoOptimizer.use_weighted_sampling", false], [68, "optim.optimizer.DemoOptimizer.use_weighted_sampling", false]], "user_id (conversation attribute)": [[45, "core.types.Conversation.user_id", false]], "user_id (dialogturn attribute)": [[45, "core.types.DialogTurn.user_id", false]], "user_query (dialogturn attribute)": [[45, "core.types.DialogTurn.user_query", false]], "user_query_timestamp (dialogturn attribute)": [[45, "core.types.DialogTurn.user_query_timestamp", false]], "userquery (class in core.types)": [[45, "core.types.UserQuery", false]], "utils.cache": [[87, "module-utils.cache", false]], "utils.config": [[88, "module-utils.config", false]], "utils.data": [[89, "module-utils.data", false]], "utils.file_io": [[90, "module-utils.file_io", false]], "utils.global_config": [[91, "module-utils.global_config", false]], "utils.lazy_import": [[92, "module-utils.lazy_import", false]], "utils.logger": [[93, "module-utils.logger", false]], "utils.registry": [[94, "module-utils.registry", false]], "utils.serialization": [[95, "module-utils.serialization", false]], "utils.setup_env": [[96, "module-utils.setup_env", false]], "val_dataset (trainer attribute)": [[61, "optim.Trainer.val_dataset", false], [77, "optim.trainer.Trainer.val_dataset", false], [79, "optim.trainer.trainer.Trainer.val_dataset", false]], "val_score (trainerstepresult attribute)": [[80, "optim.types.TrainerStepResult.val_score", false]], "val_scores (trainerresult attribute)": [[80, "optim.types.TrainerResult.val_scores", false]], "validate_condition() (adalcomponent method)": [[61, "optim.AdalComponent.validate_condition", false], [77, "optim.trainer.AdalComponent.validate_condition", false], [78, "optim.trainer.adal.AdalComponent.validate_condition", false]], "validate_data() (in module core.functional)": [[37, "core.functional.validate_data", false]], "validate_stats (trainerresult attribute)": [[80, "optim.types.TrainerResult.validate_stats", false]], "validation_step() (adalcomponent method)": [[61, "optim.AdalComponent.validation_step", false], [77, "optim.trainer.AdalComponent.validation_step", false], [78, "optim.trainer.adal.AdalComponent.validation_step", false]], "value (historyprompt attribute)": [[76, "optim.text_grad.tgd_optimizer.HistoryPrompt.value", false]], "variable_desc (gradientcontext attribute)": [[69, "optim.parameter.GradientContext.variable_desc", false]], "vector (dialogturn attribute)": [[45, "core.types.DialogTurn.vector", false]], "vector (document attribute)": [[45, "core.types.Document.vector", false]], "with_action_type() (stepoutput class method)": [[45, "core.types.StepOutput.with_action_type", false]], "write_list_to_jsonl() (in module utils.file_io)": [[90, "utils.file_io.write_list_to_jsonl", false]], "yaml_definitions (toolmanager property)": [[44, "core.tool_manager.ToolManager.yaml_definitions", false]], "yamloutputparser (class in components.output_parsers)": [[18, "components.output_parsers.YamlOutputParser", false]], "yamloutputparser (class in components.output_parsers.outputs)": [[20, "components.output_parsers.outputs.YamlOutputParser", false]], "yamlparser (class in core.string_parser)": [[42, "core.string_parser.YamlParser", false]], "zero_grad() (textoptimizer method)": [[61, "optim.TextOptimizer.zero_grad", false], [68, "optim.optimizer.TextOptimizer.zero_grad", false]], "zero_grad() (tgdoptimizer method)": [[61, "optim.TGDOptimizer.zero_grad", false], [71, "optim.text_grad.TGDOptimizer.zero_grad", false], [76, "optim.text_grad.tgd_optimizer.TGDOptimizer.zero_grad", false]]}, "objects": {"": [[52, 0, 0, "-", "datasets"], [59, 0, 0, "-", "eval"], [61, 0, 0, "-", "optim"]], "components": [[0, 0, 0, "-", "agent"], [2, 0, 0, "-", "data_process"], [5, 0, 0, "-", "memory"], [7, 0, 0, "-", "model_client"], [18, 0, 0, "-", "output_parsers"], [21, 0, 0, "-", "retriever"]], "components.agent": [[0, 1, 1, "", "ReActAgent"], [1, 0, 0, "-", "react"]], "components.agent.ReActAgent": [[0, 2, 1, "", "call"], [0, 2, 1, "", "reset"]], "components.agent.react": [[1, 3, 1, "", "DEFAULT_REACT_AGENT_SYSTEM_PROMPT"], [1, 1, 1, "", "ReActAgent"]], "components.agent.react.ReActAgent": [[1, 2, 1, "", "call"], [1, 2, 1, "", "reset"]], "components.data_process": [[2, 1, 1, "", "RetrieverOutputToContextStr"], [2, 1, 1, "", "TextSplitter"], [2, 1, 1, "", "ToEmbeddings"], [3, 0, 0, "-", "data_components"], [4, 0, 0, "-", "text_splitter"]], "components.data_process.TextSplitter": [[2, 2, 1, "", "call"], [2, 2, 1, "", "split_text"]], "components.data_process.data_components": [[3, 1, 1, "", "RetrieverOutputToContextStr"], [3, 1, 1, "", "ToEmbeddings"], [3, 4, 1, "", "retriever_output_to_context_str"]], "components.data_process.text_splitter": [[4, 1, 1, "", "TextSplitter"]], "components.data_process.text_splitter.TextSplitter": [[4, 2, 1, "", "call"], [4, 2, 1, "", "split_text"]], "components.memory": [[6, 0, 0, "-", "memory"]], "components.memory.memory": [[6, 1, 1, "", "Memory"], [6, 5, 1, "", "conver_db"], [6, 5, 1, "", "current_conversation"], [6, 5, 1, "", "turn_db"]], "components.memory.memory.Memory": [[6, 2, 1, "", "add_dialog_turn"], [6, 2, 1, "", "call"]], "components.model_client": [[8, 0, 0, "-", "anthropic_client"], [9, 0, 0, "-", "azureai_client"], [11, 0, 0, "-", "cohere_client"], [12, 0, 0, "-", "google_client"], [13, 0, 0, "-", "groq_client"], [14, 0, 0, "-", "ollama_client"], [15, 0, 0, "-", "openai_client"], [16, 0, 0, "-", "transformers_client"], [17, 0, 0, "-", "utils"]], "components.model_client.anthropic_client": [[8, 1, 1, "", "AnthropicAPIClient"], [8, 4, 1, "", "get_first_message_content"]], "components.model_client.anthropic_client.AnthropicAPIClient": [[8, 2, 1, "", "acall"], [8, 2, 1, "", "call"], [8, 2, 1, "", "convert_inputs_to_api_kwargs"], [8, 2, 1, "", "init_async_client"], [8, 2, 1, "", "init_sync_client"], [8, 2, 1, "", "parse_chat_completion"], [8, 2, 1, "", "track_completion_usage"]], "components.model_client.azureai_client": [[9, 1, 1, "", "AzureAIClient"]], "components.model_client.azureai_client.AzureAIClient": [[9, 2, 1, "", "acall"], [9, 2, 1, "", "call"], [9, 2, 1, "", "convert_inputs_to_api_kwargs"], [9, 2, 1, "", "from_dict"], [9, 2, 1, "", "init_async_client"], [9, 2, 1, "", "init_sync_client"], [9, 2, 1, "", "parse_chat_completion"], [9, 2, 1, "", "parse_embedding_response"], [9, 2, 1, "", "to_dict"], [9, 2, 1, "", "track_completion_usage"]], "components.model_client.cohere_client": [[11, 1, 1, "", "CohereAPIClient"]], "components.model_client.cohere_client.CohereAPIClient": [[11, 2, 1, "", "acall"], [11, 2, 1, "", "call"], [11, 2, 1, "", "convert_inputs_to_api_kwargs"], [11, 2, 1, "", "init_async_client"], [11, 2, 1, "", "init_sync_client"]], "components.model_client.google_client": [[12, 1, 1, "", "GoogleGenAIClient"]], "components.model_client.google_client.GoogleGenAIClient": [[12, 2, 1, "", "call"], [12, 2, 1, "", "convert_inputs_to_api_kwargs"], [12, 2, 1, "", "init_sync_client"], [12, 2, 1, "", "parse_chat_completion"], [12, 2, 1, "", "track_completion_usage"]], "components.model_client.groq_client": [[13, 1, 1, "", "GroqAPIClient"]], "components.model_client.groq_client.GroqAPIClient": [[13, 2, 1, "", "acall"], [13, 2, 1, "", "call"], [13, 2, 1, "", "convert_inputs_to_api_kwargs"], [13, 2, 1, "", "from_dict"], [13, 2, 1, "", "init_async_client"], [13, 2, 1, "", "init_sync_client"], [13, 2, 1, "", "parse_chat_completion"], [13, 2, 1, "", "to_dict"], [13, 2, 1, "", "track_completion_usage"]], "components.model_client.ollama_client": [[14, 1, 1, "", "OllamaClient"], [14, 4, 1, "", "parse_generate_response"], [14, 4, 1, "", "parse_stream_response"]], "components.model_client.ollama_client.OllamaClient": [[14, 2, 1, "", "acall"], [14, 2, 1, "", "call"], [14, 2, 1, "", "convert_inputs_to_api_kwargs"], [14, 2, 1, "", "from_dict"], [14, 2, 1, "", "init_async_client"], [14, 2, 1, "", "init_sync_client"], [14, 2, 1, "", "parse_chat_completion"], [14, 2, 1, "", "parse_embedding_response"], [14, 2, 1, "", "to_dict"]], "components.model_client.openai_client": [[15, 1, 1, "", "OpenAIClient"], [15, 4, 1, "", "get_all_messages_content"], [15, 4, 1, "", "get_first_message_content"], [15, 4, 1, "", "get_probabilities"], [15, 4, 1, "", "handle_streaming_response"], [15, 4, 1, "", "parse_stream_response"]], "components.model_client.openai_client.OpenAIClient": [[15, 2, 1, "", "acall"], [15, 2, 1, "", "call"], [15, 2, 1, "", "convert_inputs_to_api_kwargs"], [15, 2, 1, "", "from_dict"], [15, 2, 1, "", "init_async_client"], [15, 2, 1, "", "init_sync_client"], [15, 2, 1, "", "parse_chat_completion"], [15, 2, 1, "", "parse_embedding_response"], [15, 2, 1, "", "to_dict"], [15, 2, 1, "", "track_completion_usage"]], "components.model_client.transformers_client": [[16, 1, 1, "", "TransformerEmbedder"], [16, 1, 1, "", "TransformerLLM"], [16, 1, 1, "", "TransformerReranker"], [16, 1, 1, "", "TransformersClient"], [16, 4, 1, "", "average_pool"], [16, 4, 1, "", "clean_device_cache"], [16, 4, 1, "", "get_device"]], "components.model_client.transformers_client.TransformerEmbedder": [[16, 2, 1, "", "infer_gte_base_embedding"], [16, 2, 1, "", "init_model"], [16, 5, 1, "", "models"]], "components.model_client.transformers_client.TransformerLLM": [[16, 2, 1, "", "infer_llm"], [16, 2, 1, "", "init_model"], [16, 5, 1, "", "model_to_init_func"], [16, 5, 1, "", "models"], [16, 2, 1, "", "parse_chat_completion"], [16, 5, 1, "", "tokenizer"]], "components.model_client.transformers_client.TransformerReranker": [[16, 2, 1, "", "infer_bge_reranker_base"], [16, 2, 1, "", "init_model"], [16, 5, 1, "", "models"]], "components.model_client.transformers_client.TransformersClient": [[16, 2, 1, "", "call"], [16, 2, 1, "", "convert_inputs_to_api_kwargs"], [16, 2, 1, "", "init_llm_client"], [16, 2, 1, "", "init_reranker_client"], [16, 2, 1, "", "init_sync_client"], [16, 2, 1, "", "parse_chat_completion"], [16, 2, 1, "", "parse_embedding_response"], [16, 2, 1, "", "set_llm_client"], [16, 5, 1, "", "support_models"]], "components.model_client.utils": [[17, 4, 1, "", "parse_embedding_response"]], "components.output_parsers": [[18, 1, 1, "", "DataClassParser"], [18, 1, 1, "", "JsonOutputParser"], [18, 1, 1, "", "ListOutputParser"], [18, 1, 1, "", "YamlOutputParser"], [19, 0, 0, "-", "dataclass_parser"], [20, 0, 0, "-", "outputs"]], "components.output_parsers.DataClassParser": [[18, 2, 1, "", "call"], [18, 2, 1, "", "get_examples_str"], [18, 2, 1, "", "get_input_format_str"], [18, 2, 1, "", "get_input_str"], [18, 2, 1, "", "get_output_format_str"], [18, 2, 1, "", "get_task_desc_str"]], "components.output_parsers.JsonOutputParser": [[18, 2, 1, "", "call"], [18, 2, 1, "", "format_instructions"]], "components.output_parsers.ListOutputParser": [[18, 2, 1, "", "call"], [18, 2, 1, "", "format_instructions"]], "components.output_parsers.YamlOutputParser": [[18, 2, 1, "", "call"], [18, 2, 1, "", "format_instructions"]], "components.output_parsers.dataclass_parser": [[19, 1, 1, "", "DataClassParser"]], "components.output_parsers.dataclass_parser.DataClassParser": [[19, 2, 1, "", "call"], [19, 2, 1, "", "get_examples_str"], [19, 2, 1, "", "get_input_format_str"], [19, 2, 1, "", "get_input_str"], [19, 2, 1, "", "get_output_format_str"], [19, 2, 1, "", "get_task_desc_str"]], "components.output_parsers.outputs": [[20, 1, 1, "", "BooleanOutputParser"], [20, 1, 1, "", "JsonOutputParser"], [20, 1, 1, "", "ListOutputParser"], [20, 1, 1, "", "OutputParser"], [20, 1, 1, "", "YamlOutputParser"]], "components.output_parsers.outputs.BooleanOutputParser": [[20, 2, 1, "", "call"], [20, 2, 1, "", "format_instructions"]], "components.output_parsers.outputs.JsonOutputParser": [[20, 2, 1, "", "call"], [20, 2, 1, "", "format_instructions"]], "components.output_parsers.outputs.ListOutputParser": [[20, 2, 1, "", "call"], [20, 2, 1, "", "format_instructions"]], "components.output_parsers.outputs.OutputParser": [[20, 2, 1, "", "call"], [20, 2, 1, "", "format_instructions"]], "components.output_parsers.outputs.YamlOutputParser": [[20, 2, 1, "", "call"], [20, 2, 1, "", "format_instructions"]], "components.retriever": [[21, 1, 1, "", "BM25Retriever"], [21, 1, 1, "", "LLMRetriever"], [21, 1, 1, "", "RerankerRetriever"], [22, 0, 0, "-", "bm25_retriever"], [23, 0, 0, "-", "faiss_retriever"], [24, 0, 0, "-", "lancedb_retriver"], [25, 0, 0, "-", "llm_retriever"], [26, 0, 0, "-", "postgres_retriever"], [27, 0, 0, "-", "qdrant_retriever"], [28, 0, 0, "-", "reranker_retriever"], [21, 4, 1, "", "split_text_by_word_fn"], [21, 4, 1, "", "split_text_by_word_fn_then_lower_tokenized"]], "components.retriever.BM25Retriever": [[21, 2, 1, "", "build_index_from_documents"], [21, 2, 1, "", "call"], [21, 2, 1, "", "load_from_file"], [21, 2, 1, "", "reset_index"], [21, 2, 1, "", "save_to_file"]], "components.retriever.LLMRetriever": [[21, 2, 1, "", "build_index_from_documents"], [21, 2, 1, "", "call"], [21, 2, 1, "", "reset_index"]], "components.retriever.RerankerRetriever": [[21, 2, 1, "", "build_index_from_documents"], [21, 2, 1, "", "call"], [21, 2, 1, "", "reset_index"]], "components.retriever.bm25_retriever": [[22, 1, 1, "", "BM25Retriever"], [22, 4, 1, "", "split_text_by_word_fn"], [22, 4, 1, "", "split_text_by_word_fn_then_lower_tokenized"], [22, 4, 1, "", "split_text_tokenized"]], "components.retriever.bm25_retriever.BM25Retriever": [[22, 2, 1, "", "build_index_from_documents"], [22, 2, 1, "", "call"], [22, 2, 1, "", "load_from_file"], [22, 2, 1, "", "reset_index"], [22, 2, 1, "", "save_to_file"]], "components.retriever.faiss_retriever": [[23, 1, 1, "", "FAISSRetriever"]], "components.retriever.faiss_retriever.FAISSRetriever": [[23, 2, 1, "", "build_index_from_documents"], [23, 2, 1, "", "call"], [23, 2, 1, "", "reset_index"], [23, 2, 1, "", "retrieve_embedding_queries"], [23, 2, 1, "", "retrieve_string_queries"]], "components.retriever.lancedb_retriver": [[24, 1, 1, "", "LanceDBRetriever"]], "components.retriever.lancedb_retriver.LanceDBRetriever": [[24, 2, 1, "", "add_documents"], [24, 2, 1, "", "retrieve"]], "components.retriever.llm_retriever": [[25, 1, 1, "", "LLMRetriever"]], "components.retriever.llm_retriever.LLMRetriever": [[25, 2, 1, "", "build_index_from_documents"], [25, 2, 1, "", "call"], [25, 2, 1, "", "reset_index"]], "components.retriever.postgres_retriever": [[26, 1, 1, "", "DistanceToOperator"], [26, 1, 1, "", "PostgresRetriever"]], "components.retriever.postgres_retriever.DistanceToOperator": [[26, 5, 1, "", "COSINE"], [26, 5, 1, "", "INNER_PRODUCT"], [26, 5, 1, "", "L1"], [26, 5, 1, "", "L2"]], "components.retriever.postgres_retriever.PostgresRetriever": [[26, 2, 1, "", "call"], [26, 2, 1, "", "format_vector_search_query"], [26, 2, 1, "", "retrieve_by_sql"]], "components.retriever.qdrant_retriever": [[27, 1, 1, "", "QdrantRetriever"]], "components.retriever.qdrant_retriever.QdrantRetriever": [[27, 2, 1, "", "call"], [27, 2, 1, "", "reset_index"]], "components.retriever.reranker_retriever": [[28, 1, 1, "", "RerankerRetriever"]], "components.retriever.reranker_retriever.RerankerRetriever": [[28, 2, 1, "", "build_index_from_documents"], [28, 2, 1, "", "call"], [28, 2, 1, "", "reset_index"]], "core": [[30, 0, 0, "-", "base_data_class"], [31, 0, 0, "-", "component"], [32, 0, 0, "-", "container"], [33, 0, 0, "-", "db"], [34, 0, 0, "-", "default_prompt_template"], [35, 0, 0, "-", "embedder"], [36, 0, 0, "-", "func_tool"], [37, 0, 0, "-", "functional"], [38, 0, 0, "-", "generator"], [39, 0, 0, "-", "model_client"], [40, 0, 0, "-", "prompt_builder"], [41, 0, 0, "-", "retriever"], [42, 0, 0, "-", "string_parser"], [43, 0, 0, "-", "tokenizer"], [44, 0, 0, "-", "tool_manager"], [45, 0, 0, "-", "types"]], "core.base_data_class": [[30, 1, 1, "", "DataClass"], [30, 1, 1, "", "DataClassFormatType"], [30, 1, 1, "", "DynamicDataClassFactory"], [30, 3, 1, "", "ExcludeType"], [30, 3, 1, "", "IncludeType"], [30, 4, 1, "", "check_adal_dataclass"], [30, 4, 1, "", "required_field"]], "core.base_data_class.DataClass": [[30, 2, 1, "", "dict_to_yaml"], [30, 2, 1, "", "format_class_str"], [30, 2, 1, "", "format_example_str"], [30, 2, 1, "", "from_dict"], [30, 2, 1, "", "from_json"], [30, 2, 1, "", "from_yaml"], [30, 2, 1, "", "get_input_fields"], [30, 2, 1, "", "get_output_fields"], [30, 2, 1, "", "get_task_desc"], [30, 2, 1, "", "set_input_fields"], [30, 2, 1, "", "set_output_fields"], [30, 2, 1, "", "set_task_desc"], [30, 2, 1, "", "to_dict"], [30, 2, 1, "", "to_dict_class"], [30, 2, 1, "", "to_json"], [30, 2, 1, "", "to_json_obj"], [30, 2, 1, "", "to_json_signature"], [30, 2, 1, "", "to_schema"], [30, 2, 1, "", "to_schema_str"], [30, 2, 1, "", "to_yaml"], [30, 2, 1, "", "to_yaml_obj"], [30, 2, 1, "", "to_yaml_signature"]], "core.base_data_class.DataClassFormatType": [[30, 5, 1, "", "EXAMPLE_JSON"], [30, 5, 1, "", "EXAMPLE_YAML"], [30, 5, 1, "", "SCHEMA"], [30, 5, 1, "", "SIGNATURE_JSON"], [30, 5, 1, "", "SIGNATURE_YAML"]], "core.base_data_class.DynamicDataClassFactory": [[30, 2, 1, "", "from_dict"]], "core.component": [[31, 1, 1, "", "Component"], [31, 1, 1, "", "FunComponent"], [31, 4, 1, "", "fun_to_component"]], "core.component.Component": [[31, 2, 1, "", "acall"], [31, 2, 1, "", "add_component"], [31, 2, 1, "", "call"], [31, 2, 1, "", "children"], [31, 2, 1, "", "components"], [31, 2, 1, "", "eval"], [31, 2, 1, "", "from_config"], [31, 2, 1, "", "from_dict"], [31, 2, 1, "", "get_subcomponent"], [31, 2, 1, "", "is_picklable"], [31, 2, 1, "", "load_from_pickle"], [31, 2, 1, "", "load_state_dict"], [31, 2, 1, "", "load_state_pickle"], [31, 5, 1, "", "name"], [31, 2, 1, "", "named_children"], [31, 2, 1, "", "named_components"], [31, 2, 1, "", "named_parameters"], [31, 2, 1, "", "parameters"], [31, 2, 1, "", "pickle_to_file"], [31, 2, 1, "", "register_component"], [31, 2, 1, "", "register_parameter"], [31, 2, 1, "", "state_dict"], [31, 5, 1, "", "teacher_mode"], [31, 2, 1, "", "to_dict"], [31, 2, 1, "", "trace"], [31, 5, 1, "", "tracing"], [31, 2, 1, "", "train"], [31, 5, 1, "", "training"], [31, 2, 1, "", "use_teacher"]], "core.component.FunComponent": [[31, 2, 1, "", "call"]], "core.container": [[32, 1, 1, "", "Sequential"]], "core.container.Sequential": [[32, 2, 1, "", "acall"], [32, 2, 1, "", "append"], [32, 2, 1, "", "call"], [32, 2, 1, "", "extend"], [32, 2, 1, "", "insert"]], "core.db": [[33, 1, 1, "", "LocalDB"]], "core.db.LocalDB": [[33, 2, 1, "", "add"], [33, 2, 1, "", "delete"], [33, 2, 1, "", "extend"], [33, 2, 1, "", "fetch_items"], [33, 2, 1, "", "fetch_transformed_items"], [33, 2, 1, "", "get_transformed_data"], [33, 2, 1, "", "get_transformer_keys"], [33, 5, 1, "", "index_path"], [33, 5, 1, "", "items"], [33, 6, 1, "", "length"], [33, 2, 1, "", "load"], [33, 2, 1, "", "load_state"], [33, 5, 1, "", "mapper_setups"], [33, 5, 1, "", "name"], [33, 2, 1, "", "register_transformer"], [33, 2, 1, "", "reset"], [33, 2, 1, "", "save_state"], [33, 2, 1, "", "transform"], [33, 5, 1, "", "transformed_items"], [33, 5, 1, "", "transformer_setups"]], "core.default_prompt_template": [[34, 3, 1, "", "ADALFLOW_DEFAULT_PROMPT_ARGS"], [34, 3, 1, "", "ADALFLOW_DEFAULT_PROMPT_TRAINABLE_PARAMS"], [34, 3, 1, "id0", "DEFAULT_ADALFLOW_SYSTEM_PROMPT"], [34, 3, 1, "", "SIMPLE_DEFAULT_ADALFLOW_SYSTEM_PROMPT"]], "core.embedder": [[35, 1, 1, "", "BatchEmbedder"], [35, 1, 1, "", "Embedder"]], "core.embedder.BatchEmbedder": [[35, 2, 1, "", "call"]], "core.embedder.Embedder": [[35, 2, 1, "", "acall"], [35, 2, 1, "", "call"], [35, 2, 1, "", "from_config"], [35, 5, 1, "", "model_client"], [35, 5, 1, "", "model_type"], [35, 5, 1, "", "output_processors"]], "core.func_tool": [[36, 1, 1, "", "FunctionTool"], [36, 4, 1, "", "is_running_in_event_loop"]], "core.func_tool.FunctionTool": [[36, 2, 1, "", "acall"], [36, 2, 1, "", "call"], [36, 2, 1, "", "execute"], [36, 6, 1, "", "is_async"]], "core.functional": [[37, 4, 1, "", "check_data_class_field_args_one"], [37, 4, 1, "", "check_data_class_field_args_zero"], [37, 4, 1, "", "check_if_class_field_args_one_exists"], [37, 4, 1, "", "check_if_class_field_args_zero_exists"], [37, 4, 1, "", "compose_model_kwargs"], [37, 4, 1, "", "convert_schema_to_signature"], [37, 4, 1, "", "custom_asdict"], [37, 4, 1, "", "dataclass_obj_from_dict"], [37, 4, 1, "", "evaluate_ast_node"], [37, 4, 1, "", "extract_dataclass_type"], [37, 4, 1, "", "extract_first_boolean"], [37, 4, 1, "", "extract_first_float"], [37, 4, 1, "", "extract_first_int"], [37, 4, 1, "", "extract_function_expression"], [37, 4, 1, "", "extract_json_str"], [37, 4, 1, "", "extract_list_str"], [37, 4, 1, "", "extract_yaml_str"], [37, 4, 1, "", "fix_json_escaped_single_quotes"], [37, 4, 1, "", "fix_json_missing_commas"], [37, 4, 1, "", "from_dict_to_json"], [37, 4, 1, "", "from_dict_to_yaml"], [37, 4, 1, "", "from_json_to_dict"], [37, 4, 1, "", "from_yaml_to_dict"], [37, 4, 1, "", "generate_function_call_expression_from_callable"], [37, 4, 1, "", "generate_readable_key_for_function"], [37, 4, 1, "", "get_dataclass_schema"], [37, 4, 1, "", "get_enum_schema"], [37, 4, 1, "", "get_fun_schema"], [37, 4, 1, "", "get_top_k_indices_scores"], [37, 4, 1, "", "get_type_schema"], [37, 4, 1, "", "is_dataclass_instance"], [37, 4, 1, "", "is_normalized"], [37, 4, 1, "", "is_potential_dataclass"], [37, 4, 1, "", "normalize_np_array"], [37, 4, 1, "", "normalize_vector"], [37, 4, 1, "", "parse_function_call_expr"], [37, 4, 1, "", "parse_json_str_to_obj"], [37, 4, 1, "", "parse_yaml_str_to_obj"], [37, 4, 1, "", "random_sample"], [37, 4, 1, "", "represent_ordereddict"], [37, 4, 1, "", "sandbox_exec"], [37, 4, 1, "", "validate_data"]], "core.generator": [[38, 1, 1, "", "BackwardEngine"], [38, 1, 1, "", "Generator"], [38, 4, 1, "", "create_teacher_generator"]], "core.generator.BackwardEngine": [[38, 2, 1, "", "failure_message_to_optimizer"]], "core.generator.Generator": [[38, 2, 1, "", "acall"], [38, 2, 1, "", "backward"], [38, 2, 1, "", "call"], [38, 2, 1, "", "create_demo_data_instance"], [38, 2, 1, "", "failure_message_to_backward_engine"], [38, 2, 1, "", "find_demo_parameter"], [38, 2, 1, "", "forward"], [38, 2, 1, "", "from_config"], [38, 2, 1, "", "get_cache_path"], [38, 2, 1, "", "get_prompt"], [38, 5, 1, "", "model_client"], [38, 5, 1, "", "model_type"], [38, 2, 1, "", "print_prompt"], [38, 2, 1, "", "reset_mock_output"], [38, 2, 1, "", "set_backward_engine"], [38, 2, 1, "", "set_cache_path"], [38, 2, 1, "", "set_data_map_func"], [38, 2, 1, "", "set_mock_output"], [38, 2, 1, "", "set_parameters"], [38, 2, 1, "", "set_teacher_generator"], [38, 2, 1, "", "to_dict"]], "core.model_client": [[39, 1, 1, "", "ModelClient"]], "core.model_client.ModelClient": [[39, 2, 1, "", "acall"], [39, 2, 1, "", "call"], [39, 2, 1, "", "convert_inputs_to_api_kwargs"], [39, 2, 1, "", "init_async_client"], [39, 2, 1, "", "init_sync_client"], [39, 2, 1, "", "parse_chat_completion"], [39, 2, 1, "", "parse_embedding_response"], [39, 2, 1, "", "track_completion_usage"]], "core.prompt_builder": [[40, 1, 1, "", "Prompt"], [40, 4, 1, "", "get_jinja2_environment"]], "core.prompt_builder.Prompt": [[40, 2, 1, "", "call"], [40, 2, 1, "", "compose_prompt_kwargs"], [40, 2, 1, "", "from_dict"], [40, 2, 1, "", "get_prompt_variables"], [40, 2, 1, "", "is_key_in_template"], [40, 2, 1, "", "print_prompt"], [40, 2, 1, "", "print_prompt_template"], [40, 2, 1, "", "to_dict"], [40, 2, 1, "", "update_prompt_kwargs"]], "core.retriever": [[41, 1, 1, "", "Retriever"]], "core.retriever.Retriever": [[41, 2, 1, "", "acall"], [41, 2, 1, "", "backward"], [41, 2, 1, "", "build_index_from_documents"], [41, 2, 1, "", "call"], [41, 2, 1, "", "forward"], [41, 5, 1, "", "index_keys"], [41, 5, 1, "", "indexed"], [41, 2, 1, "", "load_from_file"], [41, 5, 1, "", "name"], [41, 2, 1, "", "reset_index"], [41, 2, 1, "", "save_to_file"], [41, 5, 1, "", "top_k"]], "core.string_parser": [[42, 1, 1, "", "BooleanParser"], [42, 1, 1, "", "FloatParser"], [42, 1, 1, "", "IntParser"], [42, 1, 1, "", "JsonParser"], [42, 1, 1, "", "ListParser"], [42, 1, 1, "", "Parser"], [42, 1, 1, "", "YamlParser"]], "core.string_parser.BooleanParser": [[42, 2, 1, "", "call"]], "core.string_parser.FloatParser": [[42, 2, 1, "", "call"]], "core.string_parser.IntParser": [[42, 2, 1, "", "call"]], "core.string_parser.JsonParser": [[42, 2, 1, "", "call"]], "core.string_parser.ListParser": [[42, 2, 1, "", "call"]], "core.string_parser.Parser": [[42, 2, 1, "", "call"]], "core.string_parser.YamlParser": [[42, 2, 1, "", "call"]], "core.tokenizer": [[43, 1, 1, "", "Tokenizer"]], "core.tokenizer.Tokenizer": [[43, 2, 1, "", "count_tokens"], [43, 2, 1, "", "decode"], [43, 2, 1, "", "encode"], [43, 2, 1, "", "get_string_tokens"], [43, 2, 1, "", "preprocess"]], "core.tool_manager": [[44, 1, 1, "", "ToolManager"], [44, 4, 1, "", "run_async_in_new_loop"]], "core.tool_manager.ToolManager": [[44, 2, 1, "", "execute_func"], [44, 2, 1, "", "execute_func_async"], [44, 2, 1, "", "execute_func_expr"], [44, 2, 1, "", "execute_func_expr_async"], [44, 2, 1, "", "execute_func_expr_via_eval"], [44, 2, 1, "", "execute_func_expr_via_sandbox"], [44, 6, 1, "", "function_definitions"], [44, 6, 1, "", "json_definitions"], [44, 2, 1, "", "parse_func_expr"], [44, 6, 1, "", "yaml_definitions"]], "core.types": [[45, 1, 1, "", "AssistantResponse"], [45, 1, 1, "", "CompletionUsage"], [45, 1, 1, "", "Conversation"], [45, 1, 1, "", "DialogTurn"], [45, 1, 1, "", "Document"], [45, 1, 1, "", "EmbedderOutput"], [45, 5, 1, "", "EmbedderOutputType"], [45, 1, 1, "", "Embedding"], [45, 1, 1, "", "Function"], [45, 1, 1, "", "FunctionDefinition"], [45, 1, 1, "", "FunctionExpression"], [45, 1, 1, "", "FunctionOutput"], [45, 1, 1, "", "GeneratorOutput"], [45, 1, 1, "", "ModelClientType"], [45, 1, 1, "", "ModelType"], [45, 1, 1, "", "RetrieverOutput"], [45, 1, 1, "", "StepOutput"], [45, 1, 1, "", "TokenLogProb"], [45, 1, 1, "", "Usage"], [45, 1, 1, "", "UserQuery"], [45, 4, 1, "", "get_model_args"]], "core.types.AssistantResponse": [[45, 5, 1, "", "metadata"], [45, 5, 1, "", "response_str"]], "core.types.CompletionUsage": [[45, 5, 1, "", "completion_tokens"], [45, 5, 1, "", "prompt_tokens"], [45, 5, 1, "", "total_tokens"]], "core.types.Conversation": [[45, 2, 1, "", "append_dialog_turn"], [45, 5, 1, "", "created_at"], [45, 2, 1, "", "delete_dialog_turn"], [45, 5, 1, "", "dialog_turns"], [45, 5, 1, "", "dialog_turns_input"], [45, 2, 1, "", "get_chat_history_str"], [45, 2, 1, "", "get_dialog_turns"], [45, 2, 1, "", "get_next_order"], [45, 5, 1, "", "id"], [45, 5, 1, "", "metadata"], [45, 5, 1, "", "name"], [45, 2, 1, "", "update_dialog_turn"], [45, 5, 1, "", "user_id"]], "core.types.DialogTurn": [[45, 5, 1, "", "assistant_response"], [45, 5, 1, "", "assistant_response_timestamp"], [45, 5, 1, "", "conversation_id"], [45, 5, 1, "", "id"], [45, 5, 1, "", "metadata"], [45, 5, 1, "", "order"], [45, 2, 1, "", "set_assistant_response"], [45, 2, 1, "", "set_user_query"], [45, 5, 1, "", "user_id"], [45, 5, 1, "", "user_query"], [45, 5, 1, "", "user_query_timestamp"], [45, 5, 1, "", "vector"]], "core.types.Document": [[45, 5, 1, "", "estimated_num_tokens"], [45, 2, 1, "", "from_dict"], [45, 5, 1, "", "id"], [45, 5, 1, "", "meta_data"], [45, 5, 1, "", "order"], [45, 5, 1, "", "parent_doc_id"], [45, 5, 1, "", "score"], [45, 5, 1, "", "text"], [45, 5, 1, "", "vector"]], "core.types.EmbedderOutput": [[45, 5, 1, "", "data"], [45, 6, 1, "", "embedding_dim"], [45, 5, 1, "", "error"], [45, 5, 1, "", "input"], [45, 6, 1, "", "is_normalized"], [45, 6, 1, "", "length"], [45, 5, 1, "", "model"], [45, 5, 1, "", "raw_response"], [45, 5, 1, "", "usage"]], "core.types.Embedding": [[45, 5, 1, "", "embedding"], [45, 5, 1, "", "index"]], "core.types.Function": [[45, 5, 1, "", "args"], [45, 5, 1, "", "kwargs"], [45, 5, 1, "", "name"], [45, 5, 1, "", "thought"]], "core.types.FunctionDefinition": [[45, 2, 1, "", "fn_schema_str"], [45, 5, 1, "", "func_desc"], [45, 5, 1, "", "func_name"], [45, 5, 1, "", "func_parameters"]], "core.types.FunctionExpression": [[45, 5, 1, "", "action"], [45, 2, 1, "", "from_function"], [45, 5, 1, "", "thought"]], "core.types.FunctionOutput": [[45, 5, 1, "", "error"], [45, 5, 1, "", "input"], [45, 5, 1, "", "name"], [45, 5, 1, "", "output"], [45, 5, 1, "", "parsed_input"]], "core.types.GeneratorOutput": [[45, 5, 1, "", "data"], [45, 5, 1, "", "error"], [45, 5, 1, "", "id"], [45, 5, 1, "", "metadata"], [45, 5, 1, "", "raw_response"], [45, 5, 1, "", "usage"]], "core.types.ModelClientType": [[45, 5, 1, "", "ANTHROPIC"], [45, 5, 1, "", "COHERE"], [45, 5, 1, "", "GOOGLE_GENAI"], [45, 5, 1, "", "GROQ"], [45, 5, 1, "", "OLLAMA"], [45, 5, 1, "", "OPENAI"], [45, 5, 1, "", "TRANSFORMERS"]], "core.types.ModelType": [[45, 5, 1, "", "EMBEDDER"], [45, 5, 1, "", "LLM"], [45, 5, 1, "", "RERANKER"], [45, 5, 1, "", "UNDEFINED"]], "core.types.RetrieverOutput": [[45, 5, 1, "", "doc_indices"], [45, 5, 1, "", "doc_scores"], [45, 5, 1, "", "documents"], [45, 5, 1, "", "query"]], "core.types.StepOutput": [[45, 5, 1, "", "action"], [45, 5, 1, "", "function"], [45, 5, 1, "", "observation"], [45, 5, 1, "", "step"], [45, 2, 1, "", "with_action_type"]], "core.types.TokenLogProb": [[45, 5, 1, "", "logprob"], [45, 5, 1, "", "token"]], "core.types.Usage": [[45, 5, 1, "", "prompt_tokens"], [45, 5, 1, "", "total_tokens"]], "core.types.UserQuery": [[45, 5, 1, "", "metadata"], [45, 5, 1, "", "query_str"]], "datasets": [[52, 1, 1, "", "BigBenchHard"], [52, 1, 1, "", "Example"], [52, 1, 1, "", "HotPotQA"], [52, 1, 1, "", "HotPotQAData"], [52, 1, 1, "", "TrecData"], [52, 1, 1, "", "TrecDataset"], [47, 0, 0, "-", "big_bench_hard"], [48, 0, 0, "-", "hotpot_qa"], [49, 0, 0, "-", "trec"], [50, 0, 0, "-", "types"], [51, 0, 0, "-", "utils"]], "datasets.BigBenchHard": [[52, 2, 1, "", "get_default_task_instruction"]], "datasets.Example": [[52, 5, 1, "", "answer"], [52, 5, 1, "", "id"], [52, 5, 1, "", "question"]], "datasets.HotPotQAData": [[52, 5, 1, "", "gold_titles"]], "datasets.TrecData": [[52, 5, 1, "", "class_index"], [52, 5, 1, "", "class_name"], [52, 5, 1, "", "question"]], "datasets.big_bench_hard": [[47, 1, 1, "", "BigBenchHard"]], "datasets.big_bench_hard.BigBenchHard": [[47, 2, 1, "", "get_default_task_instruction"]], "datasets.hotpot_qa": [[48, 1, 1, "", "HotPotQA"]], "datasets.trec": [[49, 1, 1, "", "TrecDataset"], [49, 4, 1, "", "calculate_class_weights"], [49, 4, 1, "", "prepare_datasets"], [49, 4, 1, "", "sample_subset_dataset"]], "datasets.types": [[50, 1, 1, "", "BaseData"], [50, 1, 1, "", "Example"], [50, 1, 1, "", "HotPotQAData"], [50, 1, 1, "", "TrecData"]], "datasets.types.BaseData": [[50, 5, 1, "", "id"]], "datasets.types.Example": [[50, 5, 1, "", "answer"], [50, 5, 1, "", "id"], [50, 5, 1, "", "question"]], "datasets.types.HotPotQAData": [[50, 5, 1, "", "gold_titles"]], "datasets.types.TrecData": [[50, 5, 1, "", "class_index"], [50, 5, 1, "", "class_name"], [50, 5, 1, "", "question"]], "datasets.utils": [[51, 4, 1, "", "prepare_dataset_path"]], "eval": [[59, 1, 1, "", "AnswerMatchAcc"], [59, 1, 1, "", "GEvalJudgeEvaluator"], [59, 1, 1, "", "GEvalLLMJudge"], [59, 1, 1, "", "GEvalMetric"], [59, 1, 1, "", "LLMasJudge"], [59, 1, 1, "", "RetrieverRecall"], [53, 0, 0, "-", "answer_match_acc"], [54, 0, 0, "-", "base"], [55, 0, 0, "-", "functional"], [56, 0, 0, "-", "g_eval"], [57, 0, 0, "-", "llm_as_judge"], [58, 0, 0, "-", "retriever_recall"]], "eval.AnswerMatchAcc": [[59, 2, 1, "", "compute"], [59, 2, 1, "", "compute_single_item"]], "eval.GEvalJudgeEvaluator": [[59, 2, 1, "", "compute"], [59, 2, 1, "", "compute_single_item"]], "eval.GEvalLLMJudge": [[59, 2, 1, "", "call"]], "eval.GEvalMetric": [[59, 5, 1, "", "COHERENCE"], [59, 5, 1, "", "CONSISTENCY"], [59, 5, 1, "", "FLUENCY"], [59, 5, 1, "", "RELEVANCE"]], "eval.LLMasJudge": [[59, 2, 1, "", "compute"]], "eval.RetrieverRecall": [[59, 2, 1, "", "compute"]], "eval.answer_match_acc": [[53, 1, 1, "", "AnswerMatchAcc"]], "eval.answer_match_acc.AnswerMatchAcc": [[53, 2, 1, "", "compute"], [53, 2, 1, "", "compute_single_item"]], "eval.base": [[54, 1, 1, "", "BaseEvaluator"], [54, 1, 1, "", "EvaluationResult"]], "eval.base.BaseEvaluator": [[54, 2, 1, "", "compute"], [54, 2, 1, "", "compute_single_item"]], "eval.base.EvaluationResult": [[54, 5, 1, "", "additional_info"], [54, 5, 1, "", "avg_score"], [54, 5, 1, "", "per_item_scores"]], "eval.functional": [[55, 4, 1, "", "confidence_interval"], [55, 4, 1, "", "longest_common_substring"]], "eval.g_eval": [[56, 1, 1, "", "GEvalJudgeEvaluator"], [56, 1, 1, "", "GEvalLLMJudge"], [56, 1, 1, "", "GEvalMetric"], [56, 1, 1, "", "NLGTask"]], "eval.g_eval.GEvalJudgeEvaluator": [[56, 2, 1, "", "compute"], [56, 2, 1, "", "compute_single_item"]], "eval.g_eval.GEvalLLMJudge": [[56, 2, 1, "", "call"]], "eval.g_eval.GEvalMetric": [[56, 5, 1, "", "COHERENCE"], [56, 5, 1, "", "CONSISTENCY"], [56, 5, 1, "", "FLUENCY"], [56, 5, 1, "", "RELEVANCE"]], "eval.g_eval.NLGTask": [[56, 5, 1, "", "SUMMARIZATION"]], "eval.llm_as_judge": [[57, 1, 1, "", "DefaultLLMJudge"], [57, 1, 1, "", "LLMJudgeEvalResult"], [57, 1, 1, "", "LLMasJudge"]], "eval.llm_as_judge.DefaultLLMJudge": [[57, 2, 1, "", "call"]], "eval.llm_as_judge.LLMJudgeEvalResult": [[57, 5, 1, "", "avg_score"], [57, 5, 1, "", "confidence_interval"], [57, 5, 1, "", "judgement_score_list"]], "eval.llm_as_judge.LLMasJudge": [[57, 2, 1, "", "compute"]], "eval.retriever_recall": [[58, 1, 1, "", "RetrieverRecall"]], "eval.retriever_recall.RetrieverRecall": [[58, 2, 1, "", "compute"]], "optim": [[61, 1, 1, "", "AdalComponent"], [61, 1, 1, "", "BackwardContext"], [61, 1, 1, "", "BootstrapFewShot"], [61, 1, 1, "", "ClassSampler"], [61, 1, 1, "", "DemoOptimizer"], [61, 1, 1, "", "EvalFnToTextLoss"], [61, 1, 1, "", "LLMAsTextLoss"], [61, 1, 1, "", "Optimizer"], [61, 1, 1, "", "Parameter"], [61, 1, 1, "", "RandomSampler"], [61, 1, 1, "", "Sampler"], [61, 1, 1, "", "TGDOptimizer"], [61, 1, 1, "", "TextOptimizer"], [61, 1, 1, "", "Trainer"], [63, 0, 0, "-", "few_shot"], [65, 0, 0, "-", "function"], [66, 0, 0, "-", "grad_component"], [67, 0, 0, "-", "loss_component"], [68, 0, 0, "-", "optimizer"], [69, 0, 0, "-", "parameter"], [70, 0, 0, "-", "sampler"], [71, 0, 0, "-", "text_grad"], [77, 0, 0, "-", "trainer"], [80, 0, 0, "-", "types"]], "optim.AdalComponent": [[61, 5, 1, "", "backward_engine"], [61, 2, 1, "", "configure_backward_engine"], [61, 2, 1, "", "configure_backward_engine_helper"], [61, 2, 1, "", "configure_callbacks"], [61, 2, 1, "", "configure_demo_optimizer_helper"], [61, 2, 1, "", "configure_optimizers"], [61, 2, 1, "", "configure_teacher_generator"], [61, 2, 1, "", "configure_teacher_generator_helper"], [61, 2, 1, "", "configure_text_optimizer_helper"], [61, 5, 1, "", "eval_fn"], [61, 2, 1, "", "evaluate_samples"], [61, 5, 1, "", "loss_fn"], [61, 2, 1, "", "loss_step"], [61, 2, 1, "", "pred_step"], [61, 2, 1, "", "prepare_eval"], [61, 2, 1, "", "prepare_loss"], [61, 2, 1, "", "prepare_task"], [61, 2, 1, "", "run_one_loss_sample"], [61, 2, 1, "", "run_one_task_sample"], [61, 5, 1, "", "task"], [61, 2, 1, "", "train_step"], [61, 2, 1, "", "validate_condition"], [61, 2, 1, "", "validation_step"]], "optim.BootstrapFewShot": [[61, 2, 1, "", "add_scores"], [61, 2, 1, "", "config_dataset"], [61, 2, 1, "", "config_shots"], [61, 6, 1, "", "num_shots"], [61, 2, 1, "", "propose"], [61, 2, 1, "", "revert"], [61, 2, 1, "", "sample"], [61, 2, 1, "", "samples_to_str"], [61, 2, 1, "", "step"]], "optim.ClassSampler": [[61, 2, 1, "", "call"], [61, 2, 1, "", "random_replace"], [61, 2, 1, "", "random_sample"]], "optim.DemoOptimizer": [[61, 2, 1, "", "config_shots"], [61, 5, 1, "", "dataset"], [61, 5, 1, "", "exclude_input_fields_from_bootstrap_demos"], [61, 2, 1, "", "set_dataset"], [61, 2, 1, "", "use_weighted_sampling"]], "optim.EvalFnToTextLoss": [[61, 2, 1, "", "backward"], [61, 2, 1, "", "forward"], [61, 2, 1, "", "set_backward_engine"]], "optim.LLMAsTextLoss": [[61, 2, 1, "", "forward"]], "optim.Optimizer": [[61, 5, 1, "", "params"], [61, 2, 1, "", "propose"], [61, 5, 1, "", "proposing"], [61, 2, 1, "", "revert"], [61, 2, 1, "", "state_dict"], [61, 2, 1, "", "step"]], "optim.Parameter": [[61, 2, 1, "", "add_gradient"], [61, 2, 1, "", "add_score_to_trace"], [61, 2, 1, "", "add_successor_map_fn"], [61, 2, 1, "", "add_to_trace"], [61, 2, 1, "", "backward"], [61, 5, 1, "", "backward_engine_disabled"], [61, 2, 1, "", "check_if_already_computed_gradient_respect_to"], [61, 5, 1, "", "data"], [61, 2, 1, "", "draw_graph"], [61, 5, 1, "", "eval_input"], [61, 2, 1, "", "from_dict"], [61, 5, 1, "", "from_response_id"], [61, 5, 1, "", "full_response"], [61, 2, 1, "", "get_grad_fn"], [61, 2, 1, "", "get_gradient_and_context_text"], [61, 2, 1, "", "get_gradients_names"], [61, 2, 1, "", "get_param_info"], [61, 2, 1, "", "get_short_value"], [61, 5, 1, "", "id"], [61, 5, 1, "", "input_args"], [61, 2, 1, "", "map_to_successor"], [61, 5, 1, "", "name"], [61, 5, 1, "", "param_type"], [61, 5, 1, "", "peers"], [61, 5, 1, "", "predecessors"], [61, 2, 1, "", "propose_data"], [61, 5, 1, "", "proposing"], [61, 2, 1, "", "reset_gradients"], [61, 2, 1, "", "reset_gradients_context"], [61, 2, 1, "", "revert_data"], [61, 5, 1, "", "role_desc"], [61, 2, 1, "", "set_eval_fn_input"], [61, 2, 1, "", "set_grad_fn"], [61, 2, 1, "", "set_peers"], [61, 2, 1, "", "set_predecessors"], [61, 2, 1, "", "set_score"], [61, 2, 1, "", "step_data"], [61, 5, 1, "", "successor_map_fn"], [61, 2, 1, "", "to_dict"], [61, 2, 1, "", "trace_forward_pass"], [61, 2, 1, "", "trace_graph"], [61, 2, 1, "", "update_value"]], "optim.RandomSampler": [[61, 2, 1, "", "call"], [61, 2, 1, "", "random_replace"], [61, 2, 1, "", "random_sample"], [61, 2, 1, "", "set_dataset"]], "optim.Sampler": [[61, 2, 1, "", "call"], [61, 5, 1, "", "dataset"], [61, 2, 1, "", "random_replace"], [61, 2, 1, "", "set_dataset"]], "optim.TGDOptimizer": [[61, 2, 1, "", "add_history"], [61, 2, 1, "", "add_score_to_current_param"], [61, 2, 1, "", "add_score_to_params"], [61, 6, 1, "", "constraint_text"], [61, 5, 1, "", "constraints"], [61, 2, 1, "", "get_gradient_memory_text"], [61, 5, 1, "", "params"], [61, 5, 1, "", "params_history"], [61, 2, 1, "", "propose"], [61, 5, 1, "", "proposing"], [61, 2, 1, "", "render_history"], [61, 2, 1, "", "revert"], [61, 2, 1, "", "step"], [61, 2, 1, "", "update_gradient_memory"], [61, 2, 1, "", "zero_grad"]], "optim.TextOptimizer": [[61, 2, 1, "", "zero_grad"]], "optim.Trainer": [[61, 5, 1, "", "adaltask"], [61, 5, 1, "", "batch_val_score_threshold"], [61, 5, 1, "", "ckpt_file"], [61, 5, 1, "", "ckpt_path"], [61, 5, 1, "", "debug"], [61, 2, 1, "", "debug_report"], [61, 2, 1, "", "diagnose"], [61, 2, 1, "", "fit"], [61, 2, 1, "", "gather_trainer_states"], [61, 2, 1, "", "initial_validation"], [61, 5, 1, "", "max_correct_samples"], [61, 5, 1, "", "max_error_samples"], [61, 5, 1, "", "max_proposals_per_step"], [61, 5, 1, "", "max_steps"], [61, 5, 1, "", "num_workers"], [61, 5, 1, "", "optimization_order"], [61, 5, 1, "", "optimizer"], [61, 2, 1, "", "prep_ckpt_file_path"], [61, 5, 1, "", "strategy"], [61, 5, 1, "", "test_dataset"], [61, 5, 1, "", "train_batch_size"], [61, 5, 1, "", "train_loader"], [61, 5, 1, "", "val_dataset"]], "optim.few_shot": [[64, 0, 0, "-", "bootstrap_optimizer"]], "optim.few_shot.bootstrap_optimizer": [[64, 1, 1, "", "BootstrapFewShot"]], "optim.few_shot.bootstrap_optimizer.BootstrapFewShot": [[64, 2, 1, "", "add_scores"], [64, 2, 1, "", "config_dataset"], [64, 2, 1, "", "config_shots"], [64, 6, 1, "", "num_shots"], [64, 2, 1, "", "propose"], [64, 2, 1, "", "revert"], [64, 2, 1, "", "sample"], [64, 2, 1, "", "samples_to_str"], [64, 2, 1, "", "step"]], "optim.function": [[65, 1, 1, "", "BackwardContext"]], "optim.grad_component": [[66, 1, 1, "", "GradComponent"]], "optim.grad_component.GradComponent": [[66, 2, 1, "", "acall"], [66, 2, 1, "", "backward"], [66, 5, 1, "", "backward_engine"], [66, 2, 1, "", "call"], [66, 2, 1, "", "forward"], [66, 2, 1, "", "set_backward_engine"]], "optim.loss_component": [[67, 1, 1, "", "LossComponent"]], "optim.loss_component.LossComponent": [[67, 2, 1, "", "backward"], [67, 5, 1, "", "backward_engine"], [67, 2, 1, "", "forward"], [67, 2, 1, "", "set_backward_engine"]], "optim.optimizer": [[68, 1, 1, "", "DemoOptimizer"], [68, 1, 1, "", "Optimizer"], [68, 1, 1, "", "TextOptimizer"]], "optim.optimizer.DemoOptimizer": [[68, 2, 1, "", "config_shots"], [68, 5, 1, "", "dataset"], [68, 5, 1, "", "exclude_input_fields_from_bootstrap_demos"], [68, 5, 1, "", "params"], [68, 2, 1, "", "set_dataset"], [68, 2, 1, "", "use_weighted_sampling"]], "optim.optimizer.Optimizer": [[68, 5, 1, "", "params"], [68, 2, 1, "", "propose"], [68, 5, 1, "", "proposing"], [68, 2, 1, "", "revert"], [68, 2, 1, "", "state_dict"], [68, 2, 1, "", "step"]], "optim.optimizer.TextOptimizer": [[68, 2, 1, "", "zero_grad"]], "optim.parameter": [[69, 1, 1, "", "GradientContext"], [69, 1, 1, "", "Parameter"]], "optim.parameter.GradientContext": [[69, 5, 1, "", "context"], [69, 5, 1, "", "response_desc"], [69, 5, 1, "", "variable_desc"]], "optim.parameter.Parameter": [[69, 2, 1, "", "add_gradient"], [69, 2, 1, "", "add_score_to_trace"], [69, 2, 1, "", "add_successor_map_fn"], [69, 2, 1, "", "add_to_trace"], [69, 2, 1, "", "backward"], [69, 5, 1, "", "backward_engine_disabled"], [69, 2, 1, "", "check_if_already_computed_gradient_respect_to"], [69, 5, 1, "", "data"], [69, 2, 1, "", "draw_graph"], [69, 5, 1, "", "eval_input"], [69, 2, 1, "", "from_dict"], [69, 5, 1, "", "from_response_id"], [69, 5, 1, "", "full_response"], [69, 2, 1, "", "get_grad_fn"], [69, 2, 1, "", "get_gradient_and_context_text"], [69, 2, 1, "", "get_gradients_names"], [69, 2, 1, "", "get_param_info"], [69, 2, 1, "", "get_short_value"], [69, 5, 1, "", "gradient_prompt"], [69, 5, 1, "", "gradients"], [69, 5, 1, "", "gradients_context"], [69, 5, 1, "", "id"], [69, 5, 1, "", "input_args"], [69, 5, 1, "", "instruction_to_backward_engine"], [69, 5, 1, "", "instruction_to_optimizer"], [69, 2, 1, "", "map_to_successor"], [69, 5, 1, "", "name"], [69, 5, 1, "", "param_type"], [69, 5, 1, "", "peers"], [69, 5, 1, "", "predecessors"], [69, 2, 1, "", "propose_data"], [69, 5, 1, "", "proposing"], [69, 2, 1, "", "reset_gradients"], [69, 2, 1, "", "reset_gradients_context"], [69, 2, 1, "", "revert_data"], [69, 5, 1, "", "role_desc"], [69, 2, 1, "", "set_eval_fn_input"], [69, 2, 1, "", "set_grad_fn"], [69, 2, 1, "", "set_peers"], [69, 2, 1, "", "set_predecessors"], [69, 2, 1, "", "set_score"], [69, 2, 1, "", "step_data"], [69, 5, 1, "", "successor_map_fn"], [69, 2, 1, "", "to_dict"], [69, 2, 1, "", "trace_forward_pass"], [69, 2, 1, "", "trace_graph"], [69, 2, 1, "", "update_value"]], "optim.sampler": [[70, 1, 1, "", "ClassSampler"], [70, 1, 1, "", "RandomSampler"], [70, 1, 1, "", "Sample"], [70, 1, 1, "", "Sampler"]], "optim.sampler.ClassSampler": [[70, 2, 1, "", "call"], [70, 2, 1, "", "random_replace"], [70, 2, 1, "", "random_sample"]], "optim.sampler.RandomSampler": [[70, 2, 1, "", "call"], [70, 2, 1, "", "random_replace"], [70, 2, 1, "", "random_sample"], [70, 2, 1, "", "set_dataset"]], "optim.sampler.Sample": [[70, 5, 1, "", "data"], [70, 5, 1, "", "index"], [70, 2, 1, "", "to_dict"]], "optim.sampler.Sampler": [[70, 2, 1, "", "call"], [70, 5, 1, "", "dataset"], [70, 2, 1, "", "random_replace"], [70, 2, 1, "", "set_dataset"]], "optim.text_grad": [[71, 1, 1, "", "EvalFnToTextLoss"], [71, 1, 1, "", "LLMAsTextLoss"], [71, 1, 1, "", "Sum"], [71, 1, 1, "", "TGDOptimizer"], [72, 0, 0, "-", "backend_engine_prompt"], [73, 0, 0, "-", "llm_text_loss"], [74, 0, 0, "-", "ops"], [71, 4, 1, "", "sum_ops"], [75, 0, 0, "-", "text_loss_with_eval_fn"], [76, 0, 0, "-", "tgd_optimizer"]], "optim.text_grad.EvalFnToTextLoss": [[71, 2, 1, "", "backward"], [71, 2, 1, "", "forward"], [71, 2, 1, "", "set_backward_engine"]], "optim.text_grad.LLMAsTextLoss": [[71, 2, 1, "", "forward"]], "optim.text_grad.Sum": [[71, 2, 1, "", "backward"], [71, 2, 1, "", "forward"], [71, 5, 1, "", "name"]], "optim.text_grad.TGDOptimizer": [[71, 2, 1, "", "add_history"], [71, 2, 1, "", "add_score_to_current_param"], [71, 2, 1, "", "add_score_to_params"], [71, 6, 1, "", "constraint_text"], [71, 5, 1, "", "constraints"], [71, 2, 1, "", "get_gradient_memory_text"], [71, 5, 1, "", "params"], [71, 5, 1, "", "params_history"], [71, 2, 1, "", "propose"], [71, 5, 1, "", "proposing"], [71, 2, 1, "", "render_history"], [71, 2, 1, "", "revert"], [71, 2, 1, "", "step"], [71, 2, 1, "", "update_gradient_memory"], [71, 2, 1, "", "zero_grad"]], "optim.text_grad.llm_text_loss": [[73, 1, 1, "", "LLMAsTextLoss"]], "optim.text_grad.llm_text_loss.LLMAsTextLoss": [[73, 2, 1, "", "forward"]], "optim.text_grad.ops": [[74, 1, 1, "", "Sum"], [74, 4, 1, "", "sum_ops"]], "optim.text_grad.ops.Sum": [[74, 2, 1, "", "backward"], [74, 5, 1, "", "backward_engine"], [74, 2, 1, "", "forward"], [74, 5, 1, "", "name"], [74, 5, 1, "", "training"]], "optim.text_grad.text_loss_with_eval_fn": [[75, 1, 1, "", "EvalFnToTextLoss"]], "optim.text_grad.text_loss_with_eval_fn.EvalFnToTextLoss": [[75, 2, 1, "", "backward"], [75, 2, 1, "", "forward"], [75, 2, 1, "", "set_backward_engine"]], "optim.text_grad.tgd_optimizer": [[76, 1, 1, "", "HistoryPrompt"], [76, 1, 1, "", "Instruction"], [76, 1, 1, "", "TGDOptimizer"], [76, 4, 1, "", "extract_new_variable"]], "optim.text_grad.tgd_optimizer.HistoryPrompt": [[76, 5, 1, "", "eval_score"], [76, 5, 1, "", "id"], [76, 5, 1, "", "value"]], "optim.text_grad.tgd_optimizer.Instruction": [[76, 5, 1, "", "gts"], [76, 5, 1, "", "responses"], [76, 5, 1, "", "score"], [76, 5, 1, "", "text"]], "optim.text_grad.tgd_optimizer.TGDOptimizer": [[76, 2, 1, "", "add_history"], [76, 2, 1, "", "add_score_to_current_param"], [76, 2, 1, "", "add_score_to_params"], [76, 6, 1, "", "constraint_text"], [76, 5, 1, "", "constraints"], [76, 2, 1, "", "get_gradient_memory_text"], [76, 5, 1, "", "params"], [76, 5, 1, "", "params_history"], [76, 2, 1, "", "propose"], [76, 5, 1, "", "proposing"], [76, 2, 1, "", "render_history"], [76, 2, 1, "", "revert"], [76, 2, 1, "", "step"], [76, 2, 1, "", "update_gradient_memory"], [76, 2, 1, "", "zero_grad"]], "optim.trainer": [[77, 1, 1, "", "AdalComponent"], [77, 1, 1, "", "Trainer"], [78, 0, 0, "-", "adal"], [79, 0, 0, "-", "trainer"]], "optim.trainer.AdalComponent": [[77, 5, 1, "", "backward_engine"], [77, 2, 1, "", "configure_backward_engine"], [77, 2, 1, "", "configure_backward_engine_helper"], [77, 2, 1, "", "configure_callbacks"], [77, 2, 1, "", "configure_demo_optimizer_helper"], [77, 2, 1, "", "configure_optimizers"], [77, 2, 1, "", "configure_teacher_generator"], [77, 2, 1, "", "configure_teacher_generator_helper"], [77, 2, 1, "", "configure_text_optimizer_helper"], [77, 5, 1, "", "eval_fn"], [77, 2, 1, "", "evaluate_samples"], [77, 5, 1, "", "loss_fn"], [77, 2, 1, "", "loss_step"], [77, 2, 1, "", "pred_step"], [77, 2, 1, "", "prepare_eval"], [77, 2, 1, "", "prepare_loss"], [77, 2, 1, "", "prepare_task"], [77, 2, 1, "", "run_one_loss_sample"], [77, 2, 1, "", "run_one_task_sample"], [77, 5, 1, "", "task"], [77, 2, 1, "", "train_step"], [77, 5, 1, "", "training"], [77, 2, 1, "", "validate_condition"], [77, 2, 1, "", "validation_step"]], "optim.trainer.Trainer": [[77, 5, 1, "", "adaltask"], [77, 5, 1, "", "batch_val_score_threshold"], [77, 5, 1, "", "ckpt_file"], [77, 5, 1, "", "ckpt_path"], [77, 5, 1, "", "debug"], [77, 2, 1, "", "debug_report"], [77, 5, 1, "", "demo_optimizers"], [77, 2, 1, "", "diagnose"], [77, 2, 1, "", "fit"], [77, 2, 1, "", "gather_trainer_states"], [77, 2, 1, "", "initial_validation"], [77, 5, 1, "", "max_correct_samples"], [77, 5, 1, "", "max_error_samples"], [77, 5, 1, "", "max_proposals_per_step"], [77, 5, 1, "", "max_steps"], [77, 5, 1, "", "num_workers"], [77, 5, 1, "", "optimization_order"], [77, 5, 1, "", "optimizer"], [77, 2, 1, "", "prep_ckpt_file_path"], [77, 5, 1, "", "strategy"], [77, 5, 1, "", "test_dataset"], [77, 5, 1, "", "text_optimizers"], [77, 5, 1, "", "train_batch_size"], [77, 5, 1, "", "train_loader"], [77, 5, 1, "", "training"], [77, 5, 1, "", "val_dataset"]], "optim.trainer.adal": [[78, 1, 1, "", "AdalComponent"]], "optim.trainer.adal.AdalComponent": [[78, 5, 1, "", "backward_engine"], [78, 2, 1, "", "configure_backward_engine"], [78, 2, 1, "", "configure_backward_engine_helper"], [78, 2, 1, "", "configure_callbacks"], [78, 2, 1, "", "configure_demo_optimizer_helper"], [78, 2, 1, "", "configure_optimizers"], [78, 2, 1, "", "configure_teacher_generator"], [78, 2, 1, "", "configure_teacher_generator_helper"], [78, 2, 1, "", "configure_text_optimizer_helper"], [78, 5, 1, "", "eval_fn"], [78, 2, 1, "", "evaluate_samples"], [78, 5, 1, "", "loss_fn"], [78, 2, 1, "", "loss_step"], [78, 2, 1, "", "pred_step"], [78, 2, 1, "", "prepare_eval"], [78, 2, 1, "", "prepare_loss"], [78, 2, 1, "", "prepare_task"], [78, 2, 1, "", "run_one_loss_sample"], [78, 2, 1, "", "run_one_task_sample"], [78, 5, 1, "", "task"], [78, 2, 1, "", "train_step"], [78, 5, 1, "", "training"], [78, 2, 1, "", "validate_condition"], [78, 2, 1, "", "validation_step"]], "optim.trainer.trainer": [[79, 1, 1, "", "Trainer"]], "optim.trainer.trainer.Trainer": [[79, 5, 1, "", "adaltask"], [79, 5, 1, "", "batch_val_score_threshold"], [79, 5, 1, "", "ckpt_file"], [79, 5, 1, "", "ckpt_path"], [79, 5, 1, "", "debug"], [79, 2, 1, "", "debug_report"], [79, 5, 1, "", "demo_optimizers"], [79, 2, 1, "", "diagnose"], [79, 2, 1, "", "fit"], [79, 2, 1, "", "gather_trainer_states"], [79, 2, 1, "", "initial_validation"], [79, 5, 1, "", "max_correct_samples"], [79, 5, 1, "", "max_error_samples"], [79, 5, 1, "", "max_proposals_per_step"], [79, 5, 1, "", "max_steps"], [79, 5, 1, "", "num_workers"], [79, 5, 1, "", "optimization_order"], [79, 5, 1, "", "optimizer"], [79, 2, 1, "", "prep_ckpt_file_path"], [79, 5, 1, "", "strategy"], [79, 5, 1, "", "test_dataset"], [79, 5, 1, "", "text_optimizers"], [79, 5, 1, "", "train_batch_size"], [79, 5, 1, "", "train_loader"], [79, 5, 1, "", "training"], [79, 5, 1, "", "val_dataset"]], "optim.types": [[80, 1, 1, "", "EvaluationResult"], [80, 1, 1, "", "ParameterType"], [80, 1, 1, "", "PromptData"], [80, 1, 1, "", "TrainerResult"], [80, 1, 1, "", "TrainerStepResult"], [80, 1, 1, "", "TrainerValidateStats"]], "optim.types.EvaluationResult": [[80, 5, 1, "", "feedback"], [80, 5, 1, "", "score"]], "optim.types.ParameterType": [[80, 5, 1, "", "DEMOS"], [80, 5, 1, "", "GENERATOR_OUTPUT"], [80, 5, 1, "", "GRADIENT"], [80, 5, 1, "", "HYPERPARAM"], [80, 5, 1, "", "INPUT"], [80, 5, 1, "", "LOSS_OUTPUT"], [80, 5, 1, "", "NONE"], [80, 5, 1, "", "OUTPUT"], [80, 5, 1, "", "PROMPT"], [80, 5, 1, "", "RETRIEVER_OUTPUT"], [80, 5, 1, "", "SUM_OUTPUT"]], "optim.types.PromptData": [[80, 5, 1, "", "data"], [80, 5, 1, "", "id"], [80, 5, 1, "", "name"], [80, 5, 1, "", "requires_opt"]], "optim.types.TrainerResult": [[80, 5, 1, "", "effective_measure"], [80, 5, 1, "", "prompts"], [80, 5, 1, "", "step_results"], [80, 5, 1, "", "steps"], [80, 5, 1, "", "test_scores"], [80, 5, 1, "", "time_stamp"], [80, 5, 1, "", "trainer_state"], [80, 5, 1, "", "val_scores"], [80, 5, 1, "", "validate_stats"]], "optim.types.TrainerStepResult": [[80, 5, 1, "", "attempted_val_score"], [80, 5, 1, "", "prompt"], [80, 5, 1, "", "step"], [80, 5, 1, "", "test_score"], [80, 5, 1, "", "val_score"]], "optim.types.TrainerValidateStats": [[80, 5, 1, "", "max_score"], [80, 5, 1, "", "mean_of_score"], [80, 5, 1, "", "min_score"], [80, 5, 1, "", "std_of_score"]], "tracing": [[82, 0, 0, "-", "callback_manager"], [83, 0, 0, "-", "decorators"], [84, 0, 0, "-", "generator_call_logger"], [85, 0, 0, "-", "generator_state_logger"]], "tracing.callback_manager": [[82, 1, 1, "", "CallbackManager"]], "tracing.callback_manager.CallbackManager": [[82, 2, 1, "", "register_callback"], [82, 2, 1, "", "trigger_callbacks"]], "tracing.decorators": [[83, 4, 1, "", "trace_generator_call"], [83, 4, 1, "", "trace_generator_states"]], "tracing.generator_call_logger": [[84, 1, 1, "", "GeneratorCallLogger"], [84, 1, 1, "", "GeneratorCallRecord"]], "tracing.generator_call_logger.GeneratorCallLogger": [[84, 6, 1, "", "generator_names_to_files"], [84, 2, 1, "", "get_calls"], [84, 2, 1, "", "get_log_location"], [84, 2, 1, "", "load"], [84, 2, 1, "", "load_meta_data"], [84, 2, 1, "", "log_call"], [84, 2, 1, "", "register_generator"], [84, 2, 1, "", "reset"], [84, 2, 1, "", "save_meta_data"]], "tracing.generator_call_logger.GeneratorCallRecord": [[84, 5, 1, "", "input"], [84, 5, 1, "", "metadata"], [84, 5, 1, "", "model_kwargs"], [84, 5, 1, "", "output"], [84, 5, 1, "", "prompt_kwargs"], [84, 5, 1, "", "time_stamp"]], "tracing.generator_state_logger": [[85, 1, 1, "", "GeneratorStateLogger"], [85, 1, 1, "", "GeneratorStatesRecord"]], "tracing.generator_state_logger.GeneratorStateLogger": [[85, 6, 1, "", "generator_names"], [85, 2, 1, "", "get_log_location"], [85, 2, 1, "", "load"], [85, 2, 1, "", "log_prompt"], [85, 2, 1, "", "save"]], "tracing.generator_state_logger.GeneratorStatesRecord": [[85, 5, 1, "", "prompt_states"], [85, 5, 1, "", "time_stamp"]], "utils": [[87, 0, 0, "-", "cache"], [88, 0, 0, "-", "config"], [89, 0, 0, "-", "data"], [90, 0, 0, "-", "file_io"], [91, 0, 0, "-", "global_config"], [92, 0, 0, "-", "lazy_import"], [93, 0, 0, "-", "logger"], [94, 0, 0, "-", "registry"], [95, 0, 0, "-", "serialization"], [96, 0, 0, "-", "setup_env"]], "utils.cache": [[87, 1, 1, "", "CachedEngine"], [87, 4, 1, "", "direct"], [87, 4, 1, "", "hash_text"], [87, 4, 1, "", "hash_text_sha1"]], "utils.config": [[88, 4, 1, "", "new_component"], [88, 4, 1, "", "new_components_from_config"]], "utils.data": [[89, 1, 1, "", "DataLoader"], [89, 1, 1, "", "Dataset"], [89, 1, 1, "", "Subset"], [89, 4, 1, "", "subset_dataset"]], "utils.data.DataLoader": [[89, 2, 1, "", "set_max_steps"]], "utils.data.Subset": [[89, 5, 1, "", "dataset"], [89, 5, 1, "", "indices"]], "utils.file_io": [[90, 4, 1, "", "append_to_jsonl"], [90, 4, 1, "", "load"], [90, 4, 1, "", "load_json"], [90, 4, 1, "", "load_jsonl"], [90, 4, 1, "", "load_pickle"], [90, 4, 1, "", "save"], [90, 4, 1, "", "save_csv"], [90, 4, 1, "", "save_json"], [90, 4, 1, "", "save_pickle"], [90, 4, 1, "", "write_list_to_jsonl"]], "utils.global_config": [[91, 4, 1, "", "get_adalflow_default_root_path"]], "utils.lazy_import": [[92, 1, 1, "", "LazyImport"], [92, 1, 1, "", "OptionalPackages"], [92, 4, 1, "", "safe_import"]], "utils.lazy_import.LazyImport": [[92, 2, 1, "", "load_class"]], "utils.lazy_import.OptionalPackages": [[92, 5, 1, "", "ANTHROPIC"], [92, 5, 1, "", "AZURE"], [92, 5, 1, "", "BOTO3"], [92, 5, 1, "", "COHERE"], [92, 5, 1, "", "DATASETS"], [92, 5, 1, "", "FAISS"], [92, 5, 1, "", "GOOGLE_GENERATIVEAI"], [92, 5, 1, "", "GROQ"], [92, 5, 1, "", "LANCEDB"], [92, 5, 1, "", "OLLAMA"], [92, 5, 1, "", "OPENAI"], [92, 5, 1, "", "PGVECTOR"], [92, 5, 1, "", "QDRANT"], [92, 5, 1, "", "SQLALCHEMY"], [92, 5, 1, "", "TORCH"], [92, 5, 1, "", "TRANSFORMERS"]], "utils.logger": [[93, 4, 1, "", "get_current_script_and_line"], [93, 4, 1, "", "get_logger"], [93, 4, 1, "", "printc"]], "utils.registry": [[94, 1, 1, "", "EntityMapping"]], "utils.registry.EntityMapping": [[94, 2, 1, "", "get"], [94, 2, 1, "", "get_all"], [94, 2, 1, "", "register"]], "utils.serialization": [[95, 1, 1, "", "ObjectTypes"], [95, 4, 1, "", "check_object"], [95, 4, 1, "", "default"], [95, 4, 1, "", "deserialize"], [95, 4, 1, "", "serialize"], [95, 4, 1, "", "to_dict"]], "utils.serialization.ObjectTypes": [[95, 5, 1, "", "CLASS"], [95, 5, 1, "", "INSTANCE"], [95, 5, 1, "", "TYPE"]], "utils.setup_env": [[96, 4, 1, "", "setup_env"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "data", "Python data"], "4": ["py", "function", "Python function"], "5": ["py", "attribute", "Python attribute"], "6": ["py", "property", "Python property"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:data", "4": "py:function", "5": "py:attribute", "6": "py:property"}, "terms": {"": [1, 2, 4, 6, 9, 12, 13, 15, 16, 21, 22, 24, 31, 32, 36, 39, 40, 41, 61, 64, 68, 69, 70, 71, 73, 75, 77, 78, 79, 92, 93, 98, 99, 101, 105, 110, 111, 112, 113, 115, 116, 119, 120, 121, 122, 123, 125, 127, 128, 130, 131, 132, 133, 135, 136, 138, 139, 140, 144, 145, 147, 152, 153, 155], "0": [2, 4, 11, 12, 14, 16, 21, 22, 23, 26, 30, 31, 32, 33, 37, 38, 45, 53, 55, 56, 57, 58, 59, 61, 64, 71, 75, 76, 77, 79, 80, 92, 97, 100, 101, 104, 110, 111, 112, 113, 116, 120, 122, 123, 131, 132, 133, 137, 138, 139, 140, 144, 152, 153, 155], "00": [111, 120, 121, 144], "0001": 37, "00016600126": 122, "00018637415": 122, "0003912348": 122, "00045548353": 122, "00063306844": 122, "00093111617": 122, "0009763892": 122, "001149847": 122, "001270235": 122, "001274437": 122, "0013953627": 122, "0015121206": 122, "0016585035": 122, "0017067948": 122, "0017369769": 122, "0018af12": 120, "002": 139, "002240922": 122, "0023736332": 122, "0024688914": 122, "0025802834": 122, "0027390209": 122, "002749016": 122, "0027831418": 122, "0032514224": 122, "0032596611": 122, "0035554452": 122, "0035945757": 122, "004110795": 122, "0042391727": 122, "00427709": 122, "004391488": 122, "0045538875": 122, "0048683644": 122, "005190901": 122, "005429781": 122, "0055172783": 122, "0059066266": 122, "0060756463": 122, "0065862634": 122, "006953944": 122, "007086745": 122, "0072255824": 122, "0073946016": 122, "007424784": 122, "0076722763": 122, "008243256": 122, "008804435": 122, "00888027": 122, "00918361": 122, "0092658885": 122, "009380581": 122, "009410762": 122, "009845384": 122, "0098876385": 122, "0099192085": 122, "00z": 120, "010159277": 122, "010340369": 122, "01047317": 122, "010648226": 122, "010723059": 122, "011026398": 122, "01102852": 122, "011178068": 122, "011329738": 122, "011336377": 122, "011663412": 122, "0118985": 122, "012314276": 122, "012414178": 122, "012519513": 122, "012596182": 122, "01262": 123, "012740267": 122, "01283127": 122, "012846436": 122, "013225611": 122, "013333333333333197": 123, "013376684": 122, "013642286": 122, "013799232": 122, "014256966": 122, "014401053": 122, "0144541375": 122, "014545139": 122, "014752985": 122, "014813349": 122, "01541699": 122, "015417241": 122, "015500659": 122, "015549791": 122, "015742956": 122, "015791247": 122, "015851611": 122, "01600117": 122, "016137673": 122, "016201723": 122, "016310379": 122, "016319677": 122, "016503545": 122, "016853655": 122, "017123526": 122, "017179621": 122, "017199362": 122, "01721584": 122, "017252058": 122, "017384859": 122, "0175027": 122, "017819481": 122, "017942544": 122, "018185215": 122, "01821555": 122, "018579558": 122, "019038836": 122, "0191": 132, "019186236": 122, "019337907": 122, "01965455": 122, "01t12": 120, "01z": 120, "020113317": 122, "020202424": 122, "020318555": 122, "02047543": 122, "020702936": 122, "02072903": 122, "020733269": 122, "020777322": 122, "02094634": 122, "02170693": 122, "021855626": 122, "022022463": 122, "022083132": 122, "022370934": 122, "022491662": 122, "022583641": 122, "022795979": 122, "022917315": 122, "023175154": 122, "02349366": 122, "02435818": 122, "024447458": 122, "024479514": 122, "02448e3fd394": 120, "02449575": 122, "024570517": 122, "024691852": 122, "024773424": 122, "02479802": 122, "024821715": 122, "0249183": 122, "024919357": 122, "024995193": 122, "025014881": 122, "025159756": 122, "025237864": 122, "025283365": 122, "025304629": 122, "025344033": 122, "0253592": 122, "025449503": 122, "025763396": 122, "025811687": 122, "025829377": 122, "026026547": 122, "02642089": 122, "02646639": 122, "026527058": 122, "026560202": 122, "026845565": 122, "02686073": 122, "027526028": 122, "027646756": 122, "027719192": 122, "02781625": 122, "02787692": 122, "027888212": 122, "028250396": 122, "028274542": 122, "028392596": 122, "028419416": 122, "028588437": 122, "028709164": 122, "028711103": 122, "028999276": 122, "029023057": 122, "029095493": 122, "029393617": 122, "029454285": 122, "029578406": 122, "02959079": 122, "029819863": 122, "02t15": 130, "02z": 120, "03": 144, "030351067": 122, "030515974": 122, "030561475": 122, "030737398": 122, "031122655": 122, "031425994": 122, "03148666": 122, "03172": 138, "031992972": 122, "032282718": 122, "03250003": 122, "03254835": 122, "03288636": 122, "032958794": 122, "033031233": 122, "033200253": 122, "033320982": 122, "03374": 123, "03409": [76, 123, 152, 153], "03414193": 122, "034190223": 122, "034338057": 122, "03438339": 122, "034398723": 122, "034489725": 122, "034673136": 122, "034793064": 122, "035096403": 122, "03520434": 122, "035276778": 122, "03530092": 122, "035399742": 122, "0354458": 122, "035460413": 122, "03567275": 122, "03575969": 122, "035794087": 122, "035945754": 122, "036188427": 122, "036249094": 122, "03629": [0, 1, 111], "03648406": 122, "036582768": 122, "03714": [152, 153], "03718945": 122, "037280865": 122, "037715487": 122, "03773546": 122, "037787925": 122, "03828147": 122, "038294982": 122, "03841571": 122, "038463477": 122, "038898624": 122, "039161157": 122, "03934316": 122, "03940383": 122, "03940568": 122, "039555497": 122, "039792012": 122, "039828505": 122, "039919507": 122, "03t16": 130, "03z": 120, "04": 121, "040178344": 122, "040274926": 122, "04090271": 122, "041820247": 122, "041868538": 122, "042224888": 122, "042285554": 122, "042497892": 122, "042649563": 122, "042810217": 122, "0428619": 122, "042922568": 122, "042952903": 122, "043104574": 122, "04352925": 122, "04363117": 122, "043776043": 122, "043802254": 122, "043893255": 122, "044017497": 122, "0442831": 122, "044408932": 122, "0445487": 122, "044596992": 122, "04500747": 122, "045128196": 122, "045200635": 122, "045318954": 122, "04537962": 122, "045409955": 122, "045500956": 122, "045755986": 122, "046214752": 122, "046380643": 122, "046842538": 122, "047301304": 122, "04732545": 122, "04735133": 122, "04744618": 122, "048018675": 122, "048170548": 122, "048242986": 122, "04844335": 122, "048534352": 122, "04865569": 122, "04874669": 122, "04882248": 122, "0491107": 122, "049112227": 122, "049257103": 122, "049474705": 122, "04964343": 122, "04988489": 122, "04it": 120, "05": [9, 37, 129, 144], "05011172": 122, "050126344": 122, "050688066": 122, "050995983": 131, "05133363": 122, "051385745": 122, "051749755": 122, "05202276": 122, "052057996": 122, "052106287": 122, "05220287": 122, "052417103": 122, "053175453": 122, "05331357": 122, "05338779": 122, "05369113": 122, "05408623": 122, "054115806": 122, "054617435": 122, "054762308": 122, "055341803": 122, "055390093": 122, "055631552": 122, "055824716": 122, "05584484": 122, "05606617": 122, "056500793": 122, "056549083": 122, "057031997": 122, "057118867": 122, "057209868": 122, "05794953": 122, "057968218": 122, "05877048": 122, "059393916": 122, "059543144": 122, "059977766": 122, "06": 130, "060026057": 122, "06033427": 122, "060455605": 122, "060750425": 122, "060758945": 122, "060940947": 122, "06109262": 122, "06205429": 122, "062150873": 122, "062199164": 122, "062427312": 122, "06244062": 122, "0625372": 122, "062609315": 122, "06335816": 122, "063458666": 122, "06351934": 122, "06358001": 122, "06424735": 122, "06430802": 122, "06437227": 122, "06467": 123, "06527871": 122, "065521374": 122, "065724425": 122, "06596588": 122, "06615905": 122, "066492066": 122, "06691674": 122, "067159414": 122, "06782676": 122, "06799412": 122, "06842874": 122, "06881507": 122, "069404125": 122, "06978089": 122, "06983": 136, "06995014": 122, "06ea7cea": 120, "07": [111, 129], "070553556": 122, "07061748": 122, "0708433": 122, "0708916": 122, "07113305": 122, "07158817": 122, "07185742": 122, "07249819": 122, "07261953": 122, "07296812": 122, "07298353": 122, "074030526": 122, "07407882": 122, "07456173": 122, "07486424": 122, "07496": [152, 153], "07510691": 122, "07554": 138, "07595626": 122, "07597": 16, "076138265": 122, "07654167": 122, "07736263": 122, "077507496": 122, "07753363": 122, "077776305": 122, "07794212": 122, "0780387": 122, "078569904": 122, "078763075": 122, "07881136": 122, "07883": [123, 145], "079110995": 122, "07989968": 122, "07d2": [50, 52], "08088789": 122, "08103276": 122, "08112934": 122, "081225924": 122, "08199859": 122, "08256907": 122, "08275107": 122, "08277125": 122, "082872406": 122, "083054416": 122, "08317575": 122, "083539754": 122, "083600424": 122, "083737075": 122, "08397853": 122, "0841717": 122, "08426777": 122, "08432844": 122, "084389105": 122, "08494435": 122, "08523846": 122, "08553": 136, "085717015": 122, "085905805": 122, "08651248": 122, "08658626": 122, "08669449": 122, "08774": [56, 123], "08851453": 122, "08861449": 122, "08880766": 122, "088952534": 122, "08962861": 122, "09": [111, 120], "090455905": 122, "09081991": 122, "09100191": 122, "091183916": 122, "091244586": 122, "09148726": 122, "09172993": 122, "09199488": 122, "09209394": 122, "09213976": 122, "092639945": 122, "0935402": 122, "09354997": 122, "09382995": 122, "09433865": 122, "0946509": 122, "09476": 123, "09503723": 122, "09614793": 122, "09634069": 122, "09793471": 122, "09925275": 122, "099495426": 122, "0d16": [2, 4, 139], "0d95cc65e6ef": 122, "0x104970220": 140, "0x104970400": 140, "0x105e3b920": 140, "0x105e3bc40": 140, "0x1062a2840": 140, "0x106d691c0": 140, "0x10fb26f20": 120, "0x11382fa60": 111, "0x11384b740": 111, "0x11742eca0": 140, "0x117b98360": 140, "0x14d9d3f60": 140, "0x14d9e4040": 140, "0x14d9e40e0": 140, "0x14d9e4180": 140, "0x14d9e4220": 140, "0x14d9e4360": 140, "1": [0, 1, 2, 4, 8, 12, 14, 15, 16, 20, 21, 22, 23, 25, 26, 27, 30, 31, 32, 33, 35, 36, 38, 40, 45, 50, 52, 53, 55, 56, 57, 58, 59, 61, 64, 66, 69, 71, 75, 77, 78, 79, 80, 88, 92, 95, 97, 100, 101, 103, 110, 111, 112, 113, 116, 120, 121, 123, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 143, 144, 145, 147, 151, 152, 153, 155], "10": [0, 1, 14, 27, 61, 69, 70, 77, 79, 93, 111, 120, 123, 127, 129, 131, 132, 136, 138, 140, 147, 152], "100": [14, 35, 45, 47, 49, 52, 88, 101, 106, 120, 121, 122, 123, 131, 133, 144, 152, 153], "1000": [2, 4, 61, 77, 79, 105, 121, 123], "100156106": 122, "10046611": 122, "10054244": 122, "10064811": 122, "10204348": 122, "10205": 120, "10210415": 122, "1024": 128, "102407485": 122, "102468155": 122, "10289283": 122, "1029535": 122, "103074834": 122, "104888655": 122, "10519821": 122, "10580489": 122, "106168896": 122, "106957585": 122, "10762493": 122, "108": 144, "10868": 136, "10875195": 122, "10950564": 122, "11": [121, 123, 136, 138, 144], "111386344": 122, "11155285": 122, "11164943": 122, "11174601": 122, "1124177": 122, "113": [101, 152, 153], "11396741": 122, "11401": [136, 138, 143], "11423773": 122, "11434": 14, "11496575": 122, "11511": 136, "11532976": 122, "1156331": 122, "115995646": 122, "11618881": 122, "11686489": 122, "11802388": 122, "12": [101, 104, 111, 123, 136, 144, 152, 153], "121821225": 122, "12218524": 122, "122670576": 122, "122853": 122, "123": [42, 45, 98], "12652": 136, "128": 14, "12it": 120, "13": [111, 123, 136, 155], "13125569": 122, "13164201": 122, "13395482": 122, "134": 98, "135": 98, "13516818": 122, "13577485": 122, "13667a953498": [50, 52], "13985154": 122, "14": [98, 123, 131, 132, 136, 144], "14283": 136, "144": [49, 52, 144], "14545332": 122, "14796448": 122, "149": 111, "149265": 111, "15": [9, 98, 122, 123, 132, 136, 144], "151683837681807": 138, "155": 155, "158": 98, "15884": 136, "15px": 130, "16": [11, 111, 123, 132, 136, 155], "1617": 155, "1625": 155, "163da9868ea4": [2, 4, 139], "16574481": 122, "1664": 155, "17": [123, 132, 136, 152], "17072": 123, "1720": 155, "17654371": 122, "17761531": 122, "17933443": 122, "18": [111, 123, 129], "180": 133, "18041": 123, "18089913": 122, "18447268": 122, "18527": 111, "1855": 144, "19": [123, 144], "1909": 155, "192": 98, "19306852": 122, "194": 98, "196ec25d39c4": 122, "19736": 123, "1976": [58, 59, 123], "1995": 155, "1997": 111, "1998": [58, 59, 123], "1e": 37, "2": [0, 1, 2, 4, 12, 14, 15, 16, 18, 20, 21, 22, 23, 27, 30, 31, 32, 33, 36, 38, 40, 45, 53, 56, 57, 58, 59, 61, 66, 69, 77, 78, 88, 95, 97, 100, 101, 103, 111, 112, 113, 116, 120, 121, 122, 123, 126, 128, 129, 131, 132, 133, 135, 136, 137, 138, 139, 143, 144, 145, 147, 151, 152, 153], "20": [101, 116, 123, 144, 152, 153, 155], "200": [2, 4, 88, 133], "2000": [101, 123, 152, 153, 155], "2002": 123, "2004": 123, "2005": [123, 136, 138, 143], "2008": 155, "2009": 136, "2010": 123, "2014": [21, 22], "2015": 155, "2020": [123, 128, 136, 143], "2021": [120, 123], "2023": [0, 1, 9, 123, 136], "2023c": 136, "2024": [8, 11, 12, 13, 111, 123, 129, 130, 145], "20240229": 128, "20417552": 122, "2048": 14, "20px": 130, "21": [123, 130], "2107": 123, "21549304": 131, "2167": 120, "21c8": [50, 52], "21f0385d": 120, "22": [13, 123, 129, 140], "2210": [0, 1, 111], "2222": 123, "223220": 130, "226": [101, 152, 153], "2301": 136, "2303": [56, 123, 136], "2305": 136, "2307": 138, "2309": [16, 76, 123, 152, 153], "2310": [123, 136, 138, 152, 153], "2311": 123, "2329ffa8d4b6": 120, "24": [14, 144], "2401": [123, 136, 145], "2402": 123, "24047995": 131, "2406": [152, 153], "2408": 123, "24366009": 131, "244": 111, "244562": 111, "2471023025": 136, "249": 129, "24it": 120, "25": [21, 22, 30, 101, 129, 138, 147, 152, 153], "2500": 123, "256": [35, 88, 120, 121, 122, 138], "260": 98, "261": 98, "266": 111, "27": 137, "27cc": 120, "27cec433": 139, "28": [58, 59, 123, 144], "287": 111, "29": [58, 59, 123, 155], "297": 111, "29728": 123, "2a78": 120, "2ae492258b53": 139, "2b": 16, "2d72e6e7": 132, "2e25ae5336c8": [2, 4, 139], "2e6f4452827b": 120, "2e8e63041698": 120, "2f": [131, 140], "2it": 120, "2wikimultihopqa": 123, "3": [0, 1, 9, 12, 21, 22, 31, 32, 33, 35, 37, 38, 45, 53, 56, 57, 58, 59, 61, 66, 71, 76, 77, 78, 83, 88, 95, 97, 100, 103, 111, 112, 113, 116, 120, 121, 122, 123, 125, 126, 128, 129, 131, 132, 135, 136, 137, 138, 139, 145, 146, 147, 151, 155], "30": [104, 133], "301": 111, "31": 104, "311": 123, "318": 123, "321": 111, "32768": 13, "33": 123, "3333333333333333": 123, "33333333333333337": 123, "33437008": 131, "353b738c1b71": 120, "36": [49, 52, 101, 144, 152, 153], "37": 130, "37041178": 131, "37da1fbf": 132, "37e1d8ff0526": 120, "37it": 120, "38404a09": 132, "39": 129, "3927": [2, 4, 139], "3929": 136, "3938": 136, "3b": 16, "3rd": [30, 138], "4": [0, 1, 12, 13, 37, 45, 56, 59, 61, 77, 79, 89, 100, 101, 103, 111, 123, 126, 129, 131, 132, 136, 137, 138, 140, 144, 145, 147, 152, 153], "40": [14, 127, 144], "400": 88, "400m": [136, 143], "401": 125, "402c": 132, "405a": 120, "4077": 120, "40f0": [2, 4, 139], "40th": 123, "417ab8b4e3cc": 132, "42": [133, 144], "4206": 120, "424242424244": 111, "4248": [2, 4, 139], "428d": 132, "43": 129, "435b": 120, "43a4": 120, "43f5": 120, "44": 130, "440": 100, "442f": 120, "44a8aa37": [2, 4, 139], "44fc": 132, "45": [42, 123, 130], "4509756": 131, "4568096570283078": 138, "45efa517": 120, "46": 144, "465": 111, "4667": 120, "4682": 132, "46it": 120, "47": 111, "4780": 120, "48": 111, "483b": 120, "485": 111, "4870": 120, "48ce": 120, "48it": 144, "49": [111, 129], "4917": 122, "493d": 120, "49b5": [2, 4, 139], "49ff": 120, "4a392e464fe7": 132, "4aa8": 139, "4aae": 152, "4bd0": 120, "4bf2": [50, 52], "4ca4": 139, "4ce3": 122, "4d36": [50, 52], "4d8e": [101, 152, 153], "4e24": 120, "4eb4": 120, "4f": 131, "4f11": 139, "4f5f": 120, "4f6f": 132, "4f88": [2, 4, 139], "4o": [123, 138, 144, 146], "5": [0, 1, 2, 4, 9, 12, 14, 21, 22, 23, 24, 28, 31, 36, 37, 38, 56, 61, 77, 79, 83, 97, 100, 104, 111, 113, 116, 120, 123, 125, 128, 129, 131, 136, 137, 138, 139, 140, 145, 146, 147], "50": [2, 3, 16, 47, 52, 101, 111, 120, 131, 140, 152, 153], "51": 111, "51011": 144, "512": [8, 16], "5166601493236314": 138, "518a": 120, "52": 111, "5316efd58d58": 120, "5343238380789569": 138, "54": [101, 152, 155], "5432": 26, "544": 111, "55": 130, "56": 130, "569a": 120, "57": 144, "582859": 130, "5869e6cd": 132, "59it": 121, "5a8b57f25542995d1e6f1371": 155, "5ba2": 122, "5px": 130, "6": [11, 61, 70, 101, 111, 120, 123, 129, 131, 136, 138, 140, 144, 145, 152, 153, 155], "60": 144, "600": [49, 52], "609": 120, "61": 144, "6175549": 131, "6229580777634034": [21, 22], "6294762236217233": 138, "63072": 120, "6333": 138, "64": [14, 144], "64987b2b": 120, "65": [101, 123, 152], "66": 153, "6666666666666666": [123, 140], "67": 144, "69": 144, "6986ba52a0d3": 132, "7": [14, 26, 101, 104, 123, 129, 133, 136, 137, 138, 145, 152, 153], "70": 133, "70b": [13, 111, 137], "71a2": 132, "72": [101, 123, 140, 152, 153], "7335e34ee0c6": 120, "73c12be3": 120, "75": [21, 22, 133, 138, 144], "756148": 130, "75dd1e09abab": 152, "75dd1e09abab_root": 152, "765794": 130, "768": 121, "77": [144, 153], "7749999761581421": 138, "7790170272403408": 138, "78": 144, "782": 111, "7844": 120, "78917586": 122, "79it": 120, "7a17ed45": 120, "7a4f86892556": 120, "7b": [13, 16], "7minut": 123, "8": [8, 12, 14, 21, 22, 61, 77, 79, 101, 104, 123, 131, 136, 138, 144, 152, 153, 155], "80": [101, 144, 152, 153], "800": [2, 4], "8031794089550072": 138, "81": 144, "8109999895095825": 138, "8119999766349792": 138, "8169999718666077": 138, "8192": [13, 31, 111, 125, 131, 137], "81it": 144, "82": 144, "823": 144, "82e6": [101, 152, 153], "82fb": 139, "8348623853211009": 144, "83rd": 123, "84": [144, 153], "840021aa1953": 120, "8426": 144, "8462": 152, "85": 155, "86": 144, "8678": 120, "87": [101, 152, 153], "87e0": 120, "88": [101, 144, 152, 153], "8819": 144, "8819444444444444": 144, "8871": 139, "88b1": 139, "89": [101, 144, 152, 153], "8905dc5f": 139, "8977522850037": 144, "89th": 123, "8a12": 132, "8b": [13, 31, 111, 125, 131], "8b0d": 120, "8bc3": 120, "8be5": 139, "8c3e": 120, "8c55": [50, 52], "8e52": 120, "8x7b": 13, "9": [14, 101, 123, 136, 137, 138, 152, 153], "90": [101, 127, 144, 152, 153], "90ff": 132, "91": [101, 152, 153], "910e984cdb65": 120, "9122": 120, "92": [101, 152, 153], "93922b619293": 120, "94": [101, 152, 153], "9435ed755e20": 120, "9498793313012154": 138, "95": [14, 16, 55, 111, 123], "95297": 111, "95b25b4f": [50, 52], "96": [101, 152, 153], "9670": 120, "9696708": 138, "97": [98, 101, 152, 153], "9701269": 138, "9752": 123, "9789": 123, "97db": [2, 4, 139], "98": [101, 129, 138, 152, 153], "9827": 123, "98742366": 138, "99": [101, 152, 153], "9950029253959656": 138, "99520767": 138, "9994476437568665": 138, "9994490742683411": 138, "9996004700660706": 138, "9a424d4c": 120, "9c14": 122, "9ca4": [2, 4, 139], "9dc8": [101, 152, 153], "9dd7d34128df": [101, 152, 153], "9de2": [50, 52], "9nnn": [101, 152, 153], "A": [2, 4, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 24, 26, 28, 30, 32, 35, 37, 45, 50, 52, 56, 57, 59, 61, 66, 67, 69, 71, 74, 76, 80, 82, 89, 94, 98, 101, 104, 111, 112, 113, 120, 122, 123, 125, 126, 129, 131, 132, 133, 136, 137, 138, 140, 144, 152, 153], "And": [1, 38, 56, 61, 98, 101, 105, 111, 112, 123, 128, 133, 135, 136, 138, 140, 143, 152, 153], "As": [8, 23, 31, 33, 37, 99, 101, 113, 116, 120, 122, 125, 135, 136, 138, 140, 143, 145, 147, 152, 153], "At": [1, 97, 111, 129, 137, 144], "Be": [61, 71, 76], "But": [16, 61, 77, 78, 98, 100, 101, 111, 112, 123, 128, 130, 134, 136, 138, 140, 152, 153, 155], "By": [38, 99, 101, 116, 121, 125, 136, 139, 140, 152, 153], "For": [0, 1, 2, 4, 11, 14, 18, 20, 23, 30, 38, 39, 57, 59, 61, 66, 77, 79, 97, 98, 100, 101, 105, 111, 112, 113, 120, 121, 126, 131, 132, 134, 136, 137, 138, 139, 140, 143, 145, 147, 152, 153], "If": [1, 2, 4, 14, 16, 18, 20, 21, 23, 25, 30, 31, 34, 35, 37, 38, 42, 44, 45, 58, 59, 61, 68, 69, 70, 71, 76, 77, 78, 79, 83, 84, 92, 93, 97, 98, 100, 101, 104, 105, 111, 113, 120, 121, 123, 125, 127, 128, 131, 133, 135, 136, 138, 139, 140, 147, 152, 153], "In": [32, 33, 40, 45, 49, 52, 58, 59, 61, 64, 71, 74, 75, 77, 78, 97, 98, 101, 112, 113, 116, 119, 120, 122, 123, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 143, 144, 145, 147, 152, 153, 155], "It": [1, 2, 3, 4, 6, 8, 9, 15, 16, 21, 22, 23, 31, 32, 33, 37, 38, 39, 42, 45, 53, 58, 59, 61, 64, 68, 69, 70, 71, 75, 77, 79, 83, 92, 97, 99, 101, 110, 111, 112, 113, 114, 116, 120, 121, 122, 123, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 143, 145, 147, 152, 153], "Its": [120, 138], "NOT": [18, 20, 111, 133], "No": [36, 57, 59, 105, 123, 131, 155], "Not": [100, 123], "Of": [101, 152, 153], "On": [113, 133], "One": [61, 77, 78, 85, 132], "Or": [9, 38, 61, 69, 104, 123, 134, 140], "Such": 31, "That": 155, "The": [1, 2, 3, 4, 6, 9, 14, 16, 18, 20, 21, 22, 23, 24, 26, 28, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 43, 44, 45, 47, 52, 56, 57, 59, 60, 61, 64, 65, 66, 67, 69, 70, 71, 73, 74, 75, 77, 78, 83, 84, 85, 88, 89, 90, 92, 93, 95, 97, 98, 99, 100, 101, 105, 106, 107, 110, 111, 112, 113, 116, 119, 120, 121, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 143, 144, 145, 146, 147, 152, 153, 155], "Then": [2, 4, 98, 120, 122, 131, 132, 136, 137, 139, 140], "There": [0, 1, 16, 21, 25, 97, 98, 112, 123, 127, 128, 129, 134, 138], "These": [4, 112, 116, 122, 123, 126, 131, 134, 135, 138, 139, 140, 145], "To": [14, 21, 22, 23, 41, 42, 45, 89, 97, 98, 100, 101, 104, 105, 106, 111, 113, 116, 119, 121, 123, 126, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 145, 147, 152, 153, 155], "Will": [61, 77, 79], "With": [32, 37, 41, 76, 101, 111, 120, 122, 126, 131, 132, 133, 137, 144, 152, 153, 155], "_": [21, 22, 98, 131], "_______": 111, "________": [111, 133], "__________": 133, "__call__": [16, 31, 43, 61, 65, 66, 67, 112, 116, 125, 126, 131, 155], "__dict__": [30, 33, 120], "__getitem__": 89, "__getitems__": 89, "__init__": [16, 21, 22, 23, 31, 83, 98, 101, 110, 111, 116, 121, 129, 130, 131, 133, 138, 140, 144, 152, 153, 155], "__input_fields__": [18, 19, 113, 133, 144], "__len__": 89, "__main__": [133, 140], "__name__": [95, 129, 131], "__output_fields__": [18, 19, 133, 144], "__repr__": [61, 65, 116], "__str__": [1, 34], "__version__": 92, "_acal": [9, 12, 13, 15, 16, 39], "_additional_llm_tool": 111, "_blank": 130, "_call": [9, 12, 13, 15, 16, 39, 84], "_coarse_label": 144, "_coarse_labels_desc": [113, 144], "_combine_input_and_model_kwarg": 131, "_compon": 130, "_compute_single_item": [56, 57, 59], "_diagnos": [101, 152, 153], "_embedd": 138, "_extra_repr": [116, 121], "_few_shot_demo": 132, "_generator_names_to_fil": 84, "_generator_trac": 83, "_init_tool": 111, "_is_async": 140, "_output": 134, "_output_processor": 133, "_paramet": 130, "_prepare_input": [144, 155], "_run_one_step": 111, "_score": 132, "_student_trac": 31, "_template_str": 130, "_trace": [31, 132], "_trace_map": 85, "a2acf8ba4c27": 120, "a45ad4690a47": 132, "a8b8": 132, "a958": 120, "aa81": 120, "aaa8": 120, "aaai": 123, "aad": 9, "ab": [0, 1, 16, 56, 76, 111, 123, 125, 136, 138, 143, 152, 153], "ab64": 120, "aba9": 120, "abbr": 144, "abbrevi": [113, 144], "abc": 120, "aberdeen": 155, "abil": [6, 111, 120, 123, 126, 131, 136], "abl": [101, 112, 113, 119, 123, 125, 136, 138, 141, 143, 144, 152, 153], "about": [8, 26, 56, 98, 101, 123, 125, 127, 128, 131, 136, 143, 144, 152, 153], "abov": [1, 98, 101, 111, 116, 123, 125, 127, 128, 130, 133, 135, 136, 138, 140, 144, 152, 153, 155], "abstract": [20, 39, 54, 60, 61, 70, 89, 106, 112, 113, 115, 126, 127, 131, 133, 144], "abstract_algebra": 123, "ac": [21, 22, 136], "ac78": 122, "academ": [123, 139], "acal": [7, 8, 9, 11, 13, 14, 15, 31, 32, 35, 36, 38, 39, 41, 66, 112, 116, 125, 126, 131, 138, 140], "acc_list": [53, 59], "accept": [89, 110, 125, 131], "access": [9, 16, 21, 25, 33, 44, 45, 83, 98, 101, 104, 111, 112, 123, 137, 138, 140, 152, 153], "accompani": 98, "accomplish": 126, "accord": [2, 4, 21, 22, 112, 123, 126, 136, 143, 145], "accordingli": 133, "accordion": [101, 152, 153], "account": 125, "accumul": [31, 131, 134], "accur": [112, 136, 138], "accuraci": [1, 53, 59, 61, 64, 101, 110, 111, 123, 127, 136, 139, 144, 145, 152, 153, 155], "accus": 155, "acetaminophen": 116, "achiam": 123, "achiev": [36, 101, 113, 123, 125, 127, 131, 136, 140, 143, 152, 153, 155], "acl": 123, "acm": 123, "acronym": 144, "across": [37, 98, 101, 113, 123, 131, 140, 144, 147, 152, 153], "act": [106, 111, 122, 126, 137], "action": [1, 45, 100, 137, 139], "action_typ": 45, "activ": [6, 9, 45, 97, 98, 105, 112, 133], "actual": [18, 20, 21, 25, 37, 61, 77, 78, 111, 130, 131, 133, 134, 138, 139], "acycl": 126, "ad": [9, 15, 21, 22, 23, 26, 31, 32, 33, 37, 45, 61, 64, 69, 98, 101, 105, 112, 116, 120, 129, 130, 131, 134, 138, 140, 144, 152, 153], "ada": [101, 139, 152, 153], "adaflow": 155, "adal": [18, 19, 61, 77, 101, 112, 123, 144, 152, 153, 155], "adal_compon": [101, 144, 152, 153, 155], "adalcompon": [69, 77, 78, 79, 80, 106, 123, 126, 155], "adalcomponent_": 126, "adalflow": [2, 4, 11, 16, 20, 21, 22, 30, 31, 33, 34, 39, 45, 47, 52, 56, 60, 61, 64, 68, 69, 77, 79, 83, 84, 92, 93, 97, 98, 99, 102, 103, 106, 111, 112, 113, 116, 119, 120, 121, 125, 126, 127, 129, 130, 131, 133, 134, 135, 136, 138, 139, 140, 143, 152, 153, 155], "adalflow_default_prompt_arg": [34, 135], "adalflow_default_prompt_trainable_param": 34, "adalflow_trac": 130, "adalflow_xx": 98, "adaltask": [61, 77, 79, 101, 144, 152, 153, 155], "adaplcompon": [61, 77, 79], "adapt": [21, 22, 32, 56, 57, 59, 64, 75, 105, 121, 123, 136, 139, 140], "adaptat": 123, "add": [0, 1, 6, 18, 20, 21, 22, 24, 31, 32, 33, 35, 37, 42, 45, 61, 69, 71, 74, 76, 77, 78, 92, 93, 97, 100, 101, 105, 107, 111, 113, 116, 120, 121, 126, 128, 131, 132, 133, 134, 137, 138, 140, 143, 144, 152, 153], "add_a_b": 32, "add_assistant_messag": 131, "add_compon": 31, "add_dialog_turn": [5, 6], "add_docu": [21, 24, 138], "add_generation_prompt": 16, "add_grad": [61, 69], "add_gradi": [61, 69], "add_histori": [61, 71, 76], "add_item": 138, "add_llm_as_fallback": [0, 1, 111], "add_missing_right_brac": [37, 42], "add_missing_right_bracket": [37, 42], "add_missing_right_parenthesi": 37, "add_on": 116, "add_point": 140, "add_scor": [61, 63, 64], "add_score_to_current_param": [61, 71, 76], "add_score_to_param": [61, 71, 76], "add_score_to_trac": [61, 69], "add_successor_map_fn": [61, 69, 112, 155], "add_to_trac": [61, 69], "add_user_messag": 131, "addab": 32, "addint": 98, "addit": [0, 1, 21, 22, 37, 45, 98, 111, 121, 123, 125, 129, 136, 137, 140, 144], "addition": [11, 13, 14, 16, 21, 25, 26, 39, 98, 101, 111, 116, 121, 123, 126, 129, 132, 136, 138, 140, 152, 153], "additional_context": [44, 140], "additional_info": 54, "additon": 43, "addonecompon": 116, "address": [61, 71, 76, 98, 127, 139], "adher": 133, "adjust": [9, 14, 101, 127, 136, 152, 153], "admit": [123, 145], "adopt": 106, "adpat": 125, "advanc": [46, 99, 116, 123, 128, 129, 138, 139], "advantag": [101, 144, 152, 153], "advis": 30, "ae99": 120, "afbd": 120, "afc": [2, 4, 139], "affect": [14, 56, 113, 121, 123], "after": [14, 21, 22, 30, 33, 35, 38, 40, 42, 97, 100, 101, 111, 113, 122, 123, 125, 128, 129, 131, 133, 134, 137, 138, 140, 152, 153], "afun": 31, "ag": [30, 123, 133, 136, 147], "again": [98, 122, 131, 138], "against": [26, 61, 71, 73, 123], "agenda": 111, "agent": [1, 36, 45, 46, 60, 99, 100, 105, 106, 123, 125, 127, 128, 135, 136, 140], "agent_respons": 111, "aggreg": [61, 69, 74, 98], "agnositc": 106, "agnost": [125, 126, 128, 131, 143], "ah": 16, "ahead": [113, 126], "ai": [9, 12, 16, 92, 99, 102, 105, 106, 116, 123, 129, 136], "aim": [98, 127, 133], "akari": 136, "al": [123, 136, 143, 145], "alcohol": 155, "algorithm": [14, 16, 139], "alia": [30, 31, 45, 110, 132, 134], "align": [2, 4, 56, 130, 136, 139], "all": [1, 6, 11, 13, 14, 15, 16, 20, 26, 30, 31, 33, 36, 38, 39, 40, 41, 42, 44, 45, 48, 49, 52, 56, 58, 59, 60, 61, 66, 68, 71, 76, 77, 78, 79, 80, 82, 88, 89, 95, 97, 98, 99, 101, 104, 105, 107, 111, 113, 116, 120, 121, 123, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 144, 145, 147, 152, 153], "all_gt_answ": [53, 59, 145], "all_gt_context": [58, 59, 145], "all_pred_answ": [53, 59, 145], "all_quest": 145, "all_retrieved_context": [58, 59, 145], "allevi": [116, 138], "allow": [16, 30, 31, 32, 37, 38, 40, 45, 53, 59, 61, 66, 69, 84, 101, 105, 111, 113, 116, 120, 125, 127, 129, 131, 132, 135, 137, 138, 139, 144, 145, 152, 153, 155], "allowi": 120, "almost": [123, 128, 133, 138], "alon": 123, "along": [21, 25, 26, 30, 31, 33, 38, 93, 98, 99, 110, 112, 113, 120, 125, 131, 132, 136, 138, 141, 144, 152], "alongsid": [111, 131], "alpha": 100, "alreadi": [21, 22, 30, 31, 45, 97, 98, 100, 101, 113, 125, 129, 131, 133, 138, 140, 152, 153, 155], "also": [2, 4, 14, 21, 22, 26, 31, 35, 36, 37, 38, 43, 45, 56, 61, 76, 77, 78, 79, 89, 97, 98, 101, 112, 113, 116, 119, 120, 123, 125, 127, 135, 136, 137, 138, 139, 140, 143, 144, 147, 152, 153, 155], "alt": 130, "altern": [6, 32, 98], "although": [21, 22, 137, 138, 155], "alwai": [1, 16, 18, 20, 30, 33, 98, 111, 112, 120, 123, 125, 129, 133, 139, 140], "am": 131, "amazon": 131, "ambigu": 136, "amount": [111, 120, 125], "an": [0, 1, 6, 9, 13, 14, 15, 16, 18, 19, 20, 27, 30, 31, 32, 34, 35, 36, 37, 38, 40, 41, 42, 45, 56, 57, 59, 61, 66, 67, 71, 73, 74, 75, 76, 77, 78, 79, 83, 88, 89, 92, 93, 95, 101, 104, 106, 111, 112, 113, 114, 116, 120, 121, 122, 123, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 138, 140, 143, 144, 145, 147, 152, 153], "analysi": [2, 4, 123, 131, 139], "analyz": [131, 137, 155], "anautomat": 123, "andhannaneh": 136, "andrew": [21, 22], "andro": 123, "angel": 128, "anger": 123, "ani": [0, 1, 2, 4, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 44, 45, 53, 54, 56, 57, 59, 61, 65, 68, 69, 70, 71, 76, 77, 78, 79, 80, 83, 84, 85, 88, 89, 90, 92, 95, 97, 100, 101, 105, 106, 110, 111, 113, 116, 119, 120, 121, 123, 125, 126, 127, 130, 131, 132, 133, 134, 135, 136, 138, 140, 143, 144, 152, 153, 155], "anim": 131, "annoat": 123, "annot": [56, 123, 145], "annual": 123, "anoth": [21, 25, 40, 61, 70, 105, 111, 112, 123, 129, 130, 132, 133, 136, 138], "ansi": 93, "answer": [0, 1, 14, 18, 20, 50, 52, 53, 56, 57, 58, 59, 61, 77, 78, 98, 101, 105, 110, 111, 113, 116, 123, 132, 133, 136, 137, 138, 139, 140, 143, 144, 145, 146, 147, 155], "answer_match_acc": [59, 101, 145, 152, 153], "answer_templ": 155, "answerdata": 155, "answermacthevalu": 145, "answermatchacc": [53, 59, 101, 110, 123, 136, 144, 152, 153, 155], "anthrop": [8, 45, 92, 104, 128, 131], "anthropic_api_kei": [97, 104], "anthropic_cli": [7, 131], "anthropicapicli": [7, 8, 45, 131], "anticip": 99, "antrop": 8, "anybodi": 123, "anyth": [18, 20, 111, 127, 133, 135, 140], "ap": [123, 130], "api": [8, 9, 11, 12, 13, 14, 15, 16, 17, 31, 35, 39, 45, 61, 77, 79, 97, 98, 103, 105, 112, 122, 126, 127, 128, 136, 137], "api_kei": [8, 9, 11, 12, 13, 15, 88], "api_kwarg": [8, 9, 11, 12, 13, 14, 15, 16, 39, 125, 131], "api_respons": 17, "api_vers": 9, "app": [14, 45, 93], "app_logg": 129, "appear": [61, 69, 123], "append": [16, 32, 33, 90, 110, 120, 131, 140, 145, 155], "append_dialog_turn": 45, "append_to_jsonl": 90, "appl": [57, 58, 59, 123, 132, 152], "appli": [2, 4, 16, 27, 32, 33, 35, 37, 38, 40, 61, 69, 77, 78, 83, 112, 119, 120, 121, 122, 125, 126, 134, 136, 138, 139, 155], "applic": [2, 4, 6, 30, 93, 98, 99, 100, 106, 111, 112, 113, 120, 123, 126, 127, 129, 133, 138, 139, 146, 147], "application_nam": 105, "apply_chat_templ": 16, "apply_transform": [33, 120], "appreci": 99, "approach": [2, 4, 116, 122, 123, 131, 136, 137, 139], "appropi": 131, "appropri": [14, 101, 116, 131, 139, 152, 153], "approv": 98, "apt": 131, "ar": [0, 1, 2, 4, 9, 16, 18, 19, 20, 21, 22, 23, 31, 32, 33, 34, 37, 40, 42, 44, 45, 56, 60, 61, 68, 69, 71, 75, 76, 77, 78, 79, 83, 84, 92, 93, 97, 98, 99, 100, 101, 105, 106, 111, 112, 113, 116, 119, 120, 121, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 144, 145, 146, 147, 152, 153, 155], "arbitrari": [32, 61, 65], "architectur": [136, 143, 146], "arena": 123, "arg": [14, 20, 30, 31, 32, 36, 37, 38, 39, 41, 42, 44, 45, 47, 52, 54, 61, 65, 66, 67, 68, 69, 70, 71, 73, 74, 77, 78, 79, 82, 92, 110, 111, 131, 137, 140, 144], "argument": [0, 1, 11, 13, 14, 16, 30, 32, 34, 36, 37, 38, 39, 40, 45, 61, 65, 69, 70, 77, 78, 88, 101, 111, 112, 121, 122, 125, 130, 131, 132, 133, 135, 137, 138, 139, 140, 152, 153], "arithmet": 45, "ariz": 129, "around": [43, 83, 112, 115, 155], "arr": 140, "arrai": [37, 112, 131, 138, 140], "array1": 131, "array2": 131, "arsen": 123, "art": [61, 64], "articl": [56, 123, 139], "articul": 105, "artifici": 125, "arxiv": [0, 1, 16, 56, 76, 111, 123, 136, 138, 143, 145, 152, 153], "arxivpreprint": 136, "asai": 136, "asdict": [37, 113], "ask": [21, 25, 26, 45, 56, 57, 59, 105, 113, 120, 123, 130, 131, 135, 137, 138, 139, 140, 144], "aspect": [61, 71, 76, 123], "aspirin": 116, "assert": [30, 121, 131], "assess": [56, 101, 123, 145, 152, 153], "asset": 130, "assign": [2, 4, 14, 31, 56, 61, 69, 101, 122, 123, 132, 134, 152, 153], "assist": [1, 6, 16, 18, 19, 20, 34, 40, 45, 101, 111, 116, 120, 125, 128, 129, 130, 131, 135, 145, 152, 153], "assistant_respons": [6, 45, 120], "assistant_response_timestamp": [45, 120], "assistantrespons": [45, 120], "assit": 135, "associ": [123, 133], "assum": [33, 45, 58, 59, 120, 129, 131, 132, 155], "assumpt": 128, "ast": [37, 45, 133], "async": [8, 9, 11, 13, 14, 15, 31, 32, 35, 36, 38, 39, 41, 44, 66, 111, 138, 140], "async_cli": 131, "async_function_1": 36, "async_function_2": 36, "async_tool_1": 36, "async_tool_2": 36, "asynccal": [45, 111], "asynchron": [14, 36, 116], "asyncio": [36, 44, 131, 140], "asyncopenai": 131, "atom": [120, 138], "attach": [83, 129, 132], "attempt": 131, "attempted_val_scor": 80, "attent": [100, 101, 152, 153], "attention_mask": 16, "attribut": [21, 23, 25, 27, 28, 31, 33, 38, 40, 41, 45, 58, 59, 61, 69, 83, 88, 101, 113, 116, 120, 123, 130, 132, 133, 138, 140, 152, 153], "auc": 123, "audio": 138, "aug": 136, "augement": 138, "augment": [61, 64, 123, 126, 132, 136, 138, 143, 145, 146], "augmented_demo": [61, 64], "augmentedlanguag": 136, "authent": 9, "author": 123, "auto": [31, 66, 67, 69, 72, 76, 98, 99, 101, 106, 110, 126, 127, 130, 131, 135, 136, 143, 146, 153, 155], "auto_text_grad_": 126, "autoai": 143, "autograd": [66, 67, 112], "autom": [123, 127], "automat": [9, 23, 32, 35, 38, 61, 69, 72, 73, 83, 97, 98, 101, 105, 112, 116, 123, 130, 133, 137, 140, 152, 153], "automodelforcausallm": 16, "autonom": [106, 111, 127], "autoreset": 93, "autotoken": 16, "avail": [1, 13, 14, 45, 92, 104, 111, 131, 140, 145], "available_funct": 140, "averag": [21, 22, 53, 58, 59, 61, 77, 78, 123, 131, 145], "average_embed": 131, "average_idf": [21, 22], "average_pool": [7, 16], "average_tim": 137, "avg_acc": [53, 59], "avg_judg": [57, 59, 145], "avg_paris_embed": 131, "avg_recal": [58, 59, 123, 145], "avg_relev": 145, "avg_scor": [54, 57, 123], "avgdl": [21, 22, 138], "avirup": 136, "avoid": [9, 21, 22, 30, 31, 97, 120, 121, 136, 138], "await": [0, 1, 32, 36, 44, 45, 131, 140], "awar": [21, 25, 131, 134], "award": 147, "awlai": 140, "axi": 131, "azur": [9, 92], "azure_endpoint": 9, "azure_modul": 92, "azure_module_nam": 92, "azure_openai_api_kei": 9, "azure_openai_endpoint": 9, "azure_openai_vers": 9, "azureai_cli": 7, "azureaicli": [7, 9], "azureopenai": 9, "b": [0, 1, 21, 22, 32, 45, 98, 111, 137, 138, 140], "b0cffa3e": [101, 152, 153], "b2dbdf2f": 120, "b3e9": 120, "b400": 139, "b6c6": 120, "ba8e1e23": 139, "baai": [16, 138], "back": [14, 18, 20, 21, 22, 33, 88, 95, 99, 101, 111, 112, 113, 119, 122, 123, 125, 132, 133, 152, 153], "backend_engine_prompt": 71, "backpropag": [31, 38, 61, 64, 66, 67, 71, 75, 101, 112, 126, 132, 134, 152, 153], "backpropagatin": 134, "backpropog": 132, "backtick": [18, 20, 111, 133, 140], "backward": [31, 38, 41, 61, 65, 66, 67, 69, 71, 72, 73, 74, 75, 77, 78, 101, 106, 110, 112, 126, 132, 134, 144, 152, 153], "backward_engin": [38, 41, 61, 65, 66, 67, 71, 74, 75, 77, 78, 101, 110, 152, 153, 155], "backward_engine_dis": [61, 69], "backward_engine_model_config": [61, 77, 78, 79, 101, 144, 152, 153, 155], "backward_fn": [61, 65], "backwardcontext": [61, 65], "backwardengin": [38, 61, 65, 66, 67, 71, 74, 75, 77, 78], "bad": [101, 123, 152, 153], "badg": 130, "balanc": [14, 49, 52, 131], "balconi": 155, "banana": [132, 152], "banerje": 123, "bank": 123, "bare": [106, 115, 135], "baromet": 155, "basd": 138, "base": [0, 1, 2, 3, 4, 6, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 52, 53, 56, 57, 58, 59, 60, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 82, 84, 85, 87, 89, 92, 94, 95, 98, 99, 106, 110, 111, 113, 115, 116, 121, 125, 127, 129, 131, 133, 136, 137, 140, 143, 144, 145, 147], "base_class": 30, "base_data_class": [113, 133, 145, 147], "basedata": [50, 52], "basedataclass": 30, "baseevalu": [53, 54, 56, 57, 58, 59, 61, 71, 75], "basemodel": 112, "bash": [9, 23], "basic": [60, 99, 127], "basicqaoutput": [18, 19], "batch": [2, 4, 35, 45, 61, 77, 78, 79, 89, 101, 119, 120, 121, 122, 131, 138, 144, 151, 152, 153], "batch_embedd": [120, 121], "batch_idx": [61, 77, 78], "batch_siz": [2, 3, 4, 35, 88, 89, 120, 121, 122, 134], "batch_val_score_threshold": [61, 77, 79], "batchembedd": [35, 120], "batchembedderinputtyp": 35, "batchembedderoutputtyp": 35, "bbh_object_count": [47, 52], "bc0ff7f6": 120, "bcbc6ff9": 120, "bceloss": 112, "bd3a": 132, "bdbd": 120, "beat": [101, 152, 153], "beauti": [21, 22], "becam": 155, "becaus": [2, 4, 101, 125, 127, 137, 139, 144, 147, 152, 153], "becom": [61, 69, 123, 132, 136, 138], "bed": 132, "bednnn": [101, 152, 153], "bedrock_cli": 7, "been": [38, 45, 120, 123, 136, 138, 144], "befor": [2, 4, 42, 57, 58, 59, 61, 77, 78, 97, 98, 99, 100, 101, 116, 120, 121, 123, 126, 137, 138, 139, 144, 147, 152, 153, 155], "begin": [61, 69, 93, 98, 105, 127], "begin_of_text": [128, 135], "behavior": [112, 129, 140], "behind": [18, 20, 111, 126, 128], "beij": [57, 59, 123], "being": [113, 126, 127, 132, 134, 136, 140, 144, 155], "belief": 136, "below": [1, 101, 111, 123, 131, 133, 138, 140, 152, 153], "bench": [47, 52], "benchmark": [97, 136, 137, 145, 155], "benchmark_async_acal": 131, "benchmark_sync_cal": 131, "benef": 138, "benefici": 139, "benefit": [32, 45, 120, 138], "bert": [123, 155], "bert_scor": 123, "bertscor": [123, 136, 143], "besid": [31, 120, 123, 125, 135, 136, 137, 147], "best": [21, 22, 98, 99, 101, 105, 116, 123, 126, 136, 138, 139, 143, 152, 153], "beta": [16, 100, 140], "better": [2, 4, 19, 30, 61, 64, 71, 75, 98, 101, 111, 112, 113, 123, 131, 132, 133, 137, 138, 139, 140, 144, 147, 152, 153], "between": [2, 4, 6, 14, 30, 39, 55, 56, 58, 59, 61, 71, 76, 98, 105, 106, 111, 112, 123, 126, 127, 131, 134, 136, 138, 139, 143, 155], "beyond": [4, 99, 123, 127, 140], "bf52": 132, "bfc5": 139, "bff6cb1178fe": [50, 52], "bfloat16": 16, "bge": [16, 138], "bhh_hard_object_count": 146, "bhh_object_count": [101, 152, 153], "bi": [136, 138, 143], "bias": [31, 116, 129], "bical": 155, "big": [47, 52, 131, 136], "big_bench_hard": [101, 152, 153], "bigbenchhard": [47, 52, 101, 152, 153], "bigger": [21, 22], "biggest": 89, "binari": 55, "bit": [36, 113, 144], "black": [93, 136], "blackberri": [132, 152], "bleu": [123, 136, 143], "bleuscor": 123, "blob": [49, 52, 130], "block": [30, 31, 36, 46, 93, 99, 105, 116, 126, 127, 131, 139], "blog": 98, "blow": 130, "blue": 93, "bm25": [21, 22, 120, 138], "bm25_index": [21, 22], "bm25_retriev": [21, 138], "bm25retriev": [21, 22], "bodi": [56, 123], "bonjour": 130, "book": 139, "bool": [0, 1, 2, 3, 14, 16, 18, 19, 20, 21, 22, 24, 26, 31, 33, 36, 37, 38, 40, 41, 42, 43, 45, 56, 57, 59, 61, 64, 68, 69, 70, 71, 74, 76, 77, 78, 79, 80, 83, 89, 93, 111, 120, 121, 132, 133], "bool_str": 133, "bool_str_2": 133, "bool_str_3": 133, "bool_str_4": 133, "bool_str_5": 133, "bool_str_6": 133, "bool_str_7": 133, "bool_str_8": 133, "boolean": [0, 1, 20, 37, 42, 133, 138], "boolean_pars": 42, "boolean_str": 133, "booleanoutputpars": [18, 20, 133], "booleanpars": 42, "boost": [120, 123, 138, 144], "boostrap": [64, 144, 146], "bootstrap": [61, 68, 77, 78, 132, 144], "bootstrap_optim": [63, 144], "bootstrap_shot": [61, 64, 77, 79, 101, 144, 152, 153], "bootstrapfewshot": [61, 63, 64, 101, 110, 144, 153], "bootstrapoptim": 144, "border": [2, 4, 139], "bore": 127, "boshengd": 136, "both": [4, 9, 15, 21, 22, 31, 36, 39, 42, 44, 45, 61, 64, 77, 78, 90, 93, 98, 101, 106, 111, 112, 113, 120, 123, 125, 126, 129, 130, 131, 132, 133, 136, 138, 140, 143, 144, 145, 147, 152, 153, 155], "boto3": 92, "bottom": 130, "bound": 55, "boundari": [26, 30, 45, 56, 59, 80, 92, 95], "boutiqu": 155, "box": [99, 116, 123, 127, 136], "brace": [37, 42], "bracket": [37, 42], "branch": [98, 100, 136], "brand": 144, "brazil": 123, "break": [2, 4, 111, 127, 129, 139], "bridg": [13, 16, 39, 131], "brief": [18, 19, 125], "briefli": 126, "brittl": 127, "broad": [123, 139], "broader": 139, "broccoli": 132, "brought": 123, "browser": 137, "budget": [2, 4, 139], "buffer": [1, 34], "bug": [98, 99, 100, 101, 152, 153], "buget": 136, "build": [21, 22, 23, 28, 31, 37, 41, 46, 56, 99, 100, 105, 106, 111, 112, 113, 116, 123, 138, 143, 144, 145, 146, 155], "build_custom_model_cli": 131, "build_index": 145, "build_index_from_docu": [21, 22, 23, 25, 28, 41, 120, 138], "builder": 40, "built": [21, 22, 28, 34, 37, 41, 99, 101, 104, 123, 126, 133, 137, 138, 140, 152, 153, 155], "bunch": 139, "burnlei": 123, "busi": 127, "bust": 123, "button": 98, "bytes_or_buff": [1, 34], "c": [21, 22, 31, 123, 136, 155], "c4e4": 120, "c4e5": 122, "c5431397": 120, "c77c98ac260f": 120, "c8fc": 120, "ca": 140, "ca0af45b": [2, 4, 139], "cabbag": 132, "cach": [16, 38, 56, 57, 59, 91, 120], "cache_dataset": [47, 52], "cache_path": [38, 87], "cached_content_token_count": 12, "cached_dataset": 119, "cachedengin": [38, 87], "cai": 123, "calcul": [55, 61, 77, 78, 101, 112, 122, 123, 131, 152, 153], "calculate_class_weight": 49, "calculate_similar": 131, "call": [0, 1, 2, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 30, 31, 32, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 56, 57, 59, 61, 64, 65, 66, 67, 69, 70, 71, 73, 75, 77, 78, 82, 83, 84, 90, 92, 93, 95, 98, 101, 105, 110, 111, 112, 116, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 144, 145, 152, 153, 155], "call_async_funct": 36, "call_multipli": [0, 1], "callabl": [0, 1, 8, 9, 15, 21, 22, 23, 25, 28, 30, 31, 33, 36, 37, 38, 41, 44, 45, 61, 65, 69, 70, 71, 75, 77, 78, 82, 110, 111, 112, 120, 144, 152, 155], "callan": 136, "callback": [61, 77, 78, 82, 101, 129, 152, 153], "callbackmanag": [38, 82, 105], "caller": 131, "can": [0, 1, 2, 4, 6, 8, 9, 11, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 25, 26, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 52, 53, 56, 57, 58, 59, 61, 64, 66, 67, 69, 70, 71, 73, 75, 76, 77, 78, 79, 83, 85, 88, 89, 92, 94, 97, 98, 100, 101, 104, 105, 111, 112, 113, 115, 116, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 143, 144, 145, 147, 152, 153, 155], "candid": 138, "candidates_token_count": 12, "cannon": 155, "cannot": [16, 105, 111, 123, 125], "cantain": 31, "cap": [101, 152, 153], "capabl": [36, 101, 111, 112, 126, 129, 139, 140, 152, 153], "capac": 155, "capdev": [123, 136, 143], "capit": [30, 37, 111, 113, 121, 130, 131, 135], "captur": [37, 56, 112, 123, 125], "carbon": [120, 138], "card": 135, "care": [101, 111, 136, 139, 143, 152, 153], "carefulli": [56, 98, 105, 123], "carri": 140, "carrot": 132, "carsnn": [101, 152, 153], "case": [6, 21, 25, 30, 33, 61, 64, 69, 97, 98, 101, 105, 111, 116, 120, 123, 125, 126, 127, 129, 131, 133, 135, 136, 137, 138, 139, 140, 143, 144, 147, 152, 153, 155], "castl": 155, "categor": [30, 111, 123, 131, 138], "categori": [98, 133, 138], "cauliflow": 132, "caus": 116, "caution": 36, "cd": 97, "cdot": [21, 22, 136], "celeri": 132, "celsiu": 140, "center": [115, 130], "centr": 123, "certain": [16, 37, 129, 147], "chain": [32, 38, 45, 101, 113, 116, 120, 121, 125, 126, 136, 137, 138, 144, 152, 153], "challeng": [101, 123, 127, 134, 138, 152, 153], "champion": 123, "chanc": [21, 25, 127, 132], "chang": [85, 98, 111, 112, 120, 123, 125, 126, 127, 130, 136, 138, 155], "chapter": 139, "characterist": [134, 144], "chat": [8, 9, 11, 12, 13, 14, 15, 16, 34, 39, 120, 125, 130, 135], "chat_completion_pars": [8, 9, 15, 131], "chat_histori": [34, 120, 130], "chat_history_str": [34, 120, 125, 130, 135], "chatbot": [16, 99, 106, 120, 123, 125, 126, 127, 138], "chatcomplet": [9, 13, 15], "chatcompletionchunk": [9, 15], "chatcompletiontokenlogprob": 45, "chatconvers": 131, "chatconversationasync": 131, "cheapest": [136, 138], "check": [2, 4, 13, 30, 33, 37, 38, 39, 40, 45, 61, 66, 67, 69, 70, 97, 100, 101, 104, 105, 109, 113, 116, 120, 122, 123, 131, 136, 137, 138, 139, 140, 143, 147, 152, 153, 154], "check_adal_dataclass": 30, "check_chat_convers": 131, "check_chat_conversations_async": 131, "check_data_class_field_args_on": 37, "check_data_class_field_args_zero": 37, "check_if_already_computed_gradient_respect_to": [61, 69], "check_if_class_field_args_one_exist": 37, "check_if_class_field_args_zero_exist": 37, "check_object": 95, "check_openai_additional_util": 131, "checkout": 98, "checkpoint": [61, 77, 79, 144], "chen": [123, 136], "chengwei": 136, "child": [31, 129], "children": [31, 155], "china": [57, 59, 121, 123], "chip": 16, "choic": [56, 123, 125, 131, 133, 136, 145], "choos": [14, 18, 19, 21, 22, 23, 41, 139, 140], "chronicl": [123, 145], "chunk": [2, 3, 4, 9, 23, 105, 120, 121, 123, 126, 136, 138, 143, 145], "chunk_overlap": [2, 4, 139], "chunk_siz": [2, 4, 139], "ci": 97, "cindex": 131, "cite": [136, 143], "citi": 140, "ckpt": [61, 77, 79, 101, 144, 152, 153], "ckpt_file": [61, 77, 79, 101, 152, 153], "ckpt_path": [61, 77, 79], "cl": [37, 113], "cl100k_base": [2, 4, 43, 139], "claim": 123, "clarif": 98, "clarifi": 98, "clarinet": [101, 152, 153], "clariti": [56, 106, 123, 127, 131], "class": [0, 1, 2, 3, 4, 6, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 52, 53, 54, 56, 57, 58, 59, 60, 62, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 87, 88, 89, 92, 94, 95, 97, 98, 101, 105, 106, 110, 111, 112, 116, 120, 121, 125, 127, 129, 130, 131, 132, 133, 134, 137, 140, 144, 145, 147, 150, 151, 152, 153, 155], "class_descript": 144, "class_index": [50, 52, 113, 144], "class_nam": [30, 50, 52, 83, 113, 144], "classes": 147, "classic": [106, 127, 146], "classif": [49, 52, 106, 123, 127, 133, 146], "classifi": [113, 123, 136, 144], "classmethod": [9, 13, 14, 15, 21, 22, 26, 30, 31, 33, 35, 38, 40, 41, 45, 61, 69, 94, 111, 113], "classroom": 111, "classsampl": [61, 70], "claud": [8, 128], "clean": 129, "clean_device_cach": [7, 16], "clear": [56, 61, 68, 71, 76, 98, 105, 123, 126, 136, 137, 138], "clearli": 123, "cli": 14, "click": [98, 123, 136], "client": [0, 1, 8, 9, 11, 12, 13, 14, 15, 16, 17, 21, 25, 27, 28, 35, 38, 39, 45, 56, 57, 59, 60, 61, 71, 75, 92, 98, 111, 125, 126, 127, 128, 138], "climat": [120, 138], "clone": [97, 98, 105], "close": [37, 98, 101, 127, 138, 144, 152, 153], "cloth": 138, "cloud": [6, 12, 119, 131, 136, 138, 143], "co": [16, 49, 52, 121, 129, 138], "coach": 123, "coarse_label": [61, 70, 113], "code": [2, 4, 15, 30, 37, 45, 61, 69, 76, 83, 93, 98, 99, 101, 105, 106, 111, 113, 116, 120, 121, 123, 125, 126, 127, 129, 130, 131, 133, 135, 136, 138, 139, 140, 143, 144, 145, 152, 153, 155], "codebas": 97, "coder": 16, "coeffici": 123, "coher": [11, 14, 45, 56, 59, 92, 104, 123, 128, 131, 136, 138, 139], "cohere_api_kei": [97, 104], "cohere_cli": [7, 131], "cohereapicli": [7, 11, 21, 28, 45, 131, 138], "colab": [98, 130], "collabor": 102, "collect": [27, 45, 56, 61, 77, 79, 123, 130, 131, 138], "collection_nam": [27, 138], "color": [93, 111, 129], "colorama": 93, "colored_print": 93, "column": [23, 26, 123], "com": [8, 9, 11, 12, 13, 14, 15, 23, 61, 64, 97, 98, 123, 125, 129, 130, 135, 136, 138, 140], "combat": [120, 138], "combin": [8, 9, 12, 15, 38, 40, 71, 74, 76, 105, 111, 122, 123, 125, 127, 136, 138, 140, 143, 144, 155], "combine_kwarg": 37, "come": [105, 111, 120, 123, 125, 131, 133, 138, 142, 145, 155], "command": [14, 93, 97, 98], "comment": [97, 98, 135], "commit": [98, 100, 105], "common": [42, 50, 52, 55, 58, 59, 123, 136, 138], "commonli": [4, 20, 122, 123, 136], "commun": [36, 39, 98, 99, 103, 105, 131, 136, 155], "compact": [45, 140], "compar": [18, 19, 20, 21, 22, 26, 37, 53, 56, 59, 61, 64, 66, 67, 71, 73, 98, 101, 111, 120, 121, 123, 131, 139, 144, 150, 151, 152, 153, 155], "comparison": [105, 111, 116, 123, 138, 140, 155], "compat": [123, 125, 131, 133, 139], "complet": [0, 1, 6, 8, 9, 11, 12, 13, 14, 15, 16, 36, 37, 38, 39, 45, 98, 100, 101, 111, 123, 131, 137, 139, 143, 152, 153], "completion_token": [45, 101, 152, 153], "completion_usag": 45, "completionusag": [8, 9, 12, 13, 15, 39, 45, 101, 152, 153], "complex": [1, 18, 20, 37, 42, 98, 105, 111, 113, 123, 129, 133, 139], "complext": 133, "complic": [111, 135, 136, 140, 154], "compon": [0, 1, 2, 3, 4, 6, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 56, 57, 59, 61, 66, 67, 69, 77, 78, 79, 83, 88, 92, 94, 95, 98, 101, 104, 106, 110, 111, 112, 113, 115, 120, 121, 122, 123, 125, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 143, 144, 145, 146, 147, 152, 153, 155], "componenet": [31, 88], "component1": 32, "component2": 32, "component3": 32, "component4": 32, "component_config": [35, 38, 88, 125], "component_nam": [35, 38, 88, 125], "componnet": 134, "compos": [32, 40, 78, 115, 128, 146], "compose_model_kwarg": 37, "compose_prompt_kwarg": 40, "comprehens": [56, 123, 125, 126, 136, 143], "compromis": 139, "comput": [24, 53, 54, 56, 57, 58, 59, 61, 65, 69, 71, 73, 75, 80, 101, 111, 112, 123, 127, 129, 131, 134, 136, 138, 145, 150, 151, 152, 153, 155], "computation": 136, "compute_bertscor": 123, "compute_bleu": 123, "compute_context_relev": 145, "compute_g_eval_summar": 123, "compute_judg": 145, "compute_llm_as_judg": 123, "compute_llm_as_judge_wo_quest": 123, "compute_match_acc": 145, "compute_recal": 145, "compute_roug": 123, "compute_single_item": [53, 54, 56, 59, 101, 110, 144, 152, 153, 155], "con": [120, 138], "concaten": [71, 74, 136], "concept": [18, 19, 58, 59, 112, 113, 116, 125, 134, 144], "conceptu": 129, "concern": [61, 71, 76], "concis": [113, 116, 144], "conclud": [101, 152, 153], "conclus": [144, 145], "concurr": [131, 140], "conda": 23, "condit": [33, 112, 129, 135, 137, 155], "condition": [7, 135], "condition_fn": 120, "confer": [123, 136], "confid": [55, 123], "confidence_interv": [55, 57, 123], "config": [31, 35, 38, 61, 77, 78, 98, 110, 121, 129, 145, 155], "config_dataset": [61, 63, 64], "config_shot": [61, 63, 64, 68], "configur": [2, 4, 9, 31, 35, 61, 77, 78, 79, 88, 93, 94, 97, 98, 101, 104, 111, 122, 125, 127, 131, 138, 139, 144, 145, 152, 153, 155], "configure_backward_engin": [61, 77, 78, 101, 152, 153], "configure_backward_engine_engin": [61, 77, 78], "configure_backward_engine_help": [61, 77, 78, 101, 152, 153], "configure_callback": [61, 77, 78, 79], "configure_demo_optimizer_help": [61, 77, 78, 101, 152, 153], "configure_loss_fn": 110, "configure_optim": [61, 77, 78, 101, 110, 152, 153], "configure_teacher_gener": [61, 77, 78, 101, 110, 152, 153], "configure_teacher_generator_help": [61, 77, 78, 101, 152, 153], "configure_text_optimizer_help": [61, 77, 78, 101, 152, 153], "conflict": [98, 134], "confus": [31, 100, 105, 113], "connect": [26, 98, 112, 138, 155], "conquer": [1, 111], "conserv": 14, "consid": [30, 31, 58, 59, 61, 71, 76, 98, 111, 129, 136, 138, 139], "consin": 138, "consist": [20, 32, 38, 40, 45, 56, 59, 98, 101, 112, 123, 125, 126, 145, 147, 152, 153], "consol": [13, 93, 129], "constant": [1, 21, 22, 30, 34, 37], "constantli": 113, "constrain": [61, 77, 79, 101, 144, 152, 153], "constrained_max_steps_12_848d2_run_7": 144, "constrained_max_steps_8_a1754_run_1": [101, 152, 153], "constraint": [61, 71, 76, 139], "constraint_text": [61, 71, 76], "construct": [88, 89, 145], "constructor": [32, 34, 111, 121, 131], "consum": 132, "contain": [2, 4, 21, 22, 24, 26, 27, 31, 36, 37, 42, 45, 53, 56, 57, 59, 61, 69, 71, 76, 77, 78, 98, 101, 105, 116, 120, 121, 123, 125, 130, 131, 137, 139, 140, 145, 147, 152, 153, 155], "content": [8, 9, 15, 16, 24, 56, 103, 108, 120, 123, 128, 130, 131, 136, 138, 147], "contex": [34, 125, 130], "context": [2, 4, 14, 30, 31, 32, 34, 36, 37, 38, 40, 44, 58, 59, 61, 65, 69, 71, 75, 76, 77, 78, 98, 101, 105, 110, 111, 112, 120, 123, 126, 127, 130, 131, 134, 135, 136, 137, 138, 139, 140, 143, 144, 145, 152, 153, 155], "context_map": [37, 45, 140], "context_recal": [58, 59], "context_str": [34, 40, 125, 130, 135, 136, 140, 145], "contextu": [123, 139, 145], "continu": [120, 127, 129, 135, 136], "contravari": 138, "contribut": [97, 99, 105, 120, 138], "contributor": [98, 105], "control": [2, 4, 14, 18, 19, 45, 93, 97, 105, 106, 113, 120, 125, 127, 128, 129, 131, 135, 139, 144, 147], "conv1": 116, "conv2": 116, "conv2d": [112, 116], "conveni": [32, 113, 116, 137], "convent": [18, 20, 111, 113, 133, 140], "conver": 120, "conver_db": [5, 6], "converag": [101, 152, 153], "converg": [101, 152, 153], "convers": [6, 45, 120, 125, 131, 135, 136, 137, 138, 140, 143], "conversation_histori": [131, 138], "conversation_id": 45, "conversation_str": [61, 71, 75], "convert": [9, 12, 13, 14, 15, 16, 23, 30, 31, 37, 38, 39, 42, 45, 53, 59, 61, 71, 75, 95, 101, 105, 110, 113, 116, 119, 120, 122, 128, 131, 132, 133, 138, 140, 152, 153, 155], "convert_inputs_to_api_kwarg": [7, 8, 9, 11, 12, 13, 14, 15, 16, 39, 131], "convert_schema_to_signatur": 37, "convert_y_pred_to_dataclass": 110, "convict": 155, "cookbook": [105, 136, 138, 147], "cool": 111, "cooper": 155, "copi": [2, 3, 15, 31, 97, 105, 121, 122, 131, 144, 155], "cor": 123, "core": [0, 1, 2, 4, 20, 30, 31, 33, 36, 37, 40, 45, 84, 92, 98, 105, 111, 113, 116, 120, 121, 122, 125, 126, 127, 129, 130, 131, 133, 135, 137, 138, 139, 140, 145, 147], "corner": 98, "coro": 44, "corpora": 123, "corpu": [21, 22, 123, 136, 143, 155], "corr": 136, "correct": [61, 69, 71, 73, 77, 79, 98, 100, 101, 110, 111, 112, 123, 131, 136, 145, 152, 153], "correctli": [9, 33, 45, 61, 77, 78, 97, 98, 100, 101, 111, 112, 113, 136, 144, 152, 153], "correl": 123, "correspond": [2, 4, 37, 61, 77, 78, 98, 131, 133, 137, 139, 145], "cosin": [21, 23, 26, 123, 131], "cost": [101, 123, 136, 138, 144, 152, 153], "could": [37, 45, 89, 123], "council": 155, "count": [43, 47, 52, 101, 132, 136, 139, 152, 153], "count_token": 43, "counter": 116, "countless": 123, "cours": [101, 123, 130, 152, 153], "cover": [56, 97, 98, 99, 105, 113, 116, 120, 123, 126, 133, 138, 140, 143, 147, 155], "coverag": [123, 138], "covert": 140, "cp": 97, "cpp": 14, "cpu": [23, 92, 104], "crag": 123, "creat": [1, 2, 4, 9, 13, 14, 15, 16, 30, 31, 33, 34, 35, 36, 38, 40, 45, 61, 69, 88, 92, 99, 100, 101, 111, 112, 113, 116, 119, 120, 121, 122, 123, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 143, 144, 145, 147, 152, 153, 155], "create_complet": 14, "create_demo_data_inst": 38, "create_embedding_respons": 45, "create_teacher_gener": 38, "created_at": 45, "createembeddingrespons": [9, 15, 131], "creativ": [14, 61, 71, 76, 131], "credenti": 9, "credit": 155, "criteria": [56, 123], "criteria_coher": 56, "criteria_consist": 56, "criteria_flu": 56, "criteria_relev": 56, "criterion": [2, 4, 135, 139], "critic": [2, 4, 93, 136], "criticis": 123, "critiqu": 136, "cross": [136, 138], "crossentropyloss": 112, "crucial": [37, 98, 101, 113, 120, 123, 135, 138, 152, 153], "crud": [33, 120], "csv": [47, 52, 90], "ctrl": 137, "cup": 123, "current": [6, 31, 33, 93, 101, 104, 112, 120, 121, 125, 130, 131, 133, 137, 138, 140, 152, 153, 155], "current_convers": [5, 6], "cursor": 97, "curv": 144, "custom": [2, 4, 16, 20, 21, 25, 26, 30, 37, 38, 41, 57, 59, 61, 89, 93, 95, 100, 105, 110, 112, 113, 121, 123, 125, 126, 127, 129, 136, 137, 143, 145], "custom_asdict": [37, 113], "custom_cli": 131, "customiz": [106, 115, 123, 137, 144], "customizellm": 16, "cut": [136, 138], "cyan": 93, "d": [18, 20, 21, 22, 23, 61, 71, 75, 100, 101, 111, 112, 123, 152, 153, 155], "d19a": 120, "d414": 152, "d_": 112, "d_g_output": 112, "d_t": 136, "dag": [112, 126, 134, 141], "dai": [21, 22, 58, 59, 123], "dan": 123, "data": [1, 2, 3, 4, 6, 9, 13, 14, 15, 18, 20, 21, 23, 25, 26, 30, 31, 32, 33, 34, 35, 37, 38, 40, 42, 45, 47, 52, 60, 69, 70, 77, 78, 79, 80, 90, 95, 101, 105, 106, 110, 112, 114, 116, 119, 121, 122, 123, 125, 127, 129, 130, 131, 132, 133, 134, 137, 139, 140, 143, 144, 145, 147, 152, 153, 155], "data_class": [18, 19, 20, 30, 111, 133, 140, 144, 155], "data_class_for_yaml": [18, 20], "data_compon": [2, 122], "data_dict": 30, "data_process": [4, 120, 122, 126, 139], "data_transform": 120, "databas": [6, 26, 41, 45, 126, 136, 143, 145], "database_url": 26, "dataclass": [14, 18, 19, 20, 30, 37, 45, 50, 52, 61, 64, 68, 69, 76, 80, 84, 85, 95, 101, 106, 115, 119, 120, 121, 126, 131, 132, 138, 140, 144, 147, 152, 153], "dataclass_obj_from_dict": 37, "dataclass_pars": [18, 113, 133, 144], "dataclassformattyp": [18, 20, 30, 113], "dataclasspars": [18, 19, 113, 144, 155], "dataformat": 45, "dataload": [61, 77, 79, 89, 119], "datapiplin": 120, "dataset": [37, 47, 48, 49, 50, 61, 64, 68, 70, 77, 78, 79, 89, 91, 92, 120, 126, 132, 133, 136, 137, 144, 145, 146, 154], "dataset_item": [101, 152, 153], "datetim": 45, "david": 155, "db": [120, 126, 138], "db2": 33, "db_uri": [24, 138], "deal": [120, 131, 138], "debug": [61, 69, 77, 78, 79, 89, 93, 106, 120, 126, 127, 129, 131, 141, 144, 150, 151], "debug_demo": [61, 77, 79, 152], "debug_report": [61, 77, 79], "debug_text_grad": [61, 77, 79, 101, 152, 153], "decemb": 155, "decid": [0, 1, 11, 13, 14, 16, 18, 19, 30, 39, 58, 59, 105, 113, 123, 125, 129, 136, 137, 138, 140, 155], "decis": [123, 137], "declar": [61, 64], "decod": [1, 16, 34, 43, 137], "decoded_output": 16, "decor": [30, 31, 90, 101, 113, 116, 129, 130, 152, 153], "decreas": [121, 136], "decreaseembeddingdim": 121, "decreat": 121, "dedic": 98, "dedupl": [2, 3], "deep": [123, 125, 127, 139], "deepcopi": 121, "deeper": 98, "deepmind": 76, "deepseek": 16, "def": [0, 1, 16, 18, 20, 31, 32, 36, 37, 45, 57, 59, 61, 77, 78, 83, 101, 110, 111, 112, 113, 116, 120, 121, 123, 129, 130, 131, 135, 137, 138, 140, 144, 152, 153, 155], "defail": 123, "defaul": 130, "default": [0, 1, 8, 9, 13, 14, 15, 16, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 47, 49, 52, 55, 56, 57, 59, 61, 64, 66, 67, 69, 71, 73, 75, 77, 78, 79, 83, 84, 85, 89, 90, 93, 95, 98, 101, 111, 112, 113, 116, 119, 120, 123, 125, 128, 129, 130, 131, 132, 133, 138, 139, 140, 144, 147, 152, 153], "default_adalflow_system_prompt": [34, 125, 135], "default_factori": [30, 113], "default_judgement_queri": [57, 123], "default_lightrag_system_prompt": [38, 40], "default_llm_evaluator_prompt": 145, "default_model_kwarg": 37, "default_num_shot": [61, 70], "default_prompt_templ": [125, 135], "default_react_agent_system_prompt": [0, 1, 111], "default_task": [56, 59, 123], "defaultazurecredenti": [9, 92], "defaultllmjudg": [57, 59, 123, 125], "defens": 129, "defin": [0, 1, 2, 4, 9, 18, 19, 30, 34, 41, 61, 66, 67, 71, 74, 77, 78, 83, 92, 100, 101, 106, 111, 112, 116, 119, 123, 125, 126, 129, 131, 132, 133, 137, 138, 139, 145, 147, 152, 153, 155], "defini": 138, "definit": [2, 4, 36, 44, 45, 111, 135, 137, 138, 140, 144], "definitli": 131, "degrad": 136, "degre": [131, 143], "del": 32, "delai": 92, "deleg": 144, "delet": [32, 33, 100, 120], "delete_dialog_turn": 45, "delibr": [125, 140], "delta": [37, 132], "delux": 155, "demo": [31, 38, 61, 64, 68, 69, 71, 75, 77, 78, 79, 80, 101, 112, 116, 127, 132, 144, 152, 153, 154, 155], "demo_class": 132, "demo_data_class": 132, "demo_data_class_input_map": 132, "demo_data_class_output_map": 132, "demo_optim": [77, 79], "demonstr": [16, 56, 57, 59, 101, 106, 121, 122, 125, 131, 133, 137, 138, 140, 144, 146, 147, 149, 150, 151, 152, 153], "demonstrate_embeddings_usag": 131, "demooptim": [61, 64, 68, 77, 78, 79, 101, 126, 144, 153], "demostr": [61, 64, 150], "deni": 98, "denomin": [21, 22], "denot": 128, "depend": [4, 21, 22, 25, 37, 45, 98, 100, 105, 116, 123, 128, 131, 137, 138, 145, 147], "deploy": 100, "deriv": 140, "derrickson": 155, "desc": [18, 19, 30, 34, 113, 123, 125, 130, 132, 133, 138, 144, 147], "descend": 31, "descent": [61, 68, 71, 76, 146], "describ": [30, 36, 133, 140, 144, 147, 155], "descript": [1, 18, 19, 20, 30, 37, 45, 61, 71, 75, 97, 100, 105, 111, 113, 120, 123, 126, 133, 135, 136, 137, 140, 144, 145, 146, 147, 155], "deseri": [31, 95, 113, 127, 135, 138], "design": [30, 31, 36, 39, 45, 70, 98, 99, 106, 115, 120, 121, 126, 131, 134, 137, 139, 145], "desir": [18, 19, 20, 125, 133, 135], "destin": [31, 127], "destruct": 155, "detail": [2, 4, 8, 11, 12, 13, 14, 30, 38, 56, 57, 59, 61, 77, 79, 97, 98, 100, 101, 111, 113, 116, 120, 123, 125, 131, 133, 137, 140, 144, 145, 147, 152, 153, 155], "detect": 83, "determin": [2, 4, 9, 99, 116, 123, 131, 132, 137], "determinist": 131, "detial": 98, "dev": [97, 100], "dev_titl": [48, 52], "develop": [2, 4, 21, 25, 98, 99, 101, 105, 106, 111, 115, 120, 122, 123, 125, 126, 127, 128, 130, 133, 135, 136, 137, 138, 139, 144, 147, 152, 153], "devic": 16, "df68": 120, "diagnos": [61, 77, 79, 106, 144], "diagnose_": [101, 152, 153], "diagnost": [101, 152, 153], "diagram": [128, 135], "dialog": [6, 45, 120], "dialog_turn": [45, 120], "dialog_turn_db": 120, "dialog_turns_as_docu": 120, "dialog_turns_input": 45, "dialogturn": [33, 45, 138], "dict": [0, 1, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 24, 25, 28, 30, 31, 33, 35, 37, 38, 39, 40, 42, 44, 45, 54, 56, 57, 59, 61, 64, 68, 69, 70, 71, 73, 75, 76, 77, 78, 79, 80, 84, 85, 88, 90, 94, 95, 101, 110, 111, 112, 113, 120, 125, 131, 132, 133, 140, 144, 147, 152, 153, 155], "dict_exampl": 113, "dict_factori": 37, "dict_str": 133, "dict_to_yaml": 30, "dictat": 139, "dictionari": [2, 4, 9, 13, 14, 15, 30, 31, 35, 37, 38, 40, 42, 45, 61, 77, 78, 88, 90, 95, 113, 120, 131, 133, 139, 140, 147], "did": [120, 123, 125, 130, 135, 136, 138, 140, 143, 144, 147], "diff": [72, 76, 112, 126], "differ": [6, 21, 22, 33, 45, 61, 69, 70, 71, 76, 77, 78, 89, 98, 105, 112, 116, 121, 123, 125, 126, 127, 128, 129, 131, 135, 137, 138, 139, 140, 146, 155], "differen": 138, "differenti": [61, 72, 73, 106, 112, 138], "difficult": [140, 145], "dig": 123, "digit": [101, 152, 153], "dimens": [23, 24, 35, 45, 56, 88, 120, 121, 122, 123, 131, 138], "diminish": [21, 22], "dip": 111, "dir": 130, "direct": [31, 61, 69, 87, 101, 112, 116, 123, 126, 144, 152, 153], "directionli": 36, "directli": [1, 2, 4, 11, 37, 45, 56, 57, 59, 61, 68, 70, 98, 105, 111, 113, 114, 116, 120, 121, 123, 135, 136, 138, 139, 140, 144, 155], "directori": [9, 39, 47, 52, 61, 77, 79, 83, 84, 85, 93, 97, 98, 101, 104, 105, 119, 130, 131, 152, 153], "disabl": [14, 112, 137], "disappoint": 138, "discard": [61, 64, 71, 76], "disclos": [128, 135], "discord": 98, "discov": 155, "discuss": [98, 123, 139, 147], "disk": 138, "displai": [92, 114, 130, 131], "disrupt": [120, 138], "distanc": [23, 26, 144], "distance_oper": 26, "distancetooper": [21, 26], "distil": 127, "distinct": [129, 139, 144], "distingush": 30, "distribut": 131, "div": 130, "dive": [98, 123, 136], "divers": [14, 61, 69, 123, 136, 145], "divid": [1, 21, 22, 23, 98, 111, 123, 137, 139, 140, 145], "divide_by_thre": 32, "dividebythre": 32, "divis": [2, 4, 21, 22], "do": [6, 15, 18, 20, 30, 37, 45, 58, 59, 61, 70, 71, 75, 76, 83, 92, 93, 98, 100, 101, 104, 105, 110, 111, 112, 113, 120, 122, 123, 125, 127, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 143, 144, 152, 153, 155], "do_sampl": 16, "doc": [2, 4, 8, 9, 11, 12, 13, 15, 16, 21, 23, 28, 31, 41, 45, 58, 59, 97, 98, 113, 116, 120, 121, 122, 123, 129, 135, 138, 139, 140], "doc1": [2, 4, 139], "doc_index": 120, "doc_indic": [21, 22, 45, 120, 138, 155], "doc_len": 138, "doc_list": 145, "doc_qa": 31, "doc_scor": [21, 22, 45, 138, 155], "docqa": [31, 116], "docstr": [97, 140], "doctor": [18, 20, 31, 116], "document": [2, 3, 4, 9, 11, 14, 16, 21, 22, 23, 24, 25, 26, 27, 28, 33, 41, 43, 45, 56, 98, 99, 103, 105, 108, 112, 114, 116, 121, 122, 123, 125, 126, 140, 143, 145, 155], "document_map_func": [21, 22, 23, 25, 28, 41, 138], "document_splitt": 88, "documents_embed": 138, "documentsplitt": [45, 88, 122], "dodger": 128, "doe": [2, 3, 30, 33, 37, 39, 42, 57, 59, 88, 101, 112, 123, 131, 134, 136, 138, 145, 147, 152, 153], "doesn": [98, 137], "doesnt": 131, "dog": 131, "domain": [123, 136], "doman": 136, "don": [20, 21, 22, 61, 69, 105, 128, 129], "done": [112, 113, 129, 131, 137], "dont": [105, 110, 112, 120, 128, 134], "dorianbrown": [21, 22, 138], "dot": 131, "dotenv": [104, 122, 137], "dotenv_path": [96, 122, 137], "doubl": [101, 111, 133, 140, 152, 153, 155], "doubt": 127, "down": [111, 138, 139], "download": [14, 105, 119], "downsid": [120, 123, 136, 138], "downstream": [121, 136], "downtown": 155, "draft": 98, "draw": [61, 69, 123, 136], "draw_graph": [61, 69, 149, 152], "drew": 123, "drink": 116, "drop": [129, 139], "drug": 155, "drum": [101, 152, 153], "dspy": [61, 64, 101, 110, 126, 152, 153, 155], "dspy_retriev": 155, "dspyretriev": 155, "dtype": 23, "duc": [56, 123], "due": [123, 136, 138, 139, 140, 144], "duli": 123, "dummi": 105, "dump": [37, 140], "dumper": 37, "duplic": [61, 70, 98, 100, 131], "dure": [2, 4, 23, 61, 65, 69, 100, 104, 120, 121, 122, 125, 126, 129, 130, 138, 139, 147], "dwivedi": 136, "dynam": [83, 126, 131, 137, 139, 155], "dynamicdataclass": 30, "dynamicdataclassfactori": 30, "e": [2, 4, 14, 21, 25, 61, 70, 92, 100, 111, 123, 128, 131, 136, 139, 140, 145], "e22084984bb9": 139, "e386e774d150": 139, "e3b48bcc": 120, "e636facc": 120, "e731": 155, "e7b617b2": [2, 4, 139], "each": [0, 1, 2, 4, 15, 16, 21, 22, 24, 30, 31, 32, 38, 45, 47, 52, 53, 58, 59, 61, 64, 68, 70, 77, 78, 84, 85, 92, 98, 101, 111, 112, 113, 120, 121, 122, 123, 125, 126, 127, 129, 131, 132, 134, 136, 137, 138, 139, 140, 143, 144, 145, 152, 153, 154], "each_emb_data": 131, "each_emb_out": 131, "each_func": 131, "each_item": 131, "ear": 130, "earli": 99, "earsier": 112, "earth": [57, 59, 123], "eas": [45, 113, 123, 126, 127], "easi": [30, 56, 61, 69, 93, 98, 101, 105, 106, 113, 116, 120, 123, 125, 127, 135, 137, 152, 153, 155], "easier": [106, 123, 131, 133, 134, 137, 140], "easili": [38, 61, 77, 78, 101, 105, 106, 116, 120, 121, 123, 126, 132, 133, 135, 138, 140, 147, 152, 153, 155], "eat": 16, "ec0fc247ac8b": [2, 4, 139], "ec910402": 120, "economi": [120, 138], "ecosystem": [106, 120, 138], "ed": 155, "edg": 112, "edibl": 16, "edit": 130, "editor": [101, 152, 153], "effcient": 30, "effecit": 144, "effect": [21, 22, 61, 64, 101, 111, 112, 120, 122, 136, 138, 139, 143, 144, 152, 153], "effective_measur": 80, "effici": [45, 61, 64, 97, 101, 106, 123, 131, 136, 137, 138, 139, 140, 143, 147, 152, 153], "effort": [33, 113, 126, 134], "eg": [92, 112], "eiffel": 130, "either": [0, 1, 9, 23, 37, 39, 42, 45, 101, 104, 105, 113, 121, 126, 130, 131, 133, 136, 138, 152, 153], "el": 120, "electr": [120, 138], "electron": [120, 138], "element": [40, 61, 71, 76, 131, 140], "elif": [131, 140], "elimin": [61, 71, 76, 136, 143], "els": [34, 38, 61, 69, 101, 111, 112, 125, 130, 131, 137, 140, 144, 152, 153, 155], "elsewher": 98, "em": 123, "emb": [4, 121, 131], "emb1": 131, "emb2": 131, "embed": [2, 3, 4, 9, 11, 13, 14, 15, 16, 17, 23, 24, 26, 35, 39, 45, 58, 59, 88, 120, 121, 122, 126, 136, 138, 139, 143, 155], "embedd": [2, 3, 9, 14, 15, 16, 23, 24, 26, 27, 31, 39, 45, 60, 88, 105, 120, 125, 126, 136, 138], "embedder_config": 35, "embedder_transform": 120, "embedderoutput": [9, 14, 15, 16, 17, 35, 39, 45, 120, 131], "embedderoutputtyp": 45, "embedderrespons": 122, "embedding_dim": [45, 121], "embedding_list": 131, "embeddingcollect": 131, "embeddingdatalist": 131, "embeddinglist": 131, "embeddingoutput": 131, "embeddings_arrai": 131, "embeddings_collect": 131, "embeddings_list": 131, "embrac": 106, "emiss": [120, 138], "emit": 30, "emphas": 147, "emploi": [123, 139], "empti": [1, 6, 21, 25, 33, 34, 111, 125, 131, 132], "en": [8, 9, 14, 16, 21, 22, 58, 59, 121, 129, 135, 136, 138], "enabl": [14, 38, 93, 99, 106, 110, 122, 129, 131, 137, 138, 155], "enable_consol": 93, "enable_fil": 93, "enable_library_log": 93, "enc": 136, "encapsul": [32, 137], "enclos": [18, 20, 111, 133, 140], "encod": [1, 2, 4, 34, 43, 136, 138, 143], "encoding_format": [35, 88, 120, 121, 122, 131, 138], "encount": [14, 100], "encourag": [4, 38, 98, 123, 131, 136], "end": [1, 18, 20, 32, 33, 37, 61, 69, 98, 101, 111, 113, 120, 126, 127, 128, 131, 132, 134, 136, 144, 146, 152, 153], "end_header_id": [128, 135], "end_of_assistant_step": 34, "end_of_system_messag": [136, 144], "end_of_system_prompt": [34, 101, 123, 152, 153], "end_of_text": [128, 135], "end_of_us": [101, 123, 136, 152, 153], "end_of_user_messag": 144, "end_of_user_prompt": 34, "end_tim": [36, 131, 140], "endfor": [1, 40, 111, 135, 138, 140, 144], "endif": [1, 34, 40, 61, 71, 76, 101, 111, 123, 125, 130, 133, 135, 140, 144, 147, 152, 153], "endpoint": 9, "energi": [120, 138], "enforc": [15, 61, 69, 111, 120, 125, 134], "engag": [113, 155], "engin": [31, 38, 61, 65, 66, 67, 69, 71, 72, 75, 77, 78, 99, 101, 105, 106, 110, 112, 126, 127, 130, 132, 135, 136, 143, 144, 152, 153], "enginelm": [61, 65], "england": 123, "english": [11, 138], "enhanc": [72, 93, 98, 116, 126, 136, 137, 139, 143, 147], "enhance_queri": 116, "enhancequerycompon": 116, "enjoi": 105, "enorm": 125, "enough": [98, 127], "ensembl": 136, "enssenti": 147, "ensur": [9, 16, 23, 30, 35, 37, 40, 61, 64, 71, 75, 77, 78, 98, 99, 100, 101, 104, 111, 113, 116, 121, 122, 123, 126, 128, 132, 134, 138, 144, 145, 152, 153], "entail": [56, 123], "enti": 144, "entir": [61, 69, 101, 131, 138, 152, 153], "entiti": [88, 94, 106, 113, 127, 137, 144], "entity_cl": 94, "entity_config": 88, "entity_nam": 88, "entity_st": 88, "entitymap": 94, "entri": [131, 139], "enum": [26, 30, 37, 45, 56, 59, 80, 92, 95, 131, 140], "enum_cl": 37, "enumer": [31, 131, 140], "env": [14, 96, 97, 104, 105, 121, 122, 137, 138], "env_exampl": 98, "environ": [4, 9, 16, 37, 40, 96, 97, 98, 99, 103, 105, 111, 120, 121, 122, 131, 137, 138], "environment": [120, 138], "eos_token_id": 16, "eot": 16, "eot_id": [128, 135], "epilon": [21, 22], "epsilon": [21, 22, 138], "equal": [16, 56, 57, 59, 138, 139], "equalis": 123, "equival": [31, 37, 99, 101, 120, 140, 152, 153], "error": [1, 9, 11, 13, 14, 16, 21, 25, 30, 34, 37, 39, 45, 56, 61, 77, 79, 83, 92, 93, 97, 100, 101, 111, 112, 113, 121, 123, 129, 131, 137, 140, 152, 153], "error_messag": [45, 130], "error_onli": 83, "especi": [2, 3, 4, 30, 83, 85, 98, 101, 113, 116, 121, 123, 128, 133, 136, 138, 139, 141, 152, 153], "especial": 138, "espeic": 138, "essenc": 105, "essenti": [98, 99, 101, 120, 131, 137, 138, 152, 153], "establish": [105, 155], "estim": [101, 152, 153], "estimated_num_token": [45, 120, 122], "et": [123, 136, 143, 145], "etc": [31, 33, 37, 61, 66, 67, 70, 78, 91, 101, 105, 112, 121, 123, 126, 131, 133, 136, 145, 152, 153], "euclidean": 23, "eval": [31, 36, 37, 44, 45, 56, 61, 69, 71, 75, 77, 78, 101, 112, 125, 132, 134, 136, 140, 143, 145, 152, 153, 155], "eval_fn": [61, 69, 71, 75, 77, 78, 101, 110, 123, 144, 152, 153, 155], "eval_fn_desc": [61, 71, 75, 101, 110, 144, 152, 153, 155], "eval_input": [61, 69, 77, 78, 101, 144, 152, 153, 155], "eval_rslt": 123, "eval_scor": [71, 76], "eval_system_prompt": [61, 71, 73], "evalfntotextloss": [61, 71, 75, 77, 78, 101, 110, 132, 144, 152, 153, 155], "evalu": [31, 32, 37, 45, 49, 52, 53, 54, 56, 57, 61, 64, 71, 73, 75, 76, 77, 78, 79, 80, 98, 106, 110, 112, 116, 125, 127, 130, 136, 138, 139, 143, 144, 155], "evaluate_ast_nod": 37, "evaluate_one_sampl": [101, 110, 153], "evaluate_sampl": [61, 77, 78], "evaluation_criteria_str": 123, "evaluation_steps_str": 123, "evaluationmeasur": 123, "evaluationresult": [53, 54, 58, 59, 61, 77, 78, 80], "evalul": 123, "even": [2, 4, 18, 19, 20, 37, 58, 59, 98, 101, 113, 116, 121, 123, 125, 127, 131, 132, 133, 135, 136, 138, 139, 140, 143, 144, 152, 153], "event": [36, 44, 82, 129], "event_typ": 82, "eventu": [113, 138], "ever": [131, 136], "everi": [33, 61, 77, 78, 99, 105, 126, 127, 134], "everyth": [98, 101, 111, 134, 152, 153], "eviron": 137, "exact": [2, 4, 58, 59, 123, 139, 145], "exact_match": [53, 59, 101, 144, 145, 152, 153], "exactli": [23, 31, 32, 53, 59, 101, 111, 125, 138, 145, 152, 153], "exam": 123, "examin": [21, 22], "exampl": [0, 1, 2, 4, 9, 11, 13, 14, 15, 16, 18, 19, 20, 21, 22, 25, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 45, 47, 50, 52, 53, 57, 58, 59, 61, 68, 69, 70, 77, 78, 79, 83, 88, 92, 93, 97, 100, 101, 104, 105, 110, 111, 112, 116, 119, 120, 121, 122, 123, 126, 128, 130, 132, 133, 134, 135, 136, 137, 138, 140, 144, 145, 147, 151, 152, 153, 155], "examplari": 98, "example1": 122, "example_funct": 37, "example_json": [30, 113], "example_str": [57, 113], "example_using_multipli": 111, "example_yaml": [30, 113], "examples_prompt": 40, "examples_str": [34, 40, 123, 125, 130, 133, 135], "examples_templ": 40, "excel": 127, "except": [2, 4, 39, 92, 101, 111, 121, 131, 140, 152, 153], "excerpt": 139, "excess": [56, 123], "exchang": 131, "exclud": [14, 18, 19, 20, 30, 31, 37, 44, 45, 61, 64, 113, 120, 133, 140], "exclude_field": [18, 20, 111, 133], "exclude_input": [61, 64], "exclude_input_fields_from_bootstrap_demo": [61, 64, 68, 77, 79, 144], "excludetyp": [30, 113, 133], "exclus": [98, 113, 116], "execlud": 140, "execut": [1, 2, 4, 32, 36, 37, 44, 111, 129, 131, 137, 139, 140], "execute_func": [44, 140], "execute_func_async": [44, 140], "execute_func_expr": [44, 140], "execute_func_expr_async": 44, "execute_func_expr_via_ev": [44, 140], "execute_func_expr_via_sandbox": [44, 140], "exist": [6, 40, 61, 71, 76, 100, 101, 107, 113, 123, 127, 137, 138, 152, 153, 155], "exmplari": 16, "exp": 100, "expand": [105, 136], "expans": [3, 136, 138, 143], "expect": [11, 14, 21, 22, 28, 33, 41, 42, 89, 123, 131], "expens": [101, 136, 138, 152, 153], "experi": [6, 21, 22, 33, 106, 116, 120, 127], "explain": [98, 105, 120, 123, 125, 129, 137, 145], "explan": [18, 19, 21, 22, 123, 125, 144], "explicitli": [30, 113], "explor": [139, 144], "export": 9, "expos": [1, 34], "expr": [44, 140], "express": [36, 37, 44, 45, 101, 111, 140, 152, 153], "expressli": 155, "extend": [4, 15, 32, 33, 36, 105, 106, 112, 120, 121, 138, 140, 144], "extens": [26, 31, 105, 129, 139], "extern": [95, 122, 123, 133, 137, 138], "extract": [2, 4, 9, 18, 20, 37, 42, 61, 70, 105, 131, 133, 137, 139, 145], "extract_dataclass_typ": 37, "extract_first_boolean": 37, "extract_first_float": 37, "extract_first_int": 37, "extract_function_express": 37, "extract_json_str": 37, "extract_list_str": 37, "extract_new_vari": [71, 76], "extract_yaml_str": 37, "extrins": 123, "ey": 130, "f": [2, 3, 4, 21, 22, 31, 36, 90, 101, 110, 111, 116, 121, 122, 123, 131, 135, 136, 137, 138, 140, 145, 147, 152, 153, 155], "f1": [123, 136, 143, 145], "f179cc285499": 123, "f2eddc77": 120, "f513": 120, "f98f": 120, "facadfcf": [50, 52], "face": [35, 38, 98, 121, 123, 125, 129], "facebookresearch": [23, 138], "facet": 138, "facilit": [137, 139], "fact": [56, 123, 130, 136, 137, 138, 143, 155], "factoid": 155, "factor": [21, 22, 139], "factori": [30, 33, 45, 80, 84, 85], "factual": [56, 123, 138], "fahrenheit": 140, "fail": [21, 25, 45, 61, 64, 69, 83, 92, 100, 101, 112, 120, 121, 123, 125, 126, 127, 130, 131, 133, 137, 140, 144, 152, 153], "failur": [1, 61, 77, 78, 111, 112, 121, 125], "failure_message_to_backward": 112, "failure_message_to_backward_engin": 38, "failure_message_to_optim": 38, "fair": [56, 123], "fairli": 120, "faiss": [23, 33, 92, 104, 138], "faiss_retriev": [21, 120, 138], "faissretriev": [21, 23, 88, 120], "faissretrieverdocumenttyp": 23, "fallback": [0, 1, 111], "fals": [2, 3, 14, 16, 18, 19, 20, 30, 31, 33, 37, 38, 41, 43, 45, 56, 57, 59, 61, 64, 68, 69, 70, 71, 76, 77, 78, 79, 101, 110, 111, 123, 130, 131, 133, 140, 144, 145, 152, 153, 155], "famili": 111, "famou": 131, "fangkaijiao": 136, "fantast": 122, "far": [14, 98, 101, 120, 132, 152, 153], "farm": [120, 138, 155], "fast": [21, 22], "faster": [97, 138], "fastest": 136, "fastrag": 136, "favorit": 99, "fd11f12958b3": 120, "fdbc447d": 122, "feasibl": 113, "featur": [36, 98, 99, 116, 126, 128, 140], "feburari": [58, 59, 123], "fed": [140, 145], "feed": 136, "feedback": [14, 61, 71, 74, 75, 76, 80, 98, 101, 112, 126, 136, 152, 153], "feel": [110, 123, 129, 136], "fetch": [21, 25, 26, 27, 33, 89, 98, 120, 131, 145], "fetch_item": 33, "fetch_transformed_item": 33, "fetched_dialog_turn": 120, "fever": 137, "few": [30, 38, 56, 64, 68, 69, 70, 77, 79, 106, 111, 113, 123, 126, 131, 134, 135, 136, 137, 138, 140, 143, 144, 146, 147, 155], "few_shot": [101, 144, 153], "few_shot_demo": [101, 132, 144, 152, 153, 155], "few_shot_demo_debug_path": [61, 77, 79], "few_shot_optim": [101, 153], "few_shot_optimizer_": 126, "few_shot_templ": [101, 132, 152, 153], "few_shots_config": [61, 77, 79], "fewshot": 64, "fewshotconfig": [61, 77, 79], "field": [12, 18, 19, 20, 21, 22, 24, 30, 35, 37, 38, 44, 45, 61, 64, 111, 113, 119, 120, 121, 122, 123, 128, 132, 133, 138, 140, 144, 147, 155], "field_nam": 30, "field_valu": 30, "fieldcondit": 138, "fieldnam": 90, "fieldtyp": 37, "fifa": 123, "fig": 144, "figur": [98, 139, 144], "file": [6, 16, 21, 22, 31, 33, 35, 41, 61, 69, 77, 79, 83, 84, 85, 90, 93, 96, 97, 98, 100, 101, 104, 105, 113, 121, 122, 126, 129, 130, 131, 138, 145, 152, 153], "file_io": 116, "file_path": 84, "filenam": [83, 84, 85, 93], "filepath": [31, 33, 61, 69, 83, 85, 120], "filesystem": 33, "fill": [14, 21, 22, 38, 40, 98, 105], "filter": [27, 33, 105, 135], "filter_fn": 33, "filtered_docu": 138, "final": [0, 1, 21, 22, 40, 45, 61, 69, 71, 73, 77, 79, 101, 111, 120, 122, 123, 125, 126, 131, 135, 136, 137, 138, 140, 143, 144, 145, 152, 153, 155], "final_model_kwarg": 131, "final_output": 155, "final_prompt": 135, "financ": 123, "financi": 123, "finardi": [123, 145], "find": [16, 38, 43, 47, 52, 55, 61, 64, 77, 78, 98, 101, 104, 111, 120, 121, 122, 123, 125, 131, 132, 137, 138, 144, 145, 152, 153], "find_demo_paramet": 38, "find_nearest_neighbor": 131, "findal": [101, 152, 153], "fine": [45, 136, 143, 152], "finer": 139, "finetun": [123, 136, 143], "finish": [1, 111, 131, 137], "first": [1, 2, 4, 8, 15, 23, 32, 33, 37, 98, 99, 101, 111, 120, 122, 123, 125, 126, 128, 129, 131, 132, 133, 134, 136, 137, 138, 139, 140, 144, 145, 152, 153, 155], "firstli": 139, "fit": [23, 30, 35, 45, 61, 77, 79, 101, 111, 120, 126, 136, 139, 143, 144, 150, 151, 152, 153], "five": [98, 116, 123], "fix": [98, 99, 100, 144, 155], "fix_json_escaped_single_quot": 37, "fix_json_missing_comma": 37, "flagembed": 138, "flagopen": 138, "flare": 136, "flashrag": 136, "flat": [57, 59, 123], "flex": 130, "flexibl": [33, 37, 45, 105, 113, 116, 123, 125, 127, 129, 131, 135, 136, 137, 140, 143, 144, 147], "flexibli": [126, 144], "float": [14, 16, 21, 22, 23, 24, 26, 35, 37, 42, 45, 53, 54, 55, 57, 58, 59, 61, 64, 69, 70, 71, 75, 76, 77, 78, 79, 80, 88, 101, 111, 120, 121, 122, 123, 131, 132, 133, 138, 140, 144, 152, 153, 155], "float32": 23, "float_pars": 42, "float_str": 133, "float_str_2": 133, "float_str_3": 133, "float_str_4": 133, "floatpars": [42, 123], "floor": 155, "flow": [120, 131, 137, 138, 139, 147], "fluenci": [56, 59, 123], "flute": [101, 152, 153], "fly": 123, "fn": [36, 37, 111, 137, 140], "fn_name": [61, 65], "fn_schema_str": [45, 137], "focu": [8, 120, 137, 144], "focus": [14, 123, 126, 139], "folder": [97, 105], "follow": [4, 9, 11, 14, 17, 18, 20, 21, 25, 26, 30, 31, 38, 47, 52, 56, 61, 77, 78, 92, 93, 97, 98, 100, 101, 104, 105, 111, 112, 113, 121, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 138, 140, 144, 145, 147, 152, 153, 155], "food": 16, "fool": 111, "footprint": [120, 138], "forc": 125, "forest": 131, "fork": 98, "form": [2, 4, 45, 56, 59, 66, 67, 101, 106, 112, 113, 120, 123, 131, 135, 136, 138, 139, 143, 152, 153, 155], "format": [1, 2, 4, 6, 9, 12, 13, 15, 16, 18, 19, 20, 21, 22, 23, 26, 30, 31, 34, 36, 37, 38, 39, 41, 45, 61, 68, 69, 71, 76, 88, 93, 95, 97, 101, 111, 120, 121, 123, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 144, 145, 147, 152, 153, 155], "format_chat_history_str": 120, "format_class_str": [30, 113], "format_example_str": [30, 113], "format_instruct": [18, 20, 133, 140], "format_str": 30, "format_typ": [18, 19, 20, 30, 113, 133, 144, 155], "format_vector_search_queri": [21, 26], "former": 123, "formrecogn": 92, "formul": [136, 143], "forward": [31, 38, 41, 43, 61, 66, 67, 69, 71, 73, 74, 75, 77, 78, 110, 112, 116, 132, 134, 155], "fossil": [120, 138], "found": [37, 57, 58, 59, 61, 71, 73, 92, 101, 119, 120, 123, 138, 144, 145, 152, 153], "four": [39, 61, 69, 101, 111, 126, 138, 140, 152, 153], "foward": [112, 155], "frac": [21, 22, 136], "framework": [30, 58, 59, 98, 99, 101, 105, 106, 123, 126, 131, 136, 137, 152, 153], "franc": [30, 37, 111, 113, 130, 131, 135], "francisco": 140, "frank": 136, "franklin": 111, "fratern": 155, "free": [14, 120, 136, 138, 155], "frequenc": [21, 22], "frequency_penalti": [101, 152, 153], "frequent": [21, 22], "fresh": 138, "friendli": [16, 99, 123], "from": [0, 1, 2, 3, 4, 9, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 47, 52, 56, 57, 59, 61, 64, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 83, 84, 88, 89, 90, 92, 93, 96, 97, 98, 99, 101, 104, 105, 106, 111, 112, 115, 120, 121, 122, 123, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 143, 144, 145, 146, 147, 152, 153, 155], "from_config": [31, 35, 38, 125, 138], "from_default": 137, "from_dict": [7, 9, 13, 14, 15, 18, 20, 21, 22, 30, 31, 40, 41, 45, 61, 69, 113, 133, 135, 138, 140, 147], "from_dict_to_json": 37, "from_dict_to_yaml": 37, "from_funct": [0, 1, 45, 111, 140], "from_json": [30, 113], "from_json_to_dict": 37, "from_pretrain": 16, "from_response_id": [61, 69], "from_yaml": [30, 113], "from_yaml_to_dict": 37, "front": 123, "fruit": [132, 152], "frustrat": [127, 130], "fsspec": 120, "fuel": [120, 138], "full": [45, 101, 105, 106, 125, 127, 131, 136, 138, 139, 145, 152, 153], "full_respons": [38, 61, 66, 69, 77, 78, 101, 144, 152, 153, 155], "fulli": [61, 65], "fullwiki": 145, "fun": [31, 45, 105, 130], "fun_compon": [31, 116], "fun_expr": 45, "fun_to_compon": [31, 101, 116, 152, 153], "func": [37, 44, 45, 92, 111, 131, 140], "func_desc": [45, 111, 140], "func_expr": 140, "func_list": 131, "func_nam": [45, 111, 140], "func_output": 140, "func_paramet": [45, 111, 140], "func_pars": 140, "func_tool": [0, 1, 140], "funciton": 140, "funcnam": [111, 140], "funcompon": 31, "function": [0, 1, 2, 3, 4, 8, 9, 14, 15, 16, 17, 21, 22, 28, 30, 31, 33, 36, 38, 39, 40, 44, 45, 46, 49, 51, 60, 61, 66, 67, 69, 71, 74, 75, 76, 83, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 101, 105, 106, 110, 111, 112, 113, 116, 120, 121, 125, 126, 127, 129, 131, 132, 133, 134, 136, 137, 138, 139, 145, 147, 152, 153, 155], "function_arg": 140, "function_definit": [44, 140], "function_expr": [37, 140], "function_nam": [93, 140], "function_respons": 140, "function_to_cal": 140, "functiondefinit": [36, 44, 45, 111, 140], "functionexpress": [0, 1, 36, 44, 45, 111], "functionoutput": [36, 44, 45, 140], "functiontool": [0, 1, 36, 44, 111, 137], "fundament": [99, 105, 106, 116, 127], "further": [2, 4, 35, 101, 105, 106, 111, 113, 116, 121, 123, 125, 126, 130, 131, 133, 138, 139, 152, 153], "futur": [2, 4, 99, 105, 111, 112, 121, 125, 127, 129, 131, 136, 138, 139], "futuredata": 123, "fuzzi": [123, 138, 145], "fuzzy_match": [53, 59, 110, 145, 155], "fyi": [61, 71, 76], "g": [2, 4, 14, 21, 25, 56, 61, 70, 100, 111, 123, 128, 131, 136, 139, 140, 143, 145], "g_evalu": 123, "ga": [120, 138], "game": [120, 123], "gamma": 155, "gao": 136, "gap": [39, 127, 130, 144], "garlic": 132, "gase": [120, 138], "gate": 16, "gather": [36, 98, 131, 132, 135, 140], "gather_trainer_st": [61, 77, 79], "gemini": 12, "gemma": [13, 16], "genai": [12, 106, 123, 127, 144], "genear": [61, 68, 136, 138], "geneat": 82, "gener": [0, 1, 2, 4, 9, 12, 14, 15, 16, 18, 19, 20, 30, 31, 33, 37, 39, 41, 45, 53, 56, 57, 59, 60, 61, 66, 67, 68, 69, 70, 71, 73, 77, 78, 79, 83, 84, 85, 89, 90, 98, 99, 100, 101, 105, 106, 110, 111, 113, 116, 120, 121, 122, 123, 126, 127, 128, 129, 130, 131, 132, 133, 135, 137, 138, 139, 140, 143, 144, 145, 146, 147, 152, 153, 154, 155], "generate_function_call_expression_from_cal": [37, 140], "generate_readable_key_for_funct": 37, "generateansw": 144, "generatecontentrespons": 12, "generaterespons": 14, "generation_nod": 112, "generativeai": [92, 104], "generator2": 130, "generator2_cal": 130, "generator_2": 130, "generator_2_cal": 130, "generator_cal": 130, "generator_call_logg": [83, 125, 130], "generator_evalu": 145, "generator_nam": 85, "generator_names_to_fil": 84, "generator_out": [112, 155], "generator_output": [80, 101, 152, 153], "generator_state_logg": 125, "generator_state_trac": [85, 130], "generatorcalllogg": [84, 125, 130], "generatorcallrecord": 84, "generatorlogg": 83, "generatoroutput": [8, 9, 12, 13, 14, 15, 16, 21, 25, 38, 39, 45, 61, 66, 67, 77, 78, 83, 84, 101, 111, 112, 120, 129, 131, 144, 152, 153, 155], "generatorstatelogg": [85, 125, 130], "generatorstatesrecord": 85, "genereratoroutput": 155, "genet": [139, 144], "genreat": 112, "genuin": 123, "geograph": 144, "get": [1, 2, 4, 15, 16, 21, 22, 30, 32, 33, 37, 38, 40, 41, 45, 56, 57, 59, 84, 93, 94, 100, 101, 111, 112, 113, 116, 120, 123, 129, 131, 133, 136, 137, 138, 139, 140, 144, 145, 147, 152, 153, 155], "get_adalflow_default_root_path": 91, "get_al": 94, "get_all_messages_cont": [7, 15, 131], "get_average_embed": 131, "get_bearer_token_provid": 92, "get_cache_path": 38, "get_cal": 84, "get_chat_history_str": 45, "get_current_script_and_lin": 93, "get_current_weath": 140, "get_data_class_schema": [37, 147], "get_data_key_fun": [61, 70], "get_dataclass_schema": 37, "get_default_task_instruct": [47, 52], "get_devic": [7, 16], "get_dialog_turn": 45, "get_enum_schema": 37, "get_examples_str": [18, 19, 133], "get_first_message_cont": [7, 8, 9, 15, 131], "get_fun_schema": [36, 37, 140], "get_grad_fn": [61, 69], "get_gradient_and_context_text": [61, 69], "get_gradient_memory_text": [61, 71, 76], "get_gradients_nam": [61, 69], "get_input_field": 30, "get_input_format_str": [18, 19, 133], "get_input_str": [18, 19, 133, 144], "get_jinja2_environ": 40, "get_log_loc": [84, 85], "get_logg": [61, 77, 79, 93, 129, 152], "get_model_arg": 45, "get_next_ord": 45, "get_openai_embed": 131, "get_output_field": 30, "get_output_format_str": [18, 19, 133, 144, 155], "get_param_info": [61, 69], "get_prob": [7, 15, 131], "get_prompt": 38, "get_prompt_vari": 40, "get_respons": 131, "get_short_valu": [61, 69], "get_string_token": 43, "get_subcompon": 31, "get_supporting_sent": 145, "get_task_desc": 30, "get_task_desc_str": [18, 19, 133, 144], "get_top_k_indices_scor": 37, "get_transformed_data": 33, "get_transformer_kei": 33, "get_type_schema": 37, "getdefaultencod": [1, 34], "getlogg": 129, "geval": [56, 59, 123], "gevaljudgeevalu": [56, 59, 123], "gevalllmjudg": [56, 59, 123], "gevalmetr": [56, 59], "git": [97, 98, 100, 105], "github": [23, 97, 98, 100, 109, 130, 144], "githubasset": 130, "gitignor": 98, "give": [14, 61, 69, 99, 101, 111, 112, 116, 125, 127, 132, 138, 140, 152, 153], "given": [1, 21, 22, 23, 24, 31, 32, 34, 37, 41, 56, 61, 65, 68, 82, 85, 88, 89, 111, 123, 126, 128, 131, 136, 137, 138, 140, 143, 144, 145], "glad": 100, "global": [92, 112], "go": [14, 61, 69, 98, 99, 100, 101, 105, 127, 130, 136, 137, 143, 152, 153], "goal": [99, 123, 125, 137, 139, 140], "goe": 127, "gold_titl": [50, 52, 155], "good": [21, 22, 56, 61, 71, 76, 98, 101, 113, 116, 120, 123, 132, 136, 140, 144, 152, 153], "googl": [12, 16, 57, 58, 59, 76, 92, 97, 98, 104, 122, 123, 130, 131, 135, 136], "google_api_kei": [97, 104], "google_cli": [7, 131], "google_genai": 45, "google_generativeai": 92, "googlegenaicli": [7, 12, 131], "got": [123, 138], "gov": [123, 136, 143], "govtech": [123, 136], "govtext": [123, 136, 143], "gpt": [0, 1, 9, 31, 37, 38, 83, 111, 116, 120, 123, 125, 128, 131, 138, 139, 140, 146], "gpt_3_model": [101, 152, 153, 155], "gpt_4o_model": [101, 144, 152, 153, 155], "gpt_model_kwarg": 111, "gpu": [23, 92], "grab": 111, "grad": [66, 67, 71, 74, 76, 101, 123, 126, 132, 144, 152, 153, 155], "grad_component_onli": 31, "grad_fn": [61, 69], "gradcompon": [38, 41, 61, 66, 67, 71, 74, 112, 146, 155], "gradid": [61, 71, 75, 126], "gradient": [66, 67, 68, 69, 71, 73, 74, 75, 76, 80, 106, 126, 132, 134, 136, 141, 146, 151], "gradient_context": [61, 71, 75], "gradient_prompt": [61, 69], "gradient_respons": 38, "gradientcontext": [61, 69, 71, 75], "gradients_context": 69, "graesser": 111, "graham": 136, "grammar": [56, 123], "grammat": 139, "granular": [139, 144], "grape": [132, 152], "graph": [61, 69, 77, 79, 101, 106, 112, 120, 126, 138, 152, 153, 155], "graphstat": 112, "gre": 123, "great": [2, 4, 99, 113, 122, 123, 126, 129, 130], "greatli": 99, "green": [93, 129], "greenhous": [120, 138], "greet": 45, "gregori": 155, "groq": [13, 45, 92, 104, 111, 125], "groq_api_kei": [97, 104], "groq_client": [7, 131], "groqapi": 131, "groqapicli": [7, 13, 31, 45, 111, 125, 131, 137], "ground": [53, 54, 57, 58, 59, 61, 77, 78, 101, 105, 110, 112, 120, 123, 138, 145, 152, 153, 155], "grounth": [58, 59], "group": [45, 97, 98, 139], "grow": 99, "growth": [120, 138], "gt": [58, 59, 61, 71, 76, 77, 78, 101, 112, 129, 138, 153, 155], "gt_answer": [53, 57, 59, 123], "gt_answer_str": 123, "gt_context": [58, 59], "gt_context_sentence_list": 145, "gt_score": 123, "gte": [16, 121, 131, 138], "guid": [9, 15, 97, 98, 101, 125, 126, 137, 140, 152, 153], "guidelin": [97, 98, 123, 136, 145], "guo": [123, 136], "guu": 136, "ha": [21, 28, 30, 33, 37, 38, 41, 56, 58, 59, 61, 70, 77, 78, 83, 85, 95, 98, 101, 104, 105, 106, 111, 112, 113, 120, 123, 129, 132, 134, 136, 138, 139, 140, 144, 145, 147, 152, 153, 155], "had": [122, 123, 155], "hailin": 136, "hajishirzi": 136, "half": 123, "halluci": 138, "hallucin": [56, 123, 126, 136, 143], "han": 136, "hand": [123, 138, 155], "handi": 135, "handl": [6, 9, 11, 13, 14, 15, 16, 21, 25, 30, 31, 37, 39, 61, 77, 78, 89, 92, 101, 111, 112, 113, 119, 120, 121, 123, 125, 126, 130, 131, 133, 136, 137, 138, 140, 144, 147, 152, 153], "handle_one_loss_sampl": [101, 110, 153], "handle_one_task_sampl": [101, 110, 153], "handle_streaming_respons": [7, 15], "handler": [1, 34, 129], "happen": 112, "happi": 111, "hard": [47, 52, 56, 61, 69, 123, 127], "harri": 147, "hash": [61, 77, 79], "hash_text": 87, "hash_text_sha1": 87, "have": [8, 9, 11, 14, 15, 16, 21, 22, 23, 30, 31, 32, 35, 37, 38, 39, 45, 56, 58, 59, 61, 70, 71, 73, 75, 77, 78, 83, 93, 97, 98, 101, 104, 105, 106, 111, 112, 113, 116, 120, 121, 122, 123, 125, 126, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 144, 145, 152, 153, 154, 155], "haven": 98, "hazard": [120, 138], "he": [123, 136, 147, 155], "head": [111, 123, 132], "headach": 116, "healthcar": 123, "healthi": 106, "heap": [56, 123], "hearti": 16, "heat": 111, "heavi": 127, "height": [130, 133], "helicopt": 16, "hello": [2, 4, 21, 22, 33, 45, 93, 128, 129, 139], "helm": 123, "help": [1, 2, 3, 4, 18, 19, 20, 30, 34, 36, 40, 45, 61, 77, 78, 92, 97, 98, 101, 106, 111, 112, 113, 114, 116, 120, 125, 126, 127, 128, 129, 130, 132, 133, 135, 136, 138, 139, 140, 141, 143, 144, 145, 152, 153, 155], "helper": [3, 17, 31, 40, 88, 131, 138], "henc": [137, 147], "hendryck": 123, "here": [2, 4, 11, 12, 13, 14, 16, 39, 45, 49, 52, 60, 70, 98, 99, 100, 101, 103, 104, 105, 108, 110, 111, 112, 113, 116, 120, 123, 125, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 144, 145, 147, 152, 153, 155], "hero": 127, "hf_token": [16, 97, 104], "hi": [45, 123, 147, 155], "hierarchi": 126, "high": [105, 106, 123, 127, 132, 136, 138, 143], "higher": [14, 61, 64, 71, 75, 127, 132, 138, 139], "highest": [56, 98, 101, 123, 136, 152, 153], "highli": [4, 33, 99, 105, 123, 127, 130, 131, 138, 145], "him": [123, 155], "hint": [37, 113, 125, 140], "histor": 120, "histori": [1, 6, 34, 45, 61, 71, 76, 85, 111, 120, 125, 126, 130, 131, 135, 137], "historyprompt": [61, 71, 76], "hit": [123, 136, 143], "hitrat": 123, "hodgson": 123, "hold": [45, 123], "homepag": [21, 22], "honestli": 133, "hook": [98, 105, 129], "hop": [123, 137], "hope": [99, 123], "host": [14, 97, 138], "hotel": 155, "hotpot_qa": [145, 155], "hotpotqa": [48, 50, 52, 123, 137, 145, 146, 154], "hotpotqadata": [50, 52, 110, 155], "hotpotqaragad": 110, "hour": 123, "hous": [98, 155], "how": [1, 2, 4, 9, 14, 15, 16, 21, 22, 23, 25, 30, 38, 45, 56, 57, 59, 61, 77, 78, 97, 100, 101, 106, 111, 112, 113, 119, 120, 121, 123, 125, 126, 128, 129, 131, 133, 135, 136, 137, 138, 140, 143, 144, 145, 146, 147, 152, 153, 155], "howev": [4, 99, 111, 116, 120, 123, 127, 128, 129, 132, 133, 135, 136, 138, 140, 143], "href": 130, "html": [2, 4, 58, 59, 113, 123, 129, 130, 133, 138, 139], "http": [0, 1, 8, 9, 11, 12, 13, 14, 15, 16, 21, 22, 23, 27, 49, 52, 56, 58, 59, 76, 97, 98, 111, 113, 121, 123, 125, 129, 130, 135, 136, 138, 140, 143, 152, 153], "hub": [16, 123], "hug": 123, "huggingfac": [16, 49, 52, 89, 113, 121, 129, 131, 138], "huggingfaceh4": 16, "hum": 144, "human": [16, 112, 113, 123, 125, 138, 144, 155], "humanalign": 123, "humanev": 123, "humor": 130, "hundr": 138, "hurt": 136, "hydrat": 116, "hydro": [120, 136, 138], "hypernetwork": 105, "hyperparam": 80, "hyperparamet": [112, 136, 138, 143], "hyperparametr": 112, "hyperparmet": [136, 138], "hypothesi": 137, "i": [0, 1, 2, 3, 4, 6, 8, 9, 12, 14, 15, 16, 18, 20, 21, 22, 23, 25, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 47, 52, 53, 56, 57, 58, 59, 60, 61, 64, 66, 67, 68, 69, 70, 71, 74, 75, 76, 77, 78, 79, 83, 84, 85, 88, 89, 90, 92, 93, 97, 98, 99, 100, 101, 103, 104, 106, 108, 110, 111, 112, 113, 114, 115, 116, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 143, 144, 145, 147, 150, 151, 152, 153, 155], "ibuprofen": 116, "icc": 155, "icl": [61, 64, 70, 101, 126, 127, 132, 136, 143, 152, 153], "id": [2, 4, 16, 38, 41, 43, 45, 50, 52, 61, 64, 66, 69, 71, 76, 80, 97, 101, 110, 112, 120, 122, 132, 133, 134, 139, 144, 152, 153, 155], "ideal": [2, 4, 123, 135, 139], "idempot": [71, 74], "ident": [9, 92], "identifi": [33, 37, 45, 56, 85, 119, 123, 131, 132, 134, 144], "idf": [21, 22, 120, 138], "idx": [31, 32, 131, 140], "ifram": [114, 141, 149, 150, 151], "igh": 139, "ik": [2, 4], "illicit": 155, "illustr": [2, 4, 137, 139], "imag": [121, 130, 136, 138], "img": 130, "immedi": 31, "impact": [2, 4, 14, 21, 22, 70, 120, 137, 138], "implement": [1, 2, 4, 11, 13, 14, 16, 21, 22, 39, 41, 56, 58, 59, 61, 66, 73, 89, 98, 101, 111, 112, 121, 131, 136, 138, 139, 144, 145, 147, 152, 153, 155], "import": [0, 1, 2, 4, 9, 11, 16, 18, 20, 21, 22, 30, 31, 36, 37, 40, 45, 56, 61, 66, 67, 69, 77, 79, 83, 92, 93, 98, 101, 104, 105, 111, 112, 113, 116, 120, 121, 122, 123, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 144, 145, 147, 152, 153, 155], "import_path": 92, "importerror": 92, "impress": 123, "improv": [21, 22, 98, 112, 123, 125, 126, 130, 131, 136, 138, 139, 143, 144, 152], "improving_rag": 136, "in_context_exampl": [61, 71, 76], "inabl": 37, "inact": 133, "inc": [97, 98, 130], "includ": [2, 4, 6, 18, 19, 20, 21, 22, 26, 30, 31, 33, 37, 39, 41, 45, 56, 61, 68, 88, 93, 97, 98, 100, 105, 111, 112, 116, 119, 120, 123, 126, 131, 133, 135, 136, 137, 138, 139, 140, 144, 145, 146, 147, 155], "include_demo": [61, 69], "include_field": [18, 20], "includetyp": [30, 133], "includng": 105, "incomplet": 37, "inconsist": [56, 123], "incorpor": 123, "incorrect": [110, 125, 136], "incorrectansw": 123, "increa": 120, "increas": [14, 21, 22, 61, 69, 120, 123, 136, 138], "increasingli": 123, "increment": [61, 77, 79, 100], "incress": 140, "incud": [61, 69], "indent": [18, 20, 37, 133], "independ": 131, "index": [1, 4, 16, 21, 22, 23, 25, 27, 28, 32, 33, 40, 41, 45, 61, 70, 71, 76, 89, 98, 110, 111, 120, 121, 123, 131, 135, 136, 138, 140, 143, 144, 145], "index_kei": [41, 138], "index_path": 33, "indexflatip": 23, "indexflatl2": 23, "indic": [21, 24, 25, 26, 30, 37, 89, 98, 101, 123, 125, 131, 138, 144, 152, 153], "indirectli": 123, "individu": [101, 131, 144, 152, 153], "individualn": [101, 152, 153], "industri": [98, 126, 136, 143], "inf": [23, 132], "infanc": 127, "infer": [12, 16, 23, 31, 45, 61, 77, 78, 98, 112, 121, 123, 136, 155], "infer_bge_reranker_bas": [7, 16], "infer_gte_base_embed": [7, 16], "infer_llm": [7, 16], "infinit": 14, "influenc": [14, 21, 22, 139], "info": [12, 93, 129], "inform": [30, 43, 56, 59, 80, 97, 98, 101, 104, 105, 109, 111, 116, 123, 125, 131, 136, 137, 138, 139, 144, 145, 147, 152, 153], "infrastructur": [120, 138], "ingest": [4, 105], "ingestionpipelin": 105, "inherit": [30, 39, 98, 105, 112, 120, 138, 155], "init": [93, 155], "init_async_cli": [7, 8, 9, 11, 13, 14, 15, 39, 131], "init_llm_cli": [7, 16], "init_model": [7, 16], "init_reranker_cli": [7, 16], "init_sync_cli": [7, 8, 9, 11, 12, 13, 14, 15, 16, 39, 131], "initi": [9, 16, 21, 22, 23, 25, 27, 28, 39, 40, 41, 61, 64, 68, 70, 77, 79, 93, 101, 111, 120, 123, 125, 131, 133, 135, 136, 137, 138, 140, 144, 145, 147, 152, 153], "initial_valid": [61, 77, 79], "initvar": 45, "inject": 129, "innatur": 136, "inner": [23, 26], "inner_product": [21, 26], "input": [0, 1, 2, 3, 6, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 30, 31, 32, 34, 35, 38, 39, 41, 42, 43, 45, 53, 56, 59, 61, 64, 69, 71, 74, 77, 78, 80, 84, 98, 101, 105, 111, 112, 113, 119, 120, 121, 122, 123, 125, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 144, 147, 152, 153, 155], "input_arg": [38, 61, 66, 69, 101, 112, 134, 152, 153], "input_data": [112, 144], "input_field": [30, 133], "input_format": 34, "input_format_str": 34, "input_map": 132, "input_prompt_kwarg": 38, "input_queri": 111, "input_str": [1, 18, 19, 31, 34, 56, 59, 83, 101, 111, 116, 120, 123, 125, 130, 131, 132, 135, 136, 138, 140, 144, 152, 153], "input_templ": 123, "input_text_list": 131, "input_typ": [9, 15], "inputfield": 144, "inquiri": [98, 144], "insert": [32, 33], "insid": [2, 4, 32, 61, 77, 78, 98, 112, 139], "inspir": 110, "instal": [7, 23, 92, 93, 97, 98, 103, 105, 120, 121, 123, 138], "install_messag": 92, "instanc": [9, 13, 14, 15, 18, 20, 24, 27, 30, 31, 37, 38, 40, 61, 77, 79, 83, 95, 105, 111, 122, 123, 131, 132, 133, 134, 140, 145, 147], "instanti": [31, 88, 92, 113, 125, 131], "instead": [2, 4, 11, 14, 15, 30, 31, 37, 56, 57, 59, 105, 112, 113, 120, 121, 125, 127, 136, 139, 140, 144], "instruct": [1, 9, 16, 18, 19, 20, 21, 25, 30, 56, 61, 69, 71, 76, 98, 101, 105, 106, 111, 113, 123, 125, 126, 132, 133, 134, 136, 139, 140, 144, 147, 152, 153], "instruction_to_backward_engin": [61, 69], "instruction_to_optim": [61, 69, 71, 76, 132], "instructur": 140, "instrument": [101, 152, 153], "int": [0, 1, 2, 3, 4, 11, 12, 16, 21, 22, 23, 24, 25, 26, 27, 28, 30, 32, 33, 35, 37, 41, 42, 43, 45, 48, 49, 50, 52, 61, 64, 69, 70, 71, 76, 77, 78, 79, 80, 89, 93, 101, 111, 112, 113, 120, 121, 131, 133, 137, 138, 140, 144, 147, 152, 153, 155], "int32": 12, "int_pars": 42, "int_str": 133, "int_str_2": 133, "int_str_3": 133, "int_str_4": 133, "integ": [37, 42, 101, 133, 152, 153], "integr": [2, 4, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 89, 105, 107, 110, 120, 121, 123, 126, 127, 131, 136, 137, 138], "intellab": 136, "intellig": [112, 123, 125], "intens": [123, 136, 138, 143], "intent": [101, 152, 153], "intepret": 126, "inter": 155, "interact": [9, 19, 30, 45, 101, 106, 113, 126, 127, 131, 133, 134, 136, 137, 140, 147, 152, 153], "interchang": 140, "interest": [120, 136], "interfac": [20, 36, 37, 38, 39, 66, 67, 78, 101, 116, 121, 122, 125, 126, 127, 152, 153], "intergr": [126, 127, 138], "interleav": [111, 128, 137], "intermedi": [112, 120, 137], "intermedia": 132, "intern": [30, 92, 95, 111, 123, 127, 131, 136, 137, 140], "internlm2": 14, "interpret": [2, 4, 106, 125, 126, 133, 136, 143], "interv": [55, 123], "intial": [125, 136], "intpars": 42, "intrins": 123, "intro": 8, "introduc": [2, 4, 101, 111, 112, 123, 126, 135, 136, 139, 143, 152, 153, 155], "introducesmock": 123, "introduct": 15, "intuit": [2, 4], "invalid": 131, "invalid_api_kei": 125, "invalid_request_error": 125, "invent": 155, "inventor": 155, "invers": [21, 22], "invest": [120, 138], "investig": [125, 147], "invok": [30, 37, 82, 112, 138], "involv": [98, 123, 139], "io": [14, 31, 35, 58, 59, 129], "ipynb": [98, 130], "irrelev": [56, 123, 136, 138], "is_async": 36, "is_dataclass_inst": 37, "is_irrelev": 136, "is_key_in_templ": 40, "is_norm": [37, 45, 121], "is_pick": 116, "is_pickl": 31, "is_potential_dataclass": 37, "is_relev": 136, "is_running_in_event_loop": 36, "is_support": 136, "is_teach": [61, 64, 69], "isaac": 155, "isinst": [131, 155], "isol": 98, "isrel": 136, "issu": 100, "issue_numb": 98, "issue_titl": 98, "issup": 136, "isus": 136, "itali": 123, "item": [33, 54, 56, 59, 61, 77, 78, 98, 101, 120, 130, 131, 132, 138, 140, 152, 153], "item1": 42, "item2": 42, "iter": [31, 32, 34, 61, 68, 71, 76, 77, 79, 98, 106, 123, 127, 131, 137], "its": [2, 4, 21, 22, 31, 37, 41, 45, 61, 69, 71, 76, 77, 79, 83, 84, 85, 88, 98, 101, 105, 111, 112, 116, 120, 123, 126, 127, 129, 131, 132, 133, 135, 137, 138, 139, 140, 141, 144, 145, 152, 153], "itself": [6, 31, 40, 61, 71, 76, 90, 92, 101, 111, 127, 128, 135, 145, 152, 153], "j": [123, 131], "jami": 136, "jane": [133, 136], "jax": 99, "jianfeng": 136, "jiang": 136, "jiawei": 136, "jina": 14, "jinja": [105, 135], "jinja2": [18, 19, 40, 105, 125, 126, 147], "jinja2_template_exampl": 135, "job": [120, 138], "john": [30, 133, 147], "join": [1, 58, 59, 111, 112, 120, 123, 137, 140, 144, 145, 155], "jointli": [136, 143], "joke": [131, 147], "joke_exampl": 147, "jokeoutput": 147, "josh": 123, "json": [2, 4, 18, 19, 20, 21, 22, 30, 37, 42, 44, 45, 83, 84, 85, 88, 90, 95, 101, 105, 111, 113, 116, 125, 130, 133, 137, 138, 139, 140, 144, 145, 147, 152, 153, 155], "json_definit": [44, 140], "json_obj": 42, "json_output_format_prompt": 133, "json_output_pars": 133, "json_pars": 42, "json_parser_output_typ": 42, "json_signatur": 113, "json_signature_exclud": 113, "json_str": [30, 37, 42, 113], "jsonl": [83, 84, 90, 101, 130, 152, 153], "jsonoutputpars": [18, 19, 20, 111, 113, 140], "jsonpars": [0, 1, 42, 111, 125, 137, 145], "judeg": 123, "judg": [56, 57, 59, 61, 71, 73, 112, 125, 136, 145], "judgement": [55, 56, 57, 59, 145], "judgement_list": [57, 59, 145], "judgement_queri": [57, 59, 123, 145], "judgement_score_list": [57, 123], "judgment": [55, 98, 123], "jugement_queri": [57, 123], "jump": 105, "june": 155, "jupyt": 131, "just": [16, 38, 56, 61, 66, 67, 71, 73, 75, 77, 78, 101, 105, 106, 111, 112, 120, 123, 125, 126, 127, 129, 131, 134, 140, 144, 152, 153, 155], "justifi": 130, "k": [14, 21, 23, 24, 25, 26, 27, 28, 58, 59, 123, 131, 136, 138, 143, 145, 155], "k1": [21, 22, 138], "karl": 155, "karpathi": [61, 69], "keep": [30, 33, 38, 61, 64, 69, 71, 76, 77, 79, 101, 113, 116, 120, 128, 129, 131, 138, 139, 147, 152, 153], "keep_detail": [48, 52], "kei": [9, 11, 14, 15, 27, 30, 31, 33, 37, 40, 41, 42, 45, 56, 61, 69, 77, 79, 89, 97, 101, 103, 105, 111, 113, 116, 120, 121, 122, 123, 125, 131, 133, 136, 137, 138, 139, 140, 147, 152, 153], "kelvin": 136, "kendallrank": 123, "kenton": 136, "kept": [2, 4], "keyword": [32, 37, 40, 45, 61, 65, 135, 138, 140], "kilt": 123, "kind": [105, 133], "kinnairdi": 155, "kitchen": 155, "knock": [120, 138], "know": [15, 98, 101, 104, 111, 125, 127, 128, 130, 136, 140, 152, 153, 155], "knowledg": [111, 123, 126, 127, 136, 137, 138, 140, 143, 145], "known": [111, 113, 138], "kunlun": 123, "kwarg": [0, 1, 8, 9, 12, 13, 15, 16, 20, 21, 22, 25, 26, 27, 28, 31, 32, 35, 36, 37, 38, 39, 40, 41, 42, 45, 47, 48, 52, 54, 56, 57, 59, 61, 65, 66, 67, 68, 70, 71, 73, 74, 75, 77, 78, 79, 82, 92, 101, 110, 111, 131, 135, 137, 138, 140, 144, 152, 153, 155], "l": [16, 136, 139], "l1": [21, 26], "l2": [21, 23, 26], "label": [30, 37, 49, 52, 61, 70, 105, 113, 123, 136, 138, 144], "label_desc": 144, "lack": [135, 138, 139], "lambda": [31, 33, 61, 70, 112, 120, 131, 132, 138, 155], "lamp": [101, 152, 153], "lampnn": [101, 152, 153], "lancedb": [24, 92, 138], "lancedb_retriv": 21, "lancedbretriev": [21, 24], "land": [120, 138], "landmark": 131, "langag": 136, "langgraph": 112, "languag": [2, 4, 21, 22, 61, 64, 101, 105, 111, 123, 125, 128, 131, 132, 136, 137, 139, 152, 153, 155], "larg": [35, 111, 120, 123, 125, 131, 136, 138, 139, 143, 144, 155], "larger": [35, 101, 139, 144, 152, 153], "last": [2, 4, 23, 33, 101, 120, 123, 132, 133, 138, 140, 152, 153, 155], "last_hidden_st": 16, "lastli": 131, "later": [33, 38, 101, 112, 113, 120, 138, 140, 152, 153], "latest": [12, 14, 100, 123, 137], "lavi": 123, "layer": [112, 127, 136], "lazi": [11, 92, 98], "lazy_import": [45, 98], "lazyimport": [45, 92], "lc": [58, 59], "lead": [14, 21, 25, 70, 100, 120, 138], "leaf": [112, 134], "leap": [58, 59, 123], "learn": [9, 14, 31, 32, 38, 98, 99, 102, 105, 111, 121, 123, 125, 126, 127, 134, 136, 138, 143, 144, 145, 152, 153, 155], "least": [112, 126, 136], "leav": 144, "led": [136, 155], "lee": 136, "left": [21, 22, 136], "legal": [123, 139], "legendari": 99, "len": [16, 120, 131, 140, 145], "length": [2, 4, 21, 22, 33, 45, 61, 65, 120, 121, 131, 136, 139, 140, 143], "lengthi": [101, 105, 152, 153], "lengthier": [21, 22], "lenient": 14, "less": [14, 18, 20, 21, 22, 23, 45, 61, 69, 112, 113, 121, 123, 136, 138, 140], "let": [7, 101, 111, 113, 116, 120, 130, 133, 135, 136, 137, 138, 140, 145, 152, 153, 155], "lettuc": 132, "levarag": 144, "level": [14, 55, 61, 77, 79, 93, 98, 101, 105, 113, 115, 129, 137, 140, 152, 153], "lever": 123, "leverag": [4, 26, 27, 37, 41, 101, 113, 120, 126, 132, 136, 137, 138, 139, 140, 145, 152, 153], "leverg": [21, 22, 41], "lewi": [136, 143], "li": [99, 136, 138], "lib": [93, 101, 129, 152, 153], "librari": [2, 4, 14, 30, 33, 38, 56, 57, 59, 61, 64, 83, 92, 93, 98, 99, 100, 101, 105, 106, 112, 113, 115, 116, 126, 127, 128, 129, 131, 138, 139, 143, 144, 152, 153, 155], "licens": 98, "life": [9, 155], "lifecyl": 140, "lifelong": 138, "lifestyl": 116, "lift": 127, "light": [106, 120, 138], "light_rag": 105, "lightn": [98, 101, 110, 123, 129, 152, 153], "lightningmodul": [101, 110, 152, 153], "lightrag": [2, 4, 9, 14, 15, 16, 40, 93, 100, 115, 116, 122, 145, 147], "lightweight": [113, 136], "like": [2, 4, 9, 32, 33, 37, 39, 42, 45, 60, 61, 69, 83, 93, 97, 98, 101, 105, 106, 111, 112, 113, 116, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 133, 136, 137, 138, 139, 143, 147, 152, 153, 155], "likelihood": 136, "limit": [101, 120, 123, 126, 131, 136, 138, 139, 140, 152, 153], "lin": 123, "linalg": 131, "line": [14, 93, 98, 101, 105, 126, 127, 129, 130, 132, 152, 153], "line_numb": 93, "linear": [112, 136], "linguist": 123, "link": [47, 52, 98, 101, 136, 139, 143, 152, 153], "list": [0, 1, 2, 3, 4, 11, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 33, 34, 35, 37, 38, 40, 41, 42, 43, 44, 45, 53, 54, 55, 56, 57, 58, 59, 61, 64, 65, 69, 70, 71, 74, 76, 77, 78, 79, 80, 83, 84, 89, 90, 92, 98, 99, 100, 101, 104, 107, 111, 112, 113, 116, 120, 121, 123, 128, 131, 132, 133, 138, 140, 145, 152, 153, 155], "list_dict_str": 133, "list_output_format_templ": [18, 20], "list_pars": 42, "list_str": 133, "list_str_2": 133, "list_str_3": 133, "listoutputpars": [18, 20, 133], "listpars": [21, 25, 42, 138], "liter": [2, 4, 9, 15, 18, 19, 23, 37, 45, 47, 48, 49, 52, 53, 57, 59, 61, 69, 77, 79, 82, 93, 133, 138], "literal_ev": 133, "literatur": [123, 145], "littl": 144, "liu": [123, 136], "liyin": [97, 144], "ll": [98, 101, 123, 152, 153], "llama": [4, 14, 131, 135], "llama3": [13, 14, 31, 111, 125, 128, 131, 135, 137], "llama3_model": [61, 77, 79], "llama3_model_kwarg": 111, "llama_cpp": 14, "llama_index": 105, "llamacpp": 14, "llamaindex": [4, 105], "llm": [0, 1, 6, 9, 14, 16, 19, 21, 25, 30, 31, 36, 38, 45, 56, 57, 59, 61, 66, 71, 73, 76, 77, 79, 99, 100, 101, 105, 106, 111, 112, 116, 119, 120, 125, 126, 130, 132, 133, 134, 136, 137, 139, 140, 143, 144, 145, 146, 147, 152, 155], "llm_as_judg": [123, 125], "llm_client": 16, "llm_counter": [101, 132, 152, 153], "llm_counter_cal": [101, 152, 153], "llm_counter_diagnos": [101, 152, 153], "llm_evalu": [57, 59, 123, 145], "llm_judg": [56, 57, 59, 123, 145], "llm_kwarg": 120, "llm_model_kwarg": 137, "llm_parser": 155, "llm_respons": 111, "llm_retriev": [21, 125, 138], "llm_text_loss": 71, "llm_tool": [111, 137], "llmasjudg": [57, 59, 123, 145], "llmasretriev": 138, "llmastextloss": [61, 71, 73], "llmevalresult": [57, 59], "llmjudg": [57, 59], "llmjudgeevalresult": [57, 59, 123], "llmretriev": [21, 25, 83, 125, 138], "llmretrieveroutputtyp": [21, 25], "lo": 128, "load": [21, 22, 30, 31, 33, 41, 49, 52, 84, 85, 88, 89, 90, 96, 101, 103, 119, 120, 123, 126, 133, 137, 138, 140, 144, 145, 147, 152, 153], "load_class": 92, "load_dataset": [61, 77, 79, 101, 123, 144, 145, 152, 153, 155], "load_dotenv": [104, 122, 137], "load_from_fil": [21, 22, 41, 138], "load_from_pickl": 31, "load_json": 90, "load_jsonl": 90, "load_meta_data": 84, "load_pickl": 90, "load_stat": [33, 120], "load_state_dict": [31, 116], "load_state_pickl": 31, "loaded_exampl": 147, "loader": 126, "lobbi": 155, "loc": 144, "local": [6, 16, 31, 39, 60, 98, 100, 119, 126, 131, 133, 138, 140, 143], "local_db": 33, "local_db_load": 33, "local_embedd": 121, "local_embedder_256": 121, "local_item_db": 33, "localdb": [6, 33, 45, 120, 136], "localhost": [14, 26, 138], "locat": [98, 113, 133, 138, 140, 144, 155], "lock": [98, 105], "log": [21, 22, 61, 77, 79, 83, 84, 85, 90, 91, 93, 100, 101, 111, 120, 125, 127, 130, 131, 136, 152, 153], "log_cal": 84, "log_prompt": 85, "loggedllmretriev": 83, "logger": [83, 126, 130], "logger_metadata": [101, 130, 152, 153], "loggind": 129, "logging_config": 129, "logic": [11, 13, 14, 16, 39, 56, 123, 127, 129, 131], "logos_pag": 130, "logprob": [45, 131, 136, 138], "long": [2, 4, 61, 69, 120, 125, 126, 130, 136, 138, 139, 144], "longer": [139, 155], "longest": [55, 58, 59], "longest_common_substr": 55, "look": [14, 37, 98, 101, 113, 120, 121, 130, 135, 137, 138, 144, 152, 153], "lookup": 137, "loop": [1, 32, 36, 40, 44, 111, 123, 131, 135, 138, 140, 144], "lose": [105, 130], "loss": [61, 66, 67, 71, 73, 74, 75, 77, 78, 80, 101, 106, 110, 126, 132, 134, 136, 151, 152, 153, 155], "loss_fn": [61, 77, 78, 101, 110, 144, 152, 153, 155], "loss_output": 80, "loss_step": [61, 77, 78], "losscompon": [61, 67, 71, 73, 75, 77, 78], "lost": [33, 101, 138, 144, 152, 153], "lot": [123, 144], "low": [14, 123, 132], "lower": [14, 55, 127, 140, 155], "lowest": [56, 98, 101, 123, 152, 153], "lr": [61, 69], "lstrip_block": 135, "lt": 129, "luyu": 136, "m": [45, 98, 100, 111, 112, 123, 129, 130], "m1": 16, "ma": 136, "macbook": 16, "machin": [123, 136], "made": [16, 18, 19, 33, 76, 98, 113, 123, 125, 126, 134], "magenta": 93, "mai": [4, 14, 101, 116, 123, 125, 128, 129, 138, 139, 152, 153, 155], "main": [33, 40, 49, 52, 56, 59, 61, 70, 98, 105, 116, 122, 123, 129, 130, 133, 138, 144], "main_class": 129, "mainli": [45, 61, 77, 78, 92, 97, 100, 105, 112, 113, 120, 123, 126, 127, 129], "maintain": [2, 4, 30, 99, 113, 115, 131, 139], "major": 111, "make": [14, 18, 20, 33, 38, 39, 56, 61, 71, 74, 77, 78, 89, 92, 97, 98, 99, 100, 101, 104, 105, 106, 110, 111, 112, 113, 116, 120, 123, 125, 126, 130, 131, 133, 134, 135, 136, 137, 138, 140, 147, 152, 153, 155], "man": 123, "manag": [4, 33, 34, 41, 44, 45, 82, 88, 97, 98, 100, 111, 112, 116, 120, 122, 125, 126, 131, 137, 138, 139, 140, 147], "manchest": 123, "mani": [16, 56, 89, 101, 113, 123, 132, 135, 136, 138, 140, 143, 144, 145, 152, 153, 155], "manipul": [105, 131, 137], "manner": [131, 137], "manual": [31, 32, 88, 92, 105, 112, 123, 127, 130, 136, 144], "manufactur": [120, 138], "mao": 136, "map": [2, 4, 21, 28, 31, 33, 37, 41, 61, 69, 89, 90, 95, 112, 113, 120, 123, 136, 138, 139, 140, 143, 145, 155], "map_dialogturn_to_docu": 120, "map_fn": [33, 61, 69, 112, 120, 155], "map_func": 38, "map_to_docu": 120, "map_to_successor": [61, 69], "mapper_setup": [33, 120], "mar": [0, 1], "marco": 123, "margin": [130, 136, 144], "marilyn": 155, "mark": [98, 113, 123, 130], "markdown": [2, 4, 139], "marshmallow": [30, 113], "mask": 136, "massiv": 123, "match": [21, 22, 31, 53, 58, 59, 112, 113, 123, 138, 139, 145], "match_acc_list": 145, "matchvalu": 138, "matei": 16, "materi": [16, 120, 138, 144], "math": [61, 71, 75, 111, 112], "mathcal": 136, "mathemat": [111, 123, 155], "matric": 112, "matter": [36, 113, 120, 123], "matur": 99, "max": [36, 131, 137, 144], "max_correct_sampl": [61, 77, 79], "max_error_sampl": [61, 77, 79], "max_new_token": 16, "max_past_histori": [61, 71, 76], "max_proposals_per_step": [61, 77, 79], "max_sampl": [61, 77, 79, 101, 152, 153], "max_scor": 80, "max_step": [0, 1, 61, 77, 79, 89, 101, 111, 137, 144, 152, 153], "max_token": [8, 16, 101, 123, 128, 131, 152, 153], "maxim": [98, 127, 129, 135, 136], "maximum": [0, 1, 2, 4, 14, 23, 61, 77, 79, 101, 106, 111, 115, 128, 131, 139, 152, 153, 155], "mayb": 105, "md": [97, 98, 105], "me": [16, 111, 131, 135, 136, 138, 143], "mean": [2, 4, 9, 33, 61, 64, 70, 93, 112, 123, 125, 127, 128, 131, 132, 134, 136, 137, 139, 140, 143, 144, 145], "mean_of_scor": 80, "meaning": 99, "measur": [21, 22, 58, 59, 98, 123, 131, 136, 144], "meatur": 126, "mechan": [129, 131], "medata": 30, "media": 139, "medic": [116, 123, 139], "medium": [98, 123], "meet": [100, 101, 123, 152, 153], "member": [31, 155], "memeori": 138, "memo": 31, "memoi": 126, "memori": [23, 33, 35, 45, 98, 99, 120, 121, 126, 127, 138, 139, 140], "ment": 136, "mention": [101, 132, 136, 143, 152, 153], "merefli": 144, "merg": [2, 4, 98, 105, 139], "merson": 123, "messag": [1, 6, 8, 9, 12, 14, 15, 16, 45, 92, 98, 101, 111, 112, 121, 125, 128, 129, 131, 135, 152, 153], "message_prompt": 131, "meta": [72, 128, 135, 136], "meta_data": [2, 4, 27, 45, 120, 122, 139, 145], "metadata": [18, 19, 20, 27, 30, 33, 36, 37, 45, 61, 71, 75, 77, 78, 84, 101, 110, 111, 113, 120, 125, 129, 130, 132, 133, 137, 138, 144, 147, 152, 153], "metadata_kei": 27, "metal": 16, "meteor": [123, 136, 143], "methd": 41, "method": [2, 4, 9, 11, 12, 13, 14, 15, 16, 18, 20, 21, 22, 23, 30, 31, 32, 33, 38, 39, 40, 41, 43, 56, 57, 59, 61, 65, 66, 67, 69, 70, 71, 73, 75, 76, 77, 78, 83, 89, 95, 106, 111, 112, 113, 116, 120, 121, 123, 125, 126, 130, 131, 132, 133, 135, 136, 138, 139, 140, 144, 149, 150, 151, 155], "metric": [23, 53, 54, 56, 57, 58, 59, 126, 136, 138, 143, 145], "metric_nam": 123, "michigan": 155, "micrograd": [61, 69], "microsoft": 9, "microstat": 14, "microwavenn": [101, 152, 153], "middl": [101, 130, 138, 144, 152, 153], "midfield": 123, "might": [16, 21, 23, 25, 31, 33, 36, 97, 100, 101, 111, 112, 113, 120, 121, 125, 138, 139, 140, 144, 152, 153], "militari": 155, "million": 138, "mimick": 113, "min_scor": [61, 77, 78, 80], "mind": [101, 123, 127, 130, 152, 153], "mingwei": 136, "minim": [1, 111, 127], "minimum": [101, 106, 115, 135, 152, 153], "minimum_scor": [61, 77, 78], "minimumli": 155, "minist": 155, "minut": [123, 144], "minzhi": 136, "mirostat": 14, "mirostat_eta": 14, "mirostat_tau": 14, "miscount": [101, 152, 153], "mislead": [30, 136, 147], "miss": [30, 37, 42, 98, 123, 132, 136, 138, 140], "mistak": 123, "mistaken": [18, 20, 111, 133], "mix": [61, 77, 79, 144], "mixtral": 13, "mlm": 136, "mmlu": 123, "mock": 38, "mock_output": 38, "mock_output_data": 38, "mode": [31, 61, 66, 67, 77, 78, 79, 105, 112, 125, 126, 132, 155], "modecli": 122, "model": [0, 1, 2, 4, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 25, 27, 28, 31, 33, 35, 37, 38, 39, 45, 56, 57, 59, 60, 61, 64, 68, 71, 75, 83, 88, 91, 98, 99, 101, 105, 106, 110, 112, 116, 122, 125, 126, 127, 128, 132, 135, 136, 137, 138, 139, 140, 143, 144, 145, 147, 152, 153, 155], "model_cli": [0, 1, 11, 15, 16, 18, 19, 21, 25, 28, 31, 35, 38, 45, 56, 57, 59, 61, 71, 73, 75, 76, 77, 78, 83, 88, 92, 101, 111, 116, 120, 121, 122, 123, 126, 131, 132, 137, 138, 140, 144, 145, 152, 153, 155], "model_kwarg": [0, 1, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 21, 25, 28, 31, 35, 37, 38, 39, 45, 56, 57, 59, 61, 71, 73, 75, 76, 77, 78, 83, 84, 88, 101, 111, 116, 120, 121, 122, 123, 125, 126, 130, 131, 132, 134, 137, 138, 140, 144, 145, 152, 153, 155], "model_nam": [16, 88], "model_to_init_func": [7, 16], "model_typ": [8, 9, 11, 12, 13, 14, 15, 16, 31, 35, 38, 39, 45, 116, 125, 131], "modelcli": [0, 1, 8, 9, 11, 12, 13, 14, 15, 16, 21, 25, 28, 31, 35, 38, 39, 45, 56, 57, 59, 61, 71, 73, 75, 76, 77, 78, 98, 101, 111, 116, 121, 125, 126, 135, 138, 144, 152, 153, 155], "modelclienttyp": [45, 111, 120, 125, 138, 140], "modelfil": 14, "modeltyp": [8, 9, 11, 12, 13, 14, 15, 16, 31, 35, 38, 39, 45, 116, 125, 131, 138], "modif": [15, 116], "modifi": [2, 3, 111, 129, 131], "modoel": 120, "modul": [9, 11, 25, 26, 30, 31, 37, 45, 56, 59, 80, 92, 95, 105, 112, 113, 116, 120, 126, 129, 130, 138, 145], "modular": [99, 106], "module_nam": [92, 97], "moduletyp": 92, "moment": 127, "monitor": [100, 105, 120], "monro": 155, "month": [58, 59, 99, 123], "monument": 130, "moor": 123, "more": [2, 4, 8, 11, 12, 13, 14, 21, 22, 30, 31, 37, 42, 43, 44, 45, 46, 56, 57, 59, 61, 64, 69, 77, 78, 79, 97, 98, 99, 100, 101, 104, 105, 109, 111, 113, 115, 116, 120, 121, 123, 125, 126, 127, 128, 129, 130, 131, 133, 134, 136, 137, 138, 139, 140, 143, 144, 145, 147, 152, 153, 155], "moreov": [136, 137], "most": [20, 99, 116, 123, 125, 126, 128, 130, 131, 133, 135, 136, 138, 143, 144], "mostli": [30, 125, 138], "move": [2, 4, 101, 110, 111, 126, 138, 139, 152, 153], "movi": 122, "mp": 16, "mrr": [123, 136, 143, 145], "mseloss": 112, "mt": 123, "much": [56, 101, 110, 112, 116, 123, 130, 152, 153], "multi": [61, 77, 78, 105, 121, 123, 128, 131, 132, 136, 137, 146], "multifacet": 123, "multilingu": 11, "multimod": 136, "multipl": [0, 1, 3, 14, 32, 33, 61, 70, 77, 78, 79, 84, 85, 88, 92, 105, 111, 119, 120, 121, 123, 125, 131, 133, 134, 136, 137, 138, 140, 146], "multipli": [0, 1, 111, 137, 140], "multiply_by_two": 32, "multiplybytwo": 32, "multitask": 123, "multple_function_call_templ": 140, "music": [101, 152, 153], "must": [1, 23, 31, 33, 34, 57, 89, 99, 100, 101, 111, 112, 131, 138, 152, 153], "mutabl": [34, 134], "my": [111, 123, 139], "my_app": 129, "my_db": 33, "my_funct": 31, "my_function_compon": 31, "my_inst": [30, 147], "myfunctioncompon": 31, "mymodel": 112, "myoutput": [30, 147], "mytaskpipelin": 112, "n": [1, 2, 4, 14, 15, 18, 20, 21, 22, 34, 42, 56, 61, 71, 76, 101, 111, 112, 120, 123, 130, 131, 132, 133, 140, 144, 152, 153, 155], "n0": 144, "n1": [61, 71, 76, 101, 111, 132, 144, 152, 153], "n10": 132, "n2": [61, 71, 76, 101, 111, 131, 132, 144, 152, 153], "n3": [61, 71, 76, 111, 131, 132, 144], "n4": [61, 71, 76, 101, 111, 132, 144, 152, 153], "n5": [111, 132, 144], "n6": 132, "n7": 132, "n8": 132, "n9": 132, "n________": 111, "n_________": 120, "n_words_offset": [61, 69], "nad": [101, 152, 153], "nadd": [132, 140], "nage": 133, "name": [1, 9, 26, 27, 30, 31, 33, 36, 37, 38, 41, 43, 45, 47, 52, 56, 59, 61, 65, 69, 71, 74, 77, 78, 79, 80, 83, 84, 85, 88, 90, 92, 93, 94, 95, 97, 99, 100, 101, 105, 106, 110, 111, 113, 116, 120, 123, 127, 129, 130, 131, 133, 134, 137, 138, 140, 144, 145, 147, 152, 153, 155], "named_children": 31, "named_compon": 31, "named_paramet": [31, 61, 69, 110, 116], "nand": 111, "nanswer": [1, 101, 130, 132, 152, 153], "nario": 123, "narrow": 138, "nasynchron": 131, "nation": 155, "nativ": [113, 126, 129, 135], "nattribut": 133, "natur": [2, 4, 37, 123], "navig": 139, "nbut": 111, "nclass_nam": 144, "ncompar": 131, "ncount": [101, 152, 153], "nd": 138, "ndarrai": [23, 24, 37, 138, 140], "ndcg": [123, 136, 143, 145], "ndivid": 140, "neach": 1, "nearest": 131, "neat": 129, "necessari": [16, 61, 71, 76, 98, 101, 104, 105, 111, 131, 140, 145, 152, 153], "nectarin": [132, 152], "need": [0, 1, 2, 4, 8, 11, 13, 14, 15, 16, 18, 19, 20, 21, 22, 30, 31, 35, 36, 39, 44, 45, 61, 69, 77, 78, 92, 93, 97, 98, 100, 101, 104, 105, 106, 110, 111, 112, 113, 119, 120, 121, 123, 125, 127, 129, 131, 132, 134, 135, 136, 138, 139, 140, 143, 144, 145, 152, 153, 155], "neg": [21, 22, 53, 59, 123, 136], "neighbor": 131, "nest": [30, 31, 37, 45, 113, 126, 133], "nested_dict_str": 133, "net": 123, "neubig": 136, "neural": 123, "neutral": [53, 59, 105], "never": [100, 155], "new": [0, 1, 2, 4, 6, 33, 34, 37, 44, 45, 61, 68, 69, 71, 74, 76, 97, 99, 101, 105, 106, 111, 120, 121, 123, 131, 133, 134, 136, 137, 138, 140, 144, 145, 150, 151, 152, 153], "new_compon": [88, 125], "new_components_from_config": 88, "new_dim": 121, "new_docu": 112, "new_embed": 121, "new_turn": 120, "new_variable_end_tag": [61, 71, 76], "new_variable_start_tag": [61, 71, 76], "newton": 155, "nexampl": 111, "next": [1, 14, 32, 98, 111, 122, 123, 128, 135, 137, 140, 145], "nfinish": 111, "nfollow": 111, "nformat": 144, "nfull": 131, "nfunc_desc": 111, "nfunc_paramet": 111, "nget": 140, "ni": 111, "night": 123, "nightli": 100, "nin": 111, "nine": 155, "nkei": 42, "nlgtask": [56, 59, 123], "nlp": [2, 4, 106, 122, 123, 127, 136, 138, 139, 143, 144, 146], "nlpir": 136, "nlplanet": 123, "nlpyang": [56, 123], "nlu": 123, "nmultipli": 140, "nn": [31, 32, 101, 112, 116, 126, 129, 152, 153], "nname": 133, "nnearest": 131, "nnext": 132, "nnone": 140, "nnow": [111, 130, 132], "no_grad": 112, "node": [37, 101, 112, 134, 152, 153], "nois": 123, "non": [2, 4, 89, 123], "none": [0, 1, 2, 4, 6, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 44, 45, 47, 48, 49, 50, 52, 54, 56, 57, 59, 61, 64, 65, 68, 69, 70, 71, 75, 76, 77, 78, 79, 80, 83, 84, 85, 90, 92, 93, 95, 101, 110, 111, 112, 113, 120, 122, 123, 125, 129, 131, 132, 133, 136, 138, 139, 140, 144, 152, 153, 155], "none_str": 133, "nonetyp": 45, "nonsens": [14, 139], "noqa": 155, "norm": 131, "normal": [21, 22, 23, 37, 45, 92, 112, 113, 119, 121, 131], "normalize_np_arrai": 37, "normalize_vector": [37, 121], "nosql": 138, "not_support": 136, "note": [8, 9, 16, 21, 22, 23, 30, 31, 41, 45, 61, 77, 78, 93, 98, 101, 105, 112, 116, 120, 125, 126, 131, 137, 138, 140, 145, 152, 153], "notebook": [130, 131, 137], "noth": [123, 137, 145], "notic": [125, 128], "notimplementederror": [131, 138], "noutput": [61, 71, 76], "now": [16, 31, 38, 58, 59, 66, 83, 98, 101, 105, 111, 112, 113, 120, 121, 122, 123, 130, 133, 135, 136, 137, 138, 140, 144, 152, 153], "nowher": 123, "np": [23, 131, 138, 140], "nprovid": [61, 71, 76], "nqueri": 131, "nrememb": 1, "nsearch": 140, "nso": [111, 132], "nstart": 131, "nstep": 1, "nsum": 140, "nsynchron": 131, "nthe": [111, 130], "nthu": 132, "ntip": [61, 71, 76], "ntotal": [101, 152, 153], "nu": 155, "null": [120, 130, 133], "null_str": 133, "num": [23, 61, 70, 144], "num_class": [61, 70], "num_ctx": 14, "num_doc": 145, "num_gradient_memori": [61, 71, 76], "num_indic": 131, "num_predict": 14, "num_return_sequ": 16, "num_sampl": [49, 89], "num_shot": [37, 61, 63, 64, 70], "num_work": [61, 77, 78, 79, 101, 144, 152, 153], "number": [0, 1, 2, 4, 12, 14, 21, 22, 23, 24, 26, 28, 43, 45, 58, 59, 61, 69, 77, 78, 79, 93, 100, 101, 111, 121, 122, 123, 131, 132, 133, 136, 137, 139, 140, 143, 145, 152, 153], "numer": [101, 112, 113, 122, 123, 132, 138, 144, 152, 153], "numpi": [92, 121, 131, 138, 140], "numpy_sum": 140, "nuser": [1, 34, 131], "nwith": [111, 131], "nyou": [1, 34, 61, 71, 76], "nyour": [1, 61, 71, 76], "nz": [21, 22], "o": [95, 131], "obj": [31, 37, 90, 95], "object": [1, 2, 4, 16, 18, 20, 30, 31, 32, 34, 37, 38, 40, 42, 43, 44, 45, 47, 52, 53, 54, 57, 59, 61, 65, 66, 67, 68, 69, 70, 71, 73, 75, 76, 77, 78, 80, 82, 83, 84, 85, 87, 89, 90, 92, 94, 95, 101, 111, 112, 113, 119, 122, 123, 125, 129, 131, 133, 136, 137, 139, 140, 152, 153], "object_count": [47, 52], "objectcountadalcompon": [101, 152, 153], "objectcountingevalfn": [110, 112], "objectcountsimpl": 132, "objectcounttaskpipelin": [101, 152, 153], "objecttyp": [95, 111, 140], "observ": [1, 45, 61, 71, 76, 111, 123, 127, 131, 137], "obtain": [122, 123], "occur": [21, 22, 121, 125], "off": [31, 101, 123, 132, 134, 136, 138, 152, 153], "offer": [98, 101, 105, 106, 120, 123, 127, 131, 136, 138, 143, 147, 152, 153], "offici": 98, "often": [21, 22, 32, 45, 98, 101, 112, 113, 119, 120, 121, 123, 125, 131, 135, 136, 138, 139, 145, 152, 153], "ofth": 123, "oj": 123, "okapi_bm25": [21, 22, 138], "old_dim": 121, "old_embed": 121, "ollama": [14, 45, 92, 98], "ollama_cli": [7, 98], "ollama_client_not": 98, "ollama_host": 14, "ollamacli": [7, 14], "on_complet": 82, "on_failur": 82, "on_success": 82, "onc": [16, 98, 101, 123, 132, 134, 138, 152, 153], "one": [1, 3, 8, 16, 18, 19, 23, 36, 37, 38, 58, 59, 61, 77, 78, 93, 98, 101, 110, 111, 112, 121, 123, 125, 126, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 144, 146, 152, 153, 154, 155], "ones": [83, 139], "onli": [8, 15, 16, 18, 20, 21, 22, 30, 31, 32, 33, 35, 37, 38, 44, 45, 49, 52, 56, 57, 58, 59, 61, 66, 69, 71, 75, 76, 77, 78, 83, 88, 92, 100, 101, 105, 106, 112, 113, 116, 119, 120, 121, 123, 125, 127, 130, 132, 133, 134, 135, 136, 137, 138, 140, 143, 144, 146, 147, 152, 153, 155], "only_hard_exampl": [48, 52], "op": 71, "open": [101, 105, 111, 113, 116, 123, 125, 129, 130, 131, 133, 135, 136, 139, 140, 143, 144, 145, 152, 153, 155], "openai": [9, 11, 12, 13, 14, 15, 16, 17, 39, 45, 92, 98, 104, 105, 111, 120, 122, 125, 128, 136, 138, 139, 140, 147], "openai_api_kei": [97, 104, 121], "openai_cli": [0, 1, 7, 92, 101, 121, 131, 145, 152, 153], "openaicli": [0, 1, 7, 11, 13, 14, 15, 16, 31, 35, 38, 39, 45, 83, 88, 92, 98, 101, 116, 120, 121, 122, 123, 125, 131, 137, 138, 145, 152, 153], "oper": [2, 3, 14, 26, 30, 32, 33, 35, 45, 61, 66, 67, 71, 73, 74, 101, 111, 120, 131, 138, 147, 152, 153], "operand": 140, "opinion": [105, 123], "opro": [76, 152], "opt": 135, "optim": [1, 21, 22, 23, 38, 64, 69, 71, 72, 75, 76, 77, 78, 79, 80, 98, 99, 105, 106, 110, 113, 116, 120, 123, 125, 130, 134, 138, 139, 143], "optimization_ord": [61, 77, 79, 144], "optimizaton": 155, "optimize_ord": 144, "optimizer_": 126, "optimizer_model_config": [61, 77, 79], "optimizer_system_prompt": [61, 71, 76], "optimizinh": 123, "optimizor": [61, 77, 78, 126], "option": [0, 1, 2, 4, 9, 13, 14, 15, 16, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 33, 35, 37, 38, 39, 40, 41, 42, 43, 45, 47, 52, 56, 57, 59, 61, 69, 71, 73, 77, 78, 79, 83, 84, 85, 89, 90, 92, 93, 97, 98, 103, 111, 112, 113, 116, 119, 120, 123, 125, 131, 132, 133, 136, 138, 139, 140, 144, 147, 155], "optional_packag": 92, "optionalpackag": [92, 104], "opu": 128, "orang": [132, 152], "orchestr": [35, 36, 38, 111, 120, 121, 122, 126, 133, 135, 143], "ord_docu": 120, "order": [2, 4, 18, 19, 26, 30, 32, 40, 45, 56, 97, 113, 120, 121, 123, 127, 139, 144], "orderdict": 32, "ordereddict": [31, 32, 45], "org": [0, 1, 16, 21, 22, 56, 76, 111, 113, 123, 129, 136, 138, 143, 152, 153], "org_docu": 120, "organ": [56, 60, 61, 77, 78, 98, 105, 120, 123, 144, 155], "origin": [2, 4, 33, 98, 100, 113, 120, 122, 138, 155], "orpo": [76, 126, 153], "oss": 105, "otago": [21, 22], "other": [2, 4, 16, 18, 20, 23, 31, 37, 38, 45, 58, 59, 88, 95, 97, 98, 105, 111, 113, 116, 121, 125, 126, 127, 131, 133, 134, 136, 138, 140, 143, 144, 147, 155], "othersi": 31, "otherwis": [1, 31, 34, 45, 61, 66, 67, 71, 76, 100, 139], "our": [7, 30, 31, 38, 56, 57, 58, 59, 61, 64, 70, 97, 98, 99, 101, 103, 104, 105, 106, 108, 111, 112, 113, 116, 120, 121, 123, 125, 126, 128, 129, 131, 133, 134, 135, 137, 138, 139, 140, 144, 145, 152, 153, 155], "ourselv": 105, "out": [99, 105, 111, 113, 116, 120, 123, 125, 126, 127, 131, 136, 137, 138, 139, 140, 144], "outcom": [2, 4], "outer": 113, "outlin": [100, 123, 136, 137], "outperform": 137, "output": [1, 2, 4, 9, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 25, 26, 30, 31, 32, 34, 35, 36, 37, 38, 42, 45, 56, 57, 59, 60, 61, 64, 66, 67, 68, 69, 70, 71, 75, 77, 78, 80, 83, 84, 93, 97, 101, 105, 106, 110, 111, 112, 113, 116, 119, 120, 122, 123, 125, 126, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 145, 147, 149, 152, 153, 155], "output_1": 138, "output_2": 138, "output_3": 138, "output_data_class": 140, "output_field": [30, 133], "output_format": [1, 18, 19, 34, 111, 125, 130, 140, 147], "output_format_prompt": [111, 133], "output_format_str": [1, 18, 19, 34, 111, 125, 130, 135, 140, 144, 155], "output_map": 132, "output_pars": [113, 133, 140, 144], "output_processor": [0, 1, 18, 19, 20, 21, 25, 35, 38, 101, 111, 121, 122, 123, 126, 132, 133, 137, 138, 140, 144, 145, 152, 153, 155], "output_str": 130, "output_typ": 57, "outputfield": 144, "outputformat": 113, "outputpars": [15, 18, 20, 133, 140], "outsid": 98, "outstand": 147, "oven": 132, "over": [31, 32, 36, 105, 106, 111, 116, 125, 131, 135, 136, 144], "overal": [30, 54, 98, 99, 101, 111, 123, 127, 136, 137, 140, 144, 152, 153], "overcom": 126, "overflow": 121, "overhead": 36, "overkil": 111, "overlap": [2, 4, 61, 71, 76, 113, 136, 139, 143], "overrid": [8, 61, 77, 78, 111, 122, 137], "overview": [9, 120, 123, 133], "overwrit": [24, 30, 37, 61, 77, 78, 89], "overwritten": [101, 152, 153], "own": [4, 15, 30, 31, 37, 38, 41, 61, 77, 79, 84, 98, 101, 105, 111, 113, 121, 126, 131, 136, 138, 143, 145, 152, 153], "owner": 98, "p": 136, "p0": 98, "p1": [98, 140], "p2": [98, 140], "packag": [23, 92, 97, 98, 100, 103, 105, 113, 120, 122, 123, 138], "package_nam": 104, "page": [2, 4, 14, 16, 98, 123, 136, 137, 139], "page_cont": 112, "pai": [100, 101, 152, 153], "paid": 130, "pain": 116, "pair": [61, 71, 75, 123, 131, 136, 138, 139], "paitesanshi": 111, "palletsproject": 135, "panel": [120, 138], "panupong": 136, "paper": [16, 21, 22, 123, 136, 137], "papineni": 123, "par": 146, "paradigm": [111, 126, 136, 143, 144], "paragraph": 139, "parallel": [61, 77, 78, 79, 98, 101, 111, 119, 131, 136, 144, 152, 153], "param": [13, 16, 24, 31, 37, 39, 58, 59, 61, 64, 68, 69, 71, 74, 76, 77, 79, 110, 116, 125], "param_id": [61, 71, 76], "param_typ": [61, 69, 101, 132, 134, 144, 152, 153, 155], "paramet": [2, 4, 6, 9, 14, 15, 18, 20, 21, 22, 23, 25, 26, 27, 28, 30, 31, 33, 35, 37, 38, 40, 41, 42, 43, 45, 47, 52, 53, 55, 56, 57, 59, 61, 64, 65, 66, 67, 68, 71, 73, 74, 75, 76, 77, 78, 79, 80, 83, 84, 85, 88, 89, 90, 92, 93, 95, 101, 105, 106, 110, 111, 112, 113, 116, 125, 126, 131, 132, 133, 136, 137, 138, 140, 143, 144, 145, 149, 150, 151, 152, 153, 154, 155], "parameter_": 126, "parametertyp": [61, 69, 80, 101, 132, 144, 152, 153, 155], "parametr": 134, "params_histori": [61, 71, 76], "paramt": [38, 61, 64], "parent": 131, "parent_doc_id": [2, 4, 45, 120, 139], "parenthesi": 37, "pari": [111, 130, 131, 140], "paris_embed": 131, "paris_indic": 131, "pars": [8, 9, 12, 13, 14, 15, 16, 17, 18, 19, 20, 36, 37, 38, 39, 42, 44, 45, 101, 106, 111, 112, 125, 126, 131, 133, 137, 140, 144, 152, 153, 155], "parse_chat_complet": [7, 8, 9, 12, 13, 14, 15, 16, 39, 131], "parse_embedding_respons": [7, 9, 14, 15, 16, 17, 39, 131], "parse_func_expr": [44, 140], "parse_function_call_expr": [37, 140], "parse_generate_respons": [7, 14], "parse_integer_answ": [101, 132, 152, 153], "parse_json_str_to_obj": 37, "parse_stream_respons": [7, 14, 15], "parse_yaml_str_to_obj": 37, "parsed_input": [45, 140], "parsed_inst": 133, "parsed_us": 133, "parser": [8, 15, 18, 19, 20, 42, 60, 113, 125, 126, 131, 137, 140, 144], "part": [37, 38, 61, 71, 76, 77, 78, 97, 101, 111, 112, 125, 126, 135, 136, 138, 144, 146, 152, 153], "parti": [30, 93, 131, 138], "partial": [131, 136], "partically_support": 136, "particl": [120, 138], "particular": [13, 16, 35, 39, 41, 98, 111, 125, 126, 130, 136, 151, 155], "particularli": [101, 111, 123, 152, 153], "pass": [8, 15, 16, 21, 22, 23, 28, 32, 35, 37, 38, 40, 41, 45, 56, 57, 59, 61, 65, 66, 67, 69, 71, 74, 77, 78, 79, 83, 101, 106, 110, 111, 112, 113, 116, 121, 123, 125, 128, 131, 132, 134, 135, 136, 137, 138, 140, 152, 153, 155], "passag": [2, 4, 123, 136, 139, 143, 155], "passages_per_hop": 155, "password": [26, 139], "past": [45, 61, 71, 76, 135], "pasu": 136, "pat": 136, "path": [21, 22, 38, 41, 61, 69, 77, 79, 83, 85, 87, 92, 123, 126, 144, 145], "pattern": [14, 17, 31, 36, 45, 61, 71, 76, 138], "paul": 123, "paulmers": 123, "paulo": [123, 145], "payload": [27, 138], "pdf": [2, 4, 21, 22, 123, 139], "pdfminer": [2, 4, 139], "peach": [132, 152], "pearson": 123, "peer": [61, 69, 71, 72, 76, 134], "penal": [14, 56, 123], "pencil": 111, "pengcheng": 136, "penlaiz": 14, "pep": 100, "per": [45, 49, 52, 54, 61, 77, 78, 79, 133, 138], "per_item_scor": 54, "percent": 135, "perfect": [101, 112, 152, 153], "perfectli": 123, "perform": [33, 56, 57, 59, 61, 64, 70, 71, 74, 76, 98, 105, 106, 112, 120, 121, 123, 127, 130, 131, 135, 136, 137, 138, 139, 143, 145, 146, 155], "perhap": 130, "period": [2, 4, 139], "permiss": 98, "perplex": [14, 123], "persist": [6, 21, 22, 33, 41, 45, 112, 116, 120, 134, 138], "persit": 120, "person": [30, 147], "pgvector": [26, 92, 104, 136, 138], "philosophi": [106, 115, 126], "phoenix": [105, 129], "photon": [120, 138], "php": 123, "phrase": [61, 71, 76, 138], "physician": 155, "piano": [101, 152, 153], "pick": 136, "pickabl": 116, "pickl": [31, 33, 90, 120, 138], "picklabl": [31, 33], "pickle_to_fil": 31, "piec": [2, 4, 136], "pile": [61, 64], "pip": [23, 92, 93, 98, 104], "pipelin": [6, 16, 31, 32, 33, 38, 61, 64, 76, 77, 78, 79, 80, 88, 100, 106, 110, 116, 121, 123, 125, 127, 132, 134, 138, 141, 143, 145, 146, 149, 154, 155], "pirat": 16, "pkl": [33, 88, 120], "place": [61, 69, 77, 78, 98, 140, 144], "placehold": [112, 131, 135], "plai": [39, 120, 123, 128, 135, 138], "plain": 139, "plan": [45, 101, 104, 107, 111, 125, 126, 131, 137, 152, 153], "planner": [0, 1, 111, 125, 126], "plastic": 16, "platform": [9, 15, 123, 125, 140], "playbook": [123, 126], "player": 123, "pleas": [2, 4, 14, 18, 20, 30, 36, 38, 56, 57, 59, 92, 93, 97, 98, 100, 105, 109, 111, 116, 120, 121, 123, 125, 131, 133, 136, 137, 138, 139, 140, 145, 147], "plenti": [116, 119], "plot": 115, "plu": [101, 136, 152, 153], "plug": [39, 105], "plum": [132, 152], "plural": [101, 152, 153], "pmlr": 136, "png": [61, 69, 101, 130, 152, 153], "poem": 111, "poetri": [97, 98, 100, 105], "point": [2, 4, 56, 83, 101, 113, 119, 123, 129, 131, 139, 140, 145, 152, 153], "pollut": [120, 129, 138], "pool": [111, 138], "poor": [56, 123], "pop": [33, 120], "popul": 131, "popular": [111, 123, 136], "posit": [32, 37, 45, 53, 59, 61, 71, 76, 93, 120, 122, 123, 136, 138, 140], "possibl": [76, 98, 111, 113, 136], "post": [21, 25, 138, 139], "postgr": [26, 136, 138], "postgres_retriev": 21, "postgresql": [26, 138], "postgresretriev": [21, 26], "postprocessor": 105, "potato": 132, "potenti": [1, 32, 37, 100, 111, 113, 123, 128, 134, 137, 139, 144, 152], "power": [99, 106, 115, 120, 123, 126, 129, 138], "powershel": 93, "pp": 123, "pr": 97, "practic": [105, 116, 126, 136, 138, 143], "practis": 138, "pramet": [112, 144], "pre": [24, 98, 100, 105, 120, 123, 136], "prececessor": 134, "precis": [123, 136, 138, 139, 143, 145], "pred": [61, 77, 78, 101, 110, 123, 132, 152, 153, 155], "pred_answ": [53, 57, 59, 123], "pred_answer_str": 123, "pred_step": [61, 77, 78], "predecessor": [38, 41, 61, 66, 69, 71, 74, 101, 112, 132, 134, 152, 153], "predefin": [37, 111], "predict": [14, 30, 38, 45, 53, 54, 56, 57, 59, 61, 66, 67, 77, 78, 83, 111, 113, 123, 125, 126, 128, 130, 135, 136, 143, 144, 145, 155], "prefer": [123, 129, 138, 140], "prefix": [30, 31, 133, 135, 147], "prep_ckpt_file_path": [61, 77, 79], "prepar": [21, 25, 61, 77, 78, 79, 120, 122, 131, 138, 140, 143, 144], "prepare_dataset": 49, "prepare_dataset_path": 51, "prepare_ev": [61, 77, 78, 144, 152, 155], "prepare_loss": [61, 77, 78, 144, 152, 155], "prepare_task": [61, 77, 78, 144, 152, 155], "prepend": 31, "preprint": [123, 136, 145], "preprintarxiv": 136, "preprocess": [4, 43, 119, 136, 139, 143], "presbyterian": 155, "prescript": 116, "presenc": [21, 22], "presence_penalti": [101, 152, 153], "present": [56, 61, 71, 76, 123], "preserv": [61, 71, 76, 113], "preset": [0, 1, 38, 40, 135], "preset_prompt_kwarg": [18, 20, 40, 130, 137, 138, 145], "pretrain": [123, 136], "pretti": 138, "prevent": [2, 4, 14, 139], "previou": [1, 32, 61, 64, 69, 71, 76, 101, 111, 120, 125, 131, 133, 137, 139, 145, 146, 152, 153, 155], "previous": [9, 13, 14, 15, 31, 40, 138], "principl": [99, 105], "print": [2, 4, 9, 16, 18, 20, 21, 22, 30, 31, 32, 36, 37, 40, 42, 45, 61, 77, 79, 92, 93, 101, 110, 111, 113, 120, 121, 122, 123, 125, 129, 131, 133, 135, 137, 138, 139, 140, 144, 145, 147, 152, 153, 155], "print_prompt": [38, 40, 111, 120, 125], "print_prompt_templ": 40, "printc": [93, 129], "printout": [111, 116, 120, 123, 125, 133, 135, 138, 140], "prior": 93, "priorit": [61, 64, 98, 138], "privaci": 123, "pro": [12, 120, 138], "prob": [23, 138], "probab": 138, "probability_model_kwarg": 131, "probabl": [14, 15, 23, 101, 131, 136, 138, 144, 152, 153], "problem": [61, 69, 105, 111, 112, 123, 132, 136, 137, 138, 140], "proce": 98, "proceed": 123, "procesor": 121, "process": [2, 4, 21, 25, 33, 35, 45, 60, 61, 77, 78, 79, 99, 100, 101, 105, 111, 113, 116, 120, 121, 122, 123, 125, 126, 127, 130, 133, 134, 135, 136, 137, 138, 139, 140, 143, 144, 145, 152, 153], "process_embed": 131, "process_queri": 140, "processor": [18, 20, 35, 38, 45, 101, 125, 126, 131, 152, 153], "produc": [120, 138, 145], "product": [4, 23, 26, 120, 121, 123, 127, 138], "production": [105, 126], "profess": 138, "professor": 155, "profil": 138, "program": [113, 125, 129, 136], "programmat": [126, 135], "progress": [100, 126, 136, 138], "project": [15, 84, 85, 97, 99, 103, 104, 108, 112, 121, 130, 138], "project_nam": [83, 84, 85], "prompt": [0, 1, 8, 14, 15, 18, 19, 20, 21, 25, 26, 30, 31, 34, 38, 40, 45, 61, 68, 69, 71, 72, 73, 75, 76, 77, 79, 80, 83, 85, 93, 99, 105, 106, 112, 113, 116, 120, 123, 125, 126, 127, 128, 130, 131, 132, 133, 134, 136, 137, 138, 140, 143, 144, 145, 147, 151, 154, 155], "prompt_build": [125, 135, 140, 145, 147], "prompt_kwarg": [0, 1, 16, 18, 19, 38, 40, 61, 69, 71, 73, 83, 84, 101, 111, 112, 116, 120, 123, 125, 130, 131, 132, 134, 135, 140, 144, 152, 153, 155], "prompt_stat": [85, 130], "prompt_str": 38, "prompt_templ": 147, "prompt_token": [45, 101, 131, 152, 153], "prompt_token_count": 12, "prompt_vari": [31, 111, 116, 123, 125, 130, 133, 135, 138], "promptdata": 80, "promptoptim": [101, 153], "promt_kwarg": [0, 1], "propag": [101, 152, 153], "proper": 139, "properli": [133, 147], "properti": [18, 20, 33, 36, 37, 44, 45, 61, 64, 71, 76, 84, 85, 111, 113, 121, 133, 137, 140, 155], "propetriari": 128, "propogat": 112, "proport": 123, "propos": [61, 63, 64, 68, 69, 71, 76, 77, 79, 98, 101, 123, 126, 132, 136, 141, 150, 151, 152, 153], "propose_data": [61, 69], "proprietari": [105, 135], "proto": 12, "protocol": [39, 123, 126, 138], "proven": [123, 144], "provid": [1, 2, 4, 6, 7, 9, 13, 14, 16, 21, 23, 25, 26, 30, 31, 37, 39, 40, 61, 71, 75, 76, 78, 83, 84, 89, 93, 98, 99, 101, 105, 106, 111, 113, 115, 116, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 140, 143, 144, 145, 147, 152, 153, 155], "proxi": 92, "proxim": 138, "prune": 98, "pt": 16, "public": 98, "publish": [0, 1, 100, 126], "pull": [14, 97, 123], "punchlin": 147, "punctuat": [2, 4, 56, 123, 139], "pundit": 123, "punish": 136, "purchas": 155, "pure": 125, "purpos": [2, 4, 31, 61, 77, 78, 89, 101, 116, 120, 131, 139, 145, 152, 153], "pursuit": 111, "push": [98, 100, 101, 152, 153], "put": [9, 15, 16, 23, 61, 69, 105, 110, 111, 113, 116, 121, 123, 127, 136, 138, 155], "puzzler": 16, "py": [45, 49, 52, 97, 98, 105, 111, 129, 145], "pydant": [30, 113], "pypdf2": [2, 4, 139], "pypi": 100, "pyproject": [97, 98, 100], "pytest": 97, "python": [2, 4, 14, 16, 18, 20, 30, 37, 42, 45, 97, 104, 105, 113, 123, 129, 131, 133, 135, 136, 139, 155], "pytorch": [31, 32, 61, 69, 70, 89, 98, 99, 100, 101, 106, 110, 112, 113, 116, 119, 126, 127, 129, 134, 147, 152, 153], "q": [21, 22, 137], "q_i": [21, 22], "qa": [31, 53, 123, 152, 155], "qa_templ": [18, 19], "qdrant": [27, 92, 136], "qdrant_client": [27, 138], "qdrant_retriev": [21, 98, 138], "qdrantclient": [27, 138], "qdrantretriev": [21, 27, 138], "qe": 136, "qian": 136, "qin": 136, "qualifi": [61, 65], "qualiti": [56, 61, 71, 76, 98, 99, 123, 125, 145], "qualnam": [26, 30, 45, 56, 59, 80, 92, 95], "quantit": 123, "quantiti": [101, 132, 144, 152, 153], "queri": [0, 1, 3, 11, 16, 18, 20, 21, 22, 23, 24, 25, 26, 27, 31, 45, 53, 56, 57, 58, 59, 98, 111, 116, 121, 123, 130, 131, 135, 136, 137, 138, 139, 140, 143, 145, 155], "query_1": 138, "query_1_short": 138, "query_1_token": 138, "query_1_word": 138, "query_2": 138, "query_2_short": 138, "query_embed": [26, 131], "query_expans": 136, "query_idx": 131, "query_index": 131, "query_or_queri": [21, 25, 155], "query_str": [45, 120], "question": [2, 4, 16, 18, 20, 30, 37, 49, 50, 52, 56, 57, 59, 98, 101, 105, 110, 112, 113, 116, 123, 130, 131, 132, 136, 137, 139, 143, 144, 145, 146, 147, 155], "question_answ": [101, 152, 153], "question_str": 123, "questiona": 123, "quick": [16, 44, 45, 101, 126, 137, 152, 153], "quickli": [14, 105, 106, 120, 138, 144], "quit": [98, 101, 123, 125, 133, 134, 135, 136, 138, 152, 153], "quot": [111, 133, 140], "r": [31, 40, 101, 111, 116, 123, 125, 135, 136, 140, 144, 145, 147, 152, 153, 155], "rag": [46, 61, 71, 73, 99, 100, 105, 106, 111, 137, 138, 146], "rag_chain": 112, "rag_hotpotqa": 145, "rag_prompt_templ": 136, "raga": [58, 59, 136, 143], "ragev": 123, "rais": [2, 4, 30, 37, 42, 61, 71, 76, 92, 110, 113, 121, 125, 131, 133, 138, 155], "ralm_survei": 136, "random": [14, 42, 61, 70, 77, 79, 101, 131, 144, 152, 153], "random_max_steps_8_bb908_run_1": [101, 152, 153], "random_replac": [61, 70], "random_sampl": [37, 61, 70], "randomli": [37, 61, 70, 136], "randomsampl": [61, 70], "rang": [23, 45, 56, 57, 59, 61, 64, 70, 71, 75, 80, 113, 123, 131, 132, 136, 138, 139, 140, 143, 145, 146], "rank": [21, 22, 28, 101, 123, 126, 145, 152, 153], "rank_bm25": [21, 22, 138], "rankdir": [61, 69], "rare": [21, 22], "raspberri": [132, 152], "rate": [14, 101, 140, 152, 153], "rather": [113, 121, 123, 125, 139], "ratio": [58, 59, 145], "rational": 144, "rau": 136, "raw": [4, 16, 21, 22, 45, 61, 64, 68, 77, 79, 101, 112, 113, 125, 130, 131, 132, 135, 139, 140, 144, 152, 153], "raw_respons": [9, 15, 21, 25, 45, 61, 69, 101, 111, 121, 125, 129, 130, 131, 132, 134, 140, 152, 153], "raw_shot": [61, 64, 77, 79, 101, 144, 152, 153], "rc": 100, "re": [99, 100, 101, 111, 137, 138, 152, 153], "reach": [21, 22, 126, 135, 136, 137, 144], "react": [0, 45, 125], "reactag": [0, 1, 111, 125, 126, 137], "read": [1, 56, 61, 69, 83, 98, 99, 105, 111, 123, 128, 135, 137, 145, 147], "readabl": 113, "readi": [61, 77, 79, 98, 112, 129, 138, 140], "readili": 123, "readm": [97, 98, 105], "readthedoc": [14, 129], "real": [2, 4, 61, 77, 78, 120, 123, 126, 138, 139], "realiti": 135, "realli": [120, 125, 131, 137], "realtion": 138, "reason": [18, 20, 21, 22, 61, 64, 101, 111, 112, 113, 123, 126, 132, 136, 137, 138, 144, 152, 153], "reattach": [2, 4], "rebas": 98, "rebuilt": 88, "recal": [58, 59, 136, 138, 143, 145], "recall_list": [58, 59, 123, 145], "receiv": [32, 122, 128, 155], "reciproc": [123, 145], "recogn": 105, "recognit": [106, 127], "recommend": [9, 97, 98, 104, 113], "recomput": 138, "reconstruct": [88, 113], "reconstructed_from_json": 113, "reconstructed_from_yaml": 113, "record": [45, 83, 84, 111, 120, 125, 131], "recreat": 88, "recurs": [31, 37, 116, 132], "red": 93, "reduc": [14, 61, 69, 120, 123, 136, 138], "redund": [56, 100, 123], "refer": [0, 1, 2, 4, 8, 9, 11, 12, 14, 15, 16, 21, 22, 23, 26, 27, 30, 31, 38, 49, 52, 56, 57, 58, 59, 61, 64, 69, 72, 97, 98, 101, 110, 112, 137, 139, 147], "refin": [61, 71, 76, 138], "reflect": [2, 4, 123, 136, 139, 145], "regard": 112, "regardless": 140, "regist": [33, 82, 84, 94, 120, 129], "register_callback": 82, "register_compon": 31, "register_gener": 84, "register_module_forward_hook": 129, "register_paramet": [31, 116], "register_transform": [33, 120], "regress": [133, 135], "regular": [31, 101, 152, 153], "reimplement": 138, "reinforc": 136, "reiniti": [21, 25, 138], "rel": [21, 22], "relai": [112, 125], "relat": [45, 56, 92, 98, 100, 123, 136, 138, 155], "relax": 116, "releas": [134, 136], "relev": [21, 25, 56, 58, 59, 97, 98, 120, 121, 123, 125, 126, 128, 136, 138, 139, 140, 143, 145, 155], "relevance_list": 145, "reli": [30, 112, 127, 140], "reliabl": [99, 101, 123, 152, 153], "relianc": [120, 138], "reliev": 116, "reload": 120, "reloaded_dialog_turn_db": 120, "relu": 116, "remain": [99, 122, 123, 138], "rememb": 111, "remot": 98, "remov": [33, 112, 120], "remove_dupl": 31, "remove_stop_word": 43, "remove_transform": [33, 120], "renden": 98, "render": [40, 135, 144], "render_histori": [61, 71, 76], "renered_prompt": 140, "renew": [120, 138], "renewab": 120, "repeat": [61, 69, 131, 139], "repeat_last_n": 14, "repeat_penalti": 14, "repetit": 14, "replac": [0, 1, 37, 61, 70, 112, 123, 131], "repli": 131, "replug": 136, "repo": [99, 105, 131, 144], "repons": 123, "reponse_embedder_output": 131, "report": [98, 123, 139, 152], "repositori": [97, 98, 100, 105, 109], "repr": [1, 34], "repr_str": 121, "repres": [30, 31, 37, 50, 52, 61, 65, 69, 71, 74, 89, 113, 120, 123, 135, 138, 140, 145], "represent": [30, 40, 45, 61, 65, 71, 76, 95, 101, 122, 123, 133, 152, 153], "represent_ordereddict": 37, "reproduct": 136, "request": [97, 131, 137], "requir": [7, 14, 18, 20, 21, 25, 30, 33, 37, 38, 45, 53, 59, 61, 68, 69, 77, 78, 101, 111, 113, 120, 123, 125, 126, 128, 129, 131, 133, 134, 135, 136, 137, 138, 139, 140, 143, 144, 145, 147, 152, 153], "required_field": [30, 37, 113], "requires_opt": [61, 69, 77, 78, 80, 101, 110, 132, 144, 152, 153, 155], "requr": 140, "rerank": [11, 16, 21, 28, 45, 105, 131, 143], "reranker_retriev": [21, 138], "rerankerretriev": [21, 28, 138], "research": [61, 64, 105, 112, 120, 121, 123, 126, 127, 130, 135, 136, 137, 138, 143, 144, 155], "resembl": 106, "reserch": [61, 64], "reserv": 125, "reset": [0, 1, 21, 22, 23, 25, 27, 28, 33, 41, 84, 120, 139], "reset_gradi": [61, 69], "reset_gradients_context": [61, 69], "reset_index": [21, 22, 23, 25, 27, 28, 41], "reset_mock_output": 38, "resist": 123, "resolv": [37, 98, 147], "resort": 133, "resourc": [137, 138, 143], "respect": [37, 101, 122, 123, 126, 131, 136, 144, 152, 153], "respond": [14, 16, 101, 131, 135, 140, 152, 153], "respons": [0, 1, 6, 9, 14, 15, 16, 17, 20, 21, 25, 38, 39, 41, 45, 57, 61, 71, 73, 75, 76, 77, 79, 80, 98, 101, 111, 112, 116, 120, 121, 123, 125, 128, 129, 131, 132, 134, 136, 137, 138, 139, 140, 143, 145, 152, 153], "response_desc": [61, 69, 71, 75], "response_format": 15, "response_id": [61, 69], "response_str": [45, 120], "response_text": 131, "respos": 132, "rest": [32, 39, 116, 128, 135], "restart": 123, "restor": [21, 22, 30, 33, 41, 138], "restored_data": 30, "restored_dialog_turn_db": 120, "restructuredtext": 98, "result": [1, 4, 14, 21, 22, 26, 31, 32, 34, 36, 37, 38, 45, 54, 56, 57, 59, 61, 65, 71, 73, 101, 106, 111, 112, 115, 122, 123, 126, 127, 130, 131, 134, 138, 139, 140, 144, 152, 153], "result1": 140, "result1someth": 140, "result2": 140, "result2someth": 140, "resume_from_ckpt": [61, 77, 79], "retrain": 136, "retri": [11, 13, 14, 16, 39, 131], "retriev": [2, 3, 4, 6, 22, 23, 24, 25, 26, 27, 28, 31, 33, 37, 45, 58, 59, 60, 83, 99, 100, 105, 116, 120, 122, 125, 126, 127, 131, 133, 134, 135, 139, 140, 143, 145, 146, 154], "retrieve_by_sql": [21, 26], "retrieve_embedding_queri": [21, 23], "retrieve_string_queri": [21, 23], "retrieved_context": [58, 59, 123, 155], "retriever2": [21, 22], "retriever_1": 138, "retriever_evalu": 145, "retriever_nod": 112, "retriever_out": [112, 155], "retriever_output": [3, 41, 80], "retriever_output_to_context_str": [2, 3], "retriever_recal": [59, 123], "retriever_repons": 134, "retrieverdocumentstyp": [21, 28, 138], "retrieverdocumenttyp": [21, 22, 25, 28, 41, 45, 138], "retrieverevalu": 145, "retrieveroutput": [3, 21, 22, 23, 24, 25, 26, 27, 28, 41, 45, 66, 67, 112, 120, 138, 155], "retrieveroutputtocontextstr": [2, 3], "retrieveroutputtyp": [21, 25, 138], "retrieverqueriestyp": 138, "retrieverquerytyp": [41, 45, 138], "retrieverrecal": [58, 59, 123], "retrieverrelev": 123, "retrieverstrqueriestyp": [21, 25, 138], "retrieverstrquerytyp": 138, "return": [0, 1, 2, 4, 6, 14, 16, 18, 19, 20, 21, 22, 24, 25, 26, 30, 31, 32, 33, 34, 35, 36, 37, 38, 42, 43, 45, 53, 54, 55, 56, 57, 58, 59, 61, 65, 66, 67, 69, 71, 74, 75, 76, 77, 78, 88, 89, 90, 92, 93, 95, 101, 110, 111, 112, 113, 116, 120, 121, 123, 125, 126, 131, 132, 133, 135, 137, 138, 139, 140, 144, 152, 153, 155], "return_data_class": [18, 19, 20, 111, 133, 144, 155], "return_tensor": 16, "reus": 100, "revers": 131, "revert": [61, 63, 64, 68, 69, 71, 76, 126, 144], "revert_data": [61, 69], "review": [100, 122, 123], "reward": 136, "rewrit": 136, "rewritt": 136, "rewritten": 136, "rgb": 123, "rhyme": 111, "right": [21, 22, 37, 42, 92, 98, 101, 111, 112, 127, 130, 133, 136, 138, 152, 153], "rigid": 105, "rigor": 123, "risk": 139, "ro": [112, 123], "robust": [106, 111, 112, 123, 133], "roc": 123, "roi": 123, "role": [1, 9, 16, 105, 111, 112, 120, 126, 128, 131, 135, 137, 138, 147], "role_desc": [61, 69, 71, 75, 101, 110, 132, 134, 144, 152, 153, 155], "rom": 133, "room": 155, "root": [47, 48, 49, 51, 52, 61, 69, 77, 79, 93, 97, 98, 101, 104, 129, 152, 153], "root_logg": [93, 129], "roug": [123, 136, 143], "rouge1_fmeasur": 123, "rouge1_precis": 123, "rouge1_recal": 123, "rouge2_fmeasur": 123, "rouge2_precis": 123, "rouge2_recal": 123, "rouge_scor": 123, "rougel_fmeasur": 123, "rougel_precis": 123, "rougel_recal": 123, "rougelsum_fmeasur": 123, "rougelsum_precis": 123, "rougelsum_recal": 123, "rougescor": 123, "rouko": 123, "round": 132, "row": [45, 123], "rrag": 123, "rst": [98, 130], "rubberdub": 123, "ruc": 136, "rule": [2, 4, 100, 111, 127, 139], "run": [0, 1, 14, 16, 36, 44, 61, 77, 78, 79, 97, 98, 100, 101, 104, 105, 111, 116, 120, 121, 122, 126, 129, 130, 131, 132, 134, 137, 139, 140, 147, 152, 153], "run_async_function_cal": 140, "run_async_in_new_loop": 44, "run_model_client_embedding_usag": 131, "run_one_loss_sampl": [61, 77, 78], "run_one_task_sampl": [61, 77, 78], "run_sync_and_async_mix": 36, "run_sync_and_async_mix_without_wait": 36, "run_utils_funct": 131, "running_ev": [61, 77, 78], "runtim": [40, 104], "ruochen": 136, "s1": 55, "s2": 55, "safe": [37, 92], "safe_import": 92, "safe_load": [133, 145], "sai": [113, 123, 130], "said": 123, "same": [14, 21, 23, 25, 31, 32, 33, 38, 43, 45, 53, 59, 61, 70, 77, 79, 105, 111, 112, 113, 120, 121, 123, 125, 131, 133, 135, 136, 137, 138, 155], "sampl": [14, 37, 61, 63, 64, 68, 69, 70, 77, 78, 79, 89, 100, 101, 110, 131, 133, 136, 139, 144, 145, 152, 153, 155], "sample_embed": 131, "sample_subset_dataset": 49, "sample_text": 131, "sample_weight": 49, "sampledataclass": 133, "sampler": [61, 68, 89], "samples_to_str": [61, 63, 64], "san": 140, "sandbox": [36, 37, 44, 140], "sandbox_exec": [36, 37], "sandbox_execut": 140, "sat": 123, "satanjeev": 123, "satur": [21, 22], "save": [18, 19, 21, 22, 30, 31, 33, 41, 45, 47, 52, 61, 64, 69, 71, 76, 77, 79, 83, 84, 85, 90, 93, 101, 112, 116, 119, 120, 121, 125, 129, 130, 138, 144, 152, 153, 155], "save_csv": 90, "save_dir": [61, 77, 78, 83, 84, 85, 93, 129], "save_json": [90, 116], "save_meta_data": 84, "save_pickl": 90, "save_st": [33, 120], "save_to_fil": [21, 22, 41, 138], "save_trac": [61, 77, 79], "scalabl": 138, "scale": [56, 123, 136, 138, 143], "scarecrow": 147, "sce": 123, "scenario": [111, 123, 131, 139, 154], "scene": 128, "schema": [18, 20, 30, 37, 45, 111, 113, 133, 140, 147], "scheme": 136, "schmea": 113, "school": 111, "scope": [4, 61, 71, 76], "score": [2, 4, 21, 22, 24, 25, 26, 31, 37, 41, 45, 54, 56, 57, 59, 61, 64, 66, 67, 69, 71, 75, 76, 77, 78, 80, 110, 112, 120, 122, 123, 131, 132, 134, 136, 139, 143], "score_i": 132, "score_i_t": 132, "scott": 155, "scottish": 155, "scratch": 145, "script": [93, 145], "script_nam": 93, "sdk": [7, 14, 16, 45, 98, 104, 138], "seamless": 137, "seamlessli": 138, "search": [23, 37, 122, 123, 136, 137, 138, 139, 140, 143, 144], "search_reranking_with_cross": 138, "second": [36, 37, 58, 59, 101, 111, 123, 130, 131, 136, 138, 139, 140, 144, 152, 153], "secondli": 111, "secret": 128, "section": [97, 98, 104, 120, 123, 126, 128, 131, 135, 137, 139, 140], "sector": [120, 138], "secur": 16, "see": [2, 4, 11, 13, 14, 16, 39, 61, 69, 83, 97, 98, 100, 101, 105, 111, 113, 115, 116, 119, 120, 122, 123, 128, 129, 131, 135, 136, 137, 138, 139, 140, 144, 152, 153], "seed": 14, "seek": [105, 135], "seem": 123, "seen": [120, 123], "segment": [2, 4, 136, 139], "select": [26, 56, 61, 70, 77, 79, 89, 98, 99, 123, 131, 133, 139, 144, 145, 147], "selected_embed": 131, "selected_text": 131, "self": [16, 18, 19, 20, 31, 32, 37, 61, 77, 78, 83, 101, 110, 111, 112, 113, 116, 121, 129, 130, 131, 132, 134, 138, 140, 144, 152, 153, 155], "semant": [23, 100, 120, 122, 123, 131, 138, 139], "semscor": 123, "send": [101, 131, 135, 138, 152, 153], "sens": [111, 123, 130], "sensit": [9, 30, 113, 127, 138, 139], "sensor": 138, "sent": [14, 135], "sentenc": [2, 4, 18, 19, 56, 58, 59, 111, 123, 125, 137, 139, 145], "sentiment": [2, 4, 122, 123, 139], "separ": [2, 4, 8, 14, 39, 93, 105, 112, 129, 134, 135, 136, 139, 155], "seq": [32, 116], "seq1": 32, "seq2": 32, "seq3": 32, "sequenc": [2, 3, 14, 16, 21, 22, 23, 24, 25, 26, 27, 28, 34, 35, 37, 41, 61, 68, 70, 89, 101, 116, 120, 126, 131, 137, 138, 139, 152, 153], "sequenti": [0, 1, 32, 38, 43, 61, 77, 79, 111, 120, 121, 125, 126, 137, 144, 145], "seral": [113, 127], "sercur": 140, "seri": [2, 4, 16, 128, 131, 139], "serial": [9, 13, 14, 15, 30, 31, 32, 40, 45, 90, 113, 126, 135, 138, 147], "serializ": 33, "serv": [61, 77, 78, 101, 116, 152, 153], "servic": 9, "session": [45, 131], "session_id": [45, 120], "set": [0, 1, 2, 4, 8, 9, 14, 16, 18, 19, 21, 22, 23, 25, 30, 31, 37, 38, 40, 41, 45, 50, 52, 56, 57, 59, 61, 66, 67, 68, 69, 70, 71, 75, 77, 79, 89, 93, 98, 99, 103, 111, 112, 120, 121, 122, 123, 125, 126, 129, 131, 132, 137, 138, 139, 144, 145, 147, 150, 151, 155], "set_assistant_respons": 45, "set_backward_engin": [38, 61, 66, 67, 71, 75, 112], "set_cache_path": 38, "set_data_map_func": 38, "set_dataset": [61, 68, 70], "set_eval_fn_input": [61, 69], "set_grad_fn": [61, 69], "set_input_field": 30, "set_llm_client": [7, 16], "set_max_step": 89, "set_mock_output": 38, "set_output_field": 30, "set_paramet": 38, "set_peer": [61, 69], "set_predecessor": [61, 69], "set_scor": [61, 69], "set_task_desc": [30, 144], "set_teacher_gener": 38, "set_teacher_generatpr": 132, "set_user_queri": 45, "setup": [9, 33, 61, 77, 78, 79, 97, 99, 104, 105, 111, 120, 121, 122, 125, 129, 130, 131, 136, 138, 143, 147], "setup_env": [101, 104, 111, 121, 123, 131, 152, 153], "seven": [123, 135], "sever": [116, 139], "sg": [123, 136, 143], "shallow": 31, "shape": [106, 127], "share": [4, 98, 100, 102, 105], "shell": [97, 98, 105], "shen": 136, "shift": [2, 4, 139], "shine": 126, "short": [61, 69, 136, 143, 144, 155], "shorter": [138, 139], "shot": [30, 38, 64, 68, 69, 70, 77, 79, 106, 126, 134, 135, 136, 137, 138, 143, 144, 146, 147, 155], "should": [2, 4, 9, 11, 13, 14, 15, 16, 18, 20, 21, 25, 30, 31, 32, 33, 35, 38, 39, 45, 56, 66, 85, 89, 97, 100, 101, 105, 111, 112, 116, 120, 121, 123, 125, 130, 132, 133, 134, 135, 136, 138, 139, 140, 143, 147, 152, 153], "show": [18, 20, 45, 61, 69, 77, 79, 98, 101, 105, 111, 112, 116, 122, 125, 132, 133, 134, 136, 137, 138, 140, 144, 145, 147, 151, 152, 153, 155], "showcas": [131, 138], "shown": [111, 140, 144], "shuffl": [89, 119], "signal": [31, 98, 113], "signatur": [30, 113, 140, 144, 147], "signature_json": [18, 20, 30, 113], "signature_yaml": [18, 20, 30, 113], "signific": [120, 138], "significantli": [21, 22, 120, 138], "signitur": 147, "sil": 136, "similar": [23, 26, 37, 45, 58, 59, 89, 97, 98, 106, 112, 116, 121, 122, 123, 126, 129, 131, 132, 135, 137, 138, 144], "similaritypostprocessor": 105, "similarli": [98, 101, 105, 113, 130, 152, 153], "similr": 112, "simpl": [1, 18, 20, 38, 42, 61, 70, 71, 74, 82, 98, 101, 111, 114, 120, 121, 122, 125, 129, 131, 133, 135, 136, 138, 139, 152, 153], "simple_default_adalflow_system_prompt": 34, "simple_prompt": 135, "simplecustommodelcli": 131, "simpleqa": 130, "simpler": [18, 19, 147], "simplest": [111, 123, 129, 140], "simpli": [37, 61, 71, 74, 75, 101, 106, 111, 113, 121, 123, 125, 129, 131, 133, 136, 152, 153], "simplier": 112, "simplifi": [9, 15, 89, 110, 111, 112, 120, 121, 127, 130, 137, 138, 140], "simplili": 140, "simul": [23, 36, 123, 131, 137, 138], "simultan": 131, "sinc": [97, 100, 111, 136], "singapor": [123, 136], "singl": [32, 33, 35, 38, 45, 53, 54, 56, 57, 59, 80, 88, 101, 120, 121, 123, 125, 126, 128, 129, 130, 131, 135, 136, 137, 138, 140, 147, 152, 153, 155], "sit": 16, "site": 129, "situat": [111, 121, 144], "six": [98, 131], "size": [2, 4, 14, 35, 47, 48, 52, 89, 101, 121, 123, 131, 136, 138, 143, 144, 151, 152, 153, 155], "skill": 99, "skim": 138, "skip": [61, 70, 77, 79, 136], "skip_special_token": 16, "sklearn": 123, "sky": 123, "sleep": [36, 140], "slide": [2, 4, 139], "slightli": 140, "slow": 139, "slower": 14, "slowest": 136, "small": [35, 49, 52, 88, 120, 121, 122, 123, 131, 138], "small_tool_manag": 140, "smaller": [2, 4, 121, 126, 136, 138, 139], "smallest": [2, 4, 139], "smapl": 14, "smooth": [56, 101, 110, 123, 153], "snippet": [45, 111, 123, 140, 145], "so": [37, 43, 45, 56, 61, 71, 73, 98, 101, 104, 110, 111, 112, 113, 120, 123, 127, 128, 129, 132, 136, 137, 138, 139, 145, 152, 153, 155], "social": 139, "soft": [101, 152, 153], "softwar": 127, "solar": [120, 138], "solut": [61, 69, 98, 105, 123, 127, 136], "solv": [1, 105, 111, 132, 136, 137, 147], "some": [16, 21, 25, 42, 56, 61, 64, 70, 97, 101, 105, 113, 119, 123, 129, 130, 132, 135, 138, 144, 152, 153], "someth": 140, "sometim": [56, 57, 59, 61, 69, 105, 113, 136, 143, 155], "soon": [98, 138, 142], "sort": [16, 40, 101, 131, 152, 153], "sort_desc": 26, "sort_kei": [30, 37], "sota": [126, 136, 143, 144], "sound": [56, 123], "sourc": [0, 1, 2, 3, 4, 6, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 101, 105, 106, 111, 113, 116, 120, 123, 125, 129, 130, 131, 133, 135, 136, 137, 138, 139, 140, 143, 144, 152, 153, 155], "space": [2, 4, 18, 20, 122, 133, 137, 139, 144], "span": [123, 130], "spatial": 144, "speak": [105, 140], "spec": 45, "speci": 155, "speciaf": 145, "special": [112, 128, 135], "specif": [1, 9, 12, 13, 14, 15, 16, 21, 28, 36, 38, 39, 41, 44, 45, 56, 57, 59, 61, 69, 71, 76, 82, 97, 101, 111, 113, 116, 123, 125, 129, 131, 135, 136, 137, 138, 139, 144, 145, 152, 153], "specifc": 45, "specifi": [1, 2, 4, 9, 12, 14, 15, 16, 24, 30, 34, 45, 47, 52, 61, 77, 79, 89, 93, 101, 111, 113, 131, 133, 135, 138, 139, 140, 152, 153], "spectrum": 123, "speed": [32, 136, 138], "speedup": 89, "spell": [56, 123, 155], "spelt": 155, "spend": 127, "split": [2, 3, 4, 21, 22, 47, 48, 49, 52, 61, 77, 79, 119, 120, 122, 126, 136, 138, 155], "split_and_emb": 120, "split_bi": [2, 4, 88, 120, 122, 139], "split_length": [88, 120, 122], "split_overlap": [88, 120, 122], "split_text": [2, 4], "split_text_by_word_fn": [21, 22, 138], "split_text_by_word_fn_then_lower_token": [21, 22, 138], "split_text_token": [21, 22], "splitted_doc": [2, 4, 122, 139], "splitter": [2, 4, 120, 122, 126, 138], "splitter_config": 120, "sport": 123, "sql": [26, 120, 133, 138], "sqlalchemi": [92, 104, 120, 138], "squad": 123, "src": [129, 130], "srcdoc": [141, 149, 150, 151], "st": 155, "stabl": [14, 58, 59, 100, 123, 129], "stage": [105, 121, 123, 132, 136, 137, 138, 143, 145], "stai": [105, 116], "stalk": 132, "stamp": [101, 152, 153], "stand": [111, 125, 155], "standar": [12, 127], "standard": [9, 12, 13, 15, 16, 18, 20, 30, 36, 39, 45, 97, 98, 100, 101, 105, 111, 116, 121, 123, 125, 126, 131, 133, 138, 139, 140, 145, 146, 147, 152, 153, 155], "stanford": 123, "start": [0, 1, 18, 20, 26, 30, 37, 45, 56, 59, 80, 92, 95, 97, 99, 111, 121, 126, 130, 131, 132, 138, 140, 144, 145, 155], "start_header_id": [128, 135], "start_of_assistant_step": 34, "start_of_system_messag": [136, 144], "start_of_system_prompt": [34, 101, 123, 152, 153], "start_of_us": [101, 123, 136, 152, 153], "start_of_user_messag": 144, "start_of_user_prompt": 34, "start_tim": [36, 131, 140], "starter": 131, "stat": [101, 152, 153], "state": [21, 22, 23, 25, 27, 28, 30, 31, 33, 41, 61, 64, 83, 85, 88, 101, 111, 112, 116, 120, 125, 126, 127, 130, 138, 140, 153, 155], "state_dict": [31, 61, 68, 116], "statement": [56, 58, 59, 123, 136], "static": [30, 38, 47, 52, 61, 64, 69], "statu": [113, 133, 155], "std_of_scor": 80, "step": [0, 1, 2, 4, 34, 45, 61, 63, 64, 68, 71, 76, 77, 78, 79, 80, 97, 101, 106, 110, 111, 121, 123, 125, 126, 130, 132, 133, 135, 137, 138, 139, 144, 145, 152, 153, 155], "step_data": [61, 69], "step_histori": [1, 111], "step_result": 80, "stepoutput": [45, 111, 137], "stepoutputwithfunctionexpress": 45, "steps_coher": 56, "steps_consist": 56, "steps_fluenc": 56, "steps_relev": 56, "steps_str": [34, 125, 130, 135], "stick": 125, "still": [56, 98, 101, 120, 123, 125, 127, 129, 132, 136, 138, 139, 140, 144, 152, 153, 155], "stop": [14, 101, 110, 111, 112, 125, 135, 152, 153], "storag": [4, 6, 33, 88, 120, 136, 138], "store": [4, 6, 14, 26, 31, 33, 38, 61, 77, 78, 84, 85, 91, 112, 113, 120, 122, 125, 126, 130, 131, 138], "storei": 155, "stove": [101, 152, 153], "stovenn": [101, 152, 153], "str": [0, 1, 2, 3, 4, 6, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 61, 64, 65, 68, 69, 71, 73, 74, 75, 76, 77, 78, 79, 80, 83, 84, 85, 87, 88, 90, 91, 92, 93, 94, 95, 96, 101, 110, 111, 112, 113, 116, 120, 121, 125, 131, 132, 133, 138, 139, 140, 144, 147, 152, 153, 155], "straightforward": [123, 125, 133, 137], "strateg": 137, "strategi": [1, 61, 77, 79, 101, 111, 123, 136, 143, 152, 153], "strawberri": [132, 152], "stream": [9, 14, 15, 98], "streamlin": [30, 126, 140, 144, 147], "strength": [136, 143], "stress": 116, "strict": [1, 31, 34, 139], "string": [0, 1, 6, 13, 14, 18, 19, 20, 21, 23, 24, 25, 26, 30, 34, 37, 38, 40, 42, 43, 45, 53, 55, 56, 57, 58, 59, 61, 65, 71, 75, 76, 95, 101, 105, 111, 116, 125, 126, 128, 131, 132, 133, 134, 135, 136, 137, 138, 140, 145, 152, 153, 155], "string_pars": [20, 125, 133, 145], "strong": 152, "strongli": 14, "structu": 113, "structur": [2, 4, 9, 12, 14, 15, 16, 18, 19, 30, 31, 37, 39, 45, 56, 70, 76, 101, 110, 111, 112, 113, 119, 120, 121, 123, 125, 126, 130, 131, 133, 138, 139, 140, 147, 152, 153, 155], "stuck": 139, "student": [38, 101, 132, 144, 152, 153], "student_graph": 152, "stun": 123, "style": [16, 89, 97, 98, 130], "subclass": [11, 13, 14, 16, 20, 21, 22, 30, 31, 39, 41, 45, 61, 83, 89, 92, 101, 111, 112, 113, 116, 119, 121, 126, 131, 135, 138, 140, 144, 152, 153], "subcompon": [31, 38, 61, 77, 78, 116, 125], "subcomponn": 116, "subdirectori": [60, 98], "submiss": 100, "submit": 98, "subqueri": [1, 111, 137], "subquest": [1, 111], "subsampl": [101, 152, 153], "subsequ": [58, 59, 137], "subset": [49, 52, 89, 101, 113, 123, 132, 145, 152, 153], "subset_dataset": [89, 101, 152, 153], "substanc": 155, "substanti": [120, 138], "substitut": 135, "substr": 55, "subtract": 137, "success": [61, 64, 101, 125, 140, 152, 153], "successfulli": [100, 140], "successor": [61, 69, 112, 134, 155], "successor_map_fn": [61, 69, 112, 155], "sudden": [2, 4, 139], "suffici": 123, "suggest": [15, 21, 22, 97, 98, 99, 111, 137], "suit": [45, 155], "suitabl": [4, 98, 131], "sum": [71, 74, 80, 101, 132, 136, 140, 144, 152, 153], "sum_": [21, 22, 136], "sum_op": [71, 74], "sum_output": 80, "summar": [56, 105, 106, 123, 127, 136, 139], "summari": [56, 123, 125, 147], "summariza": 123, "summat": [71, 74], "summer": 111, "sundai": 123, "sunlight": [120, 138], "super": [31, 61, 77, 78, 83, 101, 110, 113, 116, 121, 130, 131, 144, 152, 153, 155], "supervis": [136, 143, 155], "support": [2, 4, 9, 13, 15, 16, 30, 31, 36, 37, 38, 39, 44, 45, 47, 52, 56, 61, 77, 78, 89, 92, 93, 95, 99, 101, 104, 112, 113, 121, 123, 125, 126, 128, 131, 133, 134, 136, 138, 139, 140, 143, 145, 147, 152, 153, 155], "support_model": [7, 16], "support_model_list": 131, "supporting_fact": 145, "suppos": [138, 155], "sure": [18, 20, 61, 77, 78, 97, 98, 100, 101, 104, 111, 112, 113, 131, 133, 138, 140, 147, 152, 153], "surnam": 155, "surpass": [101, 136, 144, 152, 153], "survei": [111, 123, 136], "sustain": [120, 138], "suzgunmirac": [47, 52], "svg": [61, 69, 130], "sweep": 112, "swim": 111, "switch": [21, 25, 105, 121, 126, 131, 138], "sy": [1, 18, 19, 31, 34, 92, 111, 116, 120, 125, 135, 138, 140], "sylphai": [97, 98, 130], "sync": [11, 13, 14, 16, 31, 36, 39, 44, 45, 98, 140], "sync_client": 131, "sync_function_1": 36, "sync_function_2": 36, "sync_tool_1": 36, "sync_tool_2": 36, "syncapicli": 16, "synchron": [14, 36, 116, 131], "syntax": [18, 19, 61, 69, 92, 125, 135], "synthes": [123, 136], "synthet": [61, 77, 79, 123, 132, 136], "system": [8, 14, 16, 34, 39, 40, 45, 61, 68, 71, 73, 76, 101, 105, 111, 112, 120, 123, 128, 131, 132, 134, 135, 137, 139, 144, 152, 153, 154], "system_input": [9, 12, 15], "system_prompt": [31, 101, 132, 144, 152, 153], "system_tim": 120, "sytem": 12, "t": [2, 4, 9, 13, 15, 20, 21, 22, 31, 33, 37, 40, 45, 61, 69, 98, 100, 105, 123, 128, 129, 132, 135, 137, 139], "t0": 137, "t2d": 138, "t_co": [37, 45, 61, 70, 89], "tab": 100, "tabl": [26, 98, 120, 136, 138, 144], "table_nam": 26, "tabnin": 97, "tackl": 111, "tag": [61, 71, 76, 100, 111, 131], "tail": 14, "take": [0, 1, 2, 4, 36, 61, 64, 71, 75, 77, 78, 101, 105, 111, 112, 122, 123, 125, 126, 128, 131, 133, 134, 135, 137, 138, 139, 140, 144, 152, 153], "taken": [131, 140], "targ": 134, "target": [83, 98, 130, 133, 136, 152], "task": [0, 1, 2, 4, 18, 19, 30, 31, 34, 36, 38, 47, 52, 56, 57, 59, 61, 71, 76, 77, 78, 79, 80, 83, 88, 90, 98, 106, 110, 111, 116, 120, 121, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 145, 146, 147, 149, 154, 155], "task_desc": [18, 19, 30, 111, 136], "task_desc_str": [18, 20, 34, 40, 56, 123, 125, 130, 135, 144, 145, 155], "task_desc_templ": 144, "task_instruct": 132, "task_model_config": [61, 77, 79], "task_nam": [47, 51, 52, 61, 77, 79], "task_pipelin": [101, 112, 152, 153], "task_spec": [1, 111], "tau": 155, "tb": [61, 69], "teach": [1, 61, 77, 78, 101, 111, 144, 152, 153], "teacher": [31, 38, 61, 64, 68, 78, 106, 110, 132, 144, 155], "teacher_gener": [101, 152, 153], "teacher_generator_model_config": [101, 152, 153], "teacher_mod": [31, 132], "teacher_model_config": [61, 77, 78, 101, 110, 144, 152, 153, 155], "team": [61, 64, 98, 100, 106, 123], "tech": 27, "technic": [123, 140], "techniqu": [116, 136, 138, 143], "technologi": [120, 123, 138], "tell": [61, 77, 78, 131, 133, 152, 155], "temperatur": [14, 37, 38, 101, 111, 123, 131, 137, 140, 152, 153], "templat": [0, 1, 18, 19, 20, 31, 34, 38, 40, 56, 57, 59, 61, 68, 77, 78, 83, 98, 101, 106, 111, 112, 116, 123, 126, 132, 133, 136, 137, 138, 140, 144, 147, 152, 153, 155], "template_doc": [31, 116], "temporari": 134, "tensor": [16, 31, 49, 89, 112, 116, 119, 123, 126, 129, 134, 147], "tensorboard": 129, "tensorflow": [99, 129], "term": [21, 22, 56, 112, 123, 136, 143, 144], "termin": [14, 98, 125, 137], "test": [11, 12, 13, 14, 16, 31, 33, 47, 48, 49, 52, 61, 77, 78, 79, 89, 92, 98, 99, 100, 104, 105, 106, 111, 123, 131, 136, 138, 144, 155], "test_": 97, "test_compon": 97, "test_data": [101, 152, 153], "test_dataset": [61, 77, 79, 101, 144, 152, 153], "test_input_1": 42, "test_input_2": 42, "test_input_3": 42, "test_input_4": 42, "test_openai_cli": 98, "test_react_ag": 111, "test_retriev": 155, "test_scor": 80, "test_xx_client": 98, "testgener": 83, "testgenerator_generator_cal": 83, "testgenerator_generator_trac": 83, "testset": [61, 77, 79, 101, 152, 153, 155], "text": [2, 4, 9, 14, 15, 21, 22, 24, 27, 33, 35, 37, 40, 42, 43, 45, 56, 61, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 87, 88, 93, 105, 106, 113, 120, 121, 122, 123, 125, 126, 127, 129, 131, 132, 133, 134, 135, 136, 137, 138, 143, 144, 145, 155], "text_grad": [75, 101, 112, 125, 144, 153, 155], "text_grad_debug_path": [61, 77, 79], "text_kei": [27, 138], "text_loss_with_eval_fn": 71, "text_optim": [77, 79], "text_optimizer_model_config": [61, 77, 78, 101, 144, 152, 153, 155], "text_splitt": [2, 98, 120, 122, 139], "text_splitter_set": 122, "textanalyt": 92, "textgrad": [71, 72, 73, 74], "textoptim": [61, 68, 71, 76, 77, 78, 79, 126, 144], "textsearch": 138, "textsplitt": [2, 4, 120, 138], "textual": [68, 71, 72, 76, 101, 106, 126, 146, 152, 153], "tfs_z": 14, "tgd_optim": [71, 101, 125, 144, 153], "tgdoptim": [61, 71, 76, 101, 125, 144, 153], "tgdwithevalfnloss": [61, 77, 79], "than": [18, 19, 20, 23, 30, 31, 35, 61, 64, 101, 111, 112, 113, 115, 116, 121, 123, 127, 133, 136, 137, 138, 139, 140, 147, 152, 153], "thank": 45, "thei": [15, 16, 32, 33, 42, 61, 69, 77, 78, 92, 112, 120, 123, 125, 127, 128, 129, 132, 133, 134, 137, 138, 147], "them": [21, 22, 23, 30, 31, 38, 41, 42, 45, 56, 92, 97, 98, 105, 106, 111, 116, 120, 122, 123, 128, 129, 131, 132, 133, 134, 135, 136, 138, 140, 145, 147, 152], "themat": 139, "themselv": [61, 77, 78], "thenlper": [16, 121, 131], "therefor": [101, 123, 131, 137, 152, 153], "thereot": 123, "thi": [2, 4, 6, 8, 9, 11, 13, 14, 15, 16, 20, 21, 25, 26, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 45, 53, 56, 57, 59, 61, 66, 68, 69, 71, 73, 74, 77, 78, 83, 88, 89, 91, 92, 93, 94, 97, 98, 99, 100, 101, 104, 105, 106, 110, 111, 112, 113, 114, 115, 116, 120, 121, 122, 123, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 155], "thing": [39, 101, 111, 119, 127, 131, 133, 134, 136, 152, 153], "think": [1, 99, 101, 105, 111, 112, 132, 152, 153, 155], "third": [93, 101, 131, 138, 153], "those": [89, 101, 128, 131, 132, 134, 136, 152, 153], "though": [20, 113, 123, 131, 133, 135, 138, 139, 144], "thought": [0, 1, 18, 20, 45, 101, 111, 113, 136, 137, 140, 144, 152, 153], "thoughtact": [18, 20], "thread": [61, 77, 78], "three": [31, 38, 66, 67, 98, 99, 101, 105, 111, 121, 122, 123, 125, 126, 127, 128, 130, 132, 133, 136, 140, 152, 153, 155], "threshold": [61, 77, 79], "through": [9, 38, 45, 66, 67, 100, 105, 120, 122, 123, 130, 131, 136, 137, 138, 145], "thu": [45, 121, 131, 133, 135, 144, 145], "tiktoken": [2, 4, 43, 139], "time": [1, 36, 38, 61, 70, 98, 101, 111, 122, 123, 127, 131, 135, 136, 137, 138, 140, 143, 144, 152, 153], "time_period": 98, "time_stamp": [80, 84, 85, 101, 130, 152, 153], "timeout": 37, "timestamp": [45, 93], "tini": 129, "tion": 123, "titl": [45, 98, 120, 123, 138, 145], "tive": 136, "tmp": [24, 138], "to_dict": [7, 9, 13, 14, 15, 21, 22, 30, 31, 38, 40, 41, 61, 69, 70, 95, 101, 113, 116, 135, 138, 140, 152, 153], "to_dict_class": [30, 95], "to_embed": [88, 122], "to_give_ta": [101, 152, 153], "to_json": [30, 45, 113, 140, 147], "to_json_exampl": 30, "to_json_obj": [30, 113], "to_json_signatur": [30, 113, 140, 147], "to_provid": [101, 152, 153], "to_schema": [30, 113], "to_schema_str": [30, 113], "to_thread": 36, "to_yaml": [30, 45, 113, 120, 140, 147], "to_yaml_exampl": 30, "to_yaml_obj": [30, 113], "to_yaml_signatur": [30, 113, 147], "toaster": 132, "toasternn": [101, 152, 153], "tobacco": 155, "todai": [21, 22, 129], "todo": [38, 66, 110, 112, 128, 134, 136, 144], "toembed": [2, 3, 88, 120, 122], "toembedderrespons": 122, "togeth": [14, 101, 105, 110, 111, 113, 116, 119, 120, 121, 122, 125, 132, 135, 136, 152, 153, 155], "token": [2, 4, 7, 9, 14, 15, 16, 18, 20, 21, 22, 30, 45, 61, 64, 69, 101, 106, 120, 126, 128, 131, 135, 136, 138, 140, 143, 144, 145, 147, 152, 153], "tokenlogprob": [15, 45], "tokyo": 140, "tol": 37, "tolist": 16, "toml": [97, 98, 100], "too": [61, 77, 78, 110, 112, 120, 123, 138, 144], "took": 99, "tool": [0, 1, 14, 15, 34, 36, 44, 45, 97, 98, 100, 105, 123, 125, 126, 127, 128, 129, 130, 135, 137, 138, 140], "tool_1": 36, "tool_cal": 140, "tool_choic": 15, "tool_help": 137, "tool_manag": [111, 140], "toolkit": 136, "toolmanag": [44, 111], "toolnam": 137, "tools_str": [34, 125, 130, 135], "top": [14, 21, 22, 23, 24, 25, 26, 27, 28, 31, 41, 58, 59, 98, 99, 101, 113, 116, 123, 127, 131, 133, 136, 137, 138, 152, 153, 155], "top_k": [14, 16, 21, 22, 23, 24, 25, 26, 27, 28, 37, 41, 88, 112, 120, 155], "top_k_docu": 120, "top_n": 11, "top_p": [14, 16, 101, 123, 152, 153], "topic": [56, 123], "torch": [16, 70, 92, 104, 112, 116, 129], "torch_dtyp": 16, "torchmetr": [123, 145], "toretriev": 136, "total": [21, 22, 58, 59, 101, 123, 131, 132, 133, 138, 140, 145, 152, 153], "total_docu": 138, "total_step": [61, 77, 78], "total_token": [45, 101, 131, 152, 153], "total_token_count": 12, "tottenham": 123, "toward": [112, 123], "tower": 130, "townsend": 123, "trace": [31, 38, 61, 66, 67, 69, 77, 78, 79, 82, 83, 84, 85, 101, 106, 129, 134, 137, 152, 153], "trace_forward_pass": [61, 69], "trace_generator_cal": [83, 90, 130], "trace_generator_error": 130, "trace_generator_st": [83, 130], "trace_graph": [61, 69, 101, 106, 112, 152, 153], "trace_graph_evalfntotextloss_output_id_6ea5da3c": 152, "trace_graph_sum": [101, 152, 153], "trace_graph_sum_root": [101, 152, 153], "trace_id": [61, 69], "tracer": 129, "track": [8, 9, 12, 13, 15, 38, 39, 41, 45, 61, 66, 77, 79, 85, 98, 105, 112, 116, 120, 125, 130, 131, 134, 138], "track_completion_usag": [7, 8, 9, 12, 13, 15, 39], "tradit": [123, 145], "trag": 139, "train": [31, 32, 38, 47, 48, 49, 52, 61, 66, 67, 68, 69, 70, 71, 74, 75, 77, 78, 79, 91, 106, 110, 112, 116, 128, 130, 133, 134, 135, 136, 139, 141, 145], "train_batch_s": [61, 77, 79, 101, 144, 152, 153], "train_data": [101, 152, 153], "train_dataset": [61, 77, 79, 101, 144, 152, 153], "train_diagnos": 155, "train_load": [61, 77, 79], "train_step": [61, 77, 78], "train_teach": [101, 152, 153], "trainabl": [38, 106, 112, 134, 136, 144], "trainable_param": 38, "trainable_prompt_kwarg": 123, "trainer": [69, 78, 80, 106, 110, 123, 126, 127, 132, 136, 150, 151, 155], "trainer_": 126, "trainer_st": [61, 77, 79, 80], "trainerresult": [80, 101, 152, 153], "trainerstepresult": 80, "trainervalidatestat": 80, "trainset": [61, 77, 78, 79, 101, 152, 153, 155], "transact": 123, "transfom": 120, "transform": [2, 3, 16, 21, 22, 32, 33, 45, 61, 71, 73, 92, 104, 105, 112, 120, 121, 122, 123, 126, 129, 131, 132, 136, 138, 139], "transform_cli": 16, "transformed_item": [33, 120], "transformer_cli": 16, "transformer_setup": [33, 120], "transformercli": 131, "transformerembedd": [7, 16, 131], "transformerllm": [7, 16], "transformerrerank": [7, 16], "transformers_cli": [7, 121, 131], "transformerscli": [7, 16, 21, 28, 45, 121, 131, 138], "transla": 123, "translat": [106, 123, 127], "transpar": [30, 105, 113, 116, 127, 134, 136, 143], "treat": 140, "treatment": 116, "trec": [50, 52], "trec_classif": 144, "trec_data": 30, "trec_data_dict": 37, "trec_data_list": [30, 37], "trecclassifierad": 144, "trecclassifierstructuredoutput": 144, "trecdata": [30, 37, 50, 52, 113, 144], "trecdata2": 113, "trecdatalist": [30, 37], "trecdataset": [49, 52], "trecextendeddata": 144, "tredatalist": 30, "tree": 31, "trend": 98, "tri": 98, "trigger": [100, 131], "trigger_callback": 82, "trim_block": 135, "trinabl": 134, "tripl": [18, 20, 111, 123, 133, 140], "triplet": 123, "trombon": [101, 152, 153], "true": [0, 1, 9, 16, 18, 19, 20, 21, 22, 24, 26, 31, 33, 37, 38, 42, 45, 48, 52, 56, 57, 59, 61, 64, 68, 69, 70, 77, 79, 80, 83, 89, 93, 101, 111, 113, 120, 121, 122, 123, 131, 132, 133, 135, 137, 138, 140, 144, 145, 147, 150, 151, 152, 153, 155], "truli": 125, "trumpet": [101, 152, 153], "trust_remote_cod": 16, "trusti": 111, "truth": [53, 54, 57, 58, 59, 61, 77, 78, 101, 110, 112, 120, 123, 138, 145, 152, 153, 155], "try": [92, 101, 111, 127, 131, 133, 140, 144, 152, 153, 155], "tuesdai": 123, "tune": [134, 136, 143], "tung": 136, "tupl": [31, 37, 53, 55, 56, 57, 58, 59, 61, 69, 77, 78, 92, 93, 110, 123, 144, 152, 155], "turbo": [0, 1, 9, 31, 37, 38, 83, 111, 116, 120, 125, 128, 131, 138, 140, 146], "turf": 123, "turin": 123, "turn": [6, 31, 45, 101, 120, 122, 125, 131, 137, 152, 153], "turn_db": [5, 6], "tutori": [97, 101, 116, 130, 136, 137, 138, 139, 143, 144, 145, 147, 152, 153, 155], "twenti": 155, "twitter": 123, "two": [0, 1, 16, 20, 32, 33, 45, 55, 61, 70, 90, 93, 98, 101, 106, 111, 112, 115, 120, 121, 123, 125, 126, 129, 130, 131, 132, 133, 134, 136, 137, 138, 140, 144, 145, 152, 153, 154, 155], "type": [2, 4, 6, 9, 12, 13, 15, 16, 18, 20, 21, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 41, 42, 53, 55, 56, 57, 58, 59, 61, 69, 70, 71, 74, 76, 77, 78, 79, 82, 84, 88, 89, 92, 93, 94, 95, 98, 101, 111, 112, 113, 116, 119, 120, 121, 122, 123, 125, 130, 131, 132, 133, 134, 137, 140, 144, 145, 147, 152, 153, 155], "type_hint": 37, "type_obj": 37, "type_var_map": 37, "typeerror": [2, 4, 30], "typevar": 138, "typic": [105, 113, 116, 123, 130, 131], "u": [9, 33, 97, 98, 99, 101, 113, 120, 122, 133, 135, 136, 138, 140, 152, 153], "u00e2": 123, "u201c": 123, "u20ac": 123, "ultim": 127, "unabl": [123, 137], "unbias": 123, "uncontrol": 105, "undefin": [8, 9, 11, 12, 13, 14, 15, 16, 39, 45, 131], "under": [61, 77, 79, 97, 98], "underli": [116, 123], "understand": [9, 14, 15, 16, 18, 19, 39, 56, 97, 98, 105, 112, 120, 123, 126, 131, 133, 136, 137, 138, 139, 140, 143, 152], "unexpect": 123, "uniev": [136, 143], "unifi": [30, 38, 101, 106, 116, 120, 125, 126, 136, 138, 152, 153], "uniform": 139, "union": [16, 21, 22, 24, 37, 42, 45, 58, 59, 101, 111, 138, 144, 152, 153, 155], "uniqu": [31, 45, 61, 77, 79, 85, 101, 105, 116, 119, 127, 132, 134, 137, 152, 153], "unit": [2, 4, 45, 97, 121, 123, 139, 140, 155], "univers": 155, "unknown": 140, "unless": 33, "unlik": [61, 71, 75, 125, 137], "unmodifi": 122, "unnatur": [56, 123], "unnecessari": [61, 71, 76], "unrealist": 123, "unrel": 131, "unsupport": [37, 131, 140], "until": 135, "up": [0, 1, 8, 9, 18, 19, 21, 25, 32, 37, 45, 98, 99, 103, 105, 111, 112, 113, 121, 122, 123, 125, 126, 127, 129, 131, 132, 134, 136, 137, 138, 143, 144, 147, 152], "upcom": 116, "updat": [38, 40, 61, 66, 67, 69, 83, 85, 97, 100, 131, 136, 137, 140, 144], "update_dialog_turn": 45, "update_gradient_memori": [61, 71, 76], "update_prompt_kwarg": 40, "update_valu": [61, 69], "upper": 55, "upstream": 98, "ur": 131, "uri": 14, "url": [9, 26, 138], "us": [0, 1, 2, 3, 4, 6, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 56, 57, 58, 59, 61, 64, 66, 67, 68, 69, 70, 71, 73, 75, 76, 77, 78, 79, 80, 83, 85, 88, 89, 90, 91, 92, 93, 94, 97, 98, 104, 105, 106, 111, 112, 113, 116, 119, 120, 122, 123, 126, 127, 128, 132, 133, 134, 135, 136, 137, 140, 143, 144, 145, 147, 149, 150, 151, 155], "usabl": 98, "usag": [2, 4, 8, 9, 12, 13, 15, 18, 20, 39, 45, 101, 111, 120, 122, 125, 129, 137, 138, 139, 152, 153], "usagemetadata": 12, "usal": [136, 143], "use_cach": [38, 56, 57, 59, 101, 132, 144, 152, 153, 155], "use_cas": [97, 101, 105, 144, 145, 152, 153], "use_llm_as_fallback": [0, 1], "use_pipelin": 16, "use_teach": [31, 132], "use_token": [21, 22, 138], "use_weighted_sampl": [61, 68], "user": [0, 1, 6, 7, 8, 9, 14, 15, 16, 18, 19, 20, 21, 22, 25, 26, 31, 32, 35, 37, 38, 45, 61, 69, 77, 78, 97, 98, 99, 101, 110, 111, 112, 113, 116, 120, 121, 123, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 143, 144, 152, 153], "user_cas": 98, "user_exampl": 133, "user_id": [45, 120], "user_input": 133, "user_queri": [6, 45, 120], "user_query_timestamp": [45, 120], "user_tim": 120, "user_to_pars": 133, "userqueri": [45, 120], "using_logprob": 136, "usual": [61, 71, 75, 130], "util": [2, 4, 7, 45, 61, 70, 77, 78, 79, 89, 92, 93, 98, 101, 104, 111, 116, 119, 121, 123, 125, 126, 129, 137, 138, 139, 152, 153], "uuid": 45, "uuid4": 45, "v": [37, 98, 112, 127], "v1": 100, "v2": [11, 14, 100], "v3": [11, 138], "val": [47, 48, 49, 52, 101, 144, 152, 153, 155], "val_data": [101, 152, 153], "val_dataset": [61, 77, 79, 101, 144, 152, 153], "val_scor": [61, 71, 76, 80], "valid": [18, 20, 30, 37, 42, 61, 77, 78, 79, 100, 101, 106, 110, 111, 126, 133, 140, 144, 152, 153], "validataion": [101, 152, 153], "validate_condit": [61, 77, 78], "validate_data": 37, "validate_stat": 80, "validation_step": [61, 77, 78], "vallinaragad": 155, "valset": [61, 77, 79, 101, 152, 153, 155], "valu": [8, 14, 20, 21, 22, 26, 30, 37, 40, 42, 45, 53, 54, 56, 58, 59, 61, 64, 68, 69, 71, 74, 76, 80, 92, 95, 99, 101, 111, 112, 113, 132, 133, 138, 140, 141, 144, 150, 151, 152, 153], "valuabl": 138, "valueerror": [2, 4, 37, 42, 101, 110, 131, 133, 152, 153, 155], "vanila": 136, "vanilla": 111, "vanillarag": 155, "varaibl": [135, 144], "vari": 128, "variabl": [9, 14, 16, 37, 38, 40, 45, 61, 65, 69, 71, 72, 74, 76, 96, 103, 105, 121, 125, 131, 135, 140], "variable_desc": [61, 69, 71, 75], "variable_nam": [61, 69], "variant": [61, 68, 126], "varieti": 123, "varietri": 37, "variou": [37, 98, 116, 123, 125, 131, 133, 137, 138, 145, 146], "vast": 125, "ve": [98, 147], "vector": [2, 4, 23, 26, 27, 45, 88, 120, 121, 122, 138, 139], "vector_column": 26, "vector_db": 26, "vector_nam": 27, "vectorizer_set": 122, "veget": 132, "vendor": 105, "verbos": 113, "veri": [21, 22, 61, 69, 101, 105, 112, 123, 139, 152, 153], "verif": 137, "verifi": [101, 131, 152, 153], "version": [9, 14, 23, 33, 61, 64, 69, 89, 90, 92, 93, 97, 104, 123, 131, 137, 138], "versu": 131, "vertex": 12, "vertic": [123, 130], "via": [14, 35, 36, 38, 39, 44, 61, 68, 72, 73, 83, 111, 113, 116, 121, 122, 123, 125, 126, 127, 129, 131, 132, 136, 140, 143, 155], "video": 138, "view": [123, 133, 136, 140], "violin": [101, 152, 153], "virtual": 97, "visit": [8, 11, 12, 13, 14, 130, 137], "visual": [106, 111, 114, 116, 121, 134, 135, 141, 152], "vote": 123, "vouch": 105, "vx": 100, "w": 123, "w_i": 132, "wa": [30, 112, 123, 128, 136, 143, 147, 155], "wai": [16, 30, 33, 44, 45, 101, 105, 106, 111, 112, 113, 116, 120, 121, 123, 129, 131, 132, 133, 136, 138, 139, 140, 152, 153, 155], "wait": 131, "walk": 145, "wandb": 129, "wang": [123, 136], "want": [0, 1, 11, 18, 20, 30, 35, 38, 45, 61, 69, 77, 78, 83, 97, 98, 101, 105, 111, 113, 121, 123, 125, 127, 129, 131, 133, 134, 135, 138, 140, 144, 147, 152, 153], "ward": 123, "warm": 136, "warn": [38, 93], "washington": 155, "washtenaw": 155, "wast": [120, 138], "watch": [122, 123], "water": [106, 116, 125, 127], "we": [2, 4, 7, 8, 14, 15, 23, 30, 31, 33, 37, 38, 39, 40, 43, 45, 49, 52, 56, 58, 59, 61, 64, 69, 71, 74, 77, 78, 85, 90, 97, 98, 99, 100, 101, 105, 106, 107, 110, 111, 112, 113, 115, 116, 120, 121, 122, 123, 125, 126, 127, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 143, 144, 145, 146, 147, 152, 153, 154, 155], "weaker": [101, 152, 153], "weather": [131, 140, 155], "web": [123, 129], "wednesdai": 123, "week": 123, "weight": [21, 22, 31, 37, 61, 64, 68, 69, 116, 129, 132, 133, 136, 138], "weighted_sampl": [61, 77, 79, 101, 144, 152, 153], "weights_per_class": [61, 70], "weishi": 136, "weizhuchen": 136, "welcom": [60, 98, 99], "well": [31, 33, 56, 97, 101, 111, 113, 115, 120, 123, 125, 127, 134, 135, 136, 137, 138, 139, 143, 144, 147, 152, 153], "were": [56, 92, 111, 123, 155], "wh": 126, "what": [9, 15, 21, 25, 30, 37, 101, 111, 112, 113, 116, 120, 121, 122, 123, 125, 126, 129, 130, 131, 132, 135, 136, 138, 139, 140, 143, 144, 147, 152, 153], "whatev": [101, 152, 153], "when": [3, 8, 14, 15, 21, 22, 23, 30, 31, 32, 33, 35, 40, 45, 53, 59, 61, 64, 69, 71, 76, 77, 78, 79, 92, 98, 100, 101, 105, 111, 112, 113, 120, 121, 122, 123, 125, 128, 129, 130, 131, 132, 135, 136, 137, 138, 139, 140, 144, 145, 147, 150, 151, 152, 153], "whenev": [125, 131, 132], "where": [2, 4, 45, 56, 61, 68, 71, 74, 83, 93, 101, 105, 110, 120, 123, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 144, 146, 152, 153, 154], "wherea": 139, "wherebi": [56, 123], "whether": [0, 1, 14, 21, 22, 33, 37, 41, 56, 57, 59, 61, 69, 106, 121, 123, 125, 133, 138, 139], "which": [0, 1, 2, 4, 11, 13, 14, 16, 21, 22, 23, 25, 30, 33, 35, 36, 37, 39, 45, 56, 61, 66, 67, 68, 69, 70, 77, 78, 89, 93, 101, 105, 112, 113, 116, 120, 121, 123, 125, 126, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 143, 144, 145, 152, 153, 155], "while": [14, 37, 61, 64, 71, 76, 92, 98, 99, 101, 113, 120, 125, 126, 127, 131, 132, 134, 138, 139, 152, 153], "white": 93, "who": [16, 18, 20, 41, 123, 128, 138], "whole": [31, 45, 89, 101, 112, 123, 126, 133, 136, 143, 145, 152, 153], "whom": 131, "why": [45, 105, 111, 120, 121, 126, 147, 155], "wide": [113, 123, 127, 136, 138, 143, 144, 155], "width": 130, "wiki": [21, 22, 23, 136, 137, 138], "wikidata": 135, "wikipedia": [21, 22, 135, 136, 137, 138, 155], "wild": 131, "win": 147, "wind": [120, 138], "window": [2, 4, 14, 93, 138, 139], "wip": 98, "wise": 151, "witchcraft": 155, "with_action_typ": 45, "within": [30, 31, 61, 77, 78, 98, 101, 106, 111, 112, 114, 116, 126, 138, 152, 153], "without": [21, 25, 30, 32, 36, 37, 45, 105, 111, 120, 125, 128, 129, 132, 135, 136, 138, 140, 143, 144, 155], "won": [45, 98, 100, 123, 128, 139], "wontfix": 98, "wood": 155, "word": [2, 4, 21, 22, 43, 56, 61, 69, 71, 76, 88, 101, 111, 120, 122, 123, 128, 131, 136, 138, 152, 153], "work": [2, 4, 14, 23, 31, 33, 36, 37, 61, 68, 78, 89, 100, 101, 106, 111, 112, 116, 119, 120, 122, 123, 125, 126, 130, 132, 133, 135, 136, 138, 144, 147, 152, 153, 155], "worker": [61, 77, 78, 79, 119, 144], "workflow": [97, 100, 126, 137], "workshop": 123, "world": [2, 4, 21, 22, 33, 45, 83, 105, 106, 111, 120, 123, 126, 127, 128, 130, 133, 139, 140], "world2": 33, "world3": 33, "world4": 33, "worldcup": 123, "wors": [61, 64, 71, 76, 130], "worth": [101, 152, 153], "worthi": 136, "would": [93, 101, 116, 122, 123, 130, 135, 136, 137, 138, 143, 152, 153, 154], "wrap": [2, 3, 31, 36, 37, 43, 61, 67, 71, 73, 75, 112, 119, 131, 140], "wrapper": [8, 9, 11, 12, 13, 14, 15, 83, 140], "write": [16, 37, 90, 97, 98, 105, 116, 120, 123, 131, 135, 140, 155], "write_list_to_jsonl": 90, "written": [90, 101, 152, 153, 155], "wrong": 123, "wu": 136, "www": [21, 22, 129, 138], "x": [21, 22, 31, 33, 37, 61, 70, 77, 78, 100, 111, 112, 116, 131, 132, 135, 136, 138, 140, 155], "x_i": 132, "xb": 23, "xiaobao": 136, "xiaodong": 136, "xinbei": 136, "xingxuan": 136, "xq": 23, "xu": [123, 136], "xuan": 136, "xx": 140, "xx_note": 98, "y": [37, 53, 59, 61, 71, 73, 75, 77, 78, 100, 101, 110, 111, 123, 136, 140, 144, 152, 153, 155], "y_gt": [53, 59, 61, 71, 75, 77, 78, 101, 110, 144, 152, 153, 155], "y_hat": [61, 71, 73], "y_label": [101, 144, 152, 153, 155], "y_obj": 110, "y_pred": [61, 71, 75, 77, 78, 101, 110, 132, 134, 144, 152, 153, 155], "y_pred_t": 132, "y_t": 136, "yam": 132, "yaml": [18, 19, 20, 30, 37, 42, 44, 45, 98, 113, 116, 133, 140, 144, 145, 147], "yaml_definit": [44, 140], "yaml_dict_str": 133, "yaml_format_instruct": [18, 20], "yaml_list_str": 133, "yaml_nested_dict_str": 133, "yaml_obj": 42, "yaml_output_format": [18, 20], "yaml_output_format_prompt": 133, "yaml_output_format_templ": [18, 20], "yaml_output_pars": 133, "yaml_pars": [18, 20, 42], "yaml_signatur": 113, "yaml_str": [18, 20, 30, 37, 42, 113], "yamloutputpars": [18, 19, 20, 113], "yamlpars": [18, 20, 42], "yang": [123, 136], "ye": [57, 59, 105, 123, 133, 136, 138, 155], "year": [58, 59, 123, 136], "yellow": 93, "yer": 16, "yet": [16, 38, 101, 152, 153], "yield": [21, 22, 31, 89], "yime": 136, "yin": 99, "yizhong": 136, "yml": [37, 133], "you": [1, 2, 3, 4, 8, 9, 11, 13, 14, 16, 18, 19, 20, 21, 22, 23, 25, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 47, 52, 56, 57, 58, 59, 61, 70, 71, 75, 76, 77, 78, 79, 83, 88, 89, 92, 93, 97, 98, 99, 100, 101, 104, 105, 106, 111, 112, 113, 116, 119, 120, 121, 122, 123, 125, 126, 128, 129, 130, 131, 132, 133, 135, 136, 138, 139, 140, 143, 144, 145, 147, 152, 153, 155], "your": [4, 9, 12, 14, 15, 18, 20, 21, 22, 30, 31, 38, 41, 45, 56, 57, 59, 61, 66, 77, 79, 88, 93, 97, 99, 100, 101, 104, 105, 106, 111, 113, 116, 119, 120, 121, 122, 123, 125, 126, 127, 129, 130, 131, 132, 133, 136, 138, 139, 140, 143, 144, 145, 147, 152, 153], "your_api_kei": [9, 88], "your_api_key_if_you_use_anthrop": [97, 104], "your_api_key_if_you_use_coher": [97, 104], "your_api_key_if_you_use_googl": [97, 104], "your_api_key_if_you_use_groq": [97, 104], "your_api_key_if_you_use_hf": [97, 104], "your_api_key_if_you_use_openai": [97, 104], "your_branch_nam": 98, "your_endpoint": 9, "your_forked_repository_url": 98, "your_modul": 9, "your_vers": 9, "youradalcomponentnam": [61, 77, 79], "yourself": [88, 104, 131, 138], "yu": 136, "yune": 136, "yupeng": 123, "z": [100, 136], "zephyr": 16, "zeqiu": 136, "zer": 132, "zero": [21, 22, 101, 132, 136, 138, 143, 144, 152, 153], "zero_grad": [61, 68, 71, 76], "zhao": 136, "zhengbao": 136, "zhiqingsun": 136, "zhu": 123, "zip": [92, 131, 144], "zishan": 123, "zora": 136}, "titles": ["agent", "react", "data_process", "data_components", "text_splitter", "memory", "memory", "model_client", "anthropic_client", "azureai_client", "bedrock_client", "cohere_client", "google_client", "groq_client", "ollama_client", "openai_client", "transformers_client", "utils", "output_parsers", "dataclass_parser", "outputs", "retriever", "bm25_retriever", "faiss_retriever", "lancedb_retriver", "llm_retriever", "postgres_retriever", "qdrant_retriever", "reranker_retriever", "Components", "base_data_class", "component", "container", "db", "default_prompt_template", "embedder", "func_tool", "functional", "generator", "model_client", "prompt_builder", "retriever", "string_parser", "tokenizer", "tool_manager", "types", "Core", "big_bench_hard", "hotpot_qa", "trec", "types", "utils", "Datasets", "answer_match_acc", "base", "functional", "g_eval", "llm_as_judge", "retriever_recall", "Evaluation", "API Reference", "Optimization", "&lt;no title&gt;", "few_shot", "bootstrap_optimizer", "function", "grad_component", "loss_component", "optimizer", "parameter", "sampler", "text_grad", "backend_engine_prompt", "llm_text_loss", "ops", "text_loss_with_eval_fn", "tgd_optimizer", "trainer", "adal", "trainer", "types", "Tracing", "callback_manager", "decorators", "generator_call_logger", "generator_state_logger", "Utils", "cache", "config", "data", "file_io", "global_config", "lazy_import", "logger", "registry", "serialization", "setup_env", "Development Essentials", "Contributing Process", "Contributor Guide", "Release Version Control Guide", "Learn AdalFlow in 15 minutes", "Community", "Get Started", "Installation", "Introduction", "Unites Research and Production", "&lt;no title&gt;", "Resources", "Resources", "AdalComponent", "Agent", "Auto Text-Grad", "DataClass", "AdalFlow JSON Viewer", "Class Hierarchy", "Component", "Configurations", "Data Pipeline", "Datasets", "Data (Database/Pipeline)", "Embedder", "Embedder", "LLM Evaluation", "Few-shot Optimizer", "Generator", "Tutorials", "Design Philosophy", "Introduction", "Logger Example", "Tracing", "ModelClient", "Optimizer", "Parser", "Parameter", "Prompt", "RAG Playbook", "ReAct Agent", "Retriever", "Text Splitter", "Function calls", "AdalFlow Trace Graph", "Trainer", "Designing RAG", "Classification Optimization", "Evaluating RAG", "Use Cases", "Introduction to BaseDataClass", "&lt;no title&gt;", "Q&amp;A Computation Graph", "Q&amp;A Few Shot Demo Trace Graph", "Q&amp;A Text Grad Trace Graph", "Question Answering", "Question Answer with LLM as Judge", "RAG End to end optimization", "RAG optimization"], "titleterms": {"": 137, "1": [98, 104, 127, 140], "15": 101, "2": [98, 104, 127, 140], "3": [98, 101, 104, 127, 140, 144, 152, 153], "4": [98, 104], "4o": [101, 152, 153], "5": [98, 101, 144, 152, 153], "7": 98, "A": [149, 150, 151], "As": 112, "For": 123, "In": [111, 125], "On": [101, 152, 153], "One": [101, 152, 153], "To": 112, "With": [123, 138], "__output_fields__": 113, "about": 113, "across": 125, "action": [111, 113, 116, 121, 125, 133, 138, 140], "adal": 78, "adalcompon": [61, 101, 110, 112, 144, 152, 153], "adalflow": [101, 104, 114, 123, 141, 144], "adapt": 112, "add": 98, "addit": [120, 131], "agent": [0, 29, 111, 126, 137], "align": 123, "all": [112, 126], "an": [98, 125, 137], "ani": 112, "answer": [152, 153], "answer_match_acc": 53, "anthropic_cli": 8, "api": [60, 104, 111, 113, 116, 120, 121, 123, 125, 129, 131, 133, 135, 138, 140, 144, 155], "applat": 128, "applic": [105, 135], "assign": 98, "async": 131, "asynchron": 131, "auto": [112, 134], "awar": 139, "azureai_cli": 9, "backend_engine_prompt": 72, "base": [54, 61, 123, 126, 138, 139], "base_data_class": 30, "basedataclass": 147, "batchembedd": 121, "bedrock_cli": 10, "benchmark": [98, 101, 123, 131, 144, 152, 153], "big_bench_hard": 47, "bm25_retriev": 22, "bm25retriev": 138, "booleanpars": 133, "boostrap": 132, "bootstrap": [101, 152, 153], "bootstrap_optim": 64, "build": [101, 126, 127, 131, 152, 153], "cach": 87, "call": 140, "callback_manag": 82, "capabl": 123, "case": [132, 146], "chat": [128, 131], "chunk": 139, "class": [61, 113, 115, 126, 135, 138], "classici": 123, "classif": 144, "client": 131, "cloud": 120, "code": [97, 112], "codebas": 98, "cohere_cli": 11, "common": 100, "commun": 102, "comparison": [101, 152, 153], "complet": 128, "complex": 127, "compon": [29, 31, 60, 116, 126], "comput": 149, "config": [88, 125], "configur": [116, 117], "contain": 32, "content": 139, "context": 133, "contribut": 98, "contributor": [99, 123], "control": 100, "copilot": 97, "core": [46, 60], "creat": [98, 125], "custom": [111, 131, 139], "data": [29, 61, 89, 111, 113, 118, 120, 126, 128, 135, 136, 138], "data_compon": 3, "data_process": 2, "databas": [98, 120, 138], "dataclass": [113, 133], "dataclass_pars": 19, "dataclasspars": 133, "dataset": [52, 60, 101, 113, 119, 123, 152, 153, 155], "db": 33, "debug": [101, 152, 153], "decor": 83, "deep": 137, "default": 135, "default_prompt_templ": 34, "defin": 144, "definit": 139, "demo": [134, 150], "depend": 97, "descent": [101, 152, 153], "describ": 113, "deseri": 116, "design": [111, 113, 116, 125, 127, 129, 133, 135, 136, 138, 140, 143], "detail": 139, "develop": 97, "diagnos": [101, 152, 153, 155], "dialogturn": 120, "diff": 134, "directli": 131, "dive": 137, "do": 128, "document": [97, 120, 136, 138, 139], "doe": 139, "dspy": 144, "embed": [123, 131], "embedd": [35, 121, 122, 131], "embedderoutput": 121, "end": [105, 140, 154], "environ": 104, "error": 125, "essenti": [97, 126], "eval": 123, "evalfunct": 112, "evalu": [59, 60, 101, 123, 126, 145, 152, 153], "exampl": [98, 113, 125, 129, 131, 139], "exist": 98, "experi": 138, "faiss_retriev": 23, "faissretriev": 138, "featur": 139, "few": [61, 101, 124, 132, 150, 152, 153], "few_shot": 63, "file": [116, 120], "file_io": 90, "filter": 138, "first": 143, "fix": 139, "floatpars": 133, "flow": [128, 135], "format": [113, 140], "foundat": 105, "from": [113, 116, 125], "func_tool": 36, "funcompon": 116, "function": [37, 55, 65, 140], "functionexpress": 140, "functiontool": 140, "g_eval": [56, 123], "gener": [38, 112, 125, 134, 136], "generator_call_logg": 84, "generator_state_logg": 85, "generatoroutput": 125, "get": [103, 125], "global_config": 91, "goal": 138, "google_cli": 12, "gpt": [101, 144, 152, 153], "grad": [112, 151], "grad_compon": 66, "gradient": [61, 101, 112, 152, 153], "graph": [141, 149, 150, 151], "groq": 131, "groq_client": 13, "gt": 123, "gt_context": 123, "guid": [99, 100], "hierarchi": 115, "high": [101, 152, 153], "hood": 152, "hotpot_qa": 48, "hotpotqa": 155, "how": [98, 105, 132, 139], "i": [105, 137], "implement": [132, 137], "import": 100, "infer": 131, "instal": 104, "instanc": 113, "instead": [128, 138], "integr": [98, 139], "intermedi": 134, "intpars": 133, "introduct": [105, 126, 128, 137, 147], "issu": 98, "jinja2": 135, "json": 114, "jsonoutputpars": 133, "jsonpars": 133, "judg": [123, 153], "kei": 104, "label": 98, "lancedb_retriv": 24, "lancedbretriev": 138, "lazy_import": 92, "learn": 101, "librari": [123, 125], "lightrag": [105, 128, 137], "listpars": 133, "llm": [113, 123, 127, 128, 131, 135, 138, 153], "llm_as_judg": 57, "llm_retriev": 25, "llm_text_loss": 73, "load": [104, 113], "local": [120, 121], "localdb": 138, "log": [126, 129], "logger": [93, 129], "loss": 112, "loss_compon": 67, "low": [101, 152, 153], "manual": [101, 152, 153], "memori": [5, 6, 29], "method": [101, 152, 153], "metric": 123, "minimum": 125, "minut": 101, "mode": [101, 152, 153], "model": [111, 120, 121, 123, 131], "model_cli": [7, 39, 98, 125], "modelcli": [29, 131], "multichat": 131, "need": [128, 137], "neg": 132, "new": [98, 100], "nlg": 123, "note": 100, "notebook": 98, "ollama_cli": 14, "op": 74, "openai": [121, 131], "openai_cli": 15, "oper": 112, "optim": [60, 61, 68, 101, 112, 124, 126, 127, 132, 136, 144, 146, 152, 153, 154, 155], "option": [104, 152], "orchestr": 125, "organ": 112, "other": [123, 139], "our": 127, "output": [20, 29, 121, 133, 140, 144], "output_pars": 18, "output_processor": 125, "over": 127, "overview": [46, 52, 59, 61, 81, 86, 98, 100, 101, 136, 139, 152, 153], "packag": 104, "paper": 143, "parallel": 140, "paramet": [69, 134], "pars": 113, "parser": [29, 133], "part": [98, 105], "perform": [101, 144, 152, 153], "philosophi": 127, "pipelin": [101, 112, 118, 120, 126, 136, 144, 152, 153], "playbook": [136, 143], "postgres_retriev": 26, "postgresretriev": 138, "pr": 98, "predict": 134, "prepar": [98, 101, 136, 152, 153, 155], "previou": 128, "principl": 127, "print": 116, "prioriti": 98, "problem": 100, "process": [29, 98, 131], "processor": 121, "product": 106, "project": 129, "prompt": [101, 111, 135, 152, 153], "prompt_build": 40, "protocol": 131, "pull": 98, "put": [112, 126], "q": [149, 150, 151], "qdrant": 138, "qdrant_retriev": 27, "qualiti": 127, "quantiti": 127, "question": [152, 153], "quick": [98, 140], "rag": [123, 126, 136, 143, 145, 154, 155], "raga": 123, "react": [1, 111, 137], "read": 120, "realm": 136, "reason": 29, "recal": 123, "refer": [60, 111, 113, 116, 120, 121, 123, 125, 129, 131, 133, 135, 136, 138, 140, 143, 144, 145, 152, 153, 155], "registri": 94, "releas": 100, "repo": 98, "request": 98, "rerank": [136, 138], "reranker_retriev": 28, "research": 106, "resourc": [108, 109, 120, 128], "retriev": [21, 29, 41, 98, 112, 123, 136, 138, 155], "retriever_recal": 58, "review": 98, "same": [101, 152, 153], "sampl": 132, "sampler": 70, "scope": [133, 138, 140], "score": [101, 138, 152, 153], "sdk": 131, "self": 136, "sequenti": 116, "serial": [95, 116], "set": [97, 101, 104, 152, 153], "setup": [101, 152, 153], "setup_env": 96, "shot": [61, 101, 124, 132, 150, 152, 153], "show": 113, "simplic": 127, "size": 139, "split": [101, 139, 152, 153], "splitter": 139, "start": [98, 101, 103, 105, 152, 153], "step": [98, 100], "storag": 126, "strategi": [132, 139, 144], "string": [113, 123], "string_pars": 42, "structur": [61, 97, 98, 105, 116, 128, 144], "submodul": [0, 2, 5, 7, 18, 21, 63, 71, 77], "switch": 125, "sync": 131, "system": 98, "task": [101, 112, 123, 144, 152, 153], "teacher": [101, 134, 152, 153], "templat": [125, 135], "test": [97, 101, 132, 152, 153], "text": [101, 112, 128, 139, 151, 152, 153], "text_grad": 71, "text_loss_with_eval_fn": 75, "text_splitt": 4, "textsplitt": 139, "textual": [61, 112], "tgd_optim": 76, "threshold": 138, "tip": [97, 139], "togeth": [112, 126, 138], "token": [43, 139], "tool": 111, "tool_manag": 44, "toolmanag": 140, "top_k": 138, "trace": [60, 81, 125, 126, 130, 132, 141, 150, 151], "train": [101, 123, 125, 126, 132, 144, 152, 153, 155], "trainabl": 155, "trainer": [61, 77, 79, 101, 112, 142, 144, 152, 153], "transformers_cli": 16, "trec": 49, "turbo": [101, 144, 152, 153], "tutori": [98, 126], "type": [45, 50, 80, 138, 139], "under": 152, "understand": 127, "unit": 106, "up": [97, 104], "upcom": 139, "us": [101, 121, 125, 129, 131, 138, 139, 146, 152, 153], "usag": 131, "use_cas": 98, "util": [17, 51, 60, 86, 131], "v": [101, 131, 144, 152, 153], "variabl": 104, "version": 100, "viewer": 114, "walkthrough": 140, "we": [128, 132], "weigt": 132, "what": [97, 98, 105, 137], "why": [128, 135, 137], "without": 123, "word": 139, "work": [98, 113, 139], "workflow": 127, "yamloutputpars": 133, "yamlpars": 133, "you": 137, "your": 98}})