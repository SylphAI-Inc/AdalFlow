Search.setIndex({"alltitles": {"1. FunctionTool": [[145, "functiontool"]], "1. Install AdalFlow": [[107, "install-adalflow"]], "2. Set up API keys": [[107, "set-up-api-keys"]], "2. ToolManager": [[145, "toolmanager"]], "3. Function Call end-to-end": [[145, "function-call-end-to-end"]], "3. Load environment variables": [[107, "load-environment-variables"]], "4. Install Optional Packages": [[107, "install-optional-packages"]], "API Reference": [[62, null]], "API References": [[115, null], [117, null], [124, null], [133, null], [137, null], [139, null], [143, null], [145, null]], "API reference": [[120, null], [125, null], [129, null], [135, null], [149, null], [161, null]], "About __output_fields__": [[117, "about-output-fields"]], "AdalComponent": [[114, null]], "AdalComponent to organize code": [[116, "adalcomponent-to-organize-code"]], "AdalFlow Eval API Reference": [[127, null]], "AdalFlow JSON Viewer": [[118, null]], "AdalFlow Trace Graph": [[146, null]], "AdalFlow vs DsPy on GPT-3.5-turbo": [[149, "id3"]], "Add notebooks for existing/new tutorials/use_cases/benchmarks": [[101, "add-notebooks-for-existing-new-tutorials-use-cases-benchmarks"]], "Additional Resources": [[124, null]], "Agent": [[30, "agent"], [115, null]], "Agent Essentials": [[130, "agent-essentials"]], "Agent In Action": [[115, "agent-in-action"]], "An Orchestrator": [[129, "an-orchestrator"]], "Architecture": [[141, "architecture"]], "Auto Text-Grad": [[116, null]], "BM25Retriever": [[143, "bm25retriever"]], "Base Classes and Data Structures": [[63, "base-classes-and-data-structures"]], "Base classes": [[130, "base-classes"]], "Basic Generator Tutorial": [[129, "basic-generator-tutorial"]], "Basic Usage": [[129, "basic-usage"]], "BatchEmbedder": [[125, "batchembedder"]], "Benchmarking": [[104, "benchmarking"], [158, "benchmarking"], [159, "benchmarking"]], "Best Practices": [[129, "best-practices"]], "BooleanParser": [[137, "booleanparser"]], "Build the task pipeline": [[104, "build-the-task-pipeline"], [158, "build-the-task-pipeline"], [159, "build-the-task-pipeline"]], "Building": [[130, "building"]], "Building Custom Model client": [[135, "building-custom-model-client"]], "Chunking Example Detailed": [[144, "id2"]], "Chunking Strategies": [[144, "chunking-strategies"]], "Chunking Tips": [[144, "chunking-tips"]], "Class Hierarchy": [[119, null]], "Classes": [[130, "classes"]], "Classicial String Metrics": [[127, "classicial-string-metrics"]], "Classification Optimization": [[149, null]], "Cloud database": [[124, "cloud-database"]], "Code Tips": [[100, "code-tips"]], "Coding": [[100, "coding"]], "Common Patterns": [[129, "common-patterns"]], "Common Problems": [[103, "common-problems"]], "Community": [[105, null]], "Component": [[120, null]], "Component in Action": [[120, "component-in-action"]], "Components": [[30, null], [62, "components"]], "Computation graph": [[147, "computation-graph"]], "Configurations": [[121, null]], "Configure from file": [[120, "configure-from-file"]], "Content-Aware Chunking": [[144, "content-aware-chunking"]], "Context": [[137, "context"]], "Contributing Process": [[101, null]], "Contributor Guide": [[102, null], [102, null]], "Copilot": [[100, "copilot"]], "Core": [[47, null], [62, "core"]], "Create from Configs": [[129, "create-from-configs"]], "Credits:": [[33, "credits"]], "Customization": [[115, "customization"]], "Customization Tips": [[144, "customization-tips"]], "Data (Database/Pipeline)": [[124, null]], "Data Flow & LightRAG structure": [[132, "data-flow-lightrag-structure"]], "Data Flow in LLM applications": [[139, "data-flow-in-llm-applications"]], "Data Models": [[124, "data-models"]], "Data Pipeline": [[122, null], [124, "data-pipeline"], [141, "data-pipeline"]], "Data Pipeline and Storage": [[130, "data-pipeline-and-storage"]], "Data Preparation Pipeline": [[140, "data-preparation-pipeline"]], "Data Process": [[30, "data-process"]], "DataClass": [[117, null]], "DataClass Parser": [[137, "dataclass-parser"]], "DataClass in Action": [[117, "dataclass-in-action"]], "DataclassParser in Action": [[137, "dataclassparser-in-action"]], "Datasets": [[53, null], [62, "datasets"], [104, "datasets"], [123, null], [158, "datasets"], [159, "datasets"]], "Datasets and Benchmarks": [[127, "datasets-and-benchmarks"]], "Default Prompt Template": [[139, "default-prompt-template"]], "Define the AdalComponent": [[149, "define-the-adalcomponent"]], "Definitions": [[144, "definitions"]], "Demo Parameter": [[138, "demo-parameter"]], "Dependencies": [[100, "dependencies"]], "Describe the data format to LLMs": [[117, "describe-the-data-format-to-llms"]], "Describing the Data Format (Data Class)": [[117, "describing-the-data-format-data-class"]], "Design": [[115, "design"], [117, "design"], [120, "design"], [129, "design"], [133, "design"], [139, "design"], [143, "design"]], "Design Motivation:": [[33, "design-motivation"]], "Design Philosophy": [[131, null]], "Designing RAG": [[140, "designing-rag"], [148, null]], "Development Essentials": [[100, null]], "Diagnose": [[161, "diagnose"]], "Diagnose the task pipeline": [[104, "diagnose-the-task-pipeline"], [158, "diagnose-the-task-pipeline"], [159, "diagnose-the-task-pipeline"]], "DialogTurn": [[124, "dialogturn"]], "Document": [[124, "document"]], "Document Retrieval & Reranking": [[140, "document-retrieval-reranking"]], "Documentation": [[100, "documentation"]], "Documents filtering": [[143, "documents-filtering"]], "Embedder": [[125, null], [126, null]], "Embedder in Action": [[125, "embedder-in-action"]], "EmbedderOutput": [[125, "embedderoutput"]], "Embedding and Reranking Models": [[111, "embedding-and-reranking-models"]], "Embedding-based Metrics": [[127, "embedding-based-metrics"]], "Embeddings, Reranking, and Vector Databases": [[111, "id2"]], "End-to-end applications": [[108, "end-to-end-applications"]], "EvalFunction + Score(s)": [[147, "evalfunction-score-s"]], "EvalFunction As Loss": [[116, "evalfunction-as-loss"]], "Evaluate the task pipeline": [[104, "evaluate-the-task-pipeline"], [158, "evaluate-the-task-pipeline"], [159, "evaluate-the-task-pipeline"]], "Evaluating RAG": [[150, null]], "Evaluation": [[61, null], [62, "evaluation"], [130, "evaluation"]], "Evaluation Metrics": [[127, "evaluation-metrics"]], "Example Usage": [[141, "example-usage"]], "Examples Across the Library": [[129, "examples-across-the-library"]], "Experiment data": [[143, "experiment-data"]], "FAISSRetriever": [[143, "faissretriever"]], "Few Shot Optimizer": [[63, "few-shot-optimizer"]], "Few-shot Optimizer": [[128, null]], "File Reading": [[124, "file-reading"]], "First RAG Paper": [[148, "first-rag-paper"]], "Fixed-Size Chunking": [[144, "fixed-size-chunking"]], "FloatParser": [[137, "floatparser"]], "For Contributors": [[127, "for-contributors"]], "Foundation": [[108, "foundation"]], "FuncComponent": [[120, "funccomponent"]], "Function Call in Action": [[145, "function-call-in-action"]], "Function Output Format": [[145, "function-output-format"]], "Function calls": [[145, null]], "FunctionExpression Output Format": [[145, "functionexpression-output-format"]], "G_Eval": [[127, "g-eval"]], "Generator": [[129, null]], "Generator Adaptation": [[116, "generator-adaptation"]], "Generator In Action": [[129, "generator-in-action"]], "Generator Prediction parameters": [[138, "generator-prediction-parameters"]], "Generator optimization": [[140, "generator-optimization"]], "GeneratorOutput": [[129, "generatoroutput"]], "Get Errors in GeneratorOutput": [[129, "get-errors-in-generatoroutput"]], "Get Started": [[106, null], [106, null]], "Groq LLM Chat - Multichat Usage": [[135, "groq-llm-chat-multichat-usage"]], "Groq LLM Chat - Multichat Usage - Asynchronous": [[135, "groq-llm-chat-multichat-usage-asynchronous"]], "Groq LLM Chat - Multichat Usage - Benchmark sync() vs async()": [[135, "groq-llm-chat-multichat-usage-benchmark-sync-vs-async"]], "HotPotQA dataset": [[161, "hotpotqa-dataset"]], "How does it work": [[144, "how-does-it-work"]], "How to assign priority": [[101, "how-to-assign-priority"]], "How to create an issue": [[101, "how-to-create-an-issue"]], "How to start?": [[108, "how-to-start"]], "How to use it": [[144, "how-to-use-it"]], "How we implemented the boostrap few-shot training": [[136, "how-we-implemented-the-boostrap-few-shot-training"]], "Image Generation": [[129, "image-generation"]], "Implementation": [[136, "implementation"]], "Implementation Details": [[141, "implementation-details"]], "Important Notes": [[103, "important-notes"]], "Installation": [[107, null]], "IntParser": [[137, "intparser"]], "Integrate a  model_client": [[101, "integrate-a-model-client"]], "Integrate a database retriever": [[101, "integrate-a-database-retriever"]], "Integration with Other Document Types": [[144, "integration-with-other-document-types"]], "Integrations": [[110, null], [110, null], [111, null]], "Intermediate parameters": [[138, "intermediate-parameters"]], "Introduction": [[108, null], [130, "introduction"], [132, null], [142, "introduction"]], "Introduction to BaseDataClass": [[152, null]], "Introduction to LLM applations": [[132, "introduction-to-llm-applations"]], "Issue & Label System": [[101, "issue-label-system"]], "JsonOutputParser": [[137, "jsonoutputparser"]], "JsonParser": [[137, "jsonparser"]], "LLM + VLLM": [[111, "id1"]], "LLM Evaluation": [[127, null]], "LLM as Judge": [[127, "llm-as-judge"]], "LLM as Retriever": [[143, "llm-as-retriever"]], "LLM or model based judge for Retriever Recall": [[127, "llm-or-model-based-judge-for-retriever-recall"]], "Label overview": [[101, "id5"]], "LanceDBRetriever": [[143, "lancedbretriever"]], "Learn AdalFlow in 15 minutes": [[104, null]], "LightRAG": [[108, "lightrag"]], "LightRAG\u2019s Implementation": [[142, "lightrag-s-implementation"]], "ListParser": [[137, "listparser"]], "Load data from dataset as example": [[117, "load-data-from-dataset-as-example"]], "Local database": [[124, "local-database"]], "Logger Example": [[133, null]], "Logging": [[133, "logging"]], "Logging & Tracing": [[130, "logging-tracing"]], "Manual Prompt vs Optimized Prompt": [[104, "id4"], [158, "id9"], [159, "id7"]], "Manual Prompt vs Optimized Prompt (gpt-3.5-turbo)": [[104, "id2"], [158, "id7"], [159, "id5"]], "Memory": [[30, "memory"]], "Memory Management": [[141, "memory-management"]], "Minimum Example": [[129, "minimum-example"]], "Model Inference SDKs": [[135, "model-inference-sdks"]], "Model Providers": [[111, "model-providers"]], "Model Types": [[129, "model-types"]], "ModelClient": [[30, "modelclient"], [135, null]], "ModelClient Protocol": [[135, "modelclient-protocol"]], "Multi-hop RAG Optimization": [[154, null]], "NLG Evaluation": [[127, "nlg-evaluation"]], "OPENAI EMBEDDER - Embedding Processing Example": [[135, "openai-embedder-embedding-processing-example"]], "OPENAI LLM Chat - Additional Utils": [[135, "openai-llm-chat-additional-utils"]], "OPENAI LLM Chat - Multichat Usage": [[135, "openai-llm-chat-multichat-usage"]], "OPENAI LLM Chat - Multichat Usage - Asynchronous": [[135, "openai-llm-chat-multichat-usage-asynchronous"]], "OPENAI LLM Chat - Multichat Usage - Benchmark sync() vs async()": [[135, "openai-llm-chat-multichat-usage-benchmark-sync-vs-async"]], "Observability": [[147, "observability"]], "Optimization": [[62, "optimization"], [63, null], [130, "optimization"], [151, "optimization"]], "Optimized Scores comparison on the same prompt on test set (gpt-3.5-turbo)": [[104, "id5"], [104, "id9"], [158, "id10"], [158, "id15"], [159, "id8"], [159, "id12"]], "Optimizer": [[136, null]], "Optimizing strategy": [[136, "optimizing-strategy"]], "Optional[Under the hood]": [[158, "optional-under-the-hood"]], "Other Evaluation Metrics libraries": [[127, null]], "Our understanding of LLM workflow": [[131, "our-understanding-of-llm-workflow"]], "Output Parsers": [[30, "output-parsers"], [137, "output-parsers"]], "Output Parsers in Action": [[137, "output-parsers-in-action"]], "Overview": [[47, "overview"], [53, "overview"], [61, "overview"], [63, "module-optim"], [84, "overview"], [89, "overview"], [103, "overview"], [104, "overview"], [141, "overview"], [158, "overview"], [159, "overview"]], "Parallel Function Calls": [[145, "parallel-function-calls"]], "Parameter": [[138, null]], "Parser": [[137, null], [137, "id1"]], "Parser in Action": [[137, "parser-in-action"]], "Part 1: Structuring": [[101, "part-1-structuring"]], "Part 2: What to contribute": [[101, "part-2-what-to-contribute"]], "Part 3: Contributing Steps": [[101, "part-3-contributing-steps"]], "Part 4: Pull Request Process": [[101, "part-4-pull-request-process"]], "Part 5: Review Process": [[101, "part-5-review-process"]], "Performance & Benchmark": [[149, "performance-benchmark"]], "PostgresRetriever": [[143, "postgresretriever"]], "Prepare AdalComponent for training": [[104, "prepare-adalcomponent-for-training"], [158, "prepare-adalcomponent-for-training"], [159, "prepare-adalcomponent-for-training"]], "Prepare for Training": [[161, "prepare-for-training"]], "Prepare the codebase": [[101, "prepare-the-codebase"]], "Principle 1:  Simplicity over Complexity": [[131, "principle-1-simplicity-over-complexity"]], "Principle 2: Quality over Quantity": [[131, "principle-2-quality-over-quantity"]], "Principle 3: Optimizing over Building": [[131, "principle-3-optimizing-over-building"]], "Print the structure": [[120, "print-the-structure"]], "Prompt": [[139, null]], "Prompt and Data Models": [[115, "prompt-and-data-models"]], "Prompt class": [[139, "prompt-class"]], "Putting it all together": [[130, "putting-it-all-together"]], "Q&A Computation Graph": [[155, null]], "Q&A Few Shot Demo Trace Graph": [[156, null]], "Q&A Text Grad Trace Graph": [[157, null]], "Qdrant Retriever": [[143, "qdrant-retriever"]], "Question Answer with LLM as Judge": [[159, null]], "Question Answering": [[158, null]], "Quick Start": [[101, "quick-start"], [141, "quick-start"]], "Quick Walkthrough": [[145, "quick-walkthrough"]], "RAG End to end optimization": [[160, null]], "RAG Essentials": [[130, "rag-essentials"]], "RAG Evaluation": [[127, "rag-evaluation"]], "RAG Overview": [[140, "rag-overview"]], "RAG Playbook": [[140, null], [148, "rag-playbook"]], "RAG System": [[141, "rag-system"]], "RAG components": [[130, "rag-components"]], "RAG optimization": [[140, "rag-optimization"], [161, null]], "RAG pipeline optimization": [[140, "rag-pipeline-optimization"]], "RAG with Memory": [[141, null]], "RAGAS": [[127, "id31"]], "REALM": [[140, "realm"]], "ReAct Agent": [[142, null]], "ReAct Agent Deep Dive": [[142, "react-agent-deep-dive"]], "React Agent": [[115, "react-agent"]], "Reasoning": [[30, "reasoning"]], "References": [[115, null], [117, null], [125, null], [127, "references"], [133, null], [139, null], [140, "references"], [143, null], [145, null], [148, "references"], [150, null], [158, null], [159, null]], "Release Version Control Guide": [[103, null]], "Repo Structure": [[101, "repo-structure"]], "Reranker as Retriever": [[143, "reranker-as-retriever"]], "Resources": [[112, null], [113, null], [132, "resources"]], "Retrieval optimization": [[140, "retrieval-optimization"]], "Retriever": [[30, "retriever"], [143, null], [161, "retriever"]], "Retriever Adaptation": [[116, "retriever-adaptation"]], "Retriever Base Class": [[143, "retriever-base-class"]], "Retriever Data Types": [[143, "retriever-data-types"]], "Retriever in Action": [[143, "retriever-in-action"]], "Scope and Design": [[137, "scope-and-design"], [145, "scope-and-design"]], "Scope and Design Goals": [[143, "scope-and-design-goals"]], "Scores by Method and Split On High-performing Starting Prompt (gpt-3.5-turbo)": [[104, "id3"], [158, "id8"], [159, "id6"]], "Scores by Method and Split On Low-performing Starting Prompt (gpt-3.5-turbo)": [[104, "id1"], [158, "id6"], [159, "id4"]], "Scores by Split": [[104, "id6"], [158, "id11"], [159, "id9"]], "Scores by teacher mode (gpt-4o) on the same high-performing starting prompt": [[104, "id7"], [158, "id13"], [159, "id10"]], "Scores for One-shot Bootstrap": [[104, "id8"], [158, "id14"], [159, "id11"]], "Self-RAG": [[140, "self-rag"]], "Sequential": [[120, "sequential"]], "Serialization and deserialization": [[120, "serialization-and-deserialization"]], "Set Up": [[100, "set-up"]], "Show data examples & parse string to data instance": [[117, "show-data-examples-parse-string-to-data-instance"]], "Split by token": [[144, "split-by-token"]], "Split by word": [[144, "split-by-word"]], "Splitting Types": [[144, "splitting-types"]], "Steps to Release a New Version": [[103, "steps-to-release-a-new-version"]], "Structure": [[108, "structure"]], "Structuring": [[100, "structuring"]], "Submodules": [[0, "submodules"], [2, "submodules"], [5, "submodules"], [7, "submodules"], [19, "submodules"], [22, "submodules"], [65, "submodules"], [74, "submodules"], [80, "submodules"]], "Switch the model_client": [[129, "switch-the-model-client"]], "Task Pipeline with Structured Output": [[149, "task-pipeline-with-structured-output"]], "Tasks and Capabilities": [[127, "tasks-and-capabilities"]], "Testing": [[100, "testing"]], "Text Splitter": [[144, null]], "TextSplitter Overview": [[144, "textsplitter-overview"]], "Textual Gradient": [[63, "textual-gradient"]], "Textual Gradient Operators": [[116, "textual-gradient-operators"]], "Textual Gradient Optimizer": [[116, "textual-gradient-optimizer"]], "To optimize any task pipeline": [[116, "to-optimize-any-task-pipeline"]], "Token-Based Splitting": [[144, "token-based-splitting"]], "Tools": [[115, "tools"]], "Tracing": [[62, "tracing"], [84, null], [129, "tracing"], [134, null], [136, "tracing"]], "Train Setup": [[104, "train-setup"], [158, "train-setup"], [159, "train-setup"]], "Train in Debug mode": [[104, "train-in-debug-mode"], [158, "train-in-debug-mode"], [159, "train-in-debug-mode"]], "Train with Few-shot Bootstrap": [[104, "train-with-few-shot-bootstrap"], [158, "train-with-few-shot-bootstrap"], [159, "train-with-few-shot-bootstrap"]], "Train with Text-Gradient Descent": [[104, "train-with-text-gradient-descent"], [158, "train-with-text-gradient-descent"], [159, "train-with-text-gradient-descent"]], "Train/Align LLM Judge": [[127, "train-align-llm-judge"]], "Trainable RAG": [[161, "trainable-rag"]], "Trainer": [[147, null]], "Trainer and AdalComponent": [[63, "trainer-and-adalcomponent"]], "Trainer and Training Strategy": [[149, "trainer-and-training-strategy"]], "Trainer to put all together": [[116, "trainer-to-put-all-together"]], "Training": [[129, "training"], [130, "training"], [161, "training"]], "Tutorials": [[130, null]], "Understanding the Output": [[129, "understanding-the-output"]], "Unites Research and Production": [[109, null]], "Upcoming Splitting Features": [[144, "upcoming-splitting-features"]], "Usage Example:": [[33, "usage-example"]], "Use Cases": [[151, null]], "Use Local Model": [[125, "use-local-model"]], "Use Logger in Projects": [[133, "use-logger-in-projects"]], "Use ModelClient directly": [[135, "use-modelclient-directly"]], "Use OpenAI API": [[125, "use-openai-api"]], "Use Output Processors": [[125, "use-output-processors"]], "Use Score Threshold instead of top_k": [[143, "use-score-threshold-instead-of-top-k"]], "Use Template": [[129, "use-template"]], "Use output_processors": [[129, "use-output-processors"]], "Use the trainer": [[104, "use-the-trainer"], [158, "use-the-trainer"], [159, "use-the-trainer"]], "Use together with Database": [[143, "use-together-with-database"]], "Utils": [[62, "utils"], [89, null]], "Vector Databases": [[111, "vector-databases"]], "Weigted sampling [test negative case]": [[136, "weigted-sampling-test-negative-case"]], "What is LightRAG?": [[108, "what-is-lightrag"]], "What is a Generator?": [[129, "what-is-a-generator"]], "What is an agent and why you need it?": [[142, "what-is-an-agent-and-why-you-need-it"]], "What is not part of LightRAG?": [[108, "what-is-not-part-of-lightrag"]], "What to Contribute (by 7 Labels) and Example PRs": [[101, "id7"]], "What to code": [[100, "what-to-code"]], "When NOT to Subclass": [[129, "when-not-to-subclass"]], "When to Create a Subclass": [[129, "when-to-create-a-subclass"]], "Why Jinja2?": [[139, "why-jinja2"]], "Why do we need chat completion instead of the previous text completion?": [[132, "why-do-we-need-chat-completion-instead-of-the-previous-text-completion"]], "With Database": [[143, "with-database"]], "With GT for Retriever": [[127, "with-gt-for-retriever"]], "With LocalDB": [[143, "with-localdb"]], "Without gt_contexts": [[127, "without-gt-contexts"]], "Work on your PR": [[101, "work-on-your-pr"]], "Work with Data Instance": [[117, "work-with-data-instance"]], "YamlOutputParser": [[137, "yamloutputparser"]], "YamlParser": [[137, "yamlparser"]], "adal": [[81, null]], "agent": [[0, null]], "answer_match_acc": [[54, null]], "anthropic_client": [[8, null]], "auto-diff": [[138, "auto-diff"]], "azureai_client": [[9, null]], "backend_engine_prompt": [[75, null]], "base": [[55, null]], "base_data_class": [[31, null]], "bedrock_client": [[10, null]], "big_bench_hard": [[48, null]], "bm25_retriever": [[23, null]], "bootstrap_optimizer": [[66, null]], "cache": [[90, null]], "callback_manager": [[85, null]], "cohere_client": [[11, null]], "component": [[32, null]], "config": [[91, null]], "container": [[33, null]], "data": [[92, null]], "data_components": [[3, null]], "data_process": [[2, null]], "dataclass_parser": [[20, null]], "db": [[34, null]], "decorators": [[86, null]], "deepseek_client": [[12, null]], "default_prompt_template": [[35, null]], "embedder": [[36, null]], "faiss_retriever": [[24, null]], "few_shot": [[65, null]], "file_io": [[93, null]], "func_tool": [[37, null]], "function": [[67, null]], "functional": [[38, null], [56, null]], "g_eval": [[57, null]], "generator": [[39, null]], "generator_call_logger": [[87, null]], "generator_state_logger": [[88, null]], "global_config": [[94, null]], "google_client": [[13, null]], "grad_component": [[68, null]], "gradient": [[69, null]], "groq_client": [[14, null]], "hotpot_qa": [[49, null]], "lancedb_retriver": [[25, null]], "lazy_import": [[95, null]], "llm_as_judge": [[58, null]], "llm_retriever": [[26, null]], "llm_text_loss": [[76, null]], "logger": [[96, null]], "loss_component": [[70, null]], "memory": [[5, null], [6, null]], "model_client": [[7, null], [40, null]], "ollama_client": [[15, null]], "openai_client": [[16, null]], "ops": [[77, null]], "optimizer": [[71, null]], "output_parsers": [[19, null]], "outputs": [[21, null]], "parameter": [[72, null]], "postgres_retriever": [[27, null]], "prompt_builder": [[41, null]], "qdrant_retriever": [[28, null]], "react": [[1, null]], "registry": [[97, null]], "reranker_retriever": [[29, null]], "retriever": [[22, null], [42, null]], "retriever_recall": [[59, null]], "sampler": [[73, null]], "serialization": [[98, null]], "setup_env": [[99, null]], "string_parser": [[43, null]], "teacher": [[138, "teacher"]], "text_grad": [[74, null]], "text_loss_with_eval_fn": [[78, null]], "text_splitter": [[4, null]], "tgd_optimizer": [[79, null]], "tokenizer": [[44, null]], "tool_manager": [[45, null]], "trainer": [[80, null], [82, null]], "transformers_client": [[17, null]], "trec": [[50, null]], "types": [[46, null], [51, null], [83, null]], "utils": [[18, null], [52, null], [60, null]]}, "docnames": ["apis/components/components.agent", "apis/components/components.agent.react", "apis/components/components.data_process", "apis/components/components.data_process.data_components", "apis/components/components.data_process.text_splitter", "apis/components/components.memory", "apis/components/components.memory.memory", "apis/components/components.model_client", "apis/components/components.model_client.anthropic_client", "apis/components/components.model_client.azureai_client", "apis/components/components.model_client.bedrock_client", "apis/components/components.model_client.cohere_client", "apis/components/components.model_client.deepseek_client", "apis/components/components.model_client.google_client", "apis/components/components.model_client.groq_client", "apis/components/components.model_client.ollama_client", "apis/components/components.model_client.openai_client", "apis/components/components.model_client.transformers_client", "apis/components/components.model_client.utils", "apis/components/components.output_parsers", "apis/components/components.output_parsers.dataclass_parser", "apis/components/components.output_parsers.outputs", "apis/components/components.retriever", "apis/components/components.retriever.bm25_retriever", "apis/components/components.retriever.faiss_retriever", "apis/components/components.retriever.lancedb_retriver", "apis/components/components.retriever.llm_retriever", "apis/components/components.retriever.postgres_retriever", "apis/components/components.retriever.qdrant_retriever", "apis/components/components.retriever.reranker_retriever", "apis/components/index", "apis/core/core.base_data_class", "apis/core/core.component", "apis/core/core.container", "apis/core/core.db", "apis/core/core.default_prompt_template", "apis/core/core.embedder", "apis/core/core.func_tool", "apis/core/core.functional", "apis/core/core.generator", "apis/core/core.model_client", "apis/core/core.prompt_builder", "apis/core/core.retriever", "apis/core/core.string_parser", "apis/core/core.tokenizer", "apis/core/core.tool_manager", "apis/core/core.types", "apis/core/index", "apis/datasets/datasets.big_bench_hard", "apis/datasets/datasets.hotpot_qa", "apis/datasets/datasets.trec", "apis/datasets/datasets.types", "apis/datasets/datasets.utils", "apis/datasets/index", "apis/eval/eval.answer_match_acc", "apis/eval/eval.base", "apis/eval/eval.functional", "apis/eval/eval.g_eval", "apis/eval/eval.llm_as_judge", "apis/eval/eval.retriever_recall", "apis/eval/eval.utils", "apis/eval/index", "apis/index", "apis/optim/index", "apis/optim/optim._llm_optimizer", "apis/optim/optim.few_shot", "apis/optim/optim.few_shot.bootstrap_optimizer", "apis/optim/optim.function", "apis/optim/optim.grad_component", "apis/optim/optim.gradient", "apis/optim/optim.loss_component", "apis/optim/optim.optimizer", "apis/optim/optim.parameter", "apis/optim/optim.sampler", "apis/optim/optim.text_grad", "apis/optim/optim.text_grad.backend_engine_prompt", "apis/optim/optim.text_grad.llm_text_loss", "apis/optim/optim.text_grad.ops", "apis/optim/optim.text_grad.text_loss_with_eval_fn", "apis/optim/optim.text_grad.tgd_optimizer", "apis/optim/optim.trainer", "apis/optim/optim.trainer.adal", "apis/optim/optim.trainer.trainer", "apis/optim/optim.types", "apis/tracing/index", "apis/tracing/tracing.callback_manager", "apis/tracing/tracing.decorators", "apis/tracing/tracing.generator_call_logger", "apis/tracing/tracing.generator_state_logger", "apis/utils/index", "apis/utils/utils.cache", "apis/utils/utils.config", "apis/utils/utils.data", "apis/utils/utils.file_io", "apis/utils/utils.global_config", "apis/utils/utils.lazy_import", "apis/utils/utils.logger", "apis/utils/utils.registry", "apis/utils/utils.serialization", "apis/utils/utils.setup_env", "contributor/contribute_to_code", "contributor/contribution", "contributor/index", "contributor/version_control", "get_started/adalflow_in_15mins", "get_started/community", "get_started/index", "get_started/installation", "get_started/introduction", "index", "integrations/index", "integrations/integrations", "resources/index", "resources/resources", "tutorials/adalcomponent", "tutorials/agent", "tutorials/auto_text_grad", "tutorials/base_data_class", "tutorials/ckpt_file", "tutorials/class_hierarchy", "tutorials/component", "tutorials/configs", "tutorials/data_pipeline", "tutorials/datasets", "tutorials/db", "tutorials/embedder", "tutorials/embedder_xy", "tutorials/evaluation", "tutorials/few_shot_optimizer", "tutorials/generator", "tutorials/index", "tutorials/lightrag_design_philosophy", "tutorials/llm_intro", "tutorials/logging", "tutorials/logging_tracing", "tutorials/model_client", "tutorials/optimizer", "tutorials/output_parsers", "tutorials/parameter", "tutorials/prompt", "tutorials/rag_playbook", "tutorials/rag_with_memory", "tutorials/react_agent_xy", "tutorials/retriever", "tutorials/text_splitter", "tutorials/tool_helper", "tutorials/trace_graph", "tutorials/trainer", "use_cases/build_a_rag", "use_cases/classification", "use_cases/eval_a_rag", "use_cases/index", "use_cases/introduction_to_basedataclass", "use_cases/logging", "use_cases/multi_hop_rag_opt", "use_cases/qa_computation_graph", "use_cases/qa_demo_trace_graph", "use_cases/qa_text_grad_trace_graph", "use_cases/question_answering", "use_cases/question_answering_word_sort", "use_cases/rag_end_to_end", "use_cases/rag_opt"], "envversion": {"nbsphinx": 4, "sphinx": 62, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1}, "filenames": ["apis/components/components.agent.rst", "apis/components/components.agent.react.rst", "apis/components/components.data_process.rst", "apis/components/components.data_process.data_components.rst", "apis/components/components.data_process.text_splitter.rst", "apis/components/components.memory.rst", "apis/components/components.memory.memory.rst", "apis/components/components.model_client.rst", "apis/components/components.model_client.anthropic_client.rst", "apis/components/components.model_client.azureai_client.rst", "apis/components/components.model_client.bedrock_client.rst", "apis/components/components.model_client.cohere_client.rst", "apis/components/components.model_client.deepseek_client.rst", "apis/components/components.model_client.google_client.rst", "apis/components/components.model_client.groq_client.rst", "apis/components/components.model_client.ollama_client.rst", "apis/components/components.model_client.openai_client.rst", "apis/components/components.model_client.transformers_client.rst", "apis/components/components.model_client.utils.rst", "apis/components/components.output_parsers.rst", "apis/components/components.output_parsers.dataclass_parser.rst", "apis/components/components.output_parsers.outputs.rst", "apis/components/components.retriever.rst", "apis/components/components.retriever.bm25_retriever.rst", "apis/components/components.retriever.faiss_retriever.rst", "apis/components/components.retriever.lancedb_retriver.rst", "apis/components/components.retriever.llm_retriever.rst", "apis/components/components.retriever.postgres_retriever.rst", "apis/components/components.retriever.qdrant_retriever.rst", "apis/components/components.retriever.reranker_retriever.rst", "apis/components/index.rst", "apis/core/core.base_data_class.rst", "apis/core/core.component.rst", "apis/core/core.container.rst", "apis/core/core.db.rst", "apis/core/core.default_prompt_template.rst", "apis/core/core.embedder.rst", "apis/core/core.func_tool.rst", "apis/core/core.functional.rst", "apis/core/core.generator.rst", "apis/core/core.model_client.rst", "apis/core/core.prompt_builder.rst", "apis/core/core.retriever.rst", "apis/core/core.string_parser.rst", "apis/core/core.tokenizer.rst", "apis/core/core.tool_manager.rst", "apis/core/core.types.rst", "apis/core/index.rst", "apis/datasets/datasets.big_bench_hard.rst", "apis/datasets/datasets.hotpot_qa.rst", "apis/datasets/datasets.trec.rst", "apis/datasets/datasets.types.rst", "apis/datasets/datasets.utils.rst", "apis/datasets/index.rst", "apis/eval/eval.answer_match_acc.rst", "apis/eval/eval.base.rst", "apis/eval/eval.functional.rst", "apis/eval/eval.g_eval.rst", "apis/eval/eval.llm_as_judge.rst", "apis/eval/eval.retriever_recall.rst", "apis/eval/eval.utils.rst", "apis/eval/index.rst", "apis/index.rst", "apis/optim/index.rst", "apis/optim/optim._llm_optimizer.rst", "apis/optim/optim.few_shot.rst", "apis/optim/optim.few_shot.bootstrap_optimizer.rst", "apis/optim/optim.function.rst", "apis/optim/optim.grad_component.rst", "apis/optim/optim.gradient.rst", "apis/optim/optim.loss_component.rst", "apis/optim/optim.optimizer.rst", "apis/optim/optim.parameter.rst", "apis/optim/optim.sampler.rst", "apis/optim/optim.text_grad.rst", "apis/optim/optim.text_grad.backend_engine_prompt.rst", "apis/optim/optim.text_grad.llm_text_loss.rst", "apis/optim/optim.text_grad.ops.rst", "apis/optim/optim.text_grad.text_loss_with_eval_fn.rst", "apis/optim/optim.text_grad.tgd_optimizer.rst", "apis/optim/optim.trainer.rst", "apis/optim/optim.trainer.adal.rst", "apis/optim/optim.trainer.trainer.rst", "apis/optim/optim.types.rst", "apis/tracing/index.rst", "apis/tracing/tracing.callback_manager.rst", "apis/tracing/tracing.decorators.rst", "apis/tracing/tracing.generator_call_logger.rst", "apis/tracing/tracing.generator_state_logger.rst", "apis/utils/index.rst", "apis/utils/utils.cache.rst", "apis/utils/utils.config.rst", "apis/utils/utils.data.rst", "apis/utils/utils.file_io.rst", "apis/utils/utils.global_config.rst", "apis/utils/utils.lazy_import.rst", "apis/utils/utils.logger.rst", "apis/utils/utils.registry.rst", "apis/utils/utils.serialization.rst", "apis/utils/utils.setup_env.rst", "contributor/contribute_to_code.rst", "contributor/contribution.rst", "contributor/index.rst", "contributor/version_control.rst", "get_started/adalflow_in_15mins.rst", "get_started/community.rst", "get_started/index.rst", "get_started/installation.rst", "get_started/introduction.rst", "index.rst", "integrations/index.rst", "integrations/integrations.rst", "resources/index.rst", "resources/resources.rst", "tutorials/adalcomponent.rst", "tutorials/agent.rst", "tutorials/auto_text_grad.rst", "tutorials/base_data_class.rst", "tutorials/ckpt_file.rst", "tutorials/class_hierarchy.rst", "tutorials/component.rst", "tutorials/configs.rst", "tutorials/data_pipeline.rst", "tutorials/datasets.rst", "tutorials/db.rst", "tutorials/embedder.rst", "tutorials/embedder_xy.rst", "tutorials/evaluation.rst", "tutorials/few_shot_optimizer.rst", "tutorials/generator.rst", "tutorials/index.rst", "tutorials/lightrag_design_philosophy.rst", "tutorials/llm_intro.rst", "tutorials/logging.rst", "tutorials/logging_tracing.rst", "tutorials/model_client.rst", "tutorials/optimizer.rst", "tutorials/output_parsers.rst", "tutorials/parameter.rst", "tutorials/prompt.rst", "tutorials/rag_playbook.rst", "tutorials/rag_with_memory.rst", "tutorials/react_agent_xy.rst", "tutorials/retriever.rst", "tutorials/text_splitter.rst", "tutorials/tool_helper.rst", "tutorials/trace_graph.rst", "tutorials/trainer.rst", "use_cases/build_a_rag.rst", "use_cases/classification.rst", "use_cases/eval_a_rag.rst", "use_cases/index.rst", "use_cases/introduction_to_basedataclass.rst", "use_cases/logging.rst", "use_cases/multi_hop_rag_opt.rst", "use_cases/qa_computation_graph.rst", "use_cases/qa_demo_trace_graph.rst", "use_cases/qa_text_grad_trace_graph.rst", "use_cases/question_answering.rst", "use_cases/question_answering_word_sort.rst", "use_cases/rag_end_to_end.rst", "use_cases/rag_opt.rst"], "indexentries": {"acall() (anthropicapiclient method)": [[8, "components.model_client.anthropic_client.AnthropicAPIClient.acall", false]], "acall() (azureaiclient method)": [[9, "components.model_client.azureai_client.AzureAIClient.acall", false]], "acall() (cohereapiclient method)": [[11, "components.model_client.cohere_client.CohereAPIClient.acall", false]], "acall() (component method)": [[32, "core.component.Component.acall", false]], "acall() (embedder method)": [[36, "core.embedder.Embedder.acall", false]], "acall() (functiontool method)": [[37, "core.func_tool.FunctionTool.acall", false]], "acall() (generator method)": [[39, "core.generator.Generator.acall", false]], "acall() (gradcomponent method)": [[68, "optim.grad_component.GradComponent.acall", false]], "acall() (groqapiclient method)": [[14, "components.model_client.groq_client.GroqAPIClient.acall", false]], "acall() (modelclient method)": [[40, "core.model_client.ModelClient.acall", false]], "acall() (ollamaclient method)": [[15, "components.model_client.ollama_client.OllamaClient.acall", false]], "acall() (openaiclient method)": [[16, "components.model_client.openai_client.OpenAIClient.acall", false]], "acall() (retriever method)": [[42, "core.retriever.Retriever.acall", false]], "acall() (sequential method)": [[33, "core.container.Sequential.acall", false]], "action (functionexpression attribute)": [[46, "core.types.FunctionExpression.action", false]], "action (stepoutput attribute)": [[46, "core.types.StepOutput.action", false]], "adalcomponent (class in optim)": [[63, "optim.AdalComponent", false]], "adalcomponent (class in optim.trainer)": [[80, "optim.trainer.AdalComponent", false]], "adalcomponent (class in optim.trainer.adal)": [[81, "optim.trainer.adal.AdalComponent", false]], "adalflow_default_prompt_args (in module core.default_prompt_template)": [[35, "core.default_prompt_template.ADALFLOW_DEFAULT_PROMPT_ARGS", false]], "adalflow_default_prompt_trainable_params (in module core.default_prompt_template)": [[35, "core.default_prompt_template.ADALFLOW_DEFAULT_PROMPT_TRAINABLE_PARAMS", false]], "adaltask (trainer attribute)": [[63, "optim.Trainer.adaltask", false], [80, "optim.trainer.Trainer.adaltask", false], [82, "optim.trainer.trainer.Trainer.adaltask", false]], "add() (localdb method)": [[34, "core.db.LocalDB.add", false]], "add_component() (component method)": [[32, "core.component.Component.add_component", false]], "add_context() (gradient method)": [[63, "optim.Gradient.add_context", false], [69, "optim.gradient.Gradient.add_context", false]], "add_data() (gradient method)": [[63, "optim.Gradient.add_data", false], [69, "optim.gradient.Gradient.add_data", false]], "add_dataclass_to_trace() (parameter method)": [[63, "optim.Parameter.add_dataclass_to_trace", false], [72, "optim.parameter.Parameter.add_dataclass_to_trace", false]], "add_dialog_turn() (memory method)": [[6, "components.memory.memory.Memory.add_dialog_turn", false]], "add_documents() (lancedbretriever method)": [[25, "components.retriever.lancedb_retriver.LanceDBRetriever.add_documents", false]], "add_failed_proposal() (tgdoptimizer method)": [[63, "optim.TGDOptimizer.add_failed_proposal", false], [74, "optim.text_grad.TGDOptimizer.add_failed_proposal", false], [79, "optim.text_grad.tgd_optimizer.TGDOptimizer.add_failed_proposal", false]], "add_gradient() (parameter method)": [[63, "optim.Parameter.add_gradient", false], [72, "optim.parameter.Parameter.add_gradient", false]], "add_history() (tgdoptimizer method)": [[63, "optim.TGDOptimizer.add_history", false], [74, "optim.text_grad.TGDOptimizer.add_history", false], [79, "optim.text_grad.tgd_optimizer.TGDOptimizer.add_history", false]], "add_prompt() (gradient method)": [[63, "optim.Gradient.add_prompt", false], [69, "optim.gradient.Gradient.add_prompt", false]], "add_score_to_current_param() (tgdoptimizer method)": [[63, "optim.TGDOptimizer.add_score_to_current_param", false], [74, "optim.text_grad.TGDOptimizer.add_score_to_current_param", false], [79, "optim.text_grad.tgd_optimizer.TGDOptimizer.add_score_to_current_param", false]], "add_score_to_params() (tgdoptimizer method)": [[63, "optim.TGDOptimizer.add_score_to_params", false], [74, "optim.text_grad.TGDOptimizer.add_score_to_params", false], [79, "optim.text_grad.tgd_optimizer.TGDOptimizer.add_score_to_params", false]], "add_score_to_trace() (parameter method)": [[63, "optim.Parameter.add_score_to_trace", false], [72, "optim.parameter.Parameter.add_score_to_trace", false]], "add_scores() (bootstrapfewshot method)": [[63, "optim.BootstrapFewShot.add_scores", false], [66, "optim.few_shot.bootstrap_optimizer.BootstrapFewShot.add_scores", false]], "add_scores() (demooptimizer method)": [[63, "optim.DemoOptimizer.add_scores", false], [71, "optim.optimizer.DemoOptimizer.add_scores", false]], "add_successor_map_fn() (parameter method)": [[63, "optim.Parameter.add_successor_map_fn", false], [72, "optim.parameter.Parameter.add_successor_map_fn", false]], "additional_info (evaluationresult attribute)": [[55, "eval.base.EvaluationResult.additional_info", false]], "allowed_types (outputparameter attribute)": [[63, "optim.OutputParameter.allowed_types", false]], "allowed_types (parameter attribute)": [[63, "optim.Parameter.allowed_types", false], [72, "optim.parameter.Parameter.allowed_types", false]], "answer (example attribute)": [[51, "datasets.types.Example.answer", false], [53, "datasets.Example.answer", false]], "answermatchacc (class in eval)": [[61, "eval.AnswerMatchAcc", false]], "answermatchacc (class in eval.answer_match_acc)": [[54, "eval.answer_match_acc.AnswerMatchAcc", false]], "anthropic (modelclienttype attribute)": [[46, "core.types.ModelClientType.ANTHROPIC", false]], "anthropic (optionalpackages attribute)": [[95, "utils.lazy_import.OptionalPackages.ANTHROPIC", false]], "anthropicapiclient (class in components.model_client.anthropic_client)": [[8, "components.model_client.anthropic_client.AnthropicAPIClient", false]], "api_kwargs (componenttrace attribute)": [[72, "optim.parameter.ComponentTrace.api_kwargs", false]], "api_kwargs (tgdoptimizertrace attribute)": [[79, "optim.text_grad.tgd_optimizer.TGDOptimizerTrace.api_kwargs", false]], "append() (componentlist method)": [[33, "core.container.ComponentList.append", false]], "append() (sequential method)": [[33, "core.container.Sequential.append", false]], "append_dialog_turn() (conversation method)": [[46, "core.types.Conversation.append_dialog_turn", false]], "append_to_jsonl() (in module utils.file_io)": [[93, "utils.file_io.append_to_jsonl", false]], "args (function attribute)": [[46, "core.types.Function.args", false]], "assistant_response (dialogturn attribute)": [[46, "core.types.DialogTurn.assistant_response", false]], "assistant_response_timestamp (dialogturn attribute)": [[46, "core.types.DialogTurn.assistant_response_timestamp", false]], "assistantresponse (class in core.types)": [[46, "core.types.AssistantResponse", false]], "attempted_val_score (trainerstepresult attribute)": [[83, "optim.types.TrainerStepResult.attempted_val_score", false]], "average_pool() (in module components.model_client.transformers_client)": [[17, "components.model_client.transformers_client.average_pool", false]], "avg_score (evaluationresult attribute)": [[55, "eval.base.EvaluationResult.avg_score", false]], "avg_score (llmjudgeevalresult attribute)": [[58, "eval.llm_as_judge.LLMJudgeEvalResult.avg_score", false]], "azure (optionalpackages attribute)": [[95, "utils.lazy_import.OptionalPackages.AZURE", false]], "azureaiclient (class in components.model_client.azureai_client)": [[9, "components.model_client.azureai_client.AzureAIClient", false]], "backward() (evalfntotextloss method)": [[63, "optim.EvalFnToTextLoss.backward", false], [74, "optim.text_grad.EvalFnToTextLoss.backward", false], [78, "optim.text_grad.text_loss_with_eval_fn.EvalFnToTextLoss.backward", false]], "backward() (generator method)": [[39, "core.generator.Generator.backward", false]], "backward() (gradcomponent method)": [[68, "optim.grad_component.GradComponent.backward", false]], "backward() (losscomponent method)": [[70, "optim.loss_component.LossComponent.backward", false]], "backward() (parameter method)": [[63, "optim.Parameter.backward", false], [72, "optim.parameter.Parameter.backward", false]], "backward() (sum method)": [[74, "optim.text_grad.Sum.backward", false], [77, "optim.text_grad.ops.Sum.backward", false]], "backward_engine (adalcomponent attribute)": [[63, "optim.AdalComponent.backward_engine", false], [80, "optim.trainer.AdalComponent.backward_engine", false], [81, "optim.trainer.adal.AdalComponent.backward_engine", false]], "backward_engine (gradcomponent attribute)": [[68, "optim.grad_component.GradComponent.backward_engine", false]], "backward_engine (losscomponent attribute)": [[70, "optim.loss_component.LossComponent.backward_engine", false]], "backward_engine (sum attribute)": [[77, "optim.text_grad.ops.Sum.backward_engine", false]], "backward_pass_setup (generator attribute)": [[39, "core.generator.Generator.backward_pass_setup", false]], "backward_with_pass_through_gradients() (gradcomponent method)": [[68, "optim.grad_component.GradComponent.backward_with_pass_through_gradients", false]], "backwardcontext (class in optim)": [[63, "optim.BackwardContext", false]], "backwardcontext (class in optim.function)": [[67, "optim.function.BackwardContext", false]], "backwardengine (class in core.generator)": [[39, "core.generator.BackwardEngine", false]], "basedata (class in datasets.types)": [[51, "datasets.types.BaseData", false]], "baseevaluator (class in eval.base)": [[55, "eval.base.BaseEvaluator", false]], "batch_val_score_threshold (trainer attribute)": [[63, "optim.Trainer.batch_val_score_threshold", false], [80, "optim.trainer.Trainer.batch_val_score_threshold", false], [82, "optim.trainer.trainer.Trainer.batch_val_score_threshold", false]], "batchembedder (class in core.embedder)": [[36, "core.embedder.BatchEmbedder", false]], "bicall() (adalcomponent method)": [[63, "optim.AdalComponent.bicall", false], [80, "optim.trainer.AdalComponent.bicall", false], [81, "optim.trainer.adal.AdalComponent.bicall", false]], "bicall() (callfunctiontool method)": [[45, "core.tool_manager.CallFunctionTool.bicall", false]], "bicall() (component method)": [[32, "core.component.Component.bicall", false]], "bicall() (functiontool method)": [[37, "core.func_tool.FunctionTool.bicall", false]], "bicall() (reactagent method)": [[0, "components.agent.ReActAgent.bicall", false], [1, "components.agent.react.ReActAgent.bicall", false]], "bigbenchhard (class in datasets)": [[53, "datasets.BigBenchHard", false]], "bigbenchhard (class in datasets.big_bench_hard)": [[48, "datasets.big_bench_hard.BigBenchHard", false]], "bm25retriever (class in components.retriever)": [[22, "components.retriever.BM25Retriever", false]], "bm25retriever (class in components.retriever.bm25_retriever)": [[23, "components.retriever.bm25_retriever.BM25Retriever", false]], "booleanoutputparser (class in components.output_parsers.outputs)": [[21, "components.output_parsers.outputs.BooleanOutputParser", false]], "booleanparser (class in core.string_parser)": [[43, "core.string_parser.BooleanParser", false]], "bootstrapfewshot (class in optim)": [[63, "optim.BootstrapFewShot", false]], "bootstrapfewshot (class in optim.few_shot.bootstrap_optimizer)": [[66, "optim.few_shot.bootstrap_optimizer.BootstrapFewShot", false]], "boto3 (optionalpackages attribute)": [[95, "utils.lazy_import.OptionalPackages.BOTO3", false]], "build_index_from_documents() (bm25retriever method)": [[22, "components.retriever.BM25Retriever.build_index_from_documents", false], [23, "components.retriever.bm25_retriever.BM25Retriever.build_index_from_documents", false]], "build_index_from_documents() (faissretriever method)": [[24, "components.retriever.faiss_retriever.FAISSRetriever.build_index_from_documents", false]], "build_index_from_documents() (llmretriever method)": [[22, "components.retriever.LLMRetriever.build_index_from_documents", false], [26, "components.retriever.llm_retriever.LLMRetriever.build_index_from_documents", false]], "build_index_from_documents() (rerankerretriever method)": [[22, "components.retriever.RerankerRetriever.build_index_from_documents", false], [29, "components.retriever.reranker_retriever.RerankerRetriever.build_index_from_documents", false]], "build_index_from_documents() (retriever method)": [[42, "core.retriever.Retriever.build_index_from_documents", false]], "cachedengine (class in utils.cache)": [[90, "utils.cache.CachedEngine", false]], "calculate_class_weights() (in module datasets.trec)": [[50, "datasets.trec.calculate_class_weights", false]], "call() (adalcomponent method)": [[63, "optim.AdalComponent.call", false], [80, "optim.trainer.AdalComponent.call", false], [81, "optim.trainer.adal.AdalComponent.call", false]], "call() (anthropicapiclient method)": [[8, "components.model_client.anthropic_client.AnthropicAPIClient.call", false]], "call() (azureaiclient method)": [[9, "components.model_client.azureai_client.AzureAIClient.call", false]], "call() (backwardengine method)": [[39, "core.generator.BackwardEngine.call", false]], "call() (batchembedder method)": [[36, "core.embedder.BatchEmbedder.call", false]], "call() (bm25retriever method)": [[22, "components.retriever.BM25Retriever.call", false], [23, "components.retriever.bm25_retriever.BM25Retriever.call", false]], "call() (booleanoutputparser method)": [[21, "components.output_parsers.outputs.BooleanOutputParser.call", false]], "call() (booleanparser method)": [[43, "core.string_parser.BooleanParser.call", false]], "call() (callfunctiontool method)": [[45, "core.tool_manager.CallFunctionTool.call", false]], "call() (classsampler method)": [[63, "optim.ClassSampler.call", false], [73, "optim.sampler.ClassSampler.call", false]], "call() (cohereapiclient method)": [[11, "components.model_client.cohere_client.CohereAPIClient.call", false]], "call() (component method)": [[32, "core.component.Component.call", false]], "call() (dataclassparser method)": [[19, "components.output_parsers.DataClassParser.call", false], [20, "components.output_parsers.dataclass_parser.DataClassParser.call", false]], "call() (defaultllmjudge method)": [[58, "eval.llm_as_judge.DefaultLLMJudge.call", false]], "call() (embedder method)": [[36, "core.embedder.Embedder.call", false]], "call() (faissretriever method)": [[24, "components.retriever.faiss_retriever.FAISSRetriever.call", false]], "call() (floatparser method)": [[43, "core.string_parser.FloatParser.call", false]], "call() (funccomponent method)": [[32, "core.component.FuncComponent.call", false]], "call() (funcdatacomponent method)": [[32, "core.component.FuncDataComponent.call", false]], "call() (functionexperssiontofunction method)": [[45, "core.tool_manager.FunctionExperssionToFunction.call", false]], "call() (functiontool method)": [[37, "core.func_tool.FunctionTool.call", false]], "call() (fungradcomponent method)": [[68, "optim.grad_component.FunGradComponent.call", false]], "call() (generator method)": [[39, "core.generator.Generator.call", false]], "call() (gevalllmjudge method)": [[57, "eval.g_eval.GEvalLLMJudge.call", false], [61, "eval.GEvalLLMJudge.call", false]], "call() (googlegenaiclient method)": [[13, "components.model_client.google_client.GoogleGenAIClient.call", false]], "call() (gradcomponent method)": [[68, "optim.grad_component.GradComponent.call", false]], "call() (groqapiclient method)": [[14, "components.model_client.groq_client.GroqAPIClient.call", false]], "call() (intparser method)": [[43, "core.string_parser.IntParser.call", false]], "call() (jsonoutputparser method)": [[19, "components.output_parsers.JsonOutputParser.call", false], [21, "components.output_parsers.outputs.JsonOutputParser.call", false]], "call() (jsonparser method)": [[43, "core.string_parser.JsonParser.call", false]], "call() (listoutputparser method)": [[19, "components.output_parsers.ListOutputParser.call", false], [21, "components.output_parsers.outputs.ListOutputParser.call", false]], "call() (listparser method)": [[43, "core.string_parser.ListParser.call", false]], "call() (llmretriever method)": [[22, "components.retriever.LLMRetriever.call", false], [26, "components.retriever.llm_retriever.LLMRetriever.call", false]], "call() (memory method)": [[6, "components.memory.memory.Memory.call", false]], "call() (modelclient method)": [[40, "core.model_client.ModelClient.call", false]], "call() (ollamaclient method)": [[15, "components.model_client.ollama_client.OllamaClient.call", false]], "call() (openaiclient method)": [[16, "components.model_client.openai_client.OpenAIClient.call", false]], "call() (outputparser method)": [[21, "components.output_parsers.outputs.OutputParser.call", false]], "call() (postgresretriever method)": [[27, "components.retriever.postgres_retriever.PostgresRetriever.call", false]], "call() (prompt method)": [[41, "core.prompt_builder.Prompt.call", false]], "call() (qdrantretriever method)": [[28, "components.retriever.qdrant_retriever.QdrantRetriever.call", false]], "call() (randomsampler method)": [[63, "optim.RandomSampler.call", false], [73, "optim.sampler.RandomSampler.call", false]], "call() (reactagent method)": [[0, "components.agent.ReActAgent.call", false], [1, "components.agent.react.ReActAgent.call", false]], "call() (rerankerretriever method)": [[22, "components.retriever.RerankerRetriever.call", false], [29, "components.retriever.reranker_retriever.RerankerRetriever.call", false]], "call() (retriever method)": [[42, "core.retriever.Retriever.call", false]], "call() (sampler method)": [[63, "optim.Sampler.call", false], [73, "optim.sampler.Sampler.call", false]], "call() (sequential method)": [[33, "core.container.Sequential.call", false]], "call() (textsplitter method)": [[2, "components.data_process.TextSplitter.call", false], [4, "components.data_process.text_splitter.TextSplitter.call", false]], "call() (toolmanager method)": [[45, "core.tool_manager.ToolManager.call", false]], "call() (transformersclient method)": [[17, "components.model_client.transformers_client.TransformersClient.call", false]], "call() (yamloutputparser method)": [[19, "components.output_parsers.YamlOutputParser.call", false], [21, "components.output_parsers.outputs.YamlOutputParser.call", false]], "call() (yamlparser method)": [[43, "core.string_parser.YamlParser.call", false]], "callbackmanager (class in tracing.callback_manager)": [[85, "tracing.callback_manager.CallbackManager", false]], "callfunctiontool (class in core.tool_manager)": [[45, "core.tool_manager.CallFunctionTool", false]], "check_adal_dataclass() (in module core.base_data_class)": [[31, "core.base_data_class.check_adal_dataclass", false]], "check_data_class_field_args_one() (in module core.functional)": [[38, "core.functional.check_data_class_field_args_one", false]], "check_data_class_field_args_zero() (in module core.functional)": [[38, "core.functional.check_data_class_field_args_zero", false]], "check_if_already_computed_gradient_respect_to() (parameter method)": [[63, "optim.Parameter.check_if_already_computed_gradient_respect_to", false], [72, "optim.parameter.Parameter.check_if_already_computed_gradient_respect_to", false]], "check_if_class_field_args_one_exists() (in module core.functional)": [[38, "core.functional.check_if_class_field_args_one_exists", false]], "check_if_class_field_args_zero_exists() (in module core.functional)": [[38, "core.functional.check_if_class_field_args_zero_exists", false]], "check_object() (in module utils.serialization)": [[98, "utils.serialization.check_object", false]], "children() (component method)": [[32, "core.component.Component.children", false]], "ckpt_file (trainer attribute)": [[63, "optim.Trainer.ckpt_file", false], [80, "optim.trainer.Trainer.ckpt_file", false], [82, "optim.trainer.trainer.Trainer.ckpt_file", false]], "ckpt_path (trainer attribute)": [[63, "optim.Trainer.ckpt_path", false], [80, "optim.trainer.Trainer.ckpt_path", false], [82, "optim.trainer.trainer.Trainer.ckpt_path", false]], "class (objecttypes attribute)": [[98, "utils.serialization.ObjectTypes.CLASS", false]], "class_index (trecdata attribute)": [[51, "datasets.types.TrecData.class_index", false], [53, "datasets.TrecData.class_index", false]], "class_instance (functiondefinition attribute)": [[46, "core.types.FunctionDefinition.class_instance", false]], "class_name (trecdata attribute)": [[51, "datasets.types.TrecData.class_name", false], [53, "datasets.TrecData.class_name", false]], "classsampler (class in optim)": [[63, "optim.ClassSampler", false]], "classsampler (class in optim.sampler)": [[73, "optim.sampler.ClassSampler", false]], "clean_device_cache() (in module components.model_client.transformers_client)": [[17, "components.model_client.transformers_client.clean_device_cache", false]], "cohere (modelclienttype attribute)": [[46, "core.types.ModelClientType.COHERE", false]], "cohere (optionalpackages attribute)": [[95, "utils.lazy_import.OptionalPackages.COHERE", false]], "cohereapiclient (class in components.model_client.cohere_client)": [[11, "components.model_client.cohere_client.CohereAPIClient", false]], "coherence (gevalmetric attribute)": [[57, "eval.g_eval.GEvalMetric.COHERENCE", false], [61, "eval.GEvalMetric.COHERENCE", false]], "completion_tokens (completionusage attribute)": [[46, "core.types.CompletionUsage.completion_tokens", false]], "completionusage (class in core.types)": [[46, "core.types.CompletionUsage", false]], "component (class in core.component)": [[32, "core.component.Component", false]], "component_trace (outputparameter attribute)": [[63, "optim.OutputParameter.component_trace", false]], "componentlist (class in core.container)": [[33, "core.container.ComponentList", false]], "componentnode (class in optim.parameter)": [[72, "optim.parameter.ComponentNode", false]], "components() (component method)": [[32, "core.component.Component.components", false]], "components.agent": [[0, "module-components.agent", false]], "components.agent.react": [[1, "module-components.agent.react", false]], "components.data_process": [[2, "module-components.data_process", false]], "components.data_process.data_components": [[3, "module-components.data_process.data_components", false]], "components.data_process.text_splitter": [[4, "module-components.data_process.text_splitter", false]], "components.memory": [[5, "module-components.memory", false]], "components.memory.memory": [[6, "module-components.memory.memory", false]], "components.model_client": [[7, "module-components.model_client", false]], "components.model_client.anthropic_client": [[8, "module-components.model_client.anthropic_client", false]], "components.model_client.azureai_client": [[9, "module-components.model_client.azureai_client", false]], "components.model_client.cohere_client": [[11, "module-components.model_client.cohere_client", false]], "components.model_client.deepseek_client": [[12, "module-components.model_client.deepseek_client", false]], "components.model_client.google_client": [[13, "module-components.model_client.google_client", false]], "components.model_client.groq_client": [[14, "module-components.model_client.groq_client", false]], "components.model_client.ollama_client": [[15, "module-components.model_client.ollama_client", false]], "components.model_client.openai_client": [[16, "module-components.model_client.openai_client", false]], "components.model_client.transformers_client": [[17, "module-components.model_client.transformers_client", false]], "components.model_client.utils": [[18, "module-components.model_client.utils", false]], "components.output_parsers": [[19, "module-components.output_parsers", false]], "components.output_parsers.dataclass_parser": [[20, "module-components.output_parsers.dataclass_parser", false]], "components.output_parsers.outputs": [[21, "module-components.output_parsers.outputs", false]], "components.retriever": [[22, "module-components.retriever", false]], "components.retriever.bm25_retriever": [[23, "module-components.retriever.bm25_retriever", false]], "components.retriever.faiss_retriever": [[24, "module-components.retriever.faiss_retriever", false]], "components.retriever.lancedb_retriver": [[25, "module-components.retriever.lancedb_retriver", false]], "components.retriever.llm_retriever": [[26, "module-components.retriever.llm_retriever", false]], "components.retriever.postgres_retriever": [[27, "module-components.retriever.postgres_retriever", false]], "components.retriever.qdrant_retriever": [[28, "module-components.retriever.qdrant_retriever", false]], "components.retriever.reranker_retriever": [[29, "module-components.retriever.reranker_retriever", false]], "componenttrace (class in optim.parameter)": [[72, "optim.parameter.ComponentTrace", false]], "compose_model_kwargs() (in module core.functional)": [[38, "core.functional.compose_model_kwargs", false]], "compose_prompt_kwargs() (prompt method)": [[41, "core.prompt_builder.Prompt.compose_prompt_kwargs", false]], "compute() (answermatchacc method)": [[54, "eval.answer_match_acc.AnswerMatchAcc.compute", false], [61, "eval.AnswerMatchAcc.compute", false]], "compute() (baseevaluator method)": [[55, "eval.base.BaseEvaluator.compute", false]], "compute() (gevaljudgeevaluator method)": [[57, "eval.g_eval.GEvalJudgeEvaluator.compute", false], [61, "eval.GEvalJudgeEvaluator.compute", false]], "compute() (llmasjudge method)": [[58, "eval.llm_as_judge.LLMasJudge.compute", false], [61, "eval.LLMasJudge.compute", false]], "compute() (retrieverevaluator method)": [[59, "eval.retriever_recall.RetrieverEvaluator.compute", false], [61, "eval.RetrieverEvaluator.compute", false]], "compute_single_item() (answermatchacc method)": [[54, "eval.answer_match_acc.AnswerMatchAcc.compute_single_item", false], [61, "eval.AnswerMatchAcc.compute_single_item", false]], "compute_single_item() (baseevaluator method)": [[55, "eval.base.BaseEvaluator.compute_single_item", false]], "compute_single_item() (gevaljudgeevaluator method)": [[57, "eval.g_eval.GEvalJudgeEvaluator.compute_single_item", false], [61, "eval.GEvalJudgeEvaluator.compute_single_item", false]], "compute_single_item() (retrieverevaluator method)": [[59, "eval.retriever_recall.RetrieverEvaluator.compute_single_item", false], [61, "eval.RetrieverEvaluator.compute_single_item", false]], "confidence_interval (llmjudgeevalresult attribute)": [[58, "eval.llm_as_judge.LLMJudgeEvalResult.confidence_interval", false]], "confidence_interval() (in module eval.functional)": [[56, "eval.functional.confidence_interval", false]], "config_dataset() (bootstrapfewshot method)": [[63, "optim.BootstrapFewShot.config_dataset", false], [66, "optim.few_shot.bootstrap_optimizer.BootstrapFewShot.config_dataset", false]], "config_shots() (bootstrapfewshot method)": [[63, "optim.BootstrapFewShot.config_shots", false], [66, "optim.few_shot.bootstrap_optimizer.BootstrapFewShot.config_shots", false]], "config_shots() (demooptimizer method)": [[63, "optim.DemoOptimizer.config_shots", false], [71, "optim.optimizer.DemoOptimizer.config_shots", false]], "configure_backward_engine() (adalcomponent method)": [[63, "optim.AdalComponent.configure_backward_engine", false], [80, "optim.trainer.AdalComponent.configure_backward_engine", false], [81, "optim.trainer.adal.AdalComponent.configure_backward_engine", false]], "configure_backward_engine_helper() (adalcomponent method)": [[63, "optim.AdalComponent.configure_backward_engine_helper", false], [80, "optim.trainer.AdalComponent.configure_backward_engine_helper", false], [81, "optim.trainer.adal.AdalComponent.configure_backward_engine_helper", false]], "configure_callbacks() (adalcomponent method)": [[63, "optim.AdalComponent.configure_callbacks", false], [80, "optim.trainer.AdalComponent.configure_callbacks", false], [81, "optim.trainer.adal.AdalComponent.configure_callbacks", false]], "configure_demo_optimizer_helper() (adalcomponent method)": [[63, "optim.AdalComponent.configure_demo_optimizer_helper", false], [80, "optim.trainer.AdalComponent.configure_demo_optimizer_helper", false], [81, "optim.trainer.adal.AdalComponent.configure_demo_optimizer_helper", false]], "configure_optimizers() (adalcomponent method)": [[63, "optim.AdalComponent.configure_optimizers", false], [80, "optim.trainer.AdalComponent.configure_optimizers", false], [81, "optim.trainer.adal.AdalComponent.configure_optimizers", false]], "configure_teacher_generator() (adalcomponent method)": [[63, "optim.AdalComponent.configure_teacher_generator", false], [80, "optim.trainer.AdalComponent.configure_teacher_generator", false], [81, "optim.trainer.adal.AdalComponent.configure_teacher_generator", false]], "configure_teacher_generator_helper() (adalcomponent method)": [[63, "optim.AdalComponent.configure_teacher_generator_helper", false], [80, "optim.trainer.AdalComponent.configure_teacher_generator_helper", false], [81, "optim.trainer.adal.AdalComponent.configure_teacher_generator_helper", false]], "configure_text_optimizer_helper() (adalcomponent method)": [[63, "optim.AdalComponent.configure_text_optimizer_helper", false], [80, "optim.trainer.AdalComponent.configure_text_optimizer_helper", false], [81, "optim.trainer.adal.AdalComponent.configure_text_optimizer_helper", false]], "consistency (gevalmetric attribute)": [[57, "eval.g_eval.GEvalMetric.CONSISTENCY", false], [61, "eval.GEvalMetric.CONSISTENCY", false]], "constraint_text (tgdoptimizer property)": [[63, "optim.TGDOptimizer.constraint_text", false], [74, "optim.text_grad.TGDOptimizer.constraint_text", false], [79, "optim.text_grad.tgd_optimizer.TGDOptimizer.constraint_text", false]], "constraints (tgdoptimizer attribute)": [[63, "optim.TGDOptimizer.constraints", false], [74, "optim.text_grad.TGDOptimizer.constraints", false], [79, "optim.text_grad.tgd_optimizer.TGDOptimizer.constraints", false]], "context (gradient attribute)": [[63, "optim.Gradient.context", false], [69, "optim.gradient.Gradient.context", false]], "context (hotpotqadata attribute)": [[51, "datasets.types.HotPotQAData.context", false], [53, "datasets.HotPotQAData.context", false]], "conver_db (in module components.memory.memory)": [[6, "components.memory.memory.conver_db", false]], "conversation (class in core.types)": [[46, "core.types.Conversation", false]], "conversation_id (dialogturn attribute)": [[46, "core.types.DialogTurn.conversation_id", false]], "convert_inputs_to_api_kwargs() (anthropicapiclient method)": [[8, "components.model_client.anthropic_client.AnthropicAPIClient.convert_inputs_to_api_kwargs", false]], "convert_inputs_to_api_kwargs() (azureaiclient method)": [[9, "components.model_client.azureai_client.AzureAIClient.convert_inputs_to_api_kwargs", false]], "convert_inputs_to_api_kwargs() (cohereapiclient method)": [[11, "components.model_client.cohere_client.CohereAPIClient.convert_inputs_to_api_kwargs", false]], "convert_inputs_to_api_kwargs() (googlegenaiclient method)": [[13, "components.model_client.google_client.GoogleGenAIClient.convert_inputs_to_api_kwargs", false]], "convert_inputs_to_api_kwargs() (groqapiclient method)": [[14, "components.model_client.groq_client.GroqAPIClient.convert_inputs_to_api_kwargs", false]], "convert_inputs_to_api_kwargs() (modelclient method)": [[40, "core.model_client.ModelClient.convert_inputs_to_api_kwargs", false]], "convert_inputs_to_api_kwargs() (ollamaclient method)": [[15, "components.model_client.ollama_client.OllamaClient.convert_inputs_to_api_kwargs", false]], "convert_inputs_to_api_kwargs() (openaiclient method)": [[16, "components.model_client.openai_client.OpenAIClient.convert_inputs_to_api_kwargs", false]], "convert_inputs_to_api_kwargs() (transformersclient method)": [[17, "components.model_client.transformers_client.TransformersClient.convert_inputs_to_api_kwargs", false]], "convert_schema_to_signature() (in module core.functional)": [[38, "core.functional.convert_schema_to_signature", false]], "core.base_data_class": [[31, "module-core.base_data_class", false]], "core.component": [[32, "module-core.component", false]], "core.container": [[33, "module-core.container", false]], "core.db": [[34, "module-core.db", false]], "core.default_prompt_template": [[35, "module-core.default_prompt_template", false]], "core.embedder": [[36, "module-core.embedder", false]], "core.func_tool": [[37, "module-core.func_tool", false]], "core.functional": [[38, "module-core.functional", false]], "core.generator": [[39, "module-core.generator", false]], "core.model_client": [[40, "module-core.model_client", false]], "core.prompt_builder": [[41, "module-core.prompt_builder", false]], "core.retriever": [[42, "module-core.retriever", false]], "core.string_parser": [[43, "module-core.string_parser", false]], "core.tokenizer": [[44, "module-core.tokenizer", false]], "core.tool_manager": [[45, "module-core.tool_manager", false]], "core.types": [[46, "module-core.types", false]], "correct_val_score_threshold (trainer attribute)": [[63, "optim.Trainer.correct_val_score_threshold", false], [80, "optim.trainer.Trainer.correct_val_score_threshold", false], [82, "optim.trainer.trainer.Trainer.correct_val_score_threshold", false]], "cosine (distancetooperator attribute)": [[27, "components.retriever.postgres_retriever.DistanceToOperator.COSINE", false]], "count_tokens() (tokenizer method)": [[44, "core.tokenizer.Tokenizer.count_tokens", false]], "create_context_map_from_tools() (toolmanager static method)": [[45, "core.tool_manager.ToolManager.create_context_map_from_tools", false]], "create_demo_data_instance() (generator method)": [[39, "core.generator.Generator.create_demo_data_instance", false]], "create_teacher_generator() (in module core.generator)": [[39, "core.generator.create_teacher_generator", false]], "created_at (conversation attribute)": [[46, "core.types.Conversation.created_at", false]], "current_conversation (in module components.memory.memory)": [[6, "components.memory.memory.current_conversation", false]], "current_tgd_output (tgdoptimizer attribute)": [[63, "optim.TGDOptimizer.current_tgd_output", false], [74, "optim.text_grad.TGDOptimizer.current_tgd_output", false], [79, "optim.text_grad.tgd_optimizer.TGDOptimizer.current_tgd_output", false]], "custom_asdict() (in module core.functional)": [[38, "core.functional.custom_asdict", false]], "data (embedderoutput attribute)": [[46, "core.types.EmbedderOutput.data", false]], "data (generatoroutput attribute)": [[46, "core.types.GeneratorOutput.data", false]], "data (gradient attribute)": [[63, "optim.Gradient.data", false], [69, "optim.gradient.Gradient.data", false]], "data (parameter attribute)": [[63, "optim.Parameter.data", false], [72, "optim.parameter.Parameter.data", false]], "data (promptdata attribute)": [[83, "optim.types.PromptData.data", false]], "data (sample attribute)": [[73, "optim.sampler.Sample.data", false]], "data_id (gradient attribute)": [[63, "optim.Gradient.data_id", false], [69, "optim.gradient.Gradient.data_id", false]], "data_id (parameter attribute)": [[63, "optim.Parameter.data_id", false], [72, "optim.parameter.Parameter.data_id", false]], "data_in_prompt (parameter attribute)": [[63, "optim.Parameter.data_in_prompt", false], [72, "optim.parameter.Parameter.data_in_prompt", false]], "dataclass (class in core.base_data_class)": [[31, "core.base_data_class.DataClass", false]], "dataclass_obj_from_dict() (in module core.functional)": [[38, "core.functional.dataclass_obj_from_dict", false]], "dataclassformattype (class in core.base_data_class)": [[31, "core.base_data_class.DataClassFormatType", false]], "dataclassparser (class in components.output_parsers)": [[19, "components.output_parsers.DataClassParser", false]], "dataclassparser (class in components.output_parsers.dataclass_parser)": [[20, "components.output_parsers.dataclass_parser.DataClassParser", false]], "datacomponent (class in core.component)": [[32, "core.component.DataComponent", false]], "dataloader (class in utils.data)": [[92, "utils.data.DataLoader", false]], "dataset (class in utils.data)": [[92, "utils.data.Dataset", false]], "dataset (demooptimizer attribute)": [[63, "optim.DemoOptimizer.dataset", false], [71, "optim.optimizer.DemoOptimizer.dataset", false]], "dataset (sampler attribute)": [[63, "optim.Sampler.dataset", false], [73, "optim.sampler.Sampler.dataset", false]], "dataset (subset attribute)": [[92, "utils.data.Subset.dataset", false]], "datasets": [[53, "module-datasets", false]], "datasets (optionalpackages attribute)": [[95, "utils.lazy_import.OptionalPackages.DATASETS", false]], "datasets.big_bench_hard": [[48, "module-datasets.big_bench_hard", false]], "datasets.hotpot_qa": [[49, "module-datasets.hotpot_qa", false]], "datasets.trec": [[50, "module-datasets.trec", false]], "datasets.types": [[51, "module-datasets.types", false]], "datasets.utils": [[52, "module-datasets.utils", false]], "debug (trainer attribute)": [[63, "optim.Trainer.debug", false], [80, "optim.trainer.Trainer.debug", false], [82, "optim.trainer.trainer.Trainer.debug", false]], "debug_report() (trainer method)": [[63, "optim.Trainer.debug_report", false], [80, "optim.trainer.Trainer.debug_report", false], [82, "optim.trainer.trainer.Trainer.debug_report", false]], "decode() (tokenizer method)": [[44, "core.tokenizer.Tokenizer.decode", false]], "deepseekclient (class in components.model_client.deepseek_client)": [[12, "components.model_client.deepseek_client.DeepSeekClient", false]], "default() (in module utils.serialization)": [[98, "utils.serialization.default", false]], "default_adalflow_system_prompt (in module core.default_prompt_template)": [[35, "core.default_prompt_template.DEFAULT_ADALFLOW_SYSTEM_PROMPT", false], [35, "id0", false]], "default_react_agent_system_prompt (in module components.agent.react)": [[1, "components.agent.react.DEFAULT_REACT_AGENT_SYSTEM_PROMPT", false]], "defaultllmjudge (class in eval.llm_as_judge)": [[58, "eval.llm_as_judge.DefaultLLMJudge", false]], "delete() (localdb method)": [[34, "core.db.LocalDB.delete", false]], "delete_dialog_turn() (conversation method)": [[46, "core.types.Conversation.delete_dialog_turn", false]], "demo_optimizers (trainer attribute)": [[80, "optim.trainer.Trainer.demo_optimizers", false], [82, "optim.trainer.trainer.Trainer.demo_optimizers", false]], "demooptimizer (class in optim)": [[63, "optim.DemoOptimizer", false]], "demooptimizer (class in optim.optimizer)": [[71, "optim.optimizer.DemoOptimizer", false]], "demos (parametertype attribute)": [[83, "optim.types.ParameterType.DEMOS", false]], "deserialize() (in module utils.serialization)": [[98, "utils.serialization.deserialize", false]], "diagnose() (trainer method)": [[63, "optim.Trainer.diagnose", false], [80, "optim.trainer.Trainer.diagnose", false], [82, "optim.trainer.trainer.Trainer.diagnose", false]], "diagnose_report() (trainer method)": [[63, "optim.Trainer.diagnose_report", false], [80, "optim.trainer.Trainer.diagnose_report", false], [82, "optim.trainer.trainer.Trainer.diagnose_report", false]], "dialog_turns (conversation attribute)": [[46, "core.types.Conversation.dialog_turns", false]], "dialog_turns_input (conversation attribute)": [[46, "core.types.Conversation.dialog_turns_input", false]], "dialogturn (class in core.types)": [[46, "core.types.DialogTurn", false]], "dict_to_yaml() (dataclass method)": [[31, "core.base_data_class.DataClass.dict_to_yaml", false]], "direct() (in module utils.cache)": [[90, "utils.cache.direct", false]], "disable_backward (trainer attribute)": [[63, "optim.Trainer.disable_backward", false], [80, "optim.trainer.Trainer.disable_backward", false], [82, "optim.trainer.trainer.Trainer.disable_backward", false]], "disable_backward_engine() (adalcomponent method)": [[63, "optim.AdalComponent.disable_backward_engine", false], [80, "optim.trainer.AdalComponent.disable_backward_engine", false], [81, "optim.trainer.adal.AdalComponent.disable_backward_engine", false]], "disable_backward_engine() (gradcomponent method)": [[68, "optim.grad_component.GradComponent.disable_backward_engine", false]], "disable_backward_engine() (losscomponent method)": [[70, "optim.loss_component.LossComponent.disable_backward_engine", false]], "disable_backward_engine_helper() (adalcomponent method)": [[63, "optim.AdalComponent.disable_backward_engine_helper", false], [80, "optim.trainer.AdalComponent.disable_backward_engine_helper", false], [81, "optim.trainer.adal.AdalComponent.disable_backward_engine_helper", false]], "disable_backward_gradients (trainer attribute)": [[63, "optim.Trainer.disable_backward_gradients", false], [80, "optim.trainer.Trainer.disable_backward_gradients", false], [82, "optim.trainer.trainer.Trainer.disable_backward_gradients", false]], "distancetooperator (class in components.retriever.postgres_retriever)": [[27, "components.retriever.postgres_retriever.DistanceToOperator", false]], "doc_indices() (retrieveroutput method)": [[46, "core.types.RetrieverOutput.doc_indices", false]], "doc_scores (retrieveroutput attribute)": [[46, "core.types.RetrieverOutput.doc_scores", false]], "document (class in core.types)": [[46, "core.types.Document", false]], "documents (retrieveroutput attribute)": [[46, "core.types.RetrieverOutput.documents", false]], "draw_component_subgraph() (parameter method)": [[63, "optim.Parameter.draw_component_subgraph", false], [72, "optim.parameter.Parameter.draw_component_subgraph", false]], "draw_graph() (parameter method)": [[63, "optim.Parameter.draw_graph", false], [72, "optim.parameter.Parameter.draw_graph", false]], "draw_interactive_html_graph() (parameter method)": [[63, "optim.Parameter.draw_interactive_html_graph", false], [72, "optim.parameter.Parameter.draw_interactive_html_graph", false]], "draw_output_subgraph() (parameter method)": [[63, "optim.Parameter.draw_output_subgraph", false], [72, "optim.parameter.Parameter.draw_output_subgraph", false]], "dynamicdataclassfactory (class in core.base_data_class)": [[31, "core.base_data_class.DynamicDataClassFactory", false]], "effective_measure (trainerresult attribute)": [[83, "optim.types.TrainerResult.effective_measure", false]], "embedder (class in core.embedder)": [[36, "core.embedder.Embedder", false]], "embedder (modeltype attribute)": [[46, "core.types.ModelType.EMBEDDER", false]], "embedderoutput (class in core.types)": [[46, "core.types.EmbedderOutput", false]], "embedderoutputtype (in module core.types)": [[46, "core.types.EmbedderOutputType", false]], "embedding (class in core.types)": [[46, "core.types.Embedding", false]], "embedding (embedding attribute)": [[46, "core.types.Embedding.embedding", false]], "embedding_dim (embedderoutput property)": [[46, "core.types.EmbedderOutput.embedding_dim", false]], "encode() (tokenizer method)": [[44, "core.tokenizer.Tokenizer.encode", false]], "entitymapping (class in utils.registry)": [[97, "utils.registry.EntityMapping", false]], "error (embedderoutput attribute)": [[46, "core.types.EmbedderOutput.error", false]], "error (functionoutput attribute)": [[46, "core.types.FunctionOutput.error", false]], "error (generatoroutput attribute)": [[46, "core.types.GeneratorOutput.error", false]], "estimate_token_count() (in module components.model_client.openai_client)": [[16, "components.model_client.openai_client.estimate_token_count", false]], "estimated_num_tokens (document attribute)": [[46, "core.types.Document.estimated_num_tokens", false]], "eval": [[61, "module-eval", false]], "eval() (component method)": [[32, "core.component.Component.eval", false]], "eval.answer_match_acc": [[54, "module-eval.answer_match_acc", false]], "eval.base": [[55, "module-eval.base", false]], "eval.functional": [[56, "module-eval.functional", false]], "eval.g_eval": [[57, "module-eval.g_eval", false]], "eval.llm_as_judge": [[58, "module-eval.llm_as_judge", false]], "eval.retriever_recall": [[59, "module-eval.retriever_recall", false]], "eval.utils": [[60, "module-eval.utils", false]], "eval_comp_id (scoretrace attribute)": [[72, "optim.parameter.ScoreTrace.eval_comp_id", false]], "eval_comp_name (scoretrace attribute)": [[72, "optim.parameter.ScoreTrace.eval_comp_name", false]], "eval_fn (adalcomponent attribute)": [[63, "optim.AdalComponent.eval_fn", false], [80, "optim.trainer.AdalComponent.eval_fn", false], [81, "optim.trainer.adal.AdalComponent.eval_fn", false]], "eval_input (parameter attribute)": [[63, "optim.Parameter.eval_input", false], [72, "optim.parameter.Parameter.eval_input", false]], "eval_score (historyprompt attribute)": [[79, "optim.text_grad.tgd_optimizer.HistoryPrompt.eval_score", false]], "evalfntotextloss (class in optim)": [[63, "optim.EvalFnToTextLoss", false]], "evalfntotextloss (class in optim.text_grad)": [[74, "optim.text_grad.EvalFnToTextLoss", false]], "evalfntotextloss (class in optim.text_grad.text_loss_with_eval_fn)": [[78, "optim.text_grad.text_loss_with_eval_fn.EvalFnToTextLoss", false]], "evaluate_ast_node() (in module core.functional)": [[38, "core.functional.evaluate_ast_node", false]], "evaluate_samples() (adalcomponent method)": [[63, "optim.AdalComponent.evaluate_samples", false], [80, "optim.trainer.AdalComponent.evaluate_samples", false], [81, "optim.trainer.adal.AdalComponent.evaluate_samples", false]], "evaluationresult (class in eval.base)": [[55, "eval.base.EvaluationResult", false]], "evaluationresult (class in optim.types)": [[83, "optim.types.EvaluationResult", false]], "example (class in datasets)": [[53, "datasets.Example", false]], "example (class in datasets.types)": [[51, "datasets.types.Example", false]], "example_json (dataclassformattype attribute)": [[31, "core.base_data_class.DataClassFormatType.EXAMPLE_JSON", false]], "example_yaml (dataclassformattype attribute)": [[31, "core.base_data_class.DataClassFormatType.EXAMPLE_YAML", false]], "exclude_input_fields_from_bootstrap_demos (demooptimizer attribute)": [[63, "optim.DemoOptimizer.exclude_input_fields_from_bootstrap_demos", false], [71, "optim.optimizer.DemoOptimizer.exclude_input_fields_from_bootstrap_demos", false]], "excludetype (in module core.base_data_class)": [[31, "core.base_data_class.ExcludeType", false]], "execute() (functiontool method)": [[37, "core.func_tool.FunctionTool.execute", false]], "execute_func() (toolmanager method)": [[45, "core.tool_manager.ToolManager.execute_func", false]], "execute_func_async() (toolmanager method)": [[45, "core.tool_manager.ToolManager.execute_func_async", false]], "execute_func_expr() (toolmanager method)": [[45, "core.tool_manager.ToolManager.execute_func_expr", false]], "execute_func_expr_async() (toolmanager method)": [[45, "core.tool_manager.ToolManager.execute_func_expr_async", false]], "execute_func_expr_via_eval() (toolmanager method)": [[45, "core.tool_manager.ToolManager.execute_func_expr_via_eval", false]], "execute_func_expr_via_sandbox() (toolmanager method)": [[45, "core.tool_manager.ToolManager.execute_func_expr_via_sandbox", false]], "extend() (componentlist method)": [[33, "core.container.ComponentList.extend", false]], "extend() (localdb method)": [[34, "core.db.LocalDB.extend", false]], "extend() (sequential method)": [[33, "core.container.Sequential.extend", false]], "extract_dataclass_type() (in module core.functional)": [[38, "core.functional.extract_dataclass_type", false]], "extract_first_boolean() (in module core.functional)": [[38, "core.functional.extract_first_boolean", false]], "extract_first_float() (in module core.functional)": [[38, "core.functional.extract_first_float", false]], "extract_first_int() (in module core.functional)": [[38, "core.functional.extract_first_int", false]], "extract_function_expression() (in module core.functional)": [[38, "core.functional.extract_function_expression", false]], "extract_json_str() (in module core.functional)": [[38, "core.functional.extract_json_str", false]], "extract_list_str() (in module core.functional)": [[38, "core.functional.extract_list_str", false]], "extract_new_variable() (in module optim.text_grad.tgd_optimizer)": [[79, "optim.text_grad.tgd_optimizer.extract_new_variable", false]], "extract_yaml_str() (in module core.functional)": [[38, "core.functional.extract_yaml_str", false]], "f1_score() (in module eval.utils)": [[60, "eval.utils.f1_score", false]], "failed_proposals (tgdoptimizer attribute)": [[63, "optim.TGDOptimizer.failed_proposals", false], [74, "optim.text_grad.TGDOptimizer.failed_proposals", false], [79, "optim.text_grad.tgd_optimizer.TGDOptimizer.failed_proposals", false]], "failure_message_to_backward_engine() (generator static method)": [[39, "core.generator.Generator.failure_message_to_backward_engine", false]], "failure_message_to_optimizer() (backwardengine static method)": [[39, "core.generator.BackwardEngine.failure_message_to_optimizer", false]], "faiss (optionalpackages attribute)": [[95, "utils.lazy_import.OptionalPackages.FAISS", false]], "faissretriever (class in components.retriever.faiss_retriever)": [[24, "components.retriever.faiss_retriever.FAISSRetriever", false]], "feedback (evaluationresult attribute)": [[83, "optim.types.EvaluationResult.feedback", false]], "fetch_items() (localdb method)": [[34, "core.db.LocalDB.fetch_items", false]], "fetch_transformed_items() (localdb method)": [[34, "core.db.LocalDB.fetch_transformed_items", false]], "find_demo_parameter() (generator static method)": [[39, "core.generator.Generator.find_demo_parameter", false]], "find_instance_name_from_self() (in module core.func_tool)": [[37, "core.func_tool.find_instance_name_from_self", false]], "fit() (trainer method)": [[63, "optim.Trainer.fit", false], [80, "optim.trainer.Trainer.fit", false], [82, "optim.trainer.trainer.Trainer.fit", false]], "fix_json_escaped_single_quotes() (in module core.functional)": [[38, "core.functional.fix_json_escaped_single_quotes", false]], "fix_json_missing_commas() (in module core.functional)": [[38, "core.functional.fix_json_missing_commas", false]], "floatparser (class in core.string_parser)": [[43, "core.string_parser.FloatParser", false]], "fluency (gevalmetric attribute)": [[57, "eval.g_eval.GEvalMetric.FLUENCY", false], [61, "eval.GEvalMetric.FLUENCY", false]], "fn_schema_str() (functiondefinition method)": [[46, "core.types.FunctionDefinition.fn_schema_str", false]], "format_class_str() (dataclass class method)": [[31, "core.base_data_class.DataClass.format_class_str", false]], "format_example_str() (dataclass method)": [[31, "core.base_data_class.DataClass.format_example_str", false]], "format_instructions() (booleanoutputparser method)": [[21, "components.output_parsers.outputs.BooleanOutputParser.format_instructions", false]], "format_instructions() (jsonoutputparser method)": [[19, "components.output_parsers.JsonOutputParser.format_instructions", false], [21, "components.output_parsers.outputs.JsonOutputParser.format_instructions", false]], "format_instructions() (listoutputparser method)": [[19, "components.output_parsers.ListOutputParser.format_instructions", false], [21, "components.output_parsers.outputs.ListOutputParser.format_instructions", false]], "format_instructions() (outputparser method)": [[21, "components.output_parsers.outputs.OutputParser.format_instructions", false]], "format_instructions() (yamloutputparser method)": [[19, "components.output_parsers.YamlOutputParser.format_instructions", false], [21, "components.output_parsers.outputs.YamlOutputParser.format_instructions", false]], "format_vector_search_query() (postgresretriever class method)": [[27, "components.retriever.postgres_retriever.PostgresRetriever.format_vector_search_query", false]], "forward() (adalcomponent method)": [[63, "optim.AdalComponent.forward", false], [80, "optim.trainer.AdalComponent.forward", false], [81, "optim.trainer.adal.AdalComponent.forward", false]], "forward() (backwardengine method)": [[39, "core.generator.BackwardEngine.forward", false]], "forward() (callfunctiontool method)": [[45, "core.tool_manager.CallFunctionTool.forward", false]], "forward() (component method)": [[32, "core.component.Component.forward", false]], "forward() (evalfntotextloss method)": [[63, "optim.EvalFnToTextLoss.forward", false], [74, "optim.text_grad.EvalFnToTextLoss.forward", false], [78, "optim.text_grad.text_loss_with_eval_fn.EvalFnToTextLoss.forward", false]], "forward() (functiontool method)": [[37, "core.func_tool.FunctionTool.forward", false]], "forward() (fungradcomponent method)": [[68, "optim.grad_component.FunGradComponent.forward", false]], "forward() (generator method)": [[39, "core.generator.Generator.forward", false]], "forward() (gradcomponent method)": [[68, "optim.grad_component.GradComponent.forward", false]], "forward() (llmastextloss method)": [[63, "optim.LLMAsTextLoss.forward", false], [74, "optim.text_grad.LLMAsTextLoss.forward", false], [76, "optim.text_grad.llm_text_loss.LLMAsTextLoss.forward", false]], "forward() (losscomponent method)": [[70, "optim.loss_component.LossComponent.forward", false]], "forward() (reactagent method)": [[0, "components.agent.ReActAgent.forward", false], [1, "components.agent.react.ReActAgent.forward", false]], "forward() (retriever method)": [[42, "core.retriever.Retriever.forward", false]], "forward() (sum method)": [[74, "optim.text_grad.Sum.forward", false], [77, "optim.text_grad.ops.Sum.forward", false]], "forward() (toolmanager method)": [[45, "core.tool_manager.ToolManager.forward", false]], "from_config() (component class method)": [[32, "core.component.Component.from_config", false]], "from_config() (embedder class method)": [[36, "core.embedder.Embedder.from_config", false]], "from_config() (generator class method)": [[39, "core.generator.Generator.from_config", false]], "from_dict() (azureaiclient class method)": [[9, "components.model_client.azureai_client.AzureAIClient.from_dict", false]], "from_dict() (component class method)": [[32, "core.component.Component.from_dict", false]], "from_dict() (dataclass class method)": [[31, "core.base_data_class.DataClass.from_dict", false]], "from_dict() (document class method)": [[46, "core.types.Document.from_dict", false]], "from_dict() (dynamicdataclassfactory static method)": [[31, "core.base_data_class.DynamicDataClassFactory.from_dict", false]], "from_dict() (groqapiclient class method)": [[14, "components.model_client.groq_client.GroqAPIClient.from_dict", false]], "from_dict() (ollamaclient class method)": [[15, "components.model_client.ollama_client.OllamaClient.from_dict", false]], "from_dict() (openaiclient class method)": [[16, "components.model_client.openai_client.OpenAIClient.from_dict", false]], "from_dict() (outputparameter class method)": [[63, "optim.OutputParameter.from_dict", false]], "from_dict() (parameter class method)": [[63, "optim.Parameter.from_dict", false], [72, "optim.parameter.Parameter.from_dict", false]], "from_dict() (prompt class method)": [[41, "core.prompt_builder.Prompt.from_dict", false]], "from_dict_to_json() (in module core.functional)": [[38, "core.functional.from_dict_to_json", false]], "from_dict_to_yaml() (in module core.functional)": [[38, "core.functional.from_dict_to_yaml", false]], "from_function() (function class method)": [[46, "core.types.Function.from_function", false]], "from_function() (functionexpression class method)": [[46, "core.types.FunctionExpression.from_function", false]], "from_json() (dataclass class method)": [[31, "core.base_data_class.DataClass.from_json", false]], "from_json_to_dict() (in module core.functional)": [[38, "core.functional.from_json_to_dict", false]], "from_response_component_id (gradient attribute)": [[63, "optim.Gradient.from_response_component_id", false], [69, "optim.gradient.Gradient.from_response_component_id", false]], "from_response_id (gradient attribute)": [[63, "optim.Gradient.from_response_id", false], [69, "optim.gradient.Gradient.from_response_id", false]], "from_yaml() (dataclass class method)": [[31, "core.base_data_class.DataClass.from_yaml", false]], "from_yaml_to_dict() (in module core.functional)": [[38, "core.functional.from_yaml_to_dict", false]], "full_response (componenttrace attribute)": [[72, "optim.parameter.ComponentTrace.full_response", false]], "full_response (outputparameter attribute)": [[63, "optim.OutputParameter.full_response", false]], "fun_to_grad_component() (in module optim.grad_component)": [[68, "optim.grad_component.fun_to_grad_component", false]], "func_desc (functiondefinition attribute)": [[46, "core.types.FunctionDefinition.func_desc", false]], "func_name() (functiondefinition method)": [[46, "core.types.FunctionDefinition.func_name", false]], "func_parameters (functiondefinition attribute)": [[46, "core.types.FunctionDefinition.func_parameters", false]], "func_to_component() (in module core.component)": [[32, "core.component.func_to_component", false]], "func_to_data_component() (in module core.component)": [[32, "core.component.func_to_data_component", false]], "funccomponent (class in core.component)": [[32, "core.component.FuncComponent", false]], "funcdatacomponent (class in core.component)": [[32, "core.component.FuncDataComponent", false]], "function (class in core.types)": [[46, "core.types.Function", false]], "function (stepoutput attribute)": [[46, "core.types.StepOutput.function", false]], "function_definitions (toolmanager property)": [[45, "core.tool_manager.ToolManager.function_definitions", false]], "functiondefinition (class in core.types)": [[46, "core.types.FunctionDefinition", false]], "functionexperssiontofunction (class in core.tool_manager)": [[45, "core.tool_manager.FunctionExperssionToFunction", false]], "functionexpression (class in core.types)": [[46, "core.types.FunctionExpression", false]], "functionoutput (class in core.types)": [[46, "core.types.FunctionOutput", false]], "functiontool (class in core.func_tool)": [[37, "core.func_tool.FunctionTool", false]], "fungradcomponent (class in optim.grad_component)": [[68, "optim.grad_component.FunGradComponent", false]], "gather_trainer_states() (trainer method)": [[63, "optim.Trainer.gather_trainer_states", false], [80, "optim.trainer.Trainer.gather_trainer_states", false], [82, "optim.trainer.trainer.Trainer.gather_trainer_states", false]], "generate_function_call_expression_from_callable() (in module core.functional)": [[38, "core.functional.generate_function_call_expression_from_callable", false]], "generate_node_html() (parameter static method)": [[63, "optim.Parameter.generate_node_html", false], [72, "optim.parameter.Parameter.generate_node_html", false]], "generate_readable_key_for_function() (in module core.functional)": [[38, "core.functional.generate_readable_key_for_function", false]], "generator (class in core.generator)": [[39, "core.generator.Generator", false]], "generator_names (generatorstatelogger property)": [[88, "tracing.generator_state_logger.GeneratorStateLogger.generator_names", false]], "generator_names_to_files (generatorcalllogger property)": [[87, "tracing.generator_call_logger.GeneratorCallLogger.generator_names_to_files", false]], "generator_output (parametertype attribute)": [[83, "optim.types.ParameterType.GENERATOR_OUTPUT", false]], "generatorcalllogger (class in tracing.generator_call_logger)": [[87, "tracing.generator_call_logger.GeneratorCallLogger", false]], "generatorcallrecord (class in tracing.generator_call_logger)": [[87, "tracing.generator_call_logger.GeneratorCallRecord", false]], "generatoroutput (class in core.types)": [[46, "core.types.GeneratorOutput", false]], "generatorstatelogger (class in tracing.generator_state_logger)": [[88, "tracing.generator_state_logger.GeneratorStateLogger", false]], "generatorstatesrecord (class in tracing.generator_state_logger)": [[88, "tracing.generator_state_logger.GeneratorStatesRecord", false]], "get() (entitymapping class method)": [[97, "utils.registry.EntityMapping.get", false]], "get_adalflow_default_root_path() (in module utils.global_config)": [[94, "utils.global_config.get_adalflow_default_root_path", false]], "get_all() (entitymapping class method)": [[97, "utils.registry.EntityMapping.get_all", false]], "get_all_messages_content() (in module components.model_client.openai_client)": [[16, "components.model_client.openai_client.get_all_messages_content", false]], "get_cache_path() (generator method)": [[39, "core.generator.Generator.get_cache_path", false]], "get_calls() (generatorcalllogger method)": [[87, "tracing.generator_call_logger.GeneratorCallLogger.get_calls", false]], "get_chat_history_str() (conversation method)": [[46, "core.types.Conversation.get_chat_history_str", false]], "get_context_index() (toolmanager static method)": [[45, "core.tool_manager.ToolManager.get_context_index", false]], "get_current_script_and_line() (in module utils.logger)": [[96, "utils.logger.get_current_script_and_line", false]], "get_dataclass_schema() (in module core.functional)": [[38, "core.functional.get_dataclass_schema", false]], "get_default_task_instruction() (bigbenchhard static method)": [[48, "datasets.big_bench_hard.BigBenchHard.get_default_task_instruction", false], [53, "datasets.BigBenchHard.get_default_task_instruction", false]], "get_device() (in module components.model_client.transformers_client)": [[17, "components.model_client.transformers_client.get_device", false]], "get_dialog_turns() (conversation method)": [[46, "core.types.Conversation.get_dialog_turns", false]], "get_enum_schema() (in module core.functional)": [[38, "core.functional.get_enum_schema", false]], "get_examples_str() (dataclassparser method)": [[19, "components.output_parsers.DataClassParser.get_examples_str", false], [20, "components.output_parsers.dataclass_parser.DataClassParser.get_examples_str", false]], "get_first_message_content() (in module components.model_client.anthropic_client)": [[8, "components.model_client.anthropic_client.get_first_message_content", false]], "get_first_message_content() (in module components.model_client.openai_client)": [[16, "components.model_client.openai_client.get_first_message_content", false]], "get_fun_schema() (in module core.functional)": [[38, "core.functional.get_fun_schema", false]], "get_grad_fn() (parameter method)": [[63, "optim.Parameter.get_grad_fn", false], [72, "optim.parameter.Parameter.get_grad_fn", false]], "get_gradient_and_context_text() (parameter method)": [[63, "optim.Parameter.get_gradient_and_context_text", false], [72, "optim.parameter.Parameter.get_gradient_and_context_text", false]], "get_gradients_component_schema() (parameter method)": [[63, "optim.Parameter.get_gradients_component_schema", false], [72, "optim.parameter.Parameter.get_gradients_component_schema", false]], "get_gradients_names() (parameter method)": [[63, "optim.Parameter.get_gradients_names", false], [72, "optim.parameter.Parameter.get_gradients_names", false]], "get_gradients_str() (parameter method)": [[63, "optim.Parameter.get_gradients_str", false], [72, "optim.parameter.Parameter.get_gradients_str", false]], "get_gt() (parameter method)": [[63, "optim.Parameter.get_gt", false], [72, "optim.parameter.Parameter.get_gt", false]], "get_input_fields() (dataclass class method)": [[31, "core.base_data_class.DataClass.get_input_fields", false]], "get_input_format_str() (dataclassparser method)": [[19, "components.output_parsers.DataClassParser.get_input_format_str", false], [20, "components.output_parsers.dataclass_parser.DataClassParser.get_input_format_str", false]], "get_input_str() (dataclassparser method)": [[19, "components.output_parsers.DataClassParser.get_input_str", false], [20, "components.output_parsers.dataclass_parser.DataClassParser.get_input_str", false]], "get_jinja2_environment() (in module core.prompt_builder)": [[41, "core.prompt_builder.get_jinja2_environment", false]], "get_log_location() (generatorcalllogger method)": [[87, "tracing.generator_call_logger.GeneratorCallLogger.get_log_location", false]], "get_log_location() (generatorstatelogger method)": [[88, "tracing.generator_state_logger.GeneratorStateLogger.get_log_location", false]], "get_logger() (in module utils.logger)": [[96, "utils.logger.get_logger", false]], "get_model_args() (in module core.types)": [[46, "core.types.get_model_args", false]], "get_next_order() (conversation method)": [[46, "core.types.Conversation.get_next_order", false]], "get_output_fields() (dataclass class method)": [[31, "core.base_data_class.DataClass.get_output_fields", false]], "get_output_format_str() (dataclassparser method)": [[19, "components.output_parsers.DataClassParser.get_output_format_str", false], [20, "components.output_parsers.dataclass_parser.DataClassParser.get_output_format_str", false]], "get_param_info() (parameter method)": [[63, "optim.Parameter.get_param_info", false], [72, "optim.parameter.Parameter.get_param_info", false]], "get_probabilities() (in module components.model_client.openai_client)": [[16, "components.model_client.openai_client.get_probabilities", false]], "get_prompt() (generator method)": [[39, "core.generator.Generator.get_prompt", false]], "get_prompt_data() (parameter method)": [[63, "optim.Parameter.get_prompt_data", false], [72, "optim.parameter.Parameter.get_prompt_data", false]], "get_prompt_variables() (prompt method)": [[41, "core.prompt_builder.Prompt.get_prompt_variables", false]], "get_short_value() (parameter method)": [[63, "optim.Parameter.get_short_value", false], [72, "optim.parameter.Parameter.get_short_value", false]], "get_string_tokens() (tokenizer method)": [[44, "core.tokenizer.Tokenizer.get_string_tokens", false]], "get_subcomponent() (component method)": [[32, "core.component.Component.get_subcomponent", false]], "get_task_desc() (dataclass class method)": [[31, "core.base_data_class.DataClass.get_task_desc", false]], "get_task_desc_str() (dataclassparser method)": [[19, "components.output_parsers.DataClassParser.get_task_desc_str", false], [20, "components.output_parsers.dataclass_parser.DataClassParser.get_task_desc_str", false]], "get_top_k_indices_scores() (in module core.functional)": [[38, "core.functional.get_top_k_indices_scores", false]], "get_transformed_data() (localdb method)": [[34, "core.db.LocalDB.get_transformed_data", false]], "get_transformer_keys() (localdb method)": [[34, "core.db.LocalDB.get_transformer_keys", false]], "get_type_schema() (in module core.functional)": [[38, "core.functional.get_type_schema", false]], "gevaljudgeevaluator (class in eval)": [[61, "eval.GEvalJudgeEvaluator", false]], "gevaljudgeevaluator (class in eval.g_eval)": [[57, "eval.g_eval.GEvalJudgeEvaluator", false]], "gevalllmjudge (class in eval)": [[61, "eval.GEvalLLMJudge", false]], "gevalllmjudge (class in eval.g_eval)": [[57, "eval.g_eval.GEvalLLMJudge", false]], "gevalmetric (class in eval)": [[61, "eval.GEvalMetric", false]], "gevalmetric (class in eval.g_eval)": [[57, "eval.g_eval.GEvalMetric", false]], "gold_titles (hotpotqadata attribute)": [[51, "datasets.types.HotPotQAData.gold_titles", false], [53, "datasets.HotPotQAData.gold_titles", false]], "google_genai (modelclienttype attribute)": [[46, "core.types.ModelClientType.GOOGLE_GENAI", false]], "google_generativeai (optionalpackages attribute)": [[95, "utils.lazy_import.OptionalPackages.GOOGLE_GENERATIVEAI", false]], "googlegenaiclient (class in components.model_client.google_client)": [[13, "components.model_client.google_client.GoogleGenAIClient", false]], "gradcomponent (class in optim.grad_component)": [[68, "optim.grad_component.GradComponent", false]], "gradient (class in optim)": [[63, "optim.Gradient", false]], "gradient (class in optim.gradient)": [[69, "optim.gradient.Gradient", false]], "gradientcontext (class in optim)": [[63, "optim.GradientContext", false]], "gradientcontext (class in optim.gradient)": [[69, "optim.gradient.GradientContext", false]], "gradients (parameter attribute)": [[72, "optim.parameter.Parameter.gradients", false]], "groq (modelclienttype attribute)": [[46, "core.types.ModelClientType.GROQ", false]], "groq (optionalpackages attribute)": [[95, "utils.lazy_import.OptionalPackages.GROQ", false]], "groqapiclient (class in components.model_client.groq_client)": [[14, "components.model_client.groq_client.GroqAPIClient", false]], "gt (parameter attribute)": [[63, "optim.Parameter.gt", false], [72, "optim.parameter.Parameter.gt", false]], "gts (instruction attribute)": [[79, "optim.text_grad.tgd_optimizer.Instruction.gts", false]], "handle_streaming_response() (in module components.model_client.openai_client)": [[16, "components.model_client.openai_client.handle_streaming_response", false]], "hash_text() (in module utils.cache)": [[90, "utils.cache.hash_text", false]], "hash_text_sha1() (in module utils.cache)": [[90, "utils.cache.hash_text_sha1", false]], "historyprompt (class in optim.text_grad.tgd_optimizer)": [[79, "optim.text_grad.tgd_optimizer.HistoryPrompt", false]], "hotpotqa (class in datasets)": [[53, "datasets.HotPotQA", false]], "hotpotqa (class in datasets.hotpot_qa)": [[49, "datasets.hotpot_qa.HotPotQA", false]], "hotpotqadata (class in datasets)": [[53, "datasets.HotPotQAData", false]], "hotpotqadata (class in datasets.types)": [[51, "datasets.types.HotPotQAData", false]], "hyperparam (parametertype attribute)": [[83, "optim.types.ParameterType.HYPERPARAM", false]], "id (basedata attribute)": [[51, "datasets.types.BaseData.id", false]], "id (componentnode attribute)": [[72, "optim.parameter.ComponentNode.id", false]], "id (componenttrace attribute)": [[72, "optim.parameter.ComponentTrace.id", false]], "id (conversation attribute)": [[46, "core.types.Conversation.id", false]], "id (dialogturn attribute)": [[46, "core.types.DialogTurn.id", false]], "id (document attribute)": [[46, "core.types.Document.id", false]], "id (example attribute)": [[51, "datasets.types.Example.id", false], [53, "datasets.Example.id", false]], "id (generatoroutput attribute)": [[46, "core.types.GeneratorOutput.id", false]], "id (gradcomponent attribute)": [[68, "optim.grad_component.GradComponent.id", false]], "id (historyprompt attribute)": [[79, "optim.text_grad.tgd_optimizer.HistoryPrompt.id", false]], "id (losscomponent attribute)": [[70, "optim.loss_component.LossComponent.id", false]], "id (parameter attribute)": [[63, "optim.Parameter.id", false], [72, "optim.parameter.Parameter.id", false]], "id (promptdata attribute)": [[83, "optim.types.PromptData.id", false]], "id (retrieveroutput attribute)": [[46, "core.types.RetrieverOutput.id", false]], "image_generation (modeltype attribute)": [[46, "core.types.ModelType.IMAGE_GENERATION", false]], "includetype (in module core.base_data_class)": [[31, "core.base_data_class.IncludeType", false]], "increment_steps_from_last_improvement() (tgdoptimizer method)": [[63, "optim.TGDOptimizer.increment_steps_from_last_improvement", false], [74, "optim.text_grad.TGDOptimizer.increment_steps_from_last_improvement", false], [79, "optim.text_grad.tgd_optimizer.TGDOptimizer.increment_steps_from_last_improvement", false]], "index (embedding attribute)": [[46, "core.types.Embedding.index", false]], "index (sample attribute)": [[73, "optim.sampler.Sample.index", false]], "index_keys (retriever attribute)": [[42, "core.retriever.Retriever.index_keys", false]], "index_path (localdb attribute)": [[34, "core.db.LocalDB.index_path", false]], "indexed (retriever attribute)": [[42, "core.retriever.Retriever.indexed", false]], "indices (subset attribute)": [[92, "utils.data.Subset.indices", false]], "infer_bge_reranker_base() (transformerreranker method)": [[17, "components.model_client.transformers_client.TransformerReranker.infer_bge_reranker_base", false]], "infer_gte_base_embedding() (transformerembedder method)": [[17, "components.model_client.transformers_client.TransformerEmbedder.infer_gte_base_embedding", false]], "infer_llm() (transformerllm method)": [[17, "components.model_client.transformers_client.TransformerLLM.infer_llm", false]], "init_async_client() (anthropicapiclient method)": [[8, "components.model_client.anthropic_client.AnthropicAPIClient.init_async_client", false]], "init_async_client() (azureaiclient method)": [[9, "components.model_client.azureai_client.AzureAIClient.init_async_client", false]], "init_async_client() (cohereapiclient method)": [[11, "components.model_client.cohere_client.CohereAPIClient.init_async_client", false]], "init_async_client() (groqapiclient method)": [[14, "components.model_client.groq_client.GroqAPIClient.init_async_client", false]], "init_async_client() (modelclient method)": [[40, "core.model_client.ModelClient.init_async_client", false]], "init_async_client() (ollamaclient method)": [[15, "components.model_client.ollama_client.OllamaClient.init_async_client", false]], "init_async_client() (openaiclient method)": [[16, "components.model_client.openai_client.OpenAIClient.init_async_client", false]], "init_llm_client() (transformersclient method)": [[17, "components.model_client.transformers_client.TransformersClient.init_llm_client", false]], "init_model() (transformerembedder method)": [[17, "components.model_client.transformers_client.TransformerEmbedder.init_model", false]], "init_model() (transformerllm method)": [[17, "components.model_client.transformers_client.TransformerLLM.init_model", false]], "init_model() (transformerreranker method)": [[17, "components.model_client.transformers_client.TransformerReranker.init_model", false]], "init_reranker_client() (transformersclient method)": [[17, "components.model_client.transformers_client.TransformersClient.init_reranker_client", false]], "init_sync_client() (anthropicapiclient method)": [[8, "components.model_client.anthropic_client.AnthropicAPIClient.init_sync_client", false]], "init_sync_client() (azureaiclient method)": [[9, "components.model_client.azureai_client.AzureAIClient.init_sync_client", false]], "init_sync_client() (cohereapiclient method)": [[11, "components.model_client.cohere_client.CohereAPIClient.init_sync_client", false]], "init_sync_client() (googlegenaiclient method)": [[13, "components.model_client.google_client.GoogleGenAIClient.init_sync_client", false]], "init_sync_client() (groqapiclient method)": [[14, "components.model_client.groq_client.GroqAPIClient.init_sync_client", false]], "init_sync_client() (modelclient method)": [[40, "core.model_client.ModelClient.init_sync_client", false]], "init_sync_client() (ollamaclient method)": [[15, "components.model_client.ollama_client.OllamaClient.init_sync_client", false]], "init_sync_client() (openaiclient method)": [[16, "components.model_client.openai_client.OpenAIClient.init_sync_client", false]], "init_sync_client() (transformersclient method)": [[17, "components.model_client.transformers_client.TransformersClient.init_sync_client", false]], "initial_validation() (trainer method)": [[63, "optim.Trainer.initial_validation", false], [80, "optim.trainer.Trainer.initial_validation", false], [82, "optim.trainer.trainer.Trainer.initial_validation", false]], "inner_product (distancetooperator attribute)": [[27, "components.retriever.postgres_retriever.DistanceToOperator.INNER_PRODUCT", false]], "input (embedderoutput attribute)": [[46, "core.types.EmbedderOutput.input", false]], "input (functionoutput attribute)": [[46, "core.types.FunctionOutput.input", false]], "input (generatorcallrecord attribute)": [[87, "tracing.generator_call_logger.GeneratorCallRecord.input", false]], "input (parametertype attribute)": [[83, "optim.types.ParameterType.INPUT", false]], "input_args (componenttrace attribute)": [[72, "optim.parameter.ComponentTrace.input_args", false]], "input_output (gradientcontext attribute)": [[63, "optim.GradientContext.input_output", false], [69, "optim.gradient.GradientContext.input_output", false]], "insert() (componentlist method)": [[33, "core.container.ComponentList.insert", false]], "insert() (sequential method)": [[33, "core.container.Sequential.insert", false]], "instance (objecttypes attribute)": [[98, "utils.serialization.ObjectTypes.INSTANCE", false]], "instruction (class in optim.text_grad.tgd_optimizer)": [[79, "optim.text_grad.tgd_optimizer.Instruction", false]], "instruction_to_backward_engine (parameter attribute)": [[72, "optim.parameter.Parameter.instruction_to_backward_engine", false]], "instruction_to_optimizer (parameter attribute)": [[72, "optim.parameter.Parameter.instruction_to_optimizer", false]], "intparser (class in core.string_parser)": [[43, "core.string_parser.IntParser", false]], "is_async (functiontool property)": [[37, "core.func_tool.FunctionTool.is_async", false]], "is_dataclass_instance() (in module core.functional)": [[38, "core.functional.is_dataclass_instance", false]], "is_default_copy (gradient attribute)": [[63, "optim.Gradient.is_default_copy", false], [69, "optim.gradient.Gradient.is_default_copy", false]], "is_key_in_template() (prompt method)": [[41, "core.prompt_builder.Prompt.is_key_in_template", false]], "is_normalized (embedderoutput property)": [[46, "core.types.EmbedderOutput.is_normalized", false]], "is_normalized() (in module core.functional)": [[38, "core.functional.is_normalized", false]], "is_picklable() (component method)": [[32, "core.component.Component.is_picklable", false]], "is_potential_dataclass() (in module core.functional)": [[38, "core.functional.is_potential_dataclass", false]], "is_running_in_event_loop() (in module core.func_tool)": [[37, "core.func_tool.is_running_in_event_loop", false]], "items (localdb attribute)": [[34, "core.db.LocalDB.items", false]], "json_definitions (toolmanager property)": [[45, "core.tool_manager.ToolManager.json_definitions", false]], "jsonoutputparser (class in components.output_parsers)": [[19, "components.output_parsers.JsonOutputParser", false]], "jsonoutputparser (class in components.output_parsers.outputs)": [[21, "components.output_parsers.outputs.JsonOutputParser", false]], "jsonparser (class in core.string_parser)": [[43, "core.string_parser.JsonParser", false]], "judgement_score_list (llmjudgeevalresult attribute)": [[58, "eval.llm_as_judge.LLMJudgeEvalResult.judgement_score_list", false]], "kwargs (function attribute)": [[46, "core.types.Function.kwargs", false]], "l1 (distancetooperator attribute)": [[27, "components.retriever.postgres_retriever.DistanceToOperator.L1", false]], "l2 (distancetooperator attribute)": [[27, "components.retriever.postgres_retriever.DistanceToOperator.L2", false]], "lancedb (optionalpackages attribute)": [[95, "utils.lazy_import.OptionalPackages.LANCEDB", false]], "lancedbretriever (class in components.retriever.lancedb_retriver)": [[25, "components.retriever.lancedb_retriver.LanceDBRetriever", false]], "lazyimport (class in utils.lazy_import)": [[95, "utils.lazy_import.LazyImport", false]], "length (embedderoutput property)": [[46, "core.types.EmbedderOutput.length", false]], "length (localdb property)": [[34, "core.db.LocalDB.length", false]], "listoutputparser (class in components.output_parsers)": [[19, "components.output_parsers.ListOutputParser", false]], "listoutputparser (class in components.output_parsers.outputs)": [[21, "components.output_parsers.outputs.ListOutputParser", false]], "listparser (class in core.string_parser)": [[43, "core.string_parser.ListParser", false]], "llm (modeltype attribute)": [[46, "core.types.ModelType.LLM", false]], "llmasjudge (class in eval)": [[61, "eval.LLMasJudge", false]], "llmasjudge (class in eval.llm_as_judge)": [[58, "eval.llm_as_judge.LLMasJudge", false]], "llmastextloss (class in optim)": [[63, "optim.LLMAsTextLoss", false]], "llmastextloss (class in optim.text_grad)": [[74, "optim.text_grad.LLMAsTextLoss", false]], "llmastextloss (class in optim.text_grad.llm_text_loss)": [[76, "optim.text_grad.llm_text_loss.LLMAsTextLoss", false]], "llmjudgeevalresult (class in eval.llm_as_judge)": [[58, "eval.llm_as_judge.LLMJudgeEvalResult", false]], "llmretriever (class in components.retriever)": [[22, "components.retriever.LLMRetriever", false]], "llmretriever (class in components.retriever.llm_retriever)": [[26, "components.retriever.llm_retriever.LLMRetriever", false]], "load() (generatorcalllogger method)": [[87, "tracing.generator_call_logger.GeneratorCallLogger.load", false]], "load() (generatorstatelogger method)": [[88, "tracing.generator_state_logger.GeneratorStateLogger.load", false]], "load() (in module utils.file_io)": [[93, "utils.file_io.load", false]], "load() (localdb method)": [[34, "core.db.LocalDB.load", false]], "load_class() (lazyimport method)": [[95, "utils.lazy_import.LazyImport.load_class", false]], "load_from_file() (bm25retriever class method)": [[22, "components.retriever.BM25Retriever.load_from_file", false], [23, "components.retriever.bm25_retriever.BM25Retriever.load_from_file", false]], "load_from_file() (retriever class method)": [[42, "core.retriever.Retriever.load_from_file", false]], "load_from_pickle() (component class method)": [[32, "core.component.Component.load_from_pickle", false]], "load_json() (in module utils.file_io)": [[93, "utils.file_io.load_json", false]], "load_jsonl() (in module utils.file_io)": [[93, "utils.file_io.load_jsonl", false]], "load_meta_data() (generatorcalllogger method)": [[87, "tracing.generator_call_logger.GeneratorCallLogger.load_meta_data", false]], "load_pickle() (in module utils.file_io)": [[93, "utils.file_io.load_pickle", false]], "load_standard_json() (in module utils.file_io)": [[93, "utils.file_io.load_standard_json", false]], "load_state() (localdb class method)": [[34, "core.db.LocalDB.load_state", false]], "load_state_dict() (component method)": [[32, "core.component.Component.load_state_dict", false]], "load_state_pickle() (component class method)": [[32, "core.component.Component.load_state_pickle", false]], "localdb (class in core.db)": [[34, "core.db.LocalDB", false]], "log_call() (generatorcalllogger method)": [[87, "tracing.generator_call_logger.GeneratorCallLogger.log_call", false]], "log_prompt() (generatorstatelogger method)": [[88, "tracing.generator_state_logger.GeneratorStateLogger.log_prompt", false]], "logprob (tokenlogprob attribute)": [[46, "core.types.TokenLogProb.logprob", false]], "longest_common_substring() (in module eval.functional)": [[56, "eval.functional.longest_common_substring", false]], "loss_eval_fn (adalcomponent attribute)": [[63, "optim.AdalComponent.loss_eval_fn", false], [80, "optim.trainer.AdalComponent.loss_eval_fn", false], [81, "optim.trainer.adal.AdalComponent.loss_eval_fn", false]], "loss_fn (adalcomponent attribute)": [[63, "optim.AdalComponent.loss_fn", false], [80, "optim.trainer.AdalComponent.loss_fn", false], [81, "optim.trainer.adal.AdalComponent.loss_fn", false]], "loss_output (parametertype attribute)": [[83, "optim.types.ParameterType.LOSS_OUTPUT", false]], "loss_step() (adalcomponent method)": [[63, "optim.AdalComponent.loss_step", false], [80, "optim.trainer.AdalComponent.loss_step", false], [81, "optim.trainer.adal.AdalComponent.loss_step", false]], "losscomponent (class in optim.loss_component)": [[70, "optim.loss_component.LossComponent", false]], "map_to_successor() (parameter method)": [[63, "optim.Parameter.map_to_successor", false], [72, "optim.parameter.Parameter.map_to_successor", false]], "mapper_setups (localdb attribute)": [[34, "core.db.LocalDB.mapper_setups", false]], "max_correct_samples (trainer attribute)": [[63, "optim.Trainer.max_correct_samples", false], [80, "optim.trainer.Trainer.max_correct_samples", false], [82, "optim.trainer.trainer.Trainer.max_correct_samples", false]], "max_error_samples (trainer attribute)": [[63, "optim.Trainer.max_error_samples", false], [80, "optim.trainer.Trainer.max_error_samples", false], [82, "optim.trainer.trainer.Trainer.max_error_samples", false]], "max_proposals_per_step (trainer attribute)": [[63, "optim.Trainer.max_proposals_per_step", false], [80, "optim.trainer.Trainer.max_proposals_per_step", false], [82, "optim.trainer.trainer.Trainer.max_proposals_per_step", false]], "max_score (trainervalidatestats attribute)": [[83, "optim.types.TrainerValidateStats.max_score", false]], "max_steps (trainer attribute)": [[63, "optim.Trainer.max_steps", false], [80, "optim.trainer.Trainer.max_steps", false], [82, "optim.trainer.trainer.Trainer.max_steps", false]], "mean_of_score (trainervalidatestats attribute)": [[83, "optim.types.TrainerValidateStats.mean_of_score", false]], "memory (class in components.memory.memory)": [[6, "components.memory.memory.Memory", false]], "merge_gradients_for_cycle_components() (parameter method)": [[63, "optim.Parameter.merge_gradients_for_cycle_components", false], [72, "optim.parameter.Parameter.merge_gradients_for_cycle_components", false]], "meta_data (document attribute)": [[46, "core.types.Document.meta_data", false]], "metadata (assistantresponse attribute)": [[46, "core.types.AssistantResponse.metadata", false]], "metadata (conversation attribute)": [[46, "core.types.Conversation.metadata", false]], "metadata (dialogturn attribute)": [[46, "core.types.DialogTurn.metadata", false]], "metadata (generatorcallrecord attribute)": [[87, "tracing.generator_call_logger.GeneratorCallRecord.metadata", false]], "metadata (generatoroutput attribute)": [[46, "core.types.GeneratorOutput.metadata", false]], "metadata (userquery attribute)": [[46, "core.types.UserQuery.metadata", false]], "method (historyprompt attribute)": [[79, "optim.text_grad.tgd_optimizer.HistoryPrompt.method", false]], "method (tgddata attribute)": [[79, "optim.text_grad.tgd_optimizer.TGDData.method", false]], "min_score (trainervalidatestats attribute)": [[83, "optim.types.TrainerValidateStats.min_score", false]], "model (embedderoutput attribute)": [[46, "core.types.EmbedderOutput.model", false]], "model_client (embedder attribute)": [[36, "core.embedder.Embedder.model_client", false]], "model_client (generator attribute)": [[39, "core.generator.Generator.model_client", false]], "model_kwargs (generatorcallrecord attribute)": [[87, "tracing.generator_call_logger.GeneratorCallRecord.model_kwargs", false]], "model_to_init_func (transformerllm attribute)": [[17, "components.model_client.transformers_client.TransformerLLM.model_to_init_func", false]], "model_type (embedder attribute)": [[36, "core.embedder.Embedder.model_type", false]], "model_type (generator attribute)": [[39, "core.generator.Generator.model_type", false]], "modelclient (class in core.model_client)": [[40, "core.model_client.ModelClient", false]], "modelclienttype (class in core.types)": [[46, "core.types.ModelClientType", false]], "models (transformerembedder attribute)": [[17, "components.model_client.transformers_client.TransformerEmbedder.models", false]], "models (transformerllm attribute)": [[17, "components.model_client.transformers_client.TransformerLLM.models", false]], "models (transformerreranker attribute)": [[17, "components.model_client.transformers_client.TransformerReranker.models", false]], "modeltype (class in core.types)": [[46, "core.types.ModelType", false]], "module": [[0, "module-components.agent", false], [1, "module-components.agent.react", false], [2, "module-components.data_process", false], [3, "module-components.data_process.data_components", false], [4, "module-components.data_process.text_splitter", false], [5, "module-components.memory", false], [6, "module-components.memory.memory", false], [7, "module-components.model_client", false], [8, "module-components.model_client.anthropic_client", false], [9, "module-components.model_client.azureai_client", false], [11, "module-components.model_client.cohere_client", false], [12, "module-components.model_client.deepseek_client", false], [13, "module-components.model_client.google_client", false], [14, "module-components.model_client.groq_client", false], [15, "module-components.model_client.ollama_client", false], [16, "module-components.model_client.openai_client", false], [17, "module-components.model_client.transformers_client", false], [18, "module-components.model_client.utils", false], [19, "module-components.output_parsers", false], [20, "module-components.output_parsers.dataclass_parser", false], [21, "module-components.output_parsers.outputs", false], [22, "module-components.retriever", false], [23, "module-components.retriever.bm25_retriever", false], [24, "module-components.retriever.faiss_retriever", false], [25, "module-components.retriever.lancedb_retriver", false], [26, "module-components.retriever.llm_retriever", false], [27, "module-components.retriever.postgres_retriever", false], [28, "module-components.retriever.qdrant_retriever", false], [29, "module-components.retriever.reranker_retriever", false], [31, "module-core.base_data_class", false], [32, "module-core.component", false], [33, "module-core.container", false], [34, "module-core.db", false], [35, "module-core.default_prompt_template", false], [36, "module-core.embedder", false], [37, "module-core.func_tool", false], [38, "module-core.functional", false], [39, "module-core.generator", false], [40, "module-core.model_client", false], [41, "module-core.prompt_builder", false], [42, "module-core.retriever", false], [43, "module-core.string_parser", false], [44, "module-core.tokenizer", false], [45, "module-core.tool_manager", false], [46, "module-core.types", false], [48, "module-datasets.big_bench_hard", false], [49, "module-datasets.hotpot_qa", false], [50, "module-datasets.trec", false], [51, "module-datasets.types", false], [52, "module-datasets.utils", false], [53, "module-datasets", false], [54, "module-eval.answer_match_acc", false], [55, "module-eval.base", false], [56, "module-eval.functional", false], [57, "module-eval.g_eval", false], [58, "module-eval.llm_as_judge", false], [59, "module-eval.retriever_recall", false], [60, "module-eval.utils", false], [61, "module-eval", false], [63, "module-optim", false], [65, "module-optim.few_shot", false], [66, "module-optim.few_shot.bootstrap_optimizer", false], [67, "module-optim.function", false], [68, "module-optim.grad_component", false], [69, "module-optim.gradient", false], [70, "module-optim.loss_component", false], [71, "module-optim.optimizer", false], [72, "module-optim.parameter", false], [73, "module-optim.sampler", false], [74, "module-optim.text_grad", false], [75, "module-optim.text_grad.backend_engine_prompt", false], [76, "module-optim.text_grad.llm_text_loss", false], [77, "module-optim.text_grad.ops", false], [78, "module-optim.text_grad.text_loss_with_eval_fn", false], [79, "module-optim.text_grad.tgd_optimizer", false], [80, "module-optim.trainer", false], [81, "module-optim.trainer.adal", false], [82, "module-optim.trainer.trainer", false], [83, "module-optim.types", false], [85, "module-tracing.callback_manager", false], [86, "module-tracing.decorators", false], [87, "module-tracing.generator_call_logger", false], [88, "module-tracing.generator_state_logger", false], [90, "module-utils.cache", false], [91, "module-utils.config", false], [92, "module-utils.data", false], [93, "module-utils.file_io", false], [94, "module-utils.global_config", false], [95, "module-utils.lazy_import", false], [96, "module-utils.logger", false], [97, "module-utils.registry", false], [98, "module-utils.serialization", false], [99, "module-utils.setup_env", false]], "name (component attribute)": [[32, "core.component.Component.name", false]], "name (componentnode attribute)": [[72, "optim.parameter.ComponentNode.name", false]], "name (componenttrace attribute)": [[72, "optim.parameter.ComponentTrace.name", false]], "name (conversation attribute)": [[46, "core.types.Conversation.name", false]], "name (function attribute)": [[46, "core.types.Function.name", false]], "name (functionoutput attribute)": [[46, "core.types.FunctionOutput.name", false]], "name (localdb attribute)": [[34, "core.db.LocalDB.name", false]], "name (parameter attribute)": [[63, "optim.Parameter.name", false], [72, "optim.parameter.Parameter.name", false]], "name (promptdata attribute)": [[83, "optim.types.PromptData.name", false]], "name (retriever attribute)": [[42, "core.retriever.Retriever.name", false]], "name (sum attribute)": [[74, "optim.text_grad.Sum.name", false], [77, "optim.text_grad.ops.Sum.name", false]], "named_children() (component method)": [[32, "core.component.Component.named_children", false]], "named_components() (component method)": [[32, "core.component.Component.named_components", false]], "named_parameters() (component method)": [[32, "core.component.Component.named_parameters", false]], "new_component() (in module utils.config)": [[91, "utils.config.new_component", false]], "new_components_from_config() (in module utils.config)": [[91, "utils.config.new_components_from_config", false]], "nlgtask (class in eval.g_eval)": [[57, "eval.g_eval.NLGTask", false]], "none (parametertype attribute)": [[83, "optim.types.ParameterType.NONE", false]], "normalize_answer() (in module eval.utils)": [[60, "eval.utils.normalize_answer", false]], "normalize_np_array() (in module core.functional)": [[38, "core.functional.normalize_np_array", false]], "normalize_vector() (in module core.functional)": [[38, "core.functional.normalize_vector", false]], "num_shots (bootstrapfewshot property)": [[63, "optim.BootstrapFewShot.num_shots", false], [66, "optim.few_shot.bootstrap_optimizer.BootstrapFewShot.num_shots", false]], "num_workers (trainer attribute)": [[63, "optim.Trainer.num_workers", false], [80, "optim.trainer.Trainer.num_workers", false], [82, "optim.trainer.trainer.Trainer.num_workers", false]], "objecttypes (class in utils.serialization)": [[98, "utils.serialization.ObjectTypes", false]], "observation (stepoutput attribute)": [[46, "core.types.StepOutput.observation", false]], "ollama (modelclienttype attribute)": [[46, "core.types.ModelClientType.OLLAMA", false]], "ollama (optionalpackages attribute)": [[95, "utils.lazy_import.OptionalPackages.OLLAMA", false]], "ollamaclient (class in components.model_client.ollama_client)": [[15, "components.model_client.ollama_client.OllamaClient", false]], "one_parameter_at_a_time (tgdoptimizer attribute)": [[63, "optim.TGDOptimizer.one_parameter_at_a_time", false], [74, "optim.text_grad.TGDOptimizer.one_parameter_at_a_time", false], [79, "optim.text_grad.tgd_optimizer.TGDOptimizer.one_parameter_at_a_time", false]], "openai (modelclienttype attribute)": [[46, "core.types.ModelClientType.OPENAI", false]], "openai (optionalpackages attribute)": [[95, "utils.lazy_import.OptionalPackages.OPENAI", false]], "openaiclient (class in components.model_client.openai_client)": [[16, "components.model_client.openai_client.OpenAIClient", false]], "optim": [[63, "module-optim", false]], "optim.few_shot": [[65, "module-optim.few_shot", false]], "optim.few_shot.bootstrap_optimizer": [[66, "module-optim.few_shot.bootstrap_optimizer", false]], "optim.function": [[67, "module-optim.function", false]], "optim.grad_component": [[68, "module-optim.grad_component", false]], "optim.gradient": [[69, "module-optim.gradient", false]], "optim.loss_component": [[70, "module-optim.loss_component", false]], "optim.optimizer": [[71, "module-optim.optimizer", false]], "optim.parameter": [[72, "module-optim.parameter", false]], "optim.sampler": [[73, "module-optim.sampler", false]], "optim.text_grad": [[74, "module-optim.text_grad", false]], "optim.text_grad.backend_engine_prompt": [[75, "module-optim.text_grad.backend_engine_prompt", false]], "optim.text_grad.llm_text_loss": [[76, "module-optim.text_grad.llm_text_loss", false]], "optim.text_grad.ops": [[77, "module-optim.text_grad.ops", false]], "optim.text_grad.text_loss_with_eval_fn": [[78, "module-optim.text_grad.text_loss_with_eval_fn", false]], "optim.text_grad.tgd_optimizer": [[79, "module-optim.text_grad.tgd_optimizer", false]], "optim.trainer": [[80, "module-optim.trainer", false]], "optim.trainer.adal": [[81, "module-optim.trainer.adal", false]], "optim.trainer.trainer": [[82, "module-optim.trainer.trainer", false]], "optim.types": [[83, "module-optim.types", false]], "optimization_order (trainer attribute)": [[63, "optim.Trainer.optimization_order", false], [80, "optim.trainer.Trainer.optimization_order", false], [82, "optim.trainer.trainer.Trainer.optimization_order", false]], "optimizer (class in optim)": [[63, "optim.Optimizer", false]], "optimizer (class in optim.optimizer)": [[71, "optim.optimizer.Optimizer", false]], "optimizer (trainer attribute)": [[63, "optim.Trainer.optimizer", false], [80, "optim.trainer.Trainer.optimizer", false], [82, "optim.trainer.trainer.Trainer.optimizer", false]], "optionalpackages (class in utils.lazy_import)": [[95, "utils.lazy_import.OptionalPackages", false]], "order (dialogturn attribute)": [[46, "core.types.DialogTurn.order", false]], "order (document attribute)": [[46, "core.types.Document.order", false]], "order (gradient attribute)": [[63, "optim.Gradient.order", false], [69, "optim.gradient.Gradient.order", false]], "output (functionoutput attribute)": [[46, "core.types.FunctionOutput.output", false]], "output (generatorcallrecord attribute)": [[87, "tracing.generator_call_logger.GeneratorCallRecord.output", false]], "output (parametertype attribute)": [[83, "optim.types.ParameterType.OUTPUT", false]], "output (tgdoptimizertrace attribute)": [[79, "optim.text_grad.tgd_optimizer.TGDOptimizerTrace.output", false]], "output_processors (embedder attribute)": [[36, "core.embedder.Embedder.output_processors", false]], "outputparameter (class in optim)": [[63, "optim.OutputParameter", false]], "outputparser (class in components.output_parsers.outputs)": [[21, "components.output_parsers.outputs.OutputParser", false]], "param_type (parameter attribute)": [[63, "optim.Parameter.param_type", false], [72, "optim.parameter.Parameter.param_type", false]], "parameter (class in optim)": [[63, "optim.Parameter", false]], "parameter (class in optim.parameter)": [[72, "optim.parameter.Parameter", false]], "parameters() (component method)": [[32, "core.component.Component.parameters", false]], "parametertype (class in optim.types)": [[83, "optim.types.ParameterType", false]], "params (demooptimizer attribute)": [[71, "optim.optimizer.DemoOptimizer.params", false]], "params (optimizer attribute)": [[63, "optim.Optimizer.params", false], [71, "optim.optimizer.Optimizer.params", false]], "params (tgdoptimizer attribute)": [[63, "optim.TGDOptimizer.params", false], [74, "optim.text_grad.TGDOptimizer.params", false], [79, "optim.text_grad.tgd_optimizer.TGDOptimizer.params", false]], "params_history (tgdoptimizer attribute)": [[63, "optim.TGDOptimizer.params_history", false], [74, "optim.text_grad.TGDOptimizer.params_history", false], [79, "optim.text_grad.tgd_optimizer.TGDOptimizer.params_history", false]], "parent_doc_id (document attribute)": [[46, "core.types.Document.parent_doc_id", false]], "parse_chat_completion() (anthropicapiclient method)": [[8, "components.model_client.anthropic_client.AnthropicAPIClient.parse_chat_completion", false]], "parse_chat_completion() (azureaiclient method)": [[9, "components.model_client.azureai_client.AzureAIClient.parse_chat_completion", false]], "parse_chat_completion() (googlegenaiclient method)": [[13, "components.model_client.google_client.GoogleGenAIClient.parse_chat_completion", false]], "parse_chat_completion() (groqapiclient method)": [[14, "components.model_client.groq_client.GroqAPIClient.parse_chat_completion", false]], "parse_chat_completion() (modelclient method)": [[40, "core.model_client.ModelClient.parse_chat_completion", false]], "parse_chat_completion() (ollamaclient method)": [[15, "components.model_client.ollama_client.OllamaClient.parse_chat_completion", false]], "parse_chat_completion() (openaiclient method)": [[16, "components.model_client.openai_client.OpenAIClient.parse_chat_completion", false]], "parse_chat_completion() (transformerllm method)": [[17, "components.model_client.transformers_client.TransformerLLM.parse_chat_completion", false]], "parse_chat_completion() (transformersclient method)": [[17, "components.model_client.transformers_client.TransformersClient.parse_chat_completion", false]], "parse_embedding_response() (azureaiclient method)": [[9, "components.model_client.azureai_client.AzureAIClient.parse_embedding_response", false]], "parse_embedding_response() (in module components.model_client.utils)": [[18, "components.model_client.utils.parse_embedding_response", false]], "parse_embedding_response() (modelclient method)": [[40, "core.model_client.ModelClient.parse_embedding_response", false]], "parse_embedding_response() (ollamaclient method)": [[15, "components.model_client.ollama_client.OllamaClient.parse_embedding_response", false]], "parse_embedding_response() (openaiclient method)": [[16, "components.model_client.openai_client.OpenAIClient.parse_embedding_response", false]], "parse_embedding_response() (transformersclient method)": [[17, "components.model_client.transformers_client.TransformersClient.parse_embedding_response", false]], "parse_func_expr() (toolmanager method)": [[45, "core.tool_manager.ToolManager.parse_func_expr", false]], "parse_function_call_expr() (in module core.functional)": [[38, "core.functional.parse_function_call_expr", false]], "parse_generate_response() (in module components.model_client.ollama_client)": [[15, "components.model_client.ollama_client.parse_generate_response", false]], "parse_image_generation_response() (openaiclient method)": [[16, "components.model_client.openai_client.OpenAIClient.parse_image_generation_response", false]], "parse_json_str_to_obj() (in module core.functional)": [[38, "core.functional.parse_json_str_to_obj", false]], "parse_stream_response() (in module components.model_client.ollama_client)": [[15, "components.model_client.ollama_client.parse_stream_response", false]], "parse_stream_response() (in module components.model_client.openai_client)": [[16, "components.model_client.openai_client.parse_stream_response", false]], "parse_yaml_str_to_obj() (in module core.functional)": [[38, "core.functional.parse_yaml_str_to_obj", false]], "parsed_input (functionoutput attribute)": [[46, "core.types.FunctionOutput.parsed_input", false]], "peers (parameter attribute)": [[63, "optim.Parameter.peers", false], [72, "optim.parameter.Parameter.peers", false]], "per_item_scores (evaluationresult attribute)": [[55, "eval.base.EvaluationResult.per_item_scores", false]], "pgvector (optionalpackages attribute)": [[95, "utils.lazy_import.OptionalPackages.PGVECTOR", false]], "pickle_to_file() (component method)": [[32, "core.component.Component.pickle_to_file", false]], "pop() (componentlist method)": [[33, "core.container.ComponentList.pop", false]], "postgresretriever (class in components.retriever.postgres_retriever)": [[27, "components.retriever.postgres_retriever.PostgresRetriever", false]], "pred_step() (adalcomponent method)": [[63, "optim.AdalComponent.pred_step", false], [80, "optim.trainer.AdalComponent.pred_step", false], [81, "optim.trainer.adal.AdalComponent.pred_step", false]], "predecessors (parameter attribute)": [[63, "optim.Parameter.predecessors", false], [72, "optim.parameter.Parameter.predecessors", false]], "prep_ckpt_file_path() (trainer method)": [[63, "optim.Trainer.prep_ckpt_file_path", false], [80, "optim.trainer.Trainer.prep_ckpt_file_path", false], [82, "optim.trainer.trainer.Trainer.prep_ckpt_file_path", false]], "prepare_dataset_path() (in module datasets.utils)": [[52, "datasets.utils.prepare_dataset_path", false]], "prepare_datasets() (in module datasets.trec)": [[50, "datasets.trec.prepare_datasets", false]], "prepare_eval() (adalcomponent method)": [[63, "optim.AdalComponent.prepare_eval", false], [80, "optim.trainer.AdalComponent.prepare_eval", false], [81, "optim.trainer.adal.AdalComponent.prepare_eval", false]], "prepare_loss() (adalcomponent method)": [[63, "optim.AdalComponent.prepare_loss", false], [80, "optim.trainer.AdalComponent.prepare_loss", false], [81, "optim.trainer.adal.AdalComponent.prepare_loss", false]], "prepare_loss_eval() (adalcomponent method)": [[63, "optim.AdalComponent.prepare_loss_eval", false], [80, "optim.trainer.AdalComponent.prepare_loss_eval", false], [81, "optim.trainer.adal.AdalComponent.prepare_loss_eval", false]], "prepare_task() (adalcomponent method)": [[63, "optim.AdalComponent.prepare_task", false], [80, "optim.trainer.AdalComponent.prepare_task", false], [81, "optim.trainer.adal.AdalComponent.prepare_task", false]], "preprocess() (tokenizer method)": [[44, "core.tokenizer.Tokenizer.preprocess", false]], "print_prompt() (generator method)": [[39, "core.generator.Generator.print_prompt", false]], "print_prompt() (prompt method)": [[41, "core.prompt_builder.Prompt.print_prompt", false]], "print_prompt_template() (prompt method)": [[41, "core.prompt_builder.Prompt.print_prompt_template", false]], "printc() (in module utils.logger)": [[96, "utils.logger.printc", false]], "prompt (class in core.prompt_builder)": [[41, "core.prompt_builder.Prompt", false]], "prompt (gradient attribute)": [[63, "optim.Gradient.prompt", false], [69, "optim.gradient.Gradient.prompt", false]], "prompt (parametertype attribute)": [[83, "optim.types.ParameterType.PROMPT", false]], "prompt (trainerstepresult attribute)": [[83, "optim.types.TrainerStepResult.prompt", false]], "prompt_kwargs (generatorcallrecord attribute)": [[87, "tracing.generator_call_logger.GeneratorCallRecord.prompt_kwargs", false]], "prompt_states (generatorstatesrecord attribute)": [[88, "tracing.generator_state_logger.GeneratorStatesRecord.prompt_states", false]], "prompt_tokens (completionusage attribute)": [[46, "core.types.CompletionUsage.prompt_tokens", false]], "prompt_tokens (usage attribute)": [[46, "core.types.Usage.prompt_tokens", false]], "promptdata (class in optim.types)": [[83, "optim.types.PromptData", false]], "propose() (bootstrapfewshot method)": [[63, "optim.BootstrapFewShot.propose", false], [66, "optim.few_shot.bootstrap_optimizer.BootstrapFewShot.propose", false]], "propose() (optimizer method)": [[63, "optim.Optimizer.propose", false], [71, "optim.optimizer.Optimizer.propose", false]], "propose() (tgdoptimizer method)": [[63, "optim.TGDOptimizer.propose", false], [74, "optim.text_grad.TGDOptimizer.propose", false], [79, "optim.text_grad.tgd_optimizer.TGDOptimizer.propose", false]], "propose_data() (parameter method)": [[63, "optim.Parameter.propose_data", false], [72, "optim.parameter.Parameter.propose_data", false]], "proposed_variable (tgddata attribute)": [[79, "optim.text_grad.tgd_optimizer.TGDData.proposed_variable", false]], "proposing (optimizer attribute)": [[63, "optim.Optimizer.proposing", false], [71, "optim.optimizer.Optimizer.proposing", false]], "proposing (parameter attribute)": [[63, "optim.Parameter.proposing", false], [72, "optim.parameter.Parameter.proposing", false]], "proposing (tgdoptimizer attribute)": [[63, "optim.TGDOptimizer.proposing", false], [74, "optim.text_grad.TGDOptimizer.proposing", false], [79, "optim.text_grad.tgd_optimizer.TGDOptimizer.proposing", false]], "qdrant (optionalpackages attribute)": [[95, "utils.lazy_import.OptionalPackages.QDRANT", false]], "qdrantretriever (class in components.retriever.qdrant_retriever)": [[28, "components.retriever.qdrant_retriever.QdrantRetriever", false]], "query (retrieveroutput attribute)": [[46, "core.types.RetrieverOutput.query", false]], "query_str (userquery attribute)": [[46, "core.types.UserQuery.query_str", false]], "question (example attribute)": [[51, "datasets.types.Example.question", false], [53, "datasets.Example.question", false]], "question (trecdata attribute)": [[51, "datasets.types.TrecData.question", false], [53, "datasets.TrecData.question", false]], "random_replace() (classsampler method)": [[63, "optim.ClassSampler.random_replace", false], [73, "optim.sampler.ClassSampler.random_replace", false]], "random_replace() (randomsampler method)": [[63, "optim.RandomSampler.random_replace", false], [73, "optim.sampler.RandomSampler.random_replace", false]], "random_replace() (sampler method)": [[63, "optim.Sampler.random_replace", false], [73, "optim.sampler.Sampler.random_replace", false]], "random_sample() (classsampler method)": [[63, "optim.ClassSampler.random_sample", false], [73, "optim.sampler.ClassSampler.random_sample", false]], "random_sample() (in module core.functional)": [[38, "core.functional.random_sample", false]], "random_sample() (randomsampler method)": [[63, "optim.RandomSampler.random_sample", false], [73, "optim.sampler.RandomSampler.random_sample", false]], "random_seed (trainer attribute)": [[63, "optim.Trainer.random_seed", false], [80, "optim.trainer.Trainer.random_seed", false], [82, "optim.trainer.trainer.Trainer.random_seed", false]], "randomsampler (class in optim)": [[63, "optim.RandomSampler", false]], "randomsampler (class in optim.sampler)": [[73, "optim.sampler.RandomSampler", false]], "raw_response (componenttrace attribute)": [[72, "optim.parameter.ComponentTrace.raw_response", false]], "raw_response (embedderoutput attribute)": [[46, "core.types.EmbedderOutput.raw_response", false]], "raw_response (generatoroutput attribute)": [[46, "core.types.GeneratorOutput.raw_response", false]], "reactagent (class in components.agent)": [[0, "components.agent.ReActAgent", false]], "reactagent (class in components.agent.react)": [[1, "components.agent.react.ReActAgent", false]], "reasoning (historyprompt attribute)": [[79, "optim.text_grad.tgd_optimizer.HistoryPrompt.reasoning", false]], "reasoning (tgddata attribute)": [[79, "optim.text_grad.tgd_optimizer.TGDData.reasoning", false]], "register() (entitymapping class method)": [[97, "utils.registry.EntityMapping.register", false]], "register_callback() (callbackmanager method)": [[85, "tracing.callback_manager.CallbackManager.register_callback", false]], "register_component() (component method)": [[32, "core.component.Component.register_component", false]], "register_generator() (generatorcalllogger method)": [[87, "tracing.generator_call_logger.GeneratorCallLogger.register_generator", false]], "register_parameter() (component method)": [[32, "core.component.Component.register_parameter", false]], "register_transformer() (localdb method)": [[34, "core.db.LocalDB.register_transformer", false]], "relevance (gevalmetric attribute)": [[57, "eval.g_eval.GEvalMetric.RELEVANCE", false], [61, "eval.GEvalMetric.RELEVANCE", false]], "render_failed_proposals() (tgdoptimizer method)": [[63, "optim.TGDOptimizer.render_failed_proposals", false], [74, "optim.text_grad.TGDOptimizer.render_failed_proposals", false], [79, "optim.text_grad.tgd_optimizer.TGDOptimizer.render_failed_proposals", false]], "render_history() (tgdoptimizer method)": [[63, "optim.TGDOptimizer.render_history", false], [74, "optim.text_grad.TGDOptimizer.render_history", false], [79, "optim.text_grad.tgd_optimizer.TGDOptimizer.render_history", false]], "represent_ordereddict() (in module core.functional)": [[38, "core.functional.represent_ordereddict", false]], "required_field() (in module core.base_data_class)": [[31, "core.base_data_class.required_field", false]], "requires_opt (promptdata attribute)": [[83, "optim.types.PromptData.requires_opt", false]], "reranker (modeltype attribute)": [[46, "core.types.ModelType.RERANKER", false]], "rerankerretriever (class in components.retriever)": [[22, "components.retriever.RerankerRetriever", false]], "rerankerretriever (class in components.retriever.reranker_retriever)": [[29, "components.retriever.reranker_retriever.RerankerRetriever", false]], "reset() (generatorcalllogger method)": [[87, "tracing.generator_call_logger.GeneratorCallLogger.reset", false]], "reset() (localdb method)": [[34, "core.db.LocalDB.reset", false]], "reset_all_gradients() (parameter method)": [[63, "optim.Parameter.reset_all_gradients", false], [72, "optim.parameter.Parameter.reset_all_gradients", false]], "reset_gradients() (parameter method)": [[63, "optim.Parameter.reset_gradients", false], [72, "optim.parameter.Parameter.reset_gradients", false]], "reset_index() (bm25retriever method)": [[22, "components.retriever.BM25Retriever.reset_index", false], [23, "components.retriever.bm25_retriever.BM25Retriever.reset_index", false]], "reset_index() (faissretriever method)": [[24, "components.retriever.faiss_retriever.FAISSRetriever.reset_index", false]], "reset_index() (llmretriever method)": [[22, "components.retriever.LLMRetriever.reset_index", false], [26, "components.retriever.llm_retriever.LLMRetriever.reset_index", false]], "reset_index() (qdrantretriever method)": [[28, "components.retriever.qdrant_retriever.QdrantRetriever.reset_index", false]], "reset_index() (rerankerretriever method)": [[22, "components.retriever.RerankerRetriever.reset_index", false], [29, "components.retriever.reranker_retriever.RerankerRetriever.reset_index", false]], "reset_index() (retriever method)": [[42, "core.retriever.Retriever.reset_index", false]], "reset_mock_output() (generator method)": [[39, "core.generator.Generator.reset_mock_output", false]], "reset_steps_from_last_improvement() (tgdoptimizer method)": [[63, "optim.TGDOptimizer.reset_steps_from_last_improvement", false], [74, "optim.text_grad.TGDOptimizer.reset_steps_from_last_improvement", false], [79, "optim.text_grad.tgd_optimizer.TGDOptimizer.reset_steps_from_last_improvement", false]], "response_desc (gradientcontext attribute)": [[63, "optim.GradientContext.response_desc", false], [69, "optim.gradient.GradientContext.response_desc", false]], "response_str (assistantresponse attribute)": [[46, "core.types.AssistantResponse.response_str", false]], "responses (instruction attribute)": [[79, "optim.text_grad.tgd_optimizer.Instruction.responses", false]], "resume_params_from_ckpt() (trainer method)": [[63, "optim.Trainer.resume_params_from_ckpt", false], [80, "optim.trainer.Trainer.resume_params_from_ckpt", false], [82, "optim.trainer.trainer.Trainer.resume_params_from_ckpt", false]], "retrieve() (lancedbretriever method)": [[25, "components.retriever.lancedb_retriver.LanceDBRetriever.retrieve", false]], "retrieve_by_sql() (postgresretriever method)": [[27, "components.retriever.postgres_retriever.PostgresRetriever.retrieve_by_sql", false]], "retrieve_embedding_queries() (faissretriever method)": [[24, "components.retriever.faiss_retriever.FAISSRetriever.retrieve_embedding_queries", false]], "retrieve_string_queries() (faissretriever method)": [[24, "components.retriever.faiss_retriever.FAISSRetriever.retrieve_string_queries", false]], "retriever (class in core.retriever)": [[42, "core.retriever.Retriever", false]], "retriever_output (parametertype attribute)": [[83, "optim.types.ParameterType.RETRIEVER_OUTPUT", false]], "retriever_output_to_context_str() (in module components.data_process.data_components)": [[3, "components.data_process.data_components.retriever_output_to_context_str", false]], "retrieverevaluator (class in eval)": [[61, "eval.RetrieverEvaluator", false]], "retrieverevaluator (class in eval.retriever_recall)": [[59, "eval.retriever_recall.RetrieverEvaluator", false]], "retrieveroutput (class in core.types)": [[46, "core.types.RetrieverOutput", false]], "retrieveroutputtocontextstr (class in components.data_process)": [[2, "components.data_process.RetrieverOutputToContextStr", false]], "retrieveroutputtocontextstr (class in components.data_process.data_components)": [[3, "components.data_process.data_components.RetrieverOutputToContextStr", false]], "revert() (bootstrapfewshot method)": [[63, "optim.BootstrapFewShot.revert", false], [66, "optim.few_shot.bootstrap_optimizer.BootstrapFewShot.revert", false]], "revert() (optimizer method)": [[63, "optim.Optimizer.revert", false], [71, "optim.optimizer.Optimizer.revert", false]], "revert() (tgdoptimizer method)": [[63, "optim.TGDOptimizer.revert", false], [74, "optim.text_grad.TGDOptimizer.revert", false], [79, "optim.text_grad.tgd_optimizer.TGDOptimizer.revert", false]], "revert_data() (parameter method)": [[63, "optim.Parameter.revert_data", false], [72, "optim.parameter.Parameter.revert_data", false]], "role_desc (parameter attribute)": [[63, "optim.Parameter.role_desc", false], [72, "optim.parameter.Parameter.role_desc", false]], "run_async_in_new_loop() (in module core.tool_manager)": [[45, "core.tool_manager.run_async_in_new_loop", false]], "run_one_loss_sample() (adalcomponent method)": [[63, "optim.AdalComponent.run_one_loss_sample", false], [80, "optim.trainer.AdalComponent.run_one_loss_sample", false], [81, "optim.trainer.adal.AdalComponent.run_one_loss_sample", false]], "run_one_task_sample() (adalcomponent method)": [[63, "optim.AdalComponent.run_one_task_sample", false], [80, "optim.trainer.AdalComponent.run_one_task_sample", false], [81, "optim.trainer.adal.AdalComponent.run_one_task_sample", false]], "safe_import() (in module utils.lazy_import)": [[95, "utils.lazy_import.safe_import", false]], "sample (class in optim.sampler)": [[73, "optim.sampler.Sample", false]], "sample() (bootstrapfewshot method)": [[63, "optim.BootstrapFewShot.sample", false], [66, "optim.few_shot.bootstrap_optimizer.BootstrapFewShot.sample", false]], "sample_subset_dataset() (in module datasets.trec)": [[50, "datasets.trec.sample_subset_dataset", false]], "sampler (class in optim)": [[63, "optim.Sampler", false]], "sampler (class in optim.sampler)": [[73, "optim.sampler.Sampler", false]], "samples_to_str() (bootstrapfewshot static method)": [[63, "optim.BootstrapFewShot.samples_to_str", false], [66, "optim.few_shot.bootstrap_optimizer.BootstrapFewShot.samples_to_str", false]], "sandbox_exec() (in module core.functional)": [[38, "core.functional.sandbox_exec", false]], "save() (generatorstatelogger method)": [[88, "tracing.generator_state_logger.GeneratorStateLogger.save", false]], "save() (in module utils.file_io)": [[93, "utils.file_io.save", false]], "save_csv() (in module utils.file_io)": [[93, "utils.file_io.save_csv", false]], "save_json() (in module utils.file_io)": [[93, "utils.file_io.save_json", false]], "save_meta_data() (generatorcalllogger method)": [[87, "tracing.generator_call_logger.GeneratorCallLogger.save_meta_data", false]], "save_pickle() (in module utils.file_io)": [[93, "utils.file_io.save_pickle", false]], "save_state() (localdb method)": [[34, "core.db.LocalDB.save_state", false]], "save_to_file() (bm25retriever method)": [[22, "components.retriever.BM25Retriever.save_to_file", false], [23, "components.retriever.bm25_retriever.BM25Retriever.save_to_file", false]], "save_to_file() (retriever method)": [[42, "core.retriever.Retriever.save_to_file", false]], "schema (dataclassformattype attribute)": [[31, "core.base_data_class.DataClassFormatType.SCHEMA", false]], "score (document attribute)": [[46, "core.types.Document.score", false]], "score (evaluationresult attribute)": [[83, "optim.types.EvaluationResult.score", false]], "score (gradient attribute)": [[63, "optim.Gradient.score", false], [69, "optim.gradient.Gradient.score", false]], "score (instruction attribute)": [[79, "optim.text_grad.tgd_optimizer.Instruction.score", false]], "score (parameter attribute)": [[72, "optim.parameter.Parameter.score", false]], "score (scoretrace attribute)": [[72, "optim.parameter.ScoreTrace.score", false]], "scoretrace (class in optim.parameter)": [[72, "optim.parameter.ScoreTrace", false]], "sequential (class in core.container)": [[33, "core.container.Sequential", false]], "sequential_order (trainer attribute)": [[63, "optim.Trainer.sequential_order", false], [80, "optim.trainer.Trainer.sequential_order", false], [82, "optim.trainer.trainer.Trainer.sequential_order", false]], "serialize() (in module utils.serialization)": [[98, "utils.serialization.serialize", false]], "set_assistant_response() (dialogturn method)": [[46, "core.types.DialogTurn.set_assistant_response", false]], "set_backward_engine() (evalfntotextloss method)": [[63, "optim.EvalFnToTextLoss.set_backward_engine", false], [74, "optim.text_grad.EvalFnToTextLoss.set_backward_engine", false], [78, "optim.text_grad.text_loss_with_eval_fn.EvalFnToTextLoss.set_backward_engine", false]], "set_backward_engine() (generator method)": [[39, "core.generator.Generator.set_backward_engine", false]], "set_backward_engine() (gradcomponent method)": [[68, "optim.grad_component.GradComponent.set_backward_engine", false]], "set_backward_engine() (losscomponent method)": [[70, "optim.loss_component.LossComponent.set_backward_engine", false]], "set_cache_path() (generator method)": [[39, "core.generator.Generator.set_cache_path", false]], "set_dataset() (demooptimizer method)": [[63, "optim.DemoOptimizer.set_dataset", false], [71, "optim.optimizer.DemoOptimizer.set_dataset", false]], "set_dataset() (randomsampler method)": [[63, "optim.RandomSampler.set_dataset", false], [73, "optim.sampler.RandomSampler.set_dataset", false]], "set_dataset() (sampler method)": [[63, "optim.Sampler.set_dataset", false], [73, "optim.sampler.Sampler.set_dataset", false]], "set_eval_fn_input() (parameter method)": [[63, "optim.Parameter.set_eval_fn_input", false], [72, "optim.parameter.Parameter.set_eval_fn_input", false]], "set_grad_fn() (parameter method)": [[63, "optim.Parameter.set_grad_fn", false], [72, "optim.parameter.Parameter.set_grad_fn", false]], "set_gt() (parameter method)": [[63, "optim.Parameter.set_gt", false], [72, "optim.parameter.Parameter.set_gt", false]], "set_input_fields() (dataclass class method)": [[31, "core.base_data_class.DataClass.set_input_fields", false]], "set_llm_client() (transformersclient method)": [[17, "components.model_client.transformers_client.TransformersClient.set_llm_client", false]], "set_max_steps() (dataloader method)": [[92, "utils.data.DataLoader.set_max_steps", false]], "set_mock_output() (generator method)": [[39, "core.generator.Generator.set_mock_output", false]], "set_output_fields() (dataclass class method)": [[31, "core.base_data_class.DataClass.set_output_fields", false]], "set_parameters() (generator method)": [[39, "core.generator.Generator.set_parameters", false]], "set_peers() (parameter method)": [[63, "optim.Parameter.set_peers", false], [72, "optim.parameter.Parameter.set_peers", false]], "set_predecessors() (parameter method)": [[63, "optim.Parameter.set_predecessors", false], [72, "optim.parameter.Parameter.set_predecessors", false]], "set_random_seed() (trainer method)": [[63, "optim.Trainer.set_random_seed", false], [80, "optim.trainer.Trainer.set_random_seed", false], [82, "optim.trainer.trainer.Trainer.set_random_seed", false]], "set_score() (parameter method)": [[63, "optim.Parameter.set_score", false], [72, "optim.parameter.Parameter.set_score", false]], "set_target_param() (tgdoptimizer method)": [[63, "optim.TGDOptimizer.set_target_param", false], [74, "optim.text_grad.TGDOptimizer.set_target_param", false], [79, "optim.text_grad.tgd_optimizer.TGDOptimizer.set_target_param", false]], "set_task_desc() (dataclass class method)": [[31, "core.base_data_class.DataClass.set_task_desc", false]], "set_teacher_generator() (generator method)": [[39, "core.generator.Generator.set_teacher_generator", false]], "set_user_query() (dialogturn method)": [[46, "core.types.DialogTurn.set_user_query", false]], "setup_env() (in module utils.setup_env)": [[99, "utils.setup_env.setup_env", false]], "signature_json (dataclassformattype attribute)": [[31, "core.base_data_class.DataClassFormatType.SIGNATURE_JSON", false]], "signature_yaml (dataclassformattype attribute)": [[31, "core.base_data_class.DataClassFormatType.SIGNATURE_YAML", false]], "simple_default_adalflow_system_prompt (in module core.default_prompt_template)": [[35, "core.default_prompt_template.SIMPLE_DEFAULT_ADALFLOW_SYSTEM_PROMPT", false]], "skip_subset_val (trainer attribute)": [[63, "optim.Trainer.skip_subset_val", false], [80, "optim.trainer.Trainer.skip_subset_val", false], [82, "optim.trainer.trainer.Trainer.skip_subset_val", false]], "sort_gradients() (parameter method)": [[63, "optim.Parameter.sort_gradients", false], [72, "optim.parameter.Parameter.sort_gradients", false]], "split_text() (textsplitter method)": [[2, "components.data_process.TextSplitter.split_text", false], [4, "components.data_process.text_splitter.TextSplitter.split_text", false]], "split_text_by_word_fn() (in module components.retriever)": [[22, "components.retriever.split_text_by_word_fn", false]], "split_text_by_word_fn() (in module components.retriever.bm25_retriever)": [[23, "components.retriever.bm25_retriever.split_text_by_word_fn", false]], "split_text_by_word_fn_then_lower_tokenized() (in module components.retriever)": [[22, "components.retriever.split_text_by_word_fn_then_lower_tokenized", false]], "split_text_by_word_fn_then_lower_tokenized() (in module components.retriever.bm25_retriever)": [[23, "components.retriever.bm25_retriever.split_text_by_word_fn_then_lower_tokenized", false]], "split_text_tokenized() (in module components.retriever.bm25_retriever)": [[23, "components.retriever.bm25_retriever.split_text_tokenized", false]], "sqlalchemy (optionalpackages attribute)": [[95, "utils.lazy_import.OptionalPackages.SQLALCHEMY", false]], "state_dict() (component method)": [[32, "core.component.Component.state_dict", false]], "state_dict() (optimizer method)": [[63, "optim.Optimizer.state_dict", false], [71, "optim.optimizer.Optimizer.state_dict", false]], "std_of_score (trainervalidatestats attribute)": [[83, "optim.types.TrainerValidateStats.std_of_score", false]], "step (stepoutput attribute)": [[46, "core.types.StepOutput.step", false]], "step (trainerstepresult attribute)": [[83, "optim.types.TrainerStepResult.step", false]], "step() (bootstrapfewshot method)": [[63, "optim.BootstrapFewShot.step", false], [66, "optim.few_shot.bootstrap_optimizer.BootstrapFewShot.step", false]], "step() (optimizer method)": [[63, "optim.Optimizer.step", false], [71, "optim.optimizer.Optimizer.step", false]], "step() (tgdoptimizer method)": [[63, "optim.TGDOptimizer.step", false], [74, "optim.text_grad.TGDOptimizer.step", false], [79, "optim.text_grad.tgd_optimizer.TGDOptimizer.step", false]], "step_data() (parameter method)": [[63, "optim.Parameter.step_data", false], [72, "optim.parameter.Parameter.step_data", false]], "step_results (trainerresult attribute)": [[83, "optim.types.TrainerResult.step_results", false]], "stepoutput (class in core.types)": [[46, "core.types.StepOutput", false]], "steps (trainerresult attribute)": [[83, "optim.types.TrainerResult.steps", false]], "strategy (trainer attribute)": [[63, "optim.Trainer.strategy", false], [80, "optim.trainer.Trainer.strategy", false], [82, "optim.trainer.trainer.Trainer.strategy", false]], "subset (class in utils.data)": [[92, "utils.data.Subset", false]], "subset_dataset() (in module utils.data)": [[92, "utils.data.subset_dataset", false]], "successor_map_fn (parameter attribute)": [[63, "optim.Parameter.successor_map_fn", false], [72, "optim.parameter.Parameter.successor_map_fn", false]], "sum (class in optim.text_grad)": [[74, "optim.text_grad.Sum", false]], "sum (class in optim.text_grad.ops)": [[77, "optim.text_grad.ops.Sum", false]], "sum_ops() (in module optim.text_grad)": [[74, "optim.text_grad.sum_ops", false]], "sum_ops() (in module optim.text_grad.ops)": [[77, "optim.text_grad.ops.sum_ops", false]], "sum_output (parametertype attribute)": [[83, "optim.types.ParameterType.SUM_OUTPUT", false]], "summarization (nlgtask attribute)": [[57, "eval.g_eval.NLGTask.SUMMARIZATION", false]], "support_models (transformersclient attribute)": [[17, "components.model_client.transformers_client.TransformersClient.support_models", false]], "task (adalcomponent attribute)": [[63, "optim.AdalComponent.task", false], [80, "optim.trainer.AdalComponent.task", false], [81, "optim.trainer.adal.AdalComponent.task", false]], "teacher_mode (adalcomponent attribute)": [[80, "optim.trainer.AdalComponent.teacher_mode", false], [81, "optim.trainer.adal.AdalComponent.teacher_mode", false]], "teacher_mode (component attribute)": [[32, "core.component.Component.teacher_mode", false]], "teacher_mode (sum attribute)": [[77, "optim.text_grad.ops.Sum.teacher_mode", false]], "teacher_mode (textsplitter attribute)": [[4, "components.data_process.text_splitter.TextSplitter.teacher_mode", false]], "teacher_mode (trainer attribute)": [[80, "optim.trainer.Trainer.teacher_mode", false], [82, "optim.trainer.trainer.Trainer.teacher_mode", false]], "test_dataset (trainer attribute)": [[63, "optim.Trainer.test_dataset", false], [80, "optim.trainer.Trainer.test_dataset", false], [82, "optim.trainer.trainer.Trainer.test_dataset", false]], "test_score (trainerresult attribute)": [[83, "optim.types.TrainerResult.test_score", false]], "test_score (trainerstepresult attribute)": [[83, "optim.types.TrainerStepResult.test_score", false]], "test_scores (trainerresult attribute)": [[83, "optim.types.TrainerResult.test_scores", false]], "text (document attribute)": [[46, "core.types.Document.text", false]], "text (instruction attribute)": [[79, "optim.text_grad.tgd_optimizer.Instruction.text", false]], "text_optimizers (trainer attribute)": [[80, "optim.trainer.Trainer.text_optimizers", false], [82, "optim.trainer.trainer.Trainer.text_optimizers", false]], "text_optimizers_config_kwargs (trainer attribute)": [[63, "optim.Trainer.text_optimizers_config_kwargs", false], [80, "optim.trainer.Trainer.text_optimizers_config_kwargs", false], [82, "optim.trainer.trainer.Trainer.text_optimizers_config_kwargs", false]], "textoptimizer (class in optim)": [[63, "optim.TextOptimizer", false]], "textoptimizer (class in optim.optimizer)": [[71, "optim.optimizer.TextOptimizer", false]], "textsplitter (class in components.data_process)": [[2, "components.data_process.TextSplitter", false]], "textsplitter (class in components.data_process.text_splitter)": [[4, "components.data_process.text_splitter.TextSplitter", false]], "tgd_optimizer_trace (parameter attribute)": [[63, "optim.Parameter.tgd_optimizer_trace", false], [72, "optim.parameter.Parameter.tgd_optimizer_trace", false]], "tgddata (class in optim.text_grad.tgd_optimizer)": [[79, "optim.text_grad.tgd_optimizer.TGDData", false]], "tgdoptimizer (class in optim)": [[63, "optim.TGDOptimizer", false]], "tgdoptimizer (class in optim.text_grad)": [[74, "optim.text_grad.TGDOptimizer", false]], "tgdoptimizer (class in optim.text_grad.tgd_optimizer)": [[79, "optim.text_grad.tgd_optimizer.TGDOptimizer", false]], "tgdoptimizertrace (class in optim.text_grad.tgd_optimizer)": [[79, "optim.text_grad.tgd_optimizer.TGDOptimizerTrace", false]], "thought (function attribute)": [[46, "core.types.Function.thought", false]], "thought (functionexpression attribute)": [[46, "core.types.FunctionExpression.thought", false]], "time_stamp (generatorcallrecord attribute)": [[87, "tracing.generator_call_logger.GeneratorCallRecord.time_stamp", false]], "time_stamp (generatorstatesrecord attribute)": [[88, "tracing.generator_state_logger.GeneratorStatesRecord.time_stamp", false]], "time_stamp (trainerresult attribute)": [[83, "optim.types.TrainerResult.time_stamp", false]], "to_context_str() (componenttrace method)": [[72, "optim.parameter.ComponentTrace.to_context_str", false]], "to_dict() (azureaiclient method)": [[9, "components.model_client.azureai_client.AzureAIClient.to_dict", false]], "to_dict() (component method)": [[32, "core.component.Component.to_dict", false]], "to_dict() (dataclass method)": [[31, "core.base_data_class.DataClass.to_dict", false]], "to_dict() (generator method)": [[39, "core.generator.Generator.to_dict", false]], "to_dict() (groqapiclient method)": [[14, "components.model_client.groq_client.GroqAPIClient.to_dict", false]], "to_dict() (in module utils.serialization)": [[98, "utils.serialization.to_dict", false]], "to_dict() (ollamaclient method)": [[15, "components.model_client.ollama_client.OllamaClient.to_dict", false]], "to_dict() (openaiclient method)": [[16, "components.model_client.openai_client.OpenAIClient.to_dict", false]], "to_dict() (outputparameter method)": [[63, "optim.OutputParameter.to_dict", false]], "to_dict() (parameter method)": [[63, "optim.Parameter.to_dict", false], [72, "optim.parameter.Parameter.to_dict", false]], "to_dict() (prompt method)": [[41, "core.prompt_builder.Prompt.to_dict", false]], "to_dict() (sample method)": [[73, "optim.sampler.Sample.to_dict", false]], "to_dict() (tgdoptimizer method)": [[63, "optim.TGDOptimizer.to_dict", false], [74, "optim.text_grad.TGDOptimizer.to_dict", false], [79, "optim.text_grad.tgd_optimizer.TGDOptimizer.to_dict", false]], "to_dict_class() (dataclass class method)": [[31, "core.base_data_class.DataClass.to_dict_class", false]], "to_json() (dataclass method)": [[31, "core.base_data_class.DataClass.to_json", false]], "to_json_obj() (dataclass method)": [[31, "core.base_data_class.DataClass.to_json_obj", false]], "to_json_signature() (dataclass class method)": [[31, "core.base_data_class.DataClass.to_json_signature", false]], "to_pred_id (gradient attribute)": [[63, "optim.Gradient.to_pred_id", false], [69, "optim.gradient.Gradient.to_pred_id", false]], "to_prompt_str() (stepoutput method)": [[46, "core.types.StepOutput.to_prompt_str", false]], "to_schema() (dataclass class method)": [[31, "core.base_data_class.DataClass.to_schema", false]], "to_schema_str() (dataclass class method)": [[31, "core.base_data_class.DataClass.to_schema_str", false]], "to_yaml() (dataclass method)": [[31, "core.base_data_class.DataClass.to_yaml", false]], "to_yaml_obj() (dataclass method)": [[31, "core.base_data_class.DataClass.to_yaml_obj", false]], "to_yaml_signature() (dataclass class method)": [[31, "core.base_data_class.DataClass.to_yaml_signature", false]], "toembeddings (class in components.data_process)": [[2, "components.data_process.ToEmbeddings", false]], "toembeddings (class in components.data_process.data_components)": [[3, "components.data_process.data_components.ToEmbeddings", false]], "token (tokenlogprob attribute)": [[46, "core.types.TokenLogProb.token", false]], "tokenizer (class in core.tokenizer)": [[44, "core.tokenizer.Tokenizer", false]], "tokenizer (textsplitter attribute)": [[2, "components.data_process.TextSplitter.tokenizer", false], [4, "components.data_process.text_splitter.TextSplitter.tokenizer", false]], "tokenizer (transformerllm attribute)": [[17, "components.model_client.transformers_client.TransformerLLM.tokenizer", false]], "tokenlogprob (class in core.types)": [[46, "core.types.TokenLogProb", false]], "toolmanager (class in core.tool_manager)": [[45, "core.tool_manager.ToolManager", false]], "top_k (retriever attribute)": [[42, "core.retriever.Retriever.top_k", false]], "torch (optionalpackages attribute)": [[95, "utils.lazy_import.OptionalPackages.TORCH", false]], "total_time (trainerresult attribute)": [[83, "optim.types.TrainerResult.total_time", false]], "total_tokens (completionusage attribute)": [[46, "core.types.CompletionUsage.total_tokens", false]], "total_tokens (usage attribute)": [[46, "core.types.Usage.total_tokens", false]], "trace() (component method)": [[32, "core.component.Component.trace", false]], "trace_api_kwargs() (outputparameter method)": [[63, "optim.OutputParameter.trace_api_kwargs", false]], "trace_forward_pass() (outputparameter method)": [[63, "optim.OutputParameter.trace_forward_pass", false]], "trace_generator_call() (in module tracing.decorators)": [[86, "tracing.decorators.trace_generator_call", false]], "trace_generator_states() (in module tracing.decorators)": [[86, "tracing.decorators.trace_generator_states", false]], "trace_graph() (parameter static method)": [[63, "optim.Parameter.trace_graph", false], [72, "optim.parameter.Parameter.trace_graph", false]], "trace_optimizer() (parameter method)": [[63, "optim.Parameter.trace_optimizer", false], [72, "optim.parameter.Parameter.trace_optimizer", false]], "tracing (adalcomponent attribute)": [[80, "optim.trainer.AdalComponent.tracing", false], [81, "optim.trainer.adal.AdalComponent.tracing", false]], "tracing (component attribute)": [[32, "core.component.Component.tracing", false]], "tracing (sum attribute)": [[77, "optim.text_grad.ops.Sum.tracing", false]], "tracing (textsplitter attribute)": [[4, "components.data_process.text_splitter.TextSplitter.tracing", false]], "tracing (trainer attribute)": [[80, "optim.trainer.Trainer.tracing", false], [82, "optim.trainer.trainer.Trainer.tracing", false]], "tracing.callback_manager": [[85, "module-tracing.callback_manager", false]], "tracing.decorators": [[86, "module-tracing.decorators", false]], "tracing.generator_call_logger": [[87, "module-tracing.generator_call_logger", false]], "tracing.generator_state_logger": [[88, "module-tracing.generator_state_logger", false]], "track_completion_usage() (anthropicapiclient method)": [[8, "components.model_client.anthropic_client.AnthropicAPIClient.track_completion_usage", false]], "track_completion_usage() (azureaiclient method)": [[9, "components.model_client.azureai_client.AzureAIClient.track_completion_usage", false]], "track_completion_usage() (googlegenaiclient method)": [[13, "components.model_client.google_client.GoogleGenAIClient.track_completion_usage", false]], "track_completion_usage() (groqapiclient method)": [[14, "components.model_client.groq_client.GroqAPIClient.track_completion_usage", false]], "track_completion_usage() (modelclient method)": [[40, "core.model_client.ModelClient.track_completion_usage", false]], "track_completion_usage() (openaiclient method)": [[16, "components.model_client.openai_client.OpenAIClient.track_completion_usage", false]], "train() (component method)": [[32, "core.component.Component.train", false]], "train() (datacomponent method)": [[32, "core.component.DataComponent.train", false]], "train_batch_size (trainer attribute)": [[63, "optim.Trainer.train_batch_size", false], [80, "optim.trainer.Trainer.train_batch_size", false], [82, "optim.trainer.trainer.Trainer.train_batch_size", false]], "train_loader (trainer attribute)": [[63, "optim.Trainer.train_loader", false], [80, "optim.trainer.Trainer.train_loader", false], [82, "optim.trainer.trainer.Trainer.train_loader", false]], "train_step() (adalcomponent method)": [[63, "optim.AdalComponent.train_step", false], [80, "optim.trainer.AdalComponent.train_step", false], [81, "optim.trainer.adal.AdalComponent.train_step", false]], "trainer (class in optim)": [[63, "optim.Trainer", false]], "trainer (class in optim.trainer)": [[80, "optim.trainer.Trainer", false]], "trainer (class in optim.trainer.trainer)": [[82, "optim.trainer.trainer.Trainer", false]], "trainer_state (trainerresult attribute)": [[83, "optim.types.TrainerResult.trainer_state", false]], "trainerresult (class in optim.types)": [[83, "optim.types.TrainerResult", false]], "trainerstepresult (class in optim.types)": [[83, "optim.types.TrainerStepResult", false]], "trainervalidatestats (class in optim.types)": [[83, "optim.types.TrainerValidateStats", false]], "training (adalcomponent attribute)": [[80, "optim.trainer.AdalComponent.training", false], [81, "optim.trainer.adal.AdalComponent.training", false]], "training (component attribute)": [[32, "core.component.Component.training", false]], "training (sum attribute)": [[77, "optim.text_grad.ops.Sum.training", false]], "training (textsplitter attribute)": [[4, "components.data_process.text_splitter.TextSplitter.training", false]], "training (trainer attribute)": [[80, "optim.trainer.Trainer.training", false], [82, "optim.trainer.trainer.Trainer.training", false]], "transform() (localdb method)": [[34, "core.db.LocalDB.transform", false]], "transformed_items (localdb attribute)": [[34, "core.db.LocalDB.transformed_items", false]], "transformer_setups (localdb attribute)": [[34, "core.db.LocalDB.transformer_setups", false]], "transformerembedder (class in components.model_client.transformers_client)": [[17, "components.model_client.transformers_client.TransformerEmbedder", false]], "transformerllm (class in components.model_client.transformers_client)": [[17, "components.model_client.transformers_client.TransformerLLM", false]], "transformerreranker (class in components.model_client.transformers_client)": [[17, "components.model_client.transformers_client.TransformerReranker", false]], "transformers (modelclienttype attribute)": [[46, "core.types.ModelClientType.TRANSFORMERS", false]], "transformers (optionalpackages attribute)": [[95, "utils.lazy_import.OptionalPackages.TRANSFORMERS", false]], "transformersclient (class in components.model_client.transformers_client)": [[17, "components.model_client.transformers_client.TransformersClient", false]], "trecdata (class in datasets)": [[53, "datasets.TrecData", false]], "trecdata (class in datasets.types)": [[51, "datasets.types.TrecData", false]], "trecdataset (class in datasets)": [[53, "datasets.TrecDataset", false]], "trecdataset (class in datasets.trec)": [[50, "datasets.trec.TrecDataset", false]], "trigger_callbacks() (callbackmanager method)": [[85, "tracing.callback_manager.CallbackManager.trigger_callbacks", false]], "turn_db (in module components.memory.memory)": [[6, "components.memory.memory.turn_db", false]], "type (componentnode attribute)": [[72, "optim.parameter.ComponentNode.type", false]], "type (objecttypes attribute)": [[98, "utils.serialization.ObjectTypes.TYPE", false]], "undefined (modeltype attribute)": [[46, "core.types.ModelType.UNDEFINED", false]], "update_default_backward_pass_setup() (generator method)": [[39, "core.generator.Generator.update_default_backward_pass_setup", false]], "update_dialog_turn() (conversation method)": [[46, "core.types.Conversation.update_dialog_turn", false]], "update_from_to() (gradient method)": [[63, "optim.Gradient.update_from_to", false], [69, "optim.gradient.Gradient.update_from_to", false]], "update_gradient_memory() (tgdoptimizer method)": [[63, "optim.TGDOptimizer.update_gradient_memory", false], [74, "optim.text_grad.TGDOptimizer.update_gradient_memory", false], [79, "optim.text_grad.tgd_optimizer.TGDOptimizer.update_gradient_memory", false]], "update_prompt_kwargs() (prompt method)": [[41, "core.prompt_builder.Prompt.update_prompt_kwargs", false]], "update_value() (parameter method)": [[63, "optim.Parameter.update_value", false], [72, "optim.parameter.Parameter.update_value", false]], "usage (class in core.types)": [[46, "core.types.Usage", false]], "usage (embedderoutput attribute)": [[46, "core.types.EmbedderOutput.usage", false]], "usage (generatoroutput attribute)": [[46, "core.types.GeneratorOutput.usage", false]], "use_teacher() (component method)": [[32, "core.component.Component.use_teacher", false]], "use_weighted_sampling() (demooptimizer method)": [[63, "optim.DemoOptimizer.use_weighted_sampling", false], [71, "optim.optimizer.DemoOptimizer.use_weighted_sampling", false]], "user_id (conversation attribute)": [[46, "core.types.Conversation.user_id", false]], "user_id (dialogturn attribute)": [[46, "core.types.DialogTurn.user_id", false]], "user_query (dialogturn attribute)": [[46, "core.types.DialogTurn.user_query", false]], "user_query_timestamp (dialogturn attribute)": [[46, "core.types.DialogTurn.user_query_timestamp", false]], "userquery (class in core.types)": [[46, "core.types.UserQuery", false]], "utils.cache": [[90, "module-utils.cache", false]], "utils.config": [[91, "module-utils.config", false]], "utils.data": [[92, "module-utils.data", false]], "utils.file_io": [[93, "module-utils.file_io", false]], "utils.global_config": [[94, "module-utils.global_config", false]], "utils.lazy_import": [[95, "module-utils.lazy_import", false]], "utils.logger": [[96, "module-utils.logger", false]], "utils.registry": [[97, "module-utils.registry", false]], "utils.serialization": [[98, "module-utils.serialization", false]], "utils.setup_env": [[99, "module-utils.setup_env", false]], "val_dataset (trainer attribute)": [[63, "optim.Trainer.val_dataset", false], [80, "optim.trainer.Trainer.val_dataset", false], [82, "optim.trainer.trainer.Trainer.val_dataset", false]], "val_score (trainerstepresult attribute)": [[83, "optim.types.TrainerStepResult.val_score", false]], "val_scores (trainerresult attribute)": [[83, "optim.types.TrainerResult.val_scores", false]], "validate_condition() (adalcomponent method)": [[63, "optim.AdalComponent.validate_condition", false], [80, "optim.trainer.AdalComponent.validate_condition", false], [81, "optim.trainer.adal.AdalComponent.validate_condition", false]], "validate_data() (in module core.functional)": [[38, "core.functional.validate_data", false]], "validate_stats (trainerresult attribute)": [[83, "optim.types.TrainerResult.validate_stats", false]], "validation_step() (adalcomponent method)": [[63, "optim.AdalComponent.validation_step", false], [80, "optim.trainer.AdalComponent.validation_step", false], [81, "optim.trainer.adal.AdalComponent.validation_step", false]], "value (historyprompt attribute)": [[79, "optim.text_grad.tgd_optimizer.HistoryPrompt.value", false]], "variable_desc (gradientcontext attribute)": [[63, "optim.GradientContext.variable_desc", false], [69, "optim.gradient.GradientContext.variable_desc", false]], "vector (dialogturn attribute)": [[46, "core.types.DialogTurn.vector", false]], "vector (document attribute)": [[46, "core.types.Document.vector", false]], "wrap_and_escape() (parameter static method)": [[63, "optim.Parameter.wrap_and_escape", false], [72, "optim.parameter.Parameter.wrap_and_escape", false]], "write_list_to_jsonl() (in module utils.file_io)": [[93, "utils.file_io.write_list_to_jsonl", false]], "yaml_definitions (toolmanager property)": [[45, "core.tool_manager.ToolManager.yaml_definitions", false]], "yamloutputparser (class in components.output_parsers)": [[19, "components.output_parsers.YamlOutputParser", false]], "yamloutputparser (class in components.output_parsers.outputs)": [[21, "components.output_parsers.outputs.YamlOutputParser", false]], "yamlparser (class in core.string_parser)": [[43, "core.string_parser.YamlParser", false]], "zero_grad() (textoptimizer method)": [[63, "optim.TextOptimizer.zero_grad", false], [71, "optim.optimizer.TextOptimizer.zero_grad", false]], "zero_grad() (tgdoptimizer method)": [[63, "optim.TGDOptimizer.zero_grad", false], [74, "optim.text_grad.TGDOptimizer.zero_grad", false], [79, "optim.text_grad.tgd_optimizer.TGDOptimizer.zero_grad", false]]}, "objects": {"": [[53, 0, 0, "-", "datasets"], [61, 0, 0, "-", "eval"], [63, 0, 0, "-", "optim"]], "components": [[0, 0, 0, "-", "agent"], [2, 0, 0, "-", "data_process"], [5, 0, 0, "-", "memory"], [7, 0, 0, "-", "model_client"], [19, 0, 0, "-", "output_parsers"], [22, 0, 0, "-", "retriever"]], "components.agent": [[0, 1, 1, "", "ReActAgent"], [1, 0, 0, "-", "react"]], "components.agent.ReActAgent": [[0, 2, 1, "", "bicall"], [0, 2, 1, "", "call"], [0, 2, 1, "", "forward"]], "components.agent.react": [[1, 3, 1, "", "DEFAULT_REACT_AGENT_SYSTEM_PROMPT"], [1, 1, 1, "", "ReActAgent"]], "components.agent.react.ReActAgent": [[1, 2, 1, "", "bicall"], [1, 2, 1, "", "call"], [1, 2, 1, "", "forward"]], "components.data_process": [[2, 1, 1, "", "RetrieverOutputToContextStr"], [2, 1, 1, "", "TextSplitter"], [2, 1, 1, "", "ToEmbeddings"], [3, 0, 0, "-", "data_components"], [4, 0, 0, "-", "text_splitter"]], "components.data_process.TextSplitter": [[2, 2, 1, "", "call"], [2, 2, 1, "", "split_text"], [2, 4, 1, "", "tokenizer"]], "components.data_process.data_components": [[3, 1, 1, "", "RetrieverOutputToContextStr"], [3, 1, 1, "", "ToEmbeddings"], [3, 5, 1, "", "retriever_output_to_context_str"]], "components.data_process.text_splitter": [[4, 1, 1, "", "TextSplitter"]], "components.data_process.text_splitter.TextSplitter": [[4, 2, 1, "", "call"], [4, 2, 1, "", "split_text"], [4, 4, 1, "", "teacher_mode"], [4, 4, 1, "", "tokenizer"], [4, 4, 1, "", "tracing"], [4, 4, 1, "", "training"]], "components.memory": [[6, 0, 0, "-", "memory"]], "components.memory.memory": [[6, 1, 1, "", "Memory"], [6, 4, 1, "", "conver_db"], [6, 4, 1, "", "current_conversation"], [6, 4, 1, "", "turn_db"]], "components.memory.memory.Memory": [[6, 2, 1, "", "add_dialog_turn"], [6, 2, 1, "", "call"]], "components.model_client": [[8, 0, 0, "-", "anthropic_client"], [9, 0, 0, "-", "azureai_client"], [11, 0, 0, "-", "cohere_client"], [12, 0, 0, "-", "deepseek_client"], [13, 0, 0, "-", "google_client"], [14, 0, 0, "-", "groq_client"], [15, 0, 0, "-", "ollama_client"], [16, 0, 0, "-", "openai_client"], [17, 0, 0, "-", "transformers_client"], [18, 0, 0, "-", "utils"]], "components.model_client.anthropic_client": [[8, 1, 1, "", "AnthropicAPIClient"], [8, 5, 1, "", "get_first_message_content"]], "components.model_client.anthropic_client.AnthropicAPIClient": [[8, 2, 1, "", "acall"], [8, 2, 1, "", "call"], [8, 2, 1, "", "convert_inputs_to_api_kwargs"], [8, 2, 1, "", "init_async_client"], [8, 2, 1, "", "init_sync_client"], [8, 2, 1, "", "parse_chat_completion"], [8, 2, 1, "", "track_completion_usage"]], "components.model_client.azureai_client": [[9, 1, 1, "", "AzureAIClient"]], "components.model_client.azureai_client.AzureAIClient": [[9, 2, 1, "", "acall"], [9, 2, 1, "", "call"], [9, 2, 1, "", "convert_inputs_to_api_kwargs"], [9, 2, 1, "", "from_dict"], [9, 2, 1, "", "init_async_client"], [9, 2, 1, "", "init_sync_client"], [9, 2, 1, "", "parse_chat_completion"], [9, 2, 1, "", "parse_embedding_response"], [9, 2, 1, "", "to_dict"], [9, 2, 1, "", "track_completion_usage"]], "components.model_client.cohere_client": [[11, 1, 1, "", "CohereAPIClient"]], "components.model_client.cohere_client.CohereAPIClient": [[11, 2, 1, "", "acall"], [11, 2, 1, "", "call"], [11, 2, 1, "", "convert_inputs_to_api_kwargs"], [11, 2, 1, "", "init_async_client"], [11, 2, 1, "", "init_sync_client"]], "components.model_client.deepseek_client": [[12, 1, 1, "", "DeepSeekClient"]], "components.model_client.google_client": [[13, 1, 1, "", "GoogleGenAIClient"]], "components.model_client.google_client.GoogleGenAIClient": [[13, 2, 1, "", "call"], [13, 2, 1, "", "convert_inputs_to_api_kwargs"], [13, 2, 1, "", "init_sync_client"], [13, 2, 1, "", "parse_chat_completion"], [13, 2, 1, "", "track_completion_usage"]], "components.model_client.groq_client": [[14, 1, 1, "", "GroqAPIClient"]], "components.model_client.groq_client.GroqAPIClient": [[14, 2, 1, "", "acall"], [14, 2, 1, "", "call"], [14, 2, 1, "", "convert_inputs_to_api_kwargs"], [14, 2, 1, "", "from_dict"], [14, 2, 1, "", "init_async_client"], [14, 2, 1, "", "init_sync_client"], [14, 2, 1, "", "parse_chat_completion"], [14, 2, 1, "", "to_dict"], [14, 2, 1, "", "track_completion_usage"]], "components.model_client.ollama_client": [[15, 1, 1, "", "OllamaClient"], [15, 5, 1, "", "parse_generate_response"], [15, 5, 1, "", "parse_stream_response"]], "components.model_client.ollama_client.OllamaClient": [[15, 2, 1, "", "acall"], [15, 2, 1, "", "call"], [15, 2, 1, "", "convert_inputs_to_api_kwargs"], [15, 2, 1, "", "from_dict"], [15, 2, 1, "", "init_async_client"], [15, 2, 1, "", "init_sync_client"], [15, 2, 1, "", "parse_chat_completion"], [15, 2, 1, "", "parse_embedding_response"], [15, 2, 1, "", "to_dict"]], "components.model_client.openai_client": [[16, 1, 1, "", "OpenAIClient"], [16, 5, 1, "", "estimate_token_count"], [16, 5, 1, "", "get_all_messages_content"], [16, 5, 1, "", "get_first_message_content"], [16, 5, 1, "", "get_probabilities"], [16, 5, 1, "", "handle_streaming_response"], [16, 5, 1, "", "parse_stream_response"]], "components.model_client.openai_client.OpenAIClient": [[16, 2, 1, "", "acall"], [16, 2, 1, "", "call"], [16, 2, 1, "", "convert_inputs_to_api_kwargs"], [16, 2, 1, "", "from_dict"], [16, 2, 1, "", "init_async_client"], [16, 2, 1, "", "init_sync_client"], [16, 2, 1, "", "parse_chat_completion"], [16, 2, 1, "", "parse_embedding_response"], [16, 2, 1, "", "parse_image_generation_response"], [16, 2, 1, "", "to_dict"], [16, 2, 1, "", "track_completion_usage"]], "components.model_client.transformers_client": [[17, 1, 1, "", "TransformerEmbedder"], [17, 1, 1, "", "TransformerLLM"], [17, 1, 1, "", "TransformerReranker"], [17, 1, 1, "", "TransformersClient"], [17, 5, 1, "", "average_pool"], [17, 5, 1, "", "clean_device_cache"], [17, 5, 1, "", "get_device"]], "components.model_client.transformers_client.TransformerEmbedder": [[17, 2, 1, "", "infer_gte_base_embedding"], [17, 2, 1, "", "init_model"], [17, 4, 1, "", "models"]], "components.model_client.transformers_client.TransformerLLM": [[17, 2, 1, "", "infer_llm"], [17, 2, 1, "", "init_model"], [17, 4, 1, "", "model_to_init_func"], [17, 4, 1, "", "models"], [17, 2, 1, "", "parse_chat_completion"], [17, 4, 1, "", "tokenizer"]], "components.model_client.transformers_client.TransformerReranker": [[17, 2, 1, "", "infer_bge_reranker_base"], [17, 2, 1, "", "init_model"], [17, 4, 1, "", "models"]], "components.model_client.transformers_client.TransformersClient": [[17, 2, 1, "", "call"], [17, 2, 1, "", "convert_inputs_to_api_kwargs"], [17, 2, 1, "", "init_llm_client"], [17, 2, 1, "", "init_reranker_client"], [17, 2, 1, "", "init_sync_client"], [17, 2, 1, "", "parse_chat_completion"], [17, 2, 1, "", "parse_embedding_response"], [17, 2, 1, "", "set_llm_client"], [17, 4, 1, "", "support_models"]], "components.model_client.utils": [[18, 5, 1, "", "parse_embedding_response"]], "components.output_parsers": [[19, 1, 1, "", "DataClassParser"], [19, 1, 1, "", "JsonOutputParser"], [19, 1, 1, "", "ListOutputParser"], [19, 1, 1, "", "YamlOutputParser"], [20, 0, 0, "-", "dataclass_parser"], [21, 0, 0, "-", "outputs"]], "components.output_parsers.DataClassParser": [[19, 2, 1, "", "call"], [19, 2, 1, "", "get_examples_str"], [19, 2, 1, "", "get_input_format_str"], [19, 2, 1, "", "get_input_str"], [19, 2, 1, "", "get_output_format_str"], [19, 2, 1, "", "get_task_desc_str"]], "components.output_parsers.JsonOutputParser": [[19, 2, 1, "", "call"], [19, 2, 1, "", "format_instructions"]], "components.output_parsers.ListOutputParser": [[19, 2, 1, "", "call"], [19, 2, 1, "", "format_instructions"]], "components.output_parsers.YamlOutputParser": [[19, 2, 1, "", "call"], [19, 2, 1, "", "format_instructions"]], "components.output_parsers.dataclass_parser": [[20, 1, 1, "", "DataClassParser"]], "components.output_parsers.dataclass_parser.DataClassParser": [[20, 2, 1, "", "call"], [20, 2, 1, "", "get_examples_str"], [20, 2, 1, "", "get_input_format_str"], [20, 2, 1, "", "get_input_str"], [20, 2, 1, "", "get_output_format_str"], [20, 2, 1, "", "get_task_desc_str"]], "components.output_parsers.outputs": [[21, 1, 1, "", "BooleanOutputParser"], [21, 1, 1, "", "JsonOutputParser"], [21, 1, 1, "", "ListOutputParser"], [21, 1, 1, "", "OutputParser"], [21, 1, 1, "", "YamlOutputParser"]], "components.output_parsers.outputs.BooleanOutputParser": [[21, 2, 1, "", "call"], [21, 2, 1, "", "format_instructions"]], "components.output_parsers.outputs.JsonOutputParser": [[21, 2, 1, "", "call"], [21, 2, 1, "", "format_instructions"]], "components.output_parsers.outputs.ListOutputParser": [[21, 2, 1, "", "call"], [21, 2, 1, "", "format_instructions"]], "components.output_parsers.outputs.OutputParser": [[21, 2, 1, "", "call"], [21, 2, 1, "", "format_instructions"]], "components.output_parsers.outputs.YamlOutputParser": [[21, 2, 1, "", "call"], [21, 2, 1, "", "format_instructions"]], "components.retriever": [[22, 1, 1, "", "BM25Retriever"], [22, 1, 1, "", "LLMRetriever"], [22, 1, 1, "", "RerankerRetriever"], [23, 0, 0, "-", "bm25_retriever"], [24, 0, 0, "-", "faiss_retriever"], [25, 0, 0, "-", "lancedb_retriver"], [26, 0, 0, "-", "llm_retriever"], [27, 0, 0, "-", "postgres_retriever"], [28, 0, 0, "-", "qdrant_retriever"], [29, 0, 0, "-", "reranker_retriever"], [22, 5, 1, "", "split_text_by_word_fn"], [22, 5, 1, "", "split_text_by_word_fn_then_lower_tokenized"]], "components.retriever.BM25Retriever": [[22, 2, 1, "", "build_index_from_documents"], [22, 2, 1, "", "call"], [22, 2, 1, "", "load_from_file"], [22, 2, 1, "", "reset_index"], [22, 2, 1, "", "save_to_file"]], "components.retriever.LLMRetriever": [[22, 2, 1, "", "build_index_from_documents"], [22, 2, 1, "", "call"], [22, 2, 1, "", "reset_index"]], "components.retriever.RerankerRetriever": [[22, 2, 1, "", "build_index_from_documents"], [22, 2, 1, "", "call"], [22, 2, 1, "", "reset_index"]], "components.retriever.bm25_retriever": [[23, 1, 1, "", "BM25Retriever"], [23, 5, 1, "", "split_text_by_word_fn"], [23, 5, 1, "", "split_text_by_word_fn_then_lower_tokenized"], [23, 5, 1, "", "split_text_tokenized"]], "components.retriever.bm25_retriever.BM25Retriever": [[23, 2, 1, "", "build_index_from_documents"], [23, 2, 1, "", "call"], [23, 2, 1, "", "load_from_file"], [23, 2, 1, "", "reset_index"], [23, 2, 1, "", "save_to_file"]], "components.retriever.faiss_retriever": [[24, 1, 1, "", "FAISSRetriever"]], "components.retriever.faiss_retriever.FAISSRetriever": [[24, 2, 1, "", "build_index_from_documents"], [24, 2, 1, "", "call"], [24, 2, 1, "", "reset_index"], [24, 2, 1, "", "retrieve_embedding_queries"], [24, 2, 1, "", "retrieve_string_queries"]], "components.retriever.lancedb_retriver": [[25, 1, 1, "", "LanceDBRetriever"]], "components.retriever.lancedb_retriver.LanceDBRetriever": [[25, 2, 1, "", "add_documents"], [25, 2, 1, "", "retrieve"]], "components.retriever.llm_retriever": [[26, 1, 1, "", "LLMRetriever"]], "components.retriever.llm_retriever.LLMRetriever": [[26, 2, 1, "", "build_index_from_documents"], [26, 2, 1, "", "call"], [26, 2, 1, "", "reset_index"]], "components.retriever.postgres_retriever": [[27, 1, 1, "", "DistanceToOperator"], [27, 1, 1, "", "PostgresRetriever"]], "components.retriever.postgres_retriever.DistanceToOperator": [[27, 4, 1, "", "COSINE"], [27, 4, 1, "", "INNER_PRODUCT"], [27, 4, 1, "", "L1"], [27, 4, 1, "", "L2"]], "components.retriever.postgres_retriever.PostgresRetriever": [[27, 2, 1, "", "call"], [27, 2, 1, "", "format_vector_search_query"], [27, 2, 1, "", "retrieve_by_sql"]], "components.retriever.qdrant_retriever": [[28, 1, 1, "", "QdrantRetriever"]], "components.retriever.qdrant_retriever.QdrantRetriever": [[28, 2, 1, "", "call"], [28, 2, 1, "", "reset_index"]], "components.retriever.reranker_retriever": [[29, 1, 1, "", "RerankerRetriever"]], "components.retriever.reranker_retriever.RerankerRetriever": [[29, 2, 1, "", "build_index_from_documents"], [29, 2, 1, "", "call"], [29, 2, 1, "", "reset_index"]], "core": [[31, 0, 0, "-", "base_data_class"], [32, 0, 0, "-", "component"], [33, 0, 0, "-", "container"], [34, 0, 0, "-", "db"], [35, 0, 0, "-", "default_prompt_template"], [36, 0, 0, "-", "embedder"], [37, 0, 0, "-", "func_tool"], [38, 0, 0, "-", "functional"], [39, 0, 0, "-", "generator"], [40, 0, 0, "-", "model_client"], [41, 0, 0, "-", "prompt_builder"], [42, 0, 0, "-", "retriever"], [43, 0, 0, "-", "string_parser"], [44, 0, 0, "-", "tokenizer"], [45, 0, 0, "-", "tool_manager"], [46, 0, 0, "-", "types"]], "core.base_data_class": [[31, 1, 1, "", "DataClass"], [31, 1, 1, "", "DataClassFormatType"], [31, 1, 1, "", "DynamicDataClassFactory"], [31, 3, 1, "", "ExcludeType"], [31, 3, 1, "", "IncludeType"], [31, 5, 1, "", "check_adal_dataclass"], [31, 5, 1, "", "required_field"]], "core.base_data_class.DataClass": [[31, 2, 1, "", "dict_to_yaml"], [31, 2, 1, "", "format_class_str"], [31, 2, 1, "", "format_example_str"], [31, 2, 1, "", "from_dict"], [31, 2, 1, "", "from_json"], [31, 2, 1, "", "from_yaml"], [31, 2, 1, "", "get_input_fields"], [31, 2, 1, "", "get_output_fields"], [31, 2, 1, "", "get_task_desc"], [31, 2, 1, "", "set_input_fields"], [31, 2, 1, "", "set_output_fields"], [31, 2, 1, "", "set_task_desc"], [31, 2, 1, "", "to_dict"], [31, 2, 1, "", "to_dict_class"], [31, 2, 1, "", "to_json"], [31, 2, 1, "", "to_json_obj"], [31, 2, 1, "", "to_json_signature"], [31, 2, 1, "", "to_schema"], [31, 2, 1, "", "to_schema_str"], [31, 2, 1, "", "to_yaml"], [31, 2, 1, "", "to_yaml_obj"], [31, 2, 1, "", "to_yaml_signature"]], "core.base_data_class.DataClassFormatType": [[31, 4, 1, "", "EXAMPLE_JSON"], [31, 4, 1, "", "EXAMPLE_YAML"], [31, 4, 1, "", "SCHEMA"], [31, 4, 1, "", "SIGNATURE_JSON"], [31, 4, 1, "", "SIGNATURE_YAML"]], "core.base_data_class.DynamicDataClassFactory": [[31, 2, 1, "", "from_dict"]], "core.component": [[32, 1, 1, "", "Component"], [32, 1, 1, "", "DataComponent"], [32, 1, 1, "", "FuncComponent"], [32, 1, 1, "", "FuncDataComponent"], [32, 5, 1, "", "func_to_component"], [32, 5, 1, "", "func_to_data_component"]], "core.component.Component": [[32, 2, 1, "", "acall"], [32, 2, 1, "", "add_component"], [32, 2, 1, "", "bicall"], [32, 2, 1, "", "call"], [32, 2, 1, "", "children"], [32, 2, 1, "", "components"], [32, 2, 1, "", "eval"], [32, 2, 1, "", "forward"], [32, 2, 1, "", "from_config"], [32, 2, 1, "", "from_dict"], [32, 2, 1, "", "get_subcomponent"], [32, 2, 1, "", "is_picklable"], [32, 2, 1, "", "load_from_pickle"], [32, 2, 1, "", "load_state_dict"], [32, 2, 1, "", "load_state_pickle"], [32, 4, 1, "", "name"], [32, 2, 1, "", "named_children"], [32, 2, 1, "", "named_components"], [32, 2, 1, "", "named_parameters"], [32, 2, 1, "", "parameters"], [32, 2, 1, "", "pickle_to_file"], [32, 2, 1, "", "register_component"], [32, 2, 1, "", "register_parameter"], [32, 2, 1, "", "state_dict"], [32, 4, 1, "", "teacher_mode"], [32, 2, 1, "", "to_dict"], [32, 2, 1, "", "trace"], [32, 4, 1, "", "tracing"], [32, 2, 1, "", "train"], [32, 4, 1, "", "training"], [32, 2, 1, "", "use_teacher"]], "core.component.DataComponent": [[32, 2, 1, "", "train"]], "core.component.FuncComponent": [[32, 2, 1, "", "call"]], "core.component.FuncDataComponent": [[32, 2, 1, "", "call"]], "core.container": [[33, 1, 1, "", "ComponentList"], [33, 1, 1, "", "Sequential"]], "core.container.ComponentList": [[33, 2, 1, "", "append"], [33, 2, 1, "", "extend"], [33, 2, 1, "", "insert"], [33, 2, 1, "", "pop"]], "core.container.Sequential": [[33, 2, 1, "", "acall"], [33, 2, 1, "", "append"], [33, 2, 1, "", "call"], [33, 2, 1, "", "extend"], [33, 2, 1, "", "insert"]], "core.db": [[34, 1, 1, "", "LocalDB"]], "core.db.LocalDB": [[34, 2, 1, "", "add"], [34, 2, 1, "", "delete"], [34, 2, 1, "", "extend"], [34, 2, 1, "", "fetch_items"], [34, 2, 1, "", "fetch_transformed_items"], [34, 2, 1, "", "get_transformed_data"], [34, 2, 1, "", "get_transformer_keys"], [34, 4, 1, "", "index_path"], [34, 4, 1, "", "items"], [34, 6, 1, "", "length"], [34, 2, 1, "", "load"], [34, 2, 1, "", "load_state"], [34, 4, 1, "", "mapper_setups"], [34, 4, 1, "", "name"], [34, 2, 1, "", "register_transformer"], [34, 2, 1, "", "reset"], [34, 2, 1, "", "save_state"], [34, 2, 1, "", "transform"], [34, 4, 1, "", "transformed_items"], [34, 4, 1, "", "transformer_setups"]], "core.default_prompt_template": [[35, 3, 1, "", "ADALFLOW_DEFAULT_PROMPT_ARGS"], [35, 3, 1, "", "ADALFLOW_DEFAULT_PROMPT_TRAINABLE_PARAMS"], [35, 3, 1, "id0", "DEFAULT_ADALFLOW_SYSTEM_PROMPT"], [35, 3, 1, "", "SIMPLE_DEFAULT_ADALFLOW_SYSTEM_PROMPT"]], "core.embedder": [[36, 1, 1, "", "BatchEmbedder"], [36, 1, 1, "", "Embedder"]], "core.embedder.BatchEmbedder": [[36, 2, 1, "", "call"]], "core.embedder.Embedder": [[36, 2, 1, "", "acall"], [36, 2, 1, "", "call"], [36, 2, 1, "", "from_config"], [36, 4, 1, "", "model_client"], [36, 4, 1, "", "model_type"], [36, 4, 1, "", "output_processors"]], "core.func_tool": [[37, 1, 1, "", "FunctionTool"], [37, 5, 1, "", "find_instance_name_from_self"], [37, 5, 1, "", "is_running_in_event_loop"]], "core.func_tool.FunctionTool": [[37, 2, 1, "", "acall"], [37, 2, 1, "", "bicall"], [37, 2, 1, "", "call"], [37, 2, 1, "", "execute"], [37, 2, 1, "", "forward"], [37, 6, 1, "", "is_async"]], "core.functional": [[38, 5, 1, "", "check_data_class_field_args_one"], [38, 5, 1, "", "check_data_class_field_args_zero"], [38, 5, 1, "", "check_if_class_field_args_one_exists"], [38, 5, 1, "", "check_if_class_field_args_zero_exists"], [38, 5, 1, "", "compose_model_kwargs"], [38, 5, 1, "", "convert_schema_to_signature"], [38, 5, 1, "", "custom_asdict"], [38, 5, 1, "", "dataclass_obj_from_dict"], [38, 5, 1, "", "evaluate_ast_node"], [38, 5, 1, "", "extract_dataclass_type"], [38, 5, 1, "", "extract_first_boolean"], [38, 5, 1, "", "extract_first_float"], [38, 5, 1, "", "extract_first_int"], [38, 5, 1, "", "extract_function_expression"], [38, 5, 1, "", "extract_json_str"], [38, 5, 1, "", "extract_list_str"], [38, 5, 1, "", "extract_yaml_str"], [38, 5, 1, "", "fix_json_escaped_single_quotes"], [38, 5, 1, "", "fix_json_missing_commas"], [38, 5, 1, "", "from_dict_to_json"], [38, 5, 1, "", "from_dict_to_yaml"], [38, 5, 1, "", "from_json_to_dict"], [38, 5, 1, "", "from_yaml_to_dict"], [38, 5, 1, "", "generate_function_call_expression_from_callable"], [38, 5, 1, "", "generate_readable_key_for_function"], [38, 5, 1, "", "get_dataclass_schema"], [38, 5, 1, "", "get_enum_schema"], [38, 5, 1, "", "get_fun_schema"], [38, 5, 1, "", "get_top_k_indices_scores"], [38, 5, 1, "", "get_type_schema"], [38, 5, 1, "", "is_dataclass_instance"], [38, 5, 1, "", "is_normalized"], [38, 5, 1, "", "is_potential_dataclass"], [38, 5, 1, "", "normalize_np_array"], [38, 5, 1, "", "normalize_vector"], [38, 5, 1, "", "parse_function_call_expr"], [38, 5, 1, "", "parse_json_str_to_obj"], [38, 5, 1, "", "parse_yaml_str_to_obj"], [38, 5, 1, "", "random_sample"], [38, 5, 1, "", "represent_ordereddict"], [38, 5, 1, "", "sandbox_exec"], [38, 5, 1, "", "validate_data"]], "core.generator": [[39, 1, 1, "", "BackwardEngine"], [39, 1, 1, "", "Generator"], [39, 5, 1, "", "create_teacher_generator"]], "core.generator.BackwardEngine": [[39, 2, 1, "", "call"], [39, 2, 1, "", "failure_message_to_optimizer"], [39, 2, 1, "", "forward"]], "core.generator.Generator": [[39, 2, 1, "", "acall"], [39, 2, 1, "", "backward"], [39, 4, 1, "", "backward_pass_setup"], [39, 2, 1, "", "call"], [39, 2, 1, "", "create_demo_data_instance"], [39, 2, 1, "", "failure_message_to_backward_engine"], [39, 2, 1, "", "find_demo_parameter"], [39, 2, 1, "", "forward"], [39, 2, 1, "", "from_config"], [39, 2, 1, "", "get_cache_path"], [39, 2, 1, "", "get_prompt"], [39, 4, 1, "", "model_client"], [39, 4, 1, "", "model_type"], [39, 2, 1, "", "print_prompt"], [39, 2, 1, "", "reset_mock_output"], [39, 2, 1, "", "set_backward_engine"], [39, 2, 1, "", "set_cache_path"], [39, 2, 1, "", "set_mock_output"], [39, 2, 1, "", "set_parameters"], [39, 2, 1, "", "set_teacher_generator"], [39, 2, 1, "", "to_dict"], [39, 2, 1, "", "update_default_backward_pass_setup"]], "core.model_client": [[40, 1, 1, "", "ModelClient"]], "core.model_client.ModelClient": [[40, 2, 1, "", "acall"], [40, 2, 1, "", "call"], [40, 2, 1, "", "convert_inputs_to_api_kwargs"], [40, 2, 1, "", "init_async_client"], [40, 2, 1, "", "init_sync_client"], [40, 2, 1, "", "parse_chat_completion"], [40, 2, 1, "", "parse_embedding_response"], [40, 2, 1, "", "track_completion_usage"]], "core.prompt_builder": [[41, 1, 1, "", "Prompt"], [41, 5, 1, "", "get_jinja2_environment"]], "core.prompt_builder.Prompt": [[41, 2, 1, "", "call"], [41, 2, 1, "", "compose_prompt_kwargs"], [41, 2, 1, "", "from_dict"], [41, 2, 1, "", "get_prompt_variables"], [41, 2, 1, "", "is_key_in_template"], [41, 2, 1, "", "print_prompt"], [41, 2, 1, "", "print_prompt_template"], [41, 2, 1, "", "to_dict"], [41, 2, 1, "", "update_prompt_kwargs"]], "core.retriever": [[42, 1, 1, "", "Retriever"]], "core.retriever.Retriever": [[42, 2, 1, "", "acall"], [42, 2, 1, "", "build_index_from_documents"], [42, 2, 1, "", "call"], [42, 2, 1, "", "forward"], [42, 4, 1, "", "index_keys"], [42, 4, 1, "", "indexed"], [42, 2, 1, "", "load_from_file"], [42, 4, 1, "", "name"], [42, 2, 1, "", "reset_index"], [42, 2, 1, "", "save_to_file"], [42, 4, 1, "", "top_k"]], "core.string_parser": [[43, 1, 1, "", "BooleanParser"], [43, 1, 1, "", "FloatParser"], [43, 1, 1, "", "IntParser"], [43, 1, 1, "", "JsonParser"], [43, 1, 1, "", "ListParser"], [43, 1, 1, "", "YamlParser"]], "core.string_parser.BooleanParser": [[43, 2, 1, "", "call"]], "core.string_parser.FloatParser": [[43, 2, 1, "", "call"]], "core.string_parser.IntParser": [[43, 2, 1, "", "call"]], "core.string_parser.JsonParser": [[43, 2, 1, "", "call"]], "core.string_parser.ListParser": [[43, 2, 1, "", "call"]], "core.string_parser.YamlParser": [[43, 2, 1, "", "call"]], "core.tokenizer": [[44, 1, 1, "", "Tokenizer"]], "core.tokenizer.Tokenizer": [[44, 2, 1, "", "count_tokens"], [44, 2, 1, "", "decode"], [44, 2, 1, "", "encode"], [44, 2, 1, "", "get_string_tokens"], [44, 2, 1, "", "preprocess"]], "core.tool_manager": [[45, 1, 1, "", "CallFunctionTool"], [45, 1, 1, "", "FunctionExperssionToFunction"], [45, 1, 1, "", "ToolManager"], [45, 5, 1, "", "run_async_in_new_loop"]], "core.tool_manager.CallFunctionTool": [[45, 2, 1, "", "bicall"], [45, 2, 1, "", "call"], [45, 2, 1, "", "forward"]], "core.tool_manager.FunctionExperssionToFunction": [[45, 2, 1, "", "call"]], "core.tool_manager.ToolManager": [[45, 2, 1, "", "call"], [45, 2, 1, "", "create_context_map_from_tools"], [45, 2, 1, "", "execute_func"], [45, 2, 1, "", "execute_func_async"], [45, 2, 1, "", "execute_func_expr"], [45, 2, 1, "", "execute_func_expr_async"], [45, 2, 1, "", "execute_func_expr_via_eval"], [45, 2, 1, "", "execute_func_expr_via_sandbox"], [45, 2, 1, "", "forward"], [45, 6, 1, "", "function_definitions"], [45, 2, 1, "", "get_context_index"], [45, 6, 1, "", "json_definitions"], [45, 2, 1, "", "parse_func_expr"], [45, 6, 1, "", "yaml_definitions"]], "core.types": [[46, 1, 1, "", "AssistantResponse"], [46, 1, 1, "", "CompletionUsage"], [46, 1, 1, "", "Conversation"], [46, 1, 1, "", "DialogTurn"], [46, 1, 1, "", "Document"], [46, 1, 1, "", "EmbedderOutput"], [46, 4, 1, "", "EmbedderOutputType"], [46, 1, 1, "", "Embedding"], [46, 1, 1, "", "Function"], [46, 1, 1, "", "FunctionDefinition"], [46, 1, 1, "", "FunctionExpression"], [46, 1, 1, "", "FunctionOutput"], [46, 1, 1, "", "GeneratorOutput"], [46, 1, 1, "", "ModelClientType"], [46, 1, 1, "", "ModelType"], [46, 1, 1, "", "RetrieverOutput"], [46, 1, 1, "", "StepOutput"], [46, 1, 1, "", "TokenLogProb"], [46, 1, 1, "", "Usage"], [46, 1, 1, "", "UserQuery"], [46, 5, 1, "", "get_model_args"]], "core.types.AssistantResponse": [[46, 4, 1, "", "metadata"], [46, 4, 1, "", "response_str"]], "core.types.CompletionUsage": [[46, 4, 1, "", "completion_tokens"], [46, 4, 1, "", "prompt_tokens"], [46, 4, 1, "", "total_tokens"]], "core.types.Conversation": [[46, 2, 1, "", "append_dialog_turn"], [46, 4, 1, "", "created_at"], [46, 2, 1, "", "delete_dialog_turn"], [46, 4, 1, "", "dialog_turns"], [46, 4, 1, "", "dialog_turns_input"], [46, 2, 1, "", "get_chat_history_str"], [46, 2, 1, "", "get_dialog_turns"], [46, 2, 1, "", "get_next_order"], [46, 4, 1, "", "id"], [46, 4, 1, "", "metadata"], [46, 4, 1, "", "name"], [46, 2, 1, "", "update_dialog_turn"], [46, 4, 1, "", "user_id"]], "core.types.DialogTurn": [[46, 4, 1, "", "assistant_response"], [46, 4, 1, "", "assistant_response_timestamp"], [46, 4, 1, "", "conversation_id"], [46, 4, 1, "", "id"], [46, 4, 1, "", "metadata"], [46, 4, 1, "", "order"], [46, 2, 1, "", "set_assistant_response"], [46, 2, 1, "", "set_user_query"], [46, 4, 1, "", "user_id"], [46, 4, 1, "", "user_query"], [46, 4, 1, "", "user_query_timestamp"], [46, 4, 1, "", "vector"]], "core.types.Document": [[46, 4, 1, "", "estimated_num_tokens"], [46, 2, 1, "", "from_dict"], [46, 4, 1, "", "id"], [46, 4, 1, "", "meta_data"], [46, 4, 1, "", "order"], [46, 4, 1, "", "parent_doc_id"], [46, 4, 1, "", "score"], [46, 4, 1, "", "text"], [46, 4, 1, "", "vector"]], "core.types.EmbedderOutput": [[46, 4, 1, "", "data"], [46, 6, 1, "", "embedding_dim"], [46, 4, 1, "", "error"], [46, 4, 1, "", "input"], [46, 6, 1, "", "is_normalized"], [46, 6, 1, "", "length"], [46, 4, 1, "", "model"], [46, 4, 1, "", "raw_response"], [46, 4, 1, "", "usage"]], "core.types.Embedding": [[46, 4, 1, "", "embedding"], [46, 4, 1, "", "index"]], "core.types.Function": [[46, 4, 1, "", "args"], [46, 2, 1, "", "from_function"], [46, 4, 1, "", "kwargs"], [46, 4, 1, "", "name"], [46, 4, 1, "", "thought"]], "core.types.FunctionDefinition": [[46, 4, 1, "", "class_instance"], [46, 2, 1, "", "fn_schema_str"], [46, 4, 1, "", "func_desc"], [46, 2, 1, "", "func_name"], [46, 4, 1, "", "func_parameters"]], "core.types.FunctionExpression": [[46, 4, 1, "", "action"], [46, 2, 1, "", "from_function"], [46, 4, 1, "", "thought"]], "core.types.FunctionOutput": [[46, 4, 1, "", "error"], [46, 4, 1, "", "input"], [46, 4, 1, "", "name"], [46, 4, 1, "", "output"], [46, 4, 1, "", "parsed_input"]], "core.types.GeneratorOutput": [[46, 4, 1, "", "data"], [46, 4, 1, "", "error"], [46, 4, 1, "", "id"], [46, 4, 1, "", "metadata"], [46, 4, 1, "", "raw_response"], [46, 4, 1, "", "usage"]], "core.types.ModelClientType": [[46, 4, 1, "", "ANTHROPIC"], [46, 4, 1, "", "COHERE"], [46, 4, 1, "", "GOOGLE_GENAI"], [46, 4, 1, "", "GROQ"], [46, 4, 1, "", "OLLAMA"], [46, 4, 1, "", "OPENAI"], [46, 4, 1, "", "TRANSFORMERS"]], "core.types.ModelType": [[46, 4, 1, "", "EMBEDDER"], [46, 4, 1, "", "IMAGE_GENERATION"], [46, 4, 1, "", "LLM"], [46, 4, 1, "", "RERANKER"], [46, 4, 1, "", "UNDEFINED"]], "core.types.RetrieverOutput": [[46, 2, 1, "", "doc_indices"], [46, 4, 1, "", "doc_scores"], [46, 4, 1, "", "documents"], [46, 4, 1, "", "id"], [46, 4, 1, "", "query"]], "core.types.StepOutput": [[46, 4, 1, "", "action"], [46, 4, 1, "", "function"], [46, 4, 1, "", "observation"], [46, 4, 1, "", "step"], [46, 2, 1, "", "to_prompt_str"]], "core.types.TokenLogProb": [[46, 4, 1, "", "logprob"], [46, 4, 1, "", "token"]], "core.types.Usage": [[46, 4, 1, "", "prompt_tokens"], [46, 4, 1, "", "total_tokens"]], "core.types.UserQuery": [[46, 4, 1, "", "metadata"], [46, 4, 1, "", "query_str"]], "datasets": [[53, 1, 1, "", "BigBenchHard"], [53, 1, 1, "", "Example"], [53, 1, 1, "", "HotPotQA"], [53, 1, 1, "", "HotPotQAData"], [53, 1, 1, "", "TrecData"], [53, 1, 1, "", "TrecDataset"], [48, 0, 0, "-", "big_bench_hard"], [49, 0, 0, "-", "hotpot_qa"], [50, 0, 0, "-", "trec"], [51, 0, 0, "-", "types"], [52, 0, 0, "-", "utils"]], "datasets.BigBenchHard": [[53, 2, 1, "", "get_default_task_instruction"]], "datasets.Example": [[53, 4, 1, "", "answer"], [53, 4, 1, "", "id"], [53, 4, 1, "", "question"]], "datasets.HotPotQAData": [[53, 4, 1, "", "context"], [53, 4, 1, "", "gold_titles"]], "datasets.TrecData": [[53, 4, 1, "", "class_index"], [53, 4, 1, "", "class_name"], [53, 4, 1, "", "question"]], "datasets.big_bench_hard": [[48, 1, 1, "", "BigBenchHard"]], "datasets.big_bench_hard.BigBenchHard": [[48, 2, 1, "", "get_default_task_instruction"]], "datasets.hotpot_qa": [[49, 1, 1, "", "HotPotQA"]], "datasets.trec": [[50, 1, 1, "", "TrecDataset"], [50, 5, 1, "", "calculate_class_weights"], [50, 5, 1, "", "prepare_datasets"], [50, 5, 1, "", "sample_subset_dataset"]], "datasets.types": [[51, 1, 1, "", "BaseData"], [51, 1, 1, "", "Example"], [51, 1, 1, "", "HotPotQAData"], [51, 1, 1, "", "TrecData"]], "datasets.types.BaseData": [[51, 4, 1, "", "id"]], "datasets.types.Example": [[51, 4, 1, "", "answer"], [51, 4, 1, "", "id"], [51, 4, 1, "", "question"]], "datasets.types.HotPotQAData": [[51, 4, 1, "", "context"], [51, 4, 1, "", "gold_titles"]], "datasets.types.TrecData": [[51, 4, 1, "", "class_index"], [51, 4, 1, "", "class_name"], [51, 4, 1, "", "question"]], "datasets.utils": [[52, 5, 1, "", "prepare_dataset_path"]], "eval": [[61, 1, 1, "", "AnswerMatchAcc"], [61, 1, 1, "", "GEvalJudgeEvaluator"], [61, 1, 1, "", "GEvalLLMJudge"], [61, 1, 1, "", "GEvalMetric"], [61, 1, 1, "", "LLMasJudge"], [61, 1, 1, "", "RetrieverEvaluator"], [54, 0, 0, "-", "answer_match_acc"], [55, 0, 0, "-", "base"], [56, 0, 0, "-", "functional"], [57, 0, 0, "-", "g_eval"], [58, 0, 0, "-", "llm_as_judge"], [59, 0, 0, "-", "retriever_recall"], [60, 0, 0, "-", "utils"]], "eval.AnswerMatchAcc": [[61, 2, 1, "", "compute"], [61, 2, 1, "", "compute_single_item"]], "eval.GEvalJudgeEvaluator": [[61, 2, 1, "", "compute"], [61, 2, 1, "", "compute_single_item"]], "eval.GEvalLLMJudge": [[61, 2, 1, "", "call"]], "eval.GEvalMetric": [[61, 4, 1, "", "COHERENCE"], [61, 4, 1, "", "CONSISTENCY"], [61, 4, 1, "", "FLUENCY"], [61, 4, 1, "", "RELEVANCE"]], "eval.LLMasJudge": [[61, 2, 1, "", "compute"]], "eval.RetrieverEvaluator": [[61, 2, 1, "", "compute"], [61, 2, 1, "", "compute_single_item"]], "eval.answer_match_acc": [[54, 1, 1, "", "AnswerMatchAcc"]], "eval.answer_match_acc.AnswerMatchAcc": [[54, 2, 1, "", "compute"], [54, 2, 1, "", "compute_single_item"]], "eval.base": [[55, 1, 1, "", "BaseEvaluator"], [55, 1, 1, "", "EvaluationResult"]], "eval.base.BaseEvaluator": [[55, 2, 1, "", "compute"], [55, 2, 1, "", "compute_single_item"]], "eval.base.EvaluationResult": [[55, 4, 1, "", "additional_info"], [55, 4, 1, "", "avg_score"], [55, 4, 1, "", "per_item_scores"]], "eval.functional": [[56, 5, 1, "", "confidence_interval"], [56, 5, 1, "", "longest_common_substring"]], "eval.g_eval": [[57, 1, 1, "", "GEvalJudgeEvaluator"], [57, 1, 1, "", "GEvalLLMJudge"], [57, 1, 1, "", "GEvalMetric"], [57, 1, 1, "", "NLGTask"]], "eval.g_eval.GEvalJudgeEvaluator": [[57, 2, 1, "", "compute"], [57, 2, 1, "", "compute_single_item"]], "eval.g_eval.GEvalLLMJudge": [[57, 2, 1, "", "call"]], "eval.g_eval.GEvalMetric": [[57, 4, 1, "", "COHERENCE"], [57, 4, 1, "", "CONSISTENCY"], [57, 4, 1, "", "FLUENCY"], [57, 4, 1, "", "RELEVANCE"]], "eval.g_eval.NLGTask": [[57, 4, 1, "", "SUMMARIZATION"]], "eval.llm_as_judge": [[58, 1, 1, "", "DefaultLLMJudge"], [58, 1, 1, "", "LLMJudgeEvalResult"], [58, 1, 1, "", "LLMasJudge"]], "eval.llm_as_judge.DefaultLLMJudge": [[58, 2, 1, "", "call"]], "eval.llm_as_judge.LLMJudgeEvalResult": [[58, 4, 1, "", "avg_score"], [58, 4, 1, "", "confidence_interval"], [58, 4, 1, "", "judgement_score_list"]], "eval.llm_as_judge.LLMasJudge": [[58, 2, 1, "", "compute"]], "eval.retriever_recall": [[59, 1, 1, "", "RetrieverEvaluator"]], "eval.retriever_recall.RetrieverEvaluator": [[59, 2, 1, "", "compute"], [59, 2, 1, "", "compute_single_item"]], "eval.utils": [[60, 5, 1, "", "f1_score"], [60, 5, 1, "", "normalize_answer"]], "optim": [[63, 1, 1, "", "AdalComponent"], [63, 1, 1, "", "BackwardContext"], [63, 1, 1, "", "BootstrapFewShot"], [63, 1, 1, "", "ClassSampler"], [63, 1, 1, "", "DemoOptimizer"], [63, 1, 1, "", "EvalFnToTextLoss"], [63, 1, 1, "", "Gradient"], [63, 1, 1, "", "GradientContext"], [63, 1, 1, "", "LLMAsTextLoss"], [63, 1, 1, "", "Optimizer"], [63, 1, 1, "", "OutputParameter"], [63, 1, 1, "", "Parameter"], [63, 1, 1, "", "RandomSampler"], [63, 1, 1, "", "Sampler"], [63, 1, 1, "", "TGDOptimizer"], [63, 1, 1, "", "TextOptimizer"], [63, 1, 1, "", "Trainer"], [65, 0, 0, "-", "few_shot"], [67, 0, 0, "-", "function"], [68, 0, 0, "-", "grad_component"], [69, 0, 0, "-", "gradient"], [70, 0, 0, "-", "loss_component"], [71, 0, 0, "-", "optimizer"], [72, 0, 0, "-", "parameter"], [73, 0, 0, "-", "sampler"], [74, 0, 0, "-", "text_grad"], [80, 0, 0, "-", "trainer"], [83, 0, 0, "-", "types"]], "optim.AdalComponent": [[63, 4, 1, "", "backward_engine"], [63, 2, 1, "", "bicall"], [63, 2, 1, "", "call"], [63, 2, 1, "", "configure_backward_engine"], [63, 2, 1, "", "configure_backward_engine_helper"], [63, 2, 1, "", "configure_callbacks"], [63, 2, 1, "", "configure_demo_optimizer_helper"], [63, 2, 1, "", "configure_optimizers"], [63, 2, 1, "", "configure_teacher_generator"], [63, 2, 1, "", "configure_teacher_generator_helper"], [63, 2, 1, "", "configure_text_optimizer_helper"], [63, 2, 1, "", "disable_backward_engine"], [63, 2, 1, "", "disable_backward_engine_helper"], [63, 4, 1, "", "eval_fn"], [63, 2, 1, "", "evaluate_samples"], [63, 2, 1, "", "forward"], [63, 4, 1, "", "loss_eval_fn"], [63, 4, 1, "", "loss_fn"], [63, 2, 1, "", "loss_step"], [63, 2, 1, "", "pred_step"], [63, 2, 1, "", "prepare_eval"], [63, 2, 1, "", "prepare_loss"], [63, 2, 1, "", "prepare_loss_eval"], [63, 2, 1, "", "prepare_task"], [63, 2, 1, "", "run_one_loss_sample"], [63, 2, 1, "", "run_one_task_sample"], [63, 4, 1, "", "task"], [63, 2, 1, "", "train_step"], [63, 2, 1, "", "validate_condition"], [63, 2, 1, "", "validation_step"]], "optim.BootstrapFewShot": [[63, 2, 1, "", "add_scores"], [63, 2, 1, "", "config_dataset"], [63, 2, 1, "", "config_shots"], [63, 6, 1, "", "num_shots"], [63, 2, 1, "", "propose"], [63, 2, 1, "", "revert"], [63, 2, 1, "", "sample"], [63, 2, 1, "", "samples_to_str"], [63, 2, 1, "", "step"]], "optim.ClassSampler": [[63, 2, 1, "", "call"], [63, 2, 1, "", "random_replace"], [63, 2, 1, "", "random_sample"]], "optim.DemoOptimizer": [[63, 2, 1, "", "add_scores"], [63, 2, 1, "", "config_shots"], [63, 4, 1, "", "dataset"], [63, 4, 1, "", "exclude_input_fields_from_bootstrap_demos"], [63, 2, 1, "", "set_dataset"], [63, 2, 1, "", "use_weighted_sampling"]], "optim.EvalFnToTextLoss": [[63, 2, 1, "", "backward"], [63, 2, 1, "", "forward"], [63, 2, 1, "", "set_backward_engine"]], "optim.Gradient": [[63, 2, 1, "", "add_context"], [63, 2, 1, "", "add_data"], [63, 2, 1, "", "add_prompt"], [63, 4, 1, "", "context"], [63, 4, 1, "", "data"], [63, 4, 1, "", "data_id"], [63, 4, 1, "", "from_response_component_id"], [63, 4, 1, "", "from_response_id"], [63, 4, 1, "", "is_default_copy"], [63, 4, 1, "", "order"], [63, 4, 1, "", "prompt"], [63, 4, 1, "", "score"], [63, 4, 1, "", "to_pred_id"], [63, 2, 1, "", "update_from_to"]], "optim.GradientContext": [[63, 4, 1, "", "input_output"], [63, 4, 1, "", "response_desc"], [63, 4, 1, "", "variable_desc"]], "optim.LLMAsTextLoss": [[63, 2, 1, "", "forward"]], "optim.Optimizer": [[63, 4, 1, "", "params"], [63, 2, 1, "", "propose"], [63, 4, 1, "", "proposing"], [63, 2, 1, "", "revert"], [63, 2, 1, "", "state_dict"], [63, 2, 1, "", "step"]], "optim.OutputParameter": [[63, 4, 1, "", "allowed_types"], [63, 4, 1, "", "component_trace"], [63, 2, 1, "", "from_dict"], [63, 4, 1, "", "full_response"], [63, 2, 1, "", "to_dict"], [63, 2, 1, "", "trace_api_kwargs"], [63, 2, 1, "", "trace_forward_pass"]], "optim.Parameter": [[63, 2, 1, "", "add_dataclass_to_trace"], [63, 2, 1, "", "add_gradient"], [63, 2, 1, "", "add_score_to_trace"], [63, 2, 1, "", "add_successor_map_fn"], [63, 4, 1, "", "allowed_types"], [63, 2, 1, "", "backward"], [63, 2, 1, "", "check_if_already_computed_gradient_respect_to"], [63, 4, 1, "", "data"], [63, 4, 1, "", "data_id"], [63, 4, 1, "", "data_in_prompt"], [63, 2, 1, "", "draw_component_subgraph"], [63, 2, 1, "", "draw_graph"], [63, 2, 1, "", "draw_interactive_html_graph"], [63, 2, 1, "", "draw_output_subgraph"], [63, 4, 1, "", "eval_input"], [63, 2, 1, "", "from_dict"], [63, 2, 1, "", "generate_node_html"], [63, 2, 1, "", "get_grad_fn"], [63, 2, 1, "", "get_gradient_and_context_text"], [63, 2, 1, "", "get_gradients_component_schema"], [63, 2, 1, "", "get_gradients_names"], [63, 2, 1, "", "get_gradients_str"], [63, 2, 1, "", "get_gt"], [63, 2, 1, "", "get_param_info"], [63, 2, 1, "", "get_prompt_data"], [63, 2, 1, "", "get_short_value"], [63, 4, 1, "", "gt"], [63, 4, 1, "", "id"], [63, 2, 1, "", "map_to_successor"], [63, 2, 1, "", "merge_gradients_for_cycle_components"], [63, 4, 1, "", "name"], [63, 4, 1, "", "param_type"], [63, 4, 1, "", "peers"], [63, 4, 1, "", "predecessors"], [63, 2, 1, "", "propose_data"], [63, 4, 1, "", "proposing"], [63, 2, 1, "", "reset_all_gradients"], [63, 2, 1, "", "reset_gradients"], [63, 2, 1, "", "revert_data"], [63, 4, 1, "", "role_desc"], [63, 2, 1, "", "set_eval_fn_input"], [63, 2, 1, "", "set_grad_fn"], [63, 2, 1, "", "set_gt"], [63, 2, 1, "", "set_peers"], [63, 2, 1, "", "set_predecessors"], [63, 2, 1, "", "set_score"], [63, 2, 1, "", "sort_gradients"], [63, 2, 1, "", "step_data"], [63, 4, 1, "", "successor_map_fn"], [63, 4, 1, "", "tgd_optimizer_trace"], [63, 2, 1, "", "to_dict"], [63, 2, 1, "", "trace_graph"], [63, 2, 1, "", "trace_optimizer"], [63, 2, 1, "", "update_value"], [63, 2, 1, "", "wrap_and_escape"]], "optim.RandomSampler": [[63, 2, 1, "", "call"], [63, 2, 1, "", "random_replace"], [63, 2, 1, "", "random_sample"], [63, 2, 1, "", "set_dataset"]], "optim.Sampler": [[63, 2, 1, "", "call"], [63, 4, 1, "", "dataset"], [63, 2, 1, "", "random_replace"], [63, 2, 1, "", "set_dataset"]], "optim.TGDOptimizer": [[63, 2, 1, "", "add_failed_proposal"], [63, 2, 1, "", "add_history"], [63, 2, 1, "", "add_score_to_current_param"], [63, 2, 1, "", "add_score_to_params"], [63, 6, 1, "", "constraint_text"], [63, 4, 1, "", "constraints"], [63, 4, 1, "", "current_tgd_output"], [63, 4, 1, "", "failed_proposals"], [63, 2, 1, "", "increment_steps_from_last_improvement"], [63, 4, 1, "", "one_parameter_at_a_time"], [63, 4, 1, "", "params"], [63, 4, 1, "", "params_history"], [63, 2, 1, "", "propose"], [63, 4, 1, "", "proposing"], [63, 2, 1, "", "render_failed_proposals"], [63, 2, 1, "", "render_history"], [63, 2, 1, "", "reset_steps_from_last_improvement"], [63, 2, 1, "", "revert"], [63, 2, 1, "", "set_target_param"], [63, 2, 1, "", "step"], [63, 2, 1, "", "to_dict"], [63, 2, 1, "", "update_gradient_memory"], [63, 2, 1, "", "zero_grad"]], "optim.TextOptimizer": [[63, 2, 1, "", "zero_grad"]], "optim.Trainer": [[63, 4, 1, "", "adaltask"], [63, 4, 1, "", "batch_val_score_threshold"], [63, 4, 1, "", "ckpt_file"], [63, 4, 1, "", "ckpt_path"], [63, 4, 1, "", "correct_val_score_threshold"], [63, 4, 1, "", "debug"], [63, 2, 1, "", "debug_report"], [63, 2, 1, "", "diagnose"], [63, 2, 1, "", "diagnose_report"], [63, 4, 1, "", "disable_backward"], [63, 4, 1, "", "disable_backward_gradients"], [63, 2, 1, "", "fit"], [63, 2, 1, "", "gather_trainer_states"], [63, 2, 1, "", "initial_validation"], [63, 4, 1, "", "max_correct_samples"], [63, 4, 1, "", "max_error_samples"], [63, 4, 1, "", "max_proposals_per_step"], [63, 4, 1, "", "max_steps"], [63, 4, 1, "", "num_workers"], [63, 4, 1, "", "optimization_order"], [63, 4, 1, "", "optimizer"], [63, 2, 1, "", "prep_ckpt_file_path"], [63, 4, 1, "", "random_seed"], [63, 2, 1, "", "resume_params_from_ckpt"], [63, 4, 1, "", "sequential_order"], [63, 2, 1, "", "set_random_seed"], [63, 4, 1, "", "skip_subset_val"], [63, 4, 1, "", "strategy"], [63, 4, 1, "", "test_dataset"], [63, 4, 1, "", "text_optimizers_config_kwargs"], [63, 4, 1, "", "train_batch_size"], [63, 4, 1, "", "train_loader"], [63, 4, 1, "", "val_dataset"]], "optim.few_shot": [[66, 0, 0, "-", "bootstrap_optimizer"]], "optim.few_shot.bootstrap_optimizer": [[66, 1, 1, "", "BootstrapFewShot"]], "optim.few_shot.bootstrap_optimizer.BootstrapFewShot": [[66, 2, 1, "", "add_scores"], [66, 2, 1, "", "config_dataset"], [66, 2, 1, "", "config_shots"], [66, 6, 1, "", "num_shots"], [66, 2, 1, "", "propose"], [66, 2, 1, "", "revert"], [66, 2, 1, "", "sample"], [66, 2, 1, "", "samples_to_str"], [66, 2, 1, "", "step"]], "optim.function": [[67, 1, 1, "", "BackwardContext"]], "optim.grad_component": [[68, 1, 1, "", "FunGradComponent"], [68, 1, 1, "", "GradComponent"], [68, 5, 1, "", "fun_to_grad_component"]], "optim.grad_component.FunGradComponent": [[68, 2, 1, "", "call"], [68, 2, 1, "", "forward"]], "optim.grad_component.GradComponent": [[68, 2, 1, "", "acall"], [68, 2, 1, "", "backward"], [68, 4, 1, "", "backward_engine"], [68, 2, 1, "", "backward_with_pass_through_gradients"], [68, 2, 1, "", "call"], [68, 2, 1, "", "disable_backward_engine"], [68, 2, 1, "", "forward"], [68, 4, 1, "", "id"], [68, 2, 1, "", "set_backward_engine"]], "optim.gradient": [[69, 1, 1, "", "Gradient"], [69, 1, 1, "", "GradientContext"]], "optim.gradient.Gradient": [[69, 2, 1, "", "add_context"], [69, 2, 1, "", "add_data"], [69, 2, 1, "", "add_prompt"], [69, 4, 1, "", "context"], [69, 4, 1, "", "data"], [69, 4, 1, "", "data_id"], [69, 4, 1, "", "from_response_component_id"], [69, 4, 1, "", "from_response_id"], [69, 4, 1, "", "is_default_copy"], [69, 4, 1, "", "order"], [69, 4, 1, "", "prompt"], [69, 4, 1, "", "score"], [69, 4, 1, "", "to_pred_id"], [69, 2, 1, "", "update_from_to"]], "optim.gradient.GradientContext": [[69, 4, 1, "", "input_output"], [69, 4, 1, "", "response_desc"], [69, 4, 1, "", "variable_desc"]], "optim.loss_component": [[70, 1, 1, "", "LossComponent"]], "optim.loss_component.LossComponent": [[70, 2, 1, "", "backward"], [70, 4, 1, "", "backward_engine"], [70, 2, 1, "", "disable_backward_engine"], [70, 2, 1, "", "forward"], [70, 4, 1, "", "id"], [70, 2, 1, "", "set_backward_engine"]], "optim.optimizer": [[71, 1, 1, "", "DemoOptimizer"], [71, 1, 1, "", "Optimizer"], [71, 1, 1, "", "TextOptimizer"]], "optim.optimizer.DemoOptimizer": [[71, 2, 1, "", "add_scores"], [71, 2, 1, "", "config_shots"], [71, 4, 1, "", "dataset"], [71, 4, 1, "", "exclude_input_fields_from_bootstrap_demos"], [71, 4, 1, "", "params"], [71, 2, 1, "", "set_dataset"], [71, 2, 1, "", "use_weighted_sampling"]], "optim.optimizer.Optimizer": [[71, 4, 1, "", "params"], [71, 2, 1, "", "propose"], [71, 4, 1, "", "proposing"], [71, 2, 1, "", "revert"], [71, 2, 1, "", "state_dict"], [71, 2, 1, "", "step"]], "optim.optimizer.TextOptimizer": [[71, 2, 1, "", "zero_grad"]], "optim.parameter": [[72, 1, 1, "", "ComponentNode"], [72, 1, 1, "", "ComponentTrace"], [72, 1, 1, "", "Parameter"], [72, 1, 1, "", "ScoreTrace"]], "optim.parameter.ComponentNode": [[72, 4, 1, "", "id"], [72, 4, 1, "", "name"], [72, 4, 1, "", "type"]], "optim.parameter.ComponentTrace": [[72, 4, 1, "", "api_kwargs"], [72, 4, 1, "", "full_response"], [72, 4, 1, "", "id"], [72, 4, 1, "", "input_args"], [72, 4, 1, "", "name"], [72, 4, 1, "", "raw_response"], [72, 2, 1, "", "to_context_str"]], "optim.parameter.Parameter": [[72, 2, 1, "", "add_dataclass_to_trace"], [72, 2, 1, "", "add_gradient"], [72, 2, 1, "", "add_score_to_trace"], [72, 2, 1, "", "add_successor_map_fn"], [72, 4, 1, "", "allowed_types"], [72, 2, 1, "", "backward"], [72, 2, 1, "", "check_if_already_computed_gradient_respect_to"], [72, 4, 1, "", "data"], [72, 4, 1, "", "data_id"], [72, 4, 1, "", "data_in_prompt"], [72, 2, 1, "", "draw_component_subgraph"], [72, 2, 1, "", "draw_graph"], [72, 2, 1, "", "draw_interactive_html_graph"], [72, 2, 1, "", "draw_output_subgraph"], [72, 4, 1, "", "eval_input"], [72, 2, 1, "", "from_dict"], [72, 2, 1, "", "generate_node_html"], [72, 2, 1, "", "get_grad_fn"], [72, 2, 1, "", "get_gradient_and_context_text"], [72, 2, 1, "", "get_gradients_component_schema"], [72, 2, 1, "", "get_gradients_names"], [72, 2, 1, "", "get_gradients_str"], [72, 2, 1, "", "get_gt"], [72, 2, 1, "", "get_param_info"], [72, 2, 1, "", "get_prompt_data"], [72, 2, 1, "", "get_short_value"], [72, 4, 1, "", "gradients"], [72, 4, 1, "", "gt"], [72, 4, 1, "", "id"], [72, 4, 1, "", "instruction_to_backward_engine"], [72, 4, 1, "", "instruction_to_optimizer"], [72, 2, 1, "", "map_to_successor"], [72, 2, 1, "", "merge_gradients_for_cycle_components"], [72, 4, 1, "", "name"], [72, 4, 1, "", "param_type"], [72, 4, 1, "", "peers"], [72, 4, 1, "", "predecessors"], [72, 2, 1, "", "propose_data"], [72, 4, 1, "", "proposing"], [72, 2, 1, "", "reset_all_gradients"], [72, 2, 1, "", "reset_gradients"], [72, 2, 1, "", "revert_data"], [72, 4, 1, "", "role_desc"], [72, 4, 1, "", "score"], [72, 2, 1, "", "set_eval_fn_input"], [72, 2, 1, "", "set_grad_fn"], [72, 2, 1, "", "set_gt"], [72, 2, 1, "", "set_peers"], [72, 2, 1, "", "set_predecessors"], [72, 2, 1, "", "set_score"], [72, 2, 1, "", "sort_gradients"], [72, 2, 1, "", "step_data"], [72, 4, 1, "", "successor_map_fn"], [72, 4, 1, "", "tgd_optimizer_trace"], [72, 2, 1, "", "to_dict"], [72, 2, 1, "", "trace_graph"], [72, 2, 1, "", "trace_optimizer"], [72, 2, 1, "", "update_value"], [72, 2, 1, "", "wrap_and_escape"]], "optim.parameter.ScoreTrace": [[72, 4, 1, "", "eval_comp_id"], [72, 4, 1, "", "eval_comp_name"], [72, 4, 1, "", "score"]], "optim.sampler": [[73, 1, 1, "", "ClassSampler"], [73, 1, 1, "", "RandomSampler"], [73, 1, 1, "", "Sample"], [73, 1, 1, "", "Sampler"]], "optim.sampler.ClassSampler": [[73, 2, 1, "", "call"], [73, 2, 1, "", "random_replace"], [73, 2, 1, "", "random_sample"]], "optim.sampler.RandomSampler": [[73, 2, 1, "", "call"], [73, 2, 1, "", "random_replace"], [73, 2, 1, "", "random_sample"], [73, 2, 1, "", "set_dataset"]], "optim.sampler.Sample": [[73, 4, 1, "", "data"], [73, 4, 1, "", "index"], [73, 2, 1, "", "to_dict"]], "optim.sampler.Sampler": [[73, 2, 1, "", "call"], [73, 4, 1, "", "dataset"], [73, 2, 1, "", "random_replace"], [73, 2, 1, "", "set_dataset"]], "optim.text_grad": [[74, 1, 1, "", "EvalFnToTextLoss"], [74, 1, 1, "", "LLMAsTextLoss"], [74, 1, 1, "", "Sum"], [74, 1, 1, "", "TGDOptimizer"], [75, 0, 0, "-", "backend_engine_prompt"], [76, 0, 0, "-", "llm_text_loss"], [77, 0, 0, "-", "ops"], [74, 5, 1, "", "sum_ops"], [78, 0, 0, "-", "text_loss_with_eval_fn"], [79, 0, 0, "-", "tgd_optimizer"]], "optim.text_grad.EvalFnToTextLoss": [[74, 2, 1, "", "backward"], [74, 2, 1, "", "forward"], [74, 2, 1, "", "set_backward_engine"]], "optim.text_grad.LLMAsTextLoss": [[74, 2, 1, "", "forward"]], "optim.text_grad.Sum": [[74, 2, 1, "", "backward"], [74, 2, 1, "", "forward"], [74, 4, 1, "", "name"]], "optim.text_grad.TGDOptimizer": [[74, 2, 1, "", "add_failed_proposal"], [74, 2, 1, "", "add_history"], [74, 2, 1, "", "add_score_to_current_param"], [74, 2, 1, "", "add_score_to_params"], [74, 6, 1, "", "constraint_text"], [74, 4, 1, "", "constraints"], [74, 4, 1, "", "current_tgd_output"], [74, 4, 1, "", "failed_proposals"], [74, 2, 1, "", "increment_steps_from_last_improvement"], [74, 4, 1, "", "one_parameter_at_a_time"], [74, 4, 1, "", "params"], [74, 4, 1, "", "params_history"], [74, 2, 1, "", "propose"], [74, 4, 1, "", "proposing"], [74, 2, 1, "", "render_failed_proposals"], [74, 2, 1, "", "render_history"], [74, 2, 1, "", "reset_steps_from_last_improvement"], [74, 2, 1, "", "revert"], [74, 2, 1, "", "set_target_param"], [74, 2, 1, "", "step"], [74, 2, 1, "", "to_dict"], [74, 2, 1, "", "update_gradient_memory"], [74, 2, 1, "", "zero_grad"]], "optim.text_grad.llm_text_loss": [[76, 1, 1, "", "LLMAsTextLoss"]], "optim.text_grad.llm_text_loss.LLMAsTextLoss": [[76, 2, 1, "", "forward"]], "optim.text_grad.ops": [[77, 1, 1, "", "Sum"], [77, 5, 1, "", "sum_ops"]], "optim.text_grad.ops.Sum": [[77, 2, 1, "", "backward"], [77, 4, 1, "", "backward_engine"], [77, 2, 1, "", "forward"], [77, 4, 1, "", "name"], [77, 4, 1, "", "teacher_mode"], [77, 4, 1, "", "tracing"], [77, 4, 1, "", "training"]], "optim.text_grad.text_loss_with_eval_fn": [[78, 1, 1, "", "EvalFnToTextLoss"]], "optim.text_grad.text_loss_with_eval_fn.EvalFnToTextLoss": [[78, 2, 1, "", "backward"], [78, 2, 1, "", "forward"], [78, 2, 1, "", "set_backward_engine"]], "optim.text_grad.tgd_optimizer": [[79, 1, 1, "", "HistoryPrompt"], [79, 1, 1, "", "Instruction"], [79, 1, 1, "", "TGDData"], [79, 1, 1, "", "TGDOptimizer"], [79, 1, 1, "", "TGDOptimizerTrace"], [79, 5, 1, "", "extract_new_variable"]], "optim.text_grad.tgd_optimizer.HistoryPrompt": [[79, 4, 1, "", "eval_score"], [79, 4, 1, "", "id"], [79, 4, 1, "", "method"], [79, 4, 1, "", "reasoning"], [79, 4, 1, "", "value"]], "optim.text_grad.tgd_optimizer.Instruction": [[79, 4, 1, "", "gts"], [79, 4, 1, "", "responses"], [79, 4, 1, "", "score"], [79, 4, 1, "", "text"]], "optim.text_grad.tgd_optimizer.TGDData": [[79, 4, 1, "", "method"], [79, 4, 1, "", "proposed_variable"], [79, 4, 1, "", "reasoning"]], "optim.text_grad.tgd_optimizer.TGDOptimizer": [[79, 2, 1, "", "add_failed_proposal"], [79, 2, 1, "", "add_history"], [79, 2, 1, "", "add_score_to_current_param"], [79, 2, 1, "", "add_score_to_params"], [79, 6, 1, "", "constraint_text"], [79, 4, 1, "", "constraints"], [79, 4, 1, "", "current_tgd_output"], [79, 4, 1, "", "failed_proposals"], [79, 2, 1, "", "increment_steps_from_last_improvement"], [79, 4, 1, "", "one_parameter_at_a_time"], [79, 4, 1, "", "params"], [79, 4, 1, "", "params_history"], [79, 2, 1, "", "propose"], [79, 4, 1, "", "proposing"], [79, 2, 1, "", "render_failed_proposals"], [79, 2, 1, "", "render_history"], [79, 2, 1, "", "reset_steps_from_last_improvement"], [79, 2, 1, "", "revert"], [79, 2, 1, "", "set_target_param"], [79, 2, 1, "", "step"], [79, 2, 1, "", "to_dict"], [79, 2, 1, "", "update_gradient_memory"], [79, 2, 1, "", "zero_grad"]], "optim.text_grad.tgd_optimizer.TGDOptimizerTrace": [[79, 4, 1, "", "api_kwargs"], [79, 4, 1, "", "output"]], "optim.trainer": [[80, 1, 1, "", "AdalComponent"], [80, 1, 1, "", "Trainer"], [81, 0, 0, "-", "adal"], [82, 0, 0, "-", "trainer"]], "optim.trainer.AdalComponent": [[80, 4, 1, "", "backward_engine"], [80, 2, 1, "", "bicall"], [80, 2, 1, "", "call"], [80, 2, 1, "", "configure_backward_engine"], [80, 2, 1, "", "configure_backward_engine_helper"], [80, 2, 1, "", "configure_callbacks"], [80, 2, 1, "", "configure_demo_optimizer_helper"], [80, 2, 1, "", "configure_optimizers"], [80, 2, 1, "", "configure_teacher_generator"], [80, 2, 1, "", "configure_teacher_generator_helper"], [80, 2, 1, "", "configure_text_optimizer_helper"], [80, 2, 1, "", "disable_backward_engine"], [80, 2, 1, "", "disable_backward_engine_helper"], [80, 4, 1, "", "eval_fn"], [80, 2, 1, "", "evaluate_samples"], [80, 2, 1, "", "forward"], [80, 4, 1, "", "loss_eval_fn"], [80, 4, 1, "", "loss_fn"], [80, 2, 1, "", "loss_step"], [80, 2, 1, "", "pred_step"], [80, 2, 1, "", "prepare_eval"], [80, 2, 1, "", "prepare_loss"], [80, 2, 1, "", "prepare_loss_eval"], [80, 2, 1, "", "prepare_task"], [80, 2, 1, "", "run_one_loss_sample"], [80, 2, 1, "", "run_one_task_sample"], [80, 4, 1, "", "task"], [80, 4, 1, "", "teacher_mode"], [80, 4, 1, "", "tracing"], [80, 2, 1, "", "train_step"], [80, 4, 1, "", "training"], [80, 2, 1, "", "validate_condition"], [80, 2, 1, "", "validation_step"]], "optim.trainer.Trainer": [[80, 4, 1, "", "adaltask"], [80, 4, 1, "", "batch_val_score_threshold"], [80, 4, 1, "", "ckpt_file"], [80, 4, 1, "", "ckpt_path"], [80, 4, 1, "", "correct_val_score_threshold"], [80, 4, 1, "", "debug"], [80, 2, 1, "", "debug_report"], [80, 4, 1, "", "demo_optimizers"], [80, 2, 1, "", "diagnose"], [80, 2, 1, "", "diagnose_report"], [80, 4, 1, "", "disable_backward"], [80, 4, 1, "", "disable_backward_gradients"], [80, 2, 1, "", "fit"], [80, 2, 1, "", "gather_trainer_states"], [80, 2, 1, "", "initial_validation"], [80, 4, 1, "", "max_correct_samples"], [80, 4, 1, "", "max_error_samples"], [80, 4, 1, "", "max_proposals_per_step"], [80, 4, 1, "", "max_steps"], [80, 4, 1, "", "num_workers"], [80, 4, 1, "", "optimization_order"], [80, 4, 1, "", "optimizer"], [80, 2, 1, "", "prep_ckpt_file_path"], [80, 4, 1, "", "random_seed"], [80, 2, 1, "", "resume_params_from_ckpt"], [80, 4, 1, "", "sequential_order"], [80, 2, 1, "", "set_random_seed"], [80, 4, 1, "", "skip_subset_val"], [80, 4, 1, "", "strategy"], [80, 4, 1, "", "teacher_mode"], [80, 4, 1, "", "test_dataset"], [80, 4, 1, "", "text_optimizers"], [80, 4, 1, "", "text_optimizers_config_kwargs"], [80, 4, 1, "", "tracing"], [80, 4, 1, "", "train_batch_size"], [80, 4, 1, "", "train_loader"], [80, 4, 1, "", "training"], [80, 4, 1, "", "val_dataset"]], "optim.trainer.adal": [[81, 1, 1, "", "AdalComponent"]], "optim.trainer.adal.AdalComponent": [[81, 4, 1, "", "backward_engine"], [81, 2, 1, "", "bicall"], [81, 2, 1, "", "call"], [81, 2, 1, "", "configure_backward_engine"], [81, 2, 1, "", "configure_backward_engine_helper"], [81, 2, 1, "", "configure_callbacks"], [81, 2, 1, "", "configure_demo_optimizer_helper"], [81, 2, 1, "", "configure_optimizers"], [81, 2, 1, "", "configure_teacher_generator"], [81, 2, 1, "", "configure_teacher_generator_helper"], [81, 2, 1, "", "configure_text_optimizer_helper"], [81, 2, 1, "", "disable_backward_engine"], [81, 2, 1, "", "disable_backward_engine_helper"], [81, 4, 1, "", "eval_fn"], [81, 2, 1, "", "evaluate_samples"], [81, 2, 1, "", "forward"], [81, 4, 1, "", "loss_eval_fn"], [81, 4, 1, "", "loss_fn"], [81, 2, 1, "", "loss_step"], [81, 2, 1, "", "pred_step"], [81, 2, 1, "", "prepare_eval"], [81, 2, 1, "", "prepare_loss"], [81, 2, 1, "", "prepare_loss_eval"], [81, 2, 1, "", "prepare_task"], [81, 2, 1, "", "run_one_loss_sample"], [81, 2, 1, "", "run_one_task_sample"], [81, 4, 1, "", "task"], [81, 4, 1, "", "teacher_mode"], [81, 4, 1, "", "tracing"], [81, 2, 1, "", "train_step"], [81, 4, 1, "", "training"], [81, 2, 1, "", "validate_condition"], [81, 2, 1, "", "validation_step"]], "optim.trainer.trainer": [[82, 1, 1, "", "Trainer"]], "optim.trainer.trainer.Trainer": [[82, 4, 1, "", "adaltask"], [82, 4, 1, "", "batch_val_score_threshold"], [82, 4, 1, "", "ckpt_file"], [82, 4, 1, "", "ckpt_path"], [82, 4, 1, "", "correct_val_score_threshold"], [82, 4, 1, "", "debug"], [82, 2, 1, "", "debug_report"], [82, 4, 1, "", "demo_optimizers"], [82, 2, 1, "", "diagnose"], [82, 2, 1, "", "diagnose_report"], [82, 4, 1, "", "disable_backward"], [82, 4, 1, "", "disable_backward_gradients"], [82, 2, 1, "", "fit"], [82, 2, 1, "", "gather_trainer_states"], [82, 2, 1, "", "initial_validation"], [82, 4, 1, "", "max_correct_samples"], [82, 4, 1, "", "max_error_samples"], [82, 4, 1, "", "max_proposals_per_step"], [82, 4, 1, "", "max_steps"], [82, 4, 1, "", "num_workers"], [82, 4, 1, "", "optimization_order"], [82, 4, 1, "", "optimizer"], [82, 2, 1, "", "prep_ckpt_file_path"], [82, 4, 1, "", "random_seed"], [82, 2, 1, "", "resume_params_from_ckpt"], [82, 4, 1, "", "sequential_order"], [82, 2, 1, "", "set_random_seed"], [82, 4, 1, "", "skip_subset_val"], [82, 4, 1, "", "strategy"], [82, 4, 1, "", "teacher_mode"], [82, 4, 1, "", "test_dataset"], [82, 4, 1, "", "text_optimizers"], [82, 4, 1, "", "text_optimizers_config_kwargs"], [82, 4, 1, "", "tracing"], [82, 4, 1, "", "train_batch_size"], [82, 4, 1, "", "train_loader"], [82, 4, 1, "", "training"], [82, 4, 1, "", "val_dataset"]], "optim.types": [[83, 1, 1, "", "EvaluationResult"], [83, 1, 1, "", "ParameterType"], [83, 1, 1, "", "PromptData"], [83, 1, 1, "", "TrainerResult"], [83, 1, 1, "", "TrainerStepResult"], [83, 1, 1, "", "TrainerValidateStats"]], "optim.types.EvaluationResult": [[83, 4, 1, "", "feedback"], [83, 4, 1, "", "score"]], "optim.types.ParameterType": [[83, 4, 1, "", "DEMOS"], [83, 4, 1, "", "GENERATOR_OUTPUT"], [83, 4, 1, "", "HYPERPARAM"], [83, 4, 1, "", "INPUT"], [83, 4, 1, "", "LOSS_OUTPUT"], [83, 4, 1, "", "NONE"], [83, 4, 1, "", "OUTPUT"], [83, 4, 1, "", "PROMPT"], [83, 4, 1, "", "RETRIEVER_OUTPUT"], [83, 4, 1, "", "SUM_OUTPUT"]], "optim.types.PromptData": [[83, 4, 1, "", "data"], [83, 4, 1, "", "id"], [83, 4, 1, "", "name"], [83, 4, 1, "", "requires_opt"]], "optim.types.TrainerResult": [[83, 4, 1, "", "effective_measure"], [83, 4, 1, "", "step_results"], [83, 4, 1, "", "steps"], [83, 4, 1, "", "test_score"], [83, 4, 1, "", "test_scores"], [83, 4, 1, "", "time_stamp"], [83, 4, 1, "", "total_time"], [83, 4, 1, "", "trainer_state"], [83, 4, 1, "", "val_scores"], [83, 4, 1, "", "validate_stats"]], "optim.types.TrainerStepResult": [[83, 4, 1, "", "attempted_val_score"], [83, 4, 1, "", "prompt"], [83, 4, 1, "", "step"], [83, 4, 1, "", "test_score"], [83, 4, 1, "", "val_score"]], "optim.types.TrainerValidateStats": [[83, 4, 1, "", "max_score"], [83, 4, 1, "", "mean_of_score"], [83, 4, 1, "", "min_score"], [83, 4, 1, "", "std_of_score"]], "tracing": [[85, 0, 0, "-", "callback_manager"], [86, 0, 0, "-", "decorators"], [87, 0, 0, "-", "generator_call_logger"], [88, 0, 0, "-", "generator_state_logger"]], "tracing.callback_manager": [[85, 1, 1, "", "CallbackManager"]], "tracing.callback_manager.CallbackManager": [[85, 2, 1, "", "register_callback"], [85, 2, 1, "", "trigger_callbacks"]], "tracing.decorators": [[86, 5, 1, "", "trace_generator_call"], [86, 5, 1, "", "trace_generator_states"]], "tracing.generator_call_logger": [[87, 1, 1, "", "GeneratorCallLogger"], [87, 1, 1, "", "GeneratorCallRecord"]], "tracing.generator_call_logger.GeneratorCallLogger": [[87, 6, 1, "", "generator_names_to_files"], [87, 2, 1, "", "get_calls"], [87, 2, 1, "", "get_log_location"], [87, 2, 1, "", "load"], [87, 2, 1, "", "load_meta_data"], [87, 2, 1, "", "log_call"], [87, 2, 1, "", "register_generator"], [87, 2, 1, "", "reset"], [87, 2, 1, "", "save_meta_data"]], "tracing.generator_call_logger.GeneratorCallRecord": [[87, 4, 1, "", "input"], [87, 4, 1, "", "metadata"], [87, 4, 1, "", "model_kwargs"], [87, 4, 1, "", "output"], [87, 4, 1, "", "prompt_kwargs"], [87, 4, 1, "", "time_stamp"]], "tracing.generator_state_logger": [[88, 1, 1, "", "GeneratorStateLogger"], [88, 1, 1, "", "GeneratorStatesRecord"]], "tracing.generator_state_logger.GeneratorStateLogger": [[88, 6, 1, "", "generator_names"], [88, 2, 1, "", "get_log_location"], [88, 2, 1, "", "load"], [88, 2, 1, "", "log_prompt"], [88, 2, 1, "", "save"]], "tracing.generator_state_logger.GeneratorStatesRecord": [[88, 4, 1, "", "prompt_states"], [88, 4, 1, "", "time_stamp"]], "utils": [[90, 0, 0, "-", "cache"], [91, 0, 0, "-", "config"], [92, 0, 0, "-", "data"], [93, 0, 0, "-", "file_io"], [94, 0, 0, "-", "global_config"], [95, 0, 0, "-", "lazy_import"], [96, 0, 0, "-", "logger"], [97, 0, 0, "-", "registry"], [98, 0, 0, "-", "serialization"], [99, 0, 0, "-", "setup_env"]], "utils.cache": [[90, 1, 1, "", "CachedEngine"], [90, 5, 1, "", "direct"], [90, 5, 1, "", "hash_text"], [90, 5, 1, "", "hash_text_sha1"]], "utils.config": [[91, 5, 1, "", "new_component"], [91, 5, 1, "", "new_components_from_config"]], "utils.data": [[92, 1, 1, "", "DataLoader"], [92, 1, 1, "", "Dataset"], [92, 1, 1, "", "Subset"], [92, 5, 1, "", "subset_dataset"]], "utils.data.DataLoader": [[92, 2, 1, "", "set_max_steps"]], "utils.data.Subset": [[92, 4, 1, "", "dataset"], [92, 4, 1, "", "indices"]], "utils.file_io": [[93, 5, 1, "", "append_to_jsonl"], [93, 5, 1, "", "load"], [93, 5, 1, "", "load_json"], [93, 5, 1, "", "load_jsonl"], [93, 5, 1, "", "load_pickle"], [93, 5, 1, "", "load_standard_json"], [93, 5, 1, "", "save"], [93, 5, 1, "", "save_csv"], [93, 5, 1, "", "save_json"], [93, 5, 1, "", "save_pickle"], [93, 5, 1, "", "write_list_to_jsonl"]], "utils.global_config": [[94, 5, 1, "", "get_adalflow_default_root_path"]], "utils.lazy_import": [[95, 1, 1, "", "LazyImport"], [95, 1, 1, "", "OptionalPackages"], [95, 5, 1, "", "safe_import"]], "utils.lazy_import.LazyImport": [[95, 2, 1, "", "load_class"]], "utils.lazy_import.OptionalPackages": [[95, 4, 1, "", "ANTHROPIC"], [95, 4, 1, "", "AZURE"], [95, 4, 1, "", "BOTO3"], [95, 4, 1, "", "COHERE"], [95, 4, 1, "", "DATASETS"], [95, 4, 1, "", "FAISS"], [95, 4, 1, "", "GOOGLE_GENERATIVEAI"], [95, 4, 1, "", "GROQ"], [95, 4, 1, "", "LANCEDB"], [95, 4, 1, "", "OLLAMA"], [95, 4, 1, "", "OPENAI"], [95, 4, 1, "", "PGVECTOR"], [95, 4, 1, "", "QDRANT"], [95, 4, 1, "", "SQLALCHEMY"], [95, 4, 1, "", "TORCH"], [95, 4, 1, "", "TRANSFORMERS"]], "utils.logger": [[96, 5, 1, "", "get_current_script_and_line"], [96, 5, 1, "", "get_logger"], [96, 5, 1, "", "printc"]], "utils.registry": [[97, 1, 1, "", "EntityMapping"]], "utils.registry.EntityMapping": [[97, 2, 1, "", "get"], [97, 2, 1, "", "get_all"], [97, 2, 1, "", "register"]], "utils.serialization": [[98, 1, 1, "", "ObjectTypes"], [98, 5, 1, "", "check_object"], [98, 5, 1, "", "default"], [98, 5, 1, "", "deserialize"], [98, 5, 1, "", "serialize"], [98, 5, 1, "", "to_dict"]], "utils.serialization.ObjectTypes": [[98, 4, 1, "", "CLASS"], [98, 4, 1, "", "INSTANCE"], [98, 4, 1, "", "TYPE"]], "utils.setup_env": [[99, 5, 1, "", "setup_env"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "data", "Python data"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "function", "Python function"], "6": ["py", "property", "Python property"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:data", "4": "py:attribute", "5": "py:function", "6": "py:property"}, "terms": {"": [1, 2, 4, 6, 9, 12, 13, 14, 16, 17, 22, 23, 25, 32, 33, 37, 40, 41, 42, 60, 63, 66, 69, 71, 72, 73, 74, 76, 78, 80, 81, 82, 95, 96, 101, 102, 104, 108, 114, 115, 116, 117, 119, 120, 123, 124, 125, 126, 127, 129, 131, 132, 134, 135, 136, 137, 139, 140, 141, 143, 144, 145, 149, 150, 152, 158, 159, 161], "0": [2, 4, 11, 13, 15, 17, 22, 23, 24, 27, 31, 32, 33, 34, 38, 39, 46, 54, 56, 57, 58, 59, 61, 63, 66, 74, 78, 79, 80, 82, 83, 95, 100, 103, 104, 107, 114, 115, 116, 117, 120, 124, 126, 127, 129, 135, 136, 137, 142, 143, 144, 145, 147, 149, 154, 158, 159, 161], "00": [115, 124, 125, 149], "0001": 38, "00016600126": 126, "00018637415": 126, "0003912348": 126, "00045548353": 126, "00063306844": 126, "00093111617": 126, "0009763892": 126, "001149847": 126, "001270235": 126, "001274437": 126, "0013953627": 126, "0015121206": 126, "0016585035": 126, "0017067948": 126, "0017369769": 126, "0018af12": 124, "002": 144, "002240922": 126, "0023736332": 126, "0024688914": 126, "0025802834": 126, "0027390209": 126, "002749016": 126, "0027831418": 126, "0032514224": 126, "0032596611": 126, "0035554452": 126, "0035945757": 126, "004110795": 126, "0042391727": 126, "00427709": 126, "004391488": 126, "0045538875": 126, "0048683644": 126, "005190901": 126, "005429781": 126, "0055172783": 126, "0059066266": 126, "0060756463": 126, "0065862634": 126, "006953944": 126, "007086745": 126, "0072255824": 126, "0073946016": 126, "007424784": 126, "0076722763": 126, "008243256": 126, "008804435": 126, "00888027": 126, "00918361": 126, "0092658885": 126, "009380581": 126, "009410762": 126, "009845384": 126, "0098876385": 126, "0099192085": 126, "00z": 124, "010159277": 126, "010340369": 126, "01047317": 126, "010648226": 126, "010723059": 126, "011026398": 126, "01102852": 126, "011178068": 126, "011329738": 126, "011336377": 126, "011663412": 126, "0118985": 126, "012314276": 126, "012414178": 126, "012519513": 126, "012596182": 126, "01262": 127, "012740267": 126, "01283127": 126, "012846436": 126, "013225611": 126, "013333333333333197": 127, "013376684": 126, "013642286": 126, "013799232": 126, "014256966": 126, "014401053": 126, "0144541375": 126, "014545139": 126, "014752985": 126, "014813349": 126, "01541699": 126, "015417241": 126, "015500659": 126, "015549791": 126, "015742956": 126, "015791247": 126, "015851611": 126, "01600117": 126, "016137673": 126, "016201723": 126, "016310379": 126, "016319677": 126, "016503545": 126, "016853655": 126, "017123526": 126, "017179621": 126, "017199362": 126, "01721584": 126, "017252058": 126, "017384859": 126, "0175027": 126, "017819481": 126, "017942544": 126, "018185215": 126, "01821555": 126, "018579558": 126, "019038836": 126, "0191": 136, "019186236": 126, "019337907": 126, "01965455": 126, "01t12": 124, "01z": 124, "020113317": 126, "020202424": 126, "020318555": 126, "02047543": 126, "020702936": 126, "02072903": 126, "020733269": 126, "020777322": 126, "02094634": 126, "02170693": 126, "021855626": 126, "022022463": 126, "022083132": 126, "022370934": 126, "022491662": 126, "022583641": 126, "022795979": 126, "022917315": 126, "023175154": 126, "02349366": 126, "02435818": 126, "024447458": 126, "024479514": 126, "02448e3fd394": 124, "02449575": 126, "024570517": 126, "024691852": 126, "024773424": 126, "02479802": 126, "024821715": 126, "0249183": 126, "024919357": 126, "024995193": 126, "025014881": 126, "025159756": 126, "025237864": 126, "025283365": 126, "025304629": 126, "025344033": 126, "0253592": 126, "025449503": 126, "025763396": 126, "025811687": 126, "025829377": 126, "026026547": 126, "02642089": 126, "02646639": 126, "026527058": 126, "026560202": 126, "026845565": 126, "02686073": 126, "027526028": 126, "027646756": 126, "027719192": 126, "02781625": 126, "02787692": 126, "027888212": 126, "028250396": 126, "028274542": 126, "028392596": 126, "028419416": 126, "028588437": 126, "028709164": 126, "028711103": 126, "028999276": 126, "029023057": 126, "029095493": 126, "029393617": 126, "029454285": 126, "029578406": 126, "02959079": 126, "029819863": 126, "02t15": 134, "02z": 124, "03": 149, "030351067": 126, "030515974": 126, "030561475": 126, "030737398": 126, "031122655": 126, "031425994": 126, "03148666": 126, "03172": 143, "031992972": 126, "032282718": 126, "03250003": 126, "03254835": 126, "03288636": 126, "032958794": 126, "033031233": 126, "033200253": 126, "033320982": 126, "03374": 127, "03409": [79, 127, 158, 159], "03414193": 126, "034190223": 126, "034338057": 126, "03438339": 126, "034398723": 126, "034489725": 126, "034673136": 126, "034793064": 126, "035096403": 126, "03520434": 126, "035276778": 126, "03530092": 126, "035399742": 126, "0354458": 126, "035460413": 126, "03567275": 126, "03575969": 126, "035794087": 126, "035945754": 126, "036188427": 126, "036249094": 126, "03629": [0, 1, 115], "03648406": 126, "036582768": 126, "03714": [158, 159], "03718945": 126, "037280865": 126, "037715487": 126, "03773546": 126, "037787925": 126, "03828147": 126, "038294982": 126, "03841571": 126, "038463477": 126, "038898624": 126, "039161157": 126, "03934316": 126, "03940383": 126, "03940568": 126, "039555497": 126, "039792012": 126, "039828505": 126, "039919507": 126, "03t16": 134, "03z": 124, "04": 125, "040178344": 126, "040274926": 126, "04090271": 126, "041820247": 126, "041868538": 126, "042224888": 126, "042285554": 126, "042497892": 126, "042649563": 126, "042810217": 126, "0428619": 126, "042922568": 126, "042952903": 126, "043104574": 126, "04352925": 126, "04363117": 126, "043776043": 126, "043802254": 126, "043893255": 126, "044017497": 126, "0442831": 126, "044408932": 126, "0445487": 126, "044596992": 126, "04500747": 126, "045128196": 126, "045200635": 126, "045318954": 126, "04537962": 126, "045409955": 126, "045500956": 126, "045755986": 126, "046214752": 126, "046380643": 126, "046842538": 126, "047301304": 126, "04732545": 126, "04735133": 126, "04744618": 126, "048018675": 126, "048170548": 126, "048242986": 126, "04844335": 126, "048534352": 126, "04865569": 126, "04874669": 126, "04882248": 126, "0491107": 126, "049112227": 126, "049257103": 126, "049474705": 126, "04964343": 126, "04988489": 126, "04it": 124, "05": [9, 38, 133, 149], "05011172": 126, "050126344": 126, "050688066": 126, "050995983": 135, "05133363": 126, "051385745": 126, "051749755": 126, "05202276": 126, "052057996": 126, "052106287": 126, "05220287": 126, "052417103": 126, "053175453": 126, "05331357": 126, "05338779": 126, "05369113": 126, "05408623": 126, "054115806": 126, "054617435": 126, "054762308": 126, "055341803": 126, "055390093": 126, "055631552": 126, "055824716": 126, "05584484": 126, "05606617": 126, "056500793": 126, "056549083": 126, "057031997": 126, "057118867": 126, "057209868": 126, "05794953": 126, "057968218": 126, "05877048": 126, "059393916": 126, "059543144": 126, "059977766": 126, "06": 134, "060026057": 126, "06033427": 126, "060455605": 126, "060750425": 126, "060758945": 126, "060940947": 126, "06109262": 126, "06205429": 126, "062150873": 126, "062199164": 126, "062427312": 126, "06244062": 126, "0625372": 126, "062609315": 126, "06335816": 126, "063458666": 126, "06351934": 126, "06358001": 126, "06424735": 126, "06430802": 126, "06437227": 126, "06467": 127, "06527871": 126, "065521374": 126, "065724425": 126, "06596588": 126, "06615905": 126, "066492066": 126, "06691674": 126, "067159414": 126, "06782676": 126, "06799412": 126, "06842874": 126, "06881507": 126, "069404125": 126, "06978089": 126, "06983": 140, "06995014": 126, "06ea7cea": 124, "07": [115, 133], "070553556": 126, "07061748": 126, "0708433": 126, "0708916": 126, "07113305": 126, "07158817": 126, "07185742": 126, "07249819": 126, "07261953": 126, "07296812": 126, "07298353": 126, "074030526": 126, "07407882": 126, "07456173": 126, "07486424": 126, "07496": [158, 159], "07510691": 126, "07554": 143, "07595626": 126, "07597": 17, "076138265": 126, "07654167": 126, "07736263": 126, "077507496": 126, "07753363": 126, "077776305": 126, "07794212": 126, "0780387": 126, "078569904": 126, "078763075": 126, "07881136": 126, "07883": [127, 150], "079110995": 126, "07989968": 126, "08088789": 126, "08103276": 126, "08112934": 126, "081225924": 126, "08199859": 126, "08256907": 126, "08275107": 126, "08277125": 126, "082872406": 126, "083054416": 126, "08317575": 126, "083539754": 126, "083600424": 126, "083737075": 126, "08397853": 126, "0841717": 126, "08426777": 126, "08432844": 126, "084389105": 126, "08494435": 126, "08523846": 126, "08553": 140, "085717015": 126, "085905805": 126, "08651248": 126, "08658626": 126, "08669449": 126, "08774": [57, 127], "08851453": 126, "08861449": 126, "08880766": 126, "088952534": 126, "08962861": 126, "09": [115, 124], "090455905": 126, "09081991": 126, "09100191": 126, "091183916": 126, "091244586": 126, "09148726": 126, "09172993": 126, "09199488": 126, "09209394": 126, "09213976": 126, "092639945": 126, "0935402": 126, "09354997": 126, "09382995": 126, "09433865": 126, "0946509": 126, "09476": 127, "09503723": 126, "09614793": 126, "09634069": 126, "09793471": 126, "09925275": 126, "099495426": 126, "0_call": 147, "0d16": [2, 4, 144], "0d95cc65e6ef": 126, "0de4c848": [51, 53], "0x104970220": 145, "0x104970400": 145, "0x105e3b920": 145, "0x105e3bc40": 145, "0x1062a2840": 145, "0x106d691c0": 145, "0x10fb26f20": 124, "0x11382fa60": 115, "0x11384b740": 115, "0x11742eca0": 145, "0x117b98360": 145, "0x14d9d3f60": 145, "0x14d9e4040": 145, "0x14d9e40e0": 145, "0x14d9e4180": 145, "0x14d9e4220": 145, "0x14d9e4360": 145, "1": [0, 1, 2, 4, 8, 13, 15, 16, 17, 21, 22, 23, 24, 26, 27, 28, 31, 32, 33, 34, 36, 37, 41, 46, 51, 53, 54, 56, 57, 58, 59, 61, 63, 66, 68, 72, 74, 78, 80, 81, 82, 83, 91, 95, 98, 100, 103, 104, 114, 115, 116, 117, 120, 124, 125, 127, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 147, 148, 149, 150, 152, 154, 157, 158, 159, 161], "10": [0, 1, 15, 16, 28, 33, 63, 72, 73, 80, 82, 96, 115, 116, 124, 127, 129, 131, 133, 135, 136, 140, 143, 145, 152, 158], "100": [15, 36, 46, 48, 50, 53, 91, 104, 109, 124, 125, 126, 127, 135, 137, 149, 158, 159], "1000": [2, 4, 63, 80, 82, 108, 125, 127], "100156106": 126, "10046611": 126, "10054244": 126, "10064811": 126, "10204348": 126, "10205": 124, "10210415": 126, "1024": 132, "102407485": 126, "102468155": 126, "1024x1024": [16, 129], "1024x1792": [16, 129], "10289283": 126, "1029535": 126, "103074834": 126, "104888655": 126, "10519821": 126, "10580489": 126, "106168896": 126, "106957585": 126, "10762493": 126, "108": 149, "10868": 140, "10875195": 126, "10950564": 126, "11": [125, 127, 140, 143, 149], "111386344": 126, "11155285": 126, "11164943": 126, "11174601": 126, "1124177": 126, "113": [104, 158, 159], "11396741": 126, "11401": [140, 143, 148], "11423773": 126, "11434": 15, "11496575": 126, "11511": 140, "11532976": 126, "1156331": 126, "115995646": 126, "11618881": 126, "11686489": 126, "11802388": 126, "12": [76, 104, 107, 115, 127, 140, 149, 154, 158, 159], "121821225": 126, "12218524": 126, "122670576": 126, "122853": 126, "123": [43, 46, 101], "12652": 140, "128": 15, "12it": 124, "13": [115, 127, 140, 161], "13125569": 126, "13164201": 126, "13395482": 126, "134": 101, "135": 101, "13516818": 126, "13577485": 126, "13985154": 126, "14": [101, 127, 135, 136, 140, 149], "14283": 140, "144": [50, 53, 149], "14545332": 126, "14796448": 126, "149": 115, "149265": 115, "15": [9, 101, 106, 126, 127, 136, 140, 149], "151683837681807": 143, "153": 154, "155": 161, "158": 101, "15884": 140, "15px": 134, "16": [11, 115, 127, 136, 140, 161], "1617": 161, "1625": 161, "163da9868ea4": [2, 4, 144], "16574481": 126, "1664": 161, "168e00e2": [51, 53], "17": [127, 136, 140, 158], "17072": 127, "1720": 161, "17654371": 126, "17761531": 126, "1792x1024": [16, 129], "17933443": 126, "18": [115, 127, 133], "180": 137, "18041": 127, "18089913": 126, "18447268": 126, "18527": 115, "1855": 149, "19": [127, 149], "1909": 161, "192": 101, "19306852": 126, "194": 101, "196ec25d39c4": 126, "19736": 127, "1976": [59, 61, 127], "1995": 161, "1997": 115, "1998": [59, 61, 127], "1_call": 147, "1e": 38, "2": [0, 1, 2, 4, 13, 15, 16, 17, 19, 21, 22, 23, 24, 28, 31, 32, 33, 34, 37, 39, 41, 46, 54, 57, 58, 59, 61, 63, 68, 72, 80, 81, 82, 83, 91, 98, 100, 103, 104, 115, 116, 117, 120, 124, 125, 126, 127, 129, 130, 132, 133, 135, 136, 137, 139, 140, 142, 143, 144, 148, 149, 150, 152, 157, 158, 159], "20": [33, 104, 120, 127, 149, 158, 159, 161], "200": [2, 4, 91, 137], "2000": [104, 127, 158, 159, 161], "2002": 127, "2004": 127, "2005": [127, 140, 143, 148], "2008": 161, "2009": 140, "2010": 127, "2014": [22, 23], "2015": 161, "2020": [127, 132, 140, 148], "2021": [124, 127], "2023": [0, 1, 9, 127, 140], "2023c": 140, "2024": [8, 11, 13, 14, 76, 115, 127, 133, 134, 150], "20240229": 132, "20417552": 126, "2048": 15, "20px": 134, "21": [127, 134], "2107": 127, "21549304": 135, "2167": 124, "21f0385d": 124, "22": [14, 127, 133, 145], "2210": [0, 1, 115], "2222": 127, "223220": 134, "226": [104, 158, 159], "228": 154, "2301": 140, "2303": [57, 127, 140], "2305": 140, "2307": 143, "2309": [17, 79, 127, 158, 159], "2310": [127, 140, 143, 158, 159], "2311": 127, "2329ffa8d4b6": 124, "24": [15, 149], "2401": [127, 140, 150], "2402": 127, "24047995": 135, "2406": [158, 159], "2408": 127, "24366009": 135, "244": 115, "244562": 115, "2471023025": 140, "249": 133, "24it": 124, "25": [22, 23, 31, 104, 133, 143, 152, 158, 159], "2500": 127, "256": [36, 91, 124, 125, 126, 143], "256x256": 16, "260": 101, "261": 101, "266": 115, "27": [116, 142], "27cc": 124, "27cec433": 144, "28": [59, 61, 127, 149], "287": 115, "29": [59, 61, 127, 161], "297": 115, "29728": 127, "2a78": 124, "2ae492258b53": 144, "2b": 17, "2d72e6e7": 136, "2e25ae5336c8": [2, 4, 144], "2e6f4452827b": 124, "2e8e63041698": 124, "2f": [135, 145], "2it": 124, "2wikimultihopqa": 127, "3": [0, 1, 9, 13, 16, 22, 23, 32, 33, 34, 36, 37, 38, 39, 46, 54, 57, 58, 59, 61, 63, 68, 74, 79, 80, 81, 83, 86, 91, 98, 100, 103, 115, 116, 117, 120, 124, 125, 126, 127, 129, 130, 132, 133, 135, 136, 139, 140, 142, 143, 144, 150, 151, 152, 157, 161], "30": [107, 137], "301": 115, "31": 107, "311": 127, "318": 127, "321": 115, "32768": 14, "33": 127, "3333333333333333": 127, "33333333333333337": 127, "33437008": 135, "353b738c1b71": 124, "36": [50, 53, 104, 149, 158, 159], "37": 134, "37041178": 135, "37da1fbf": 136, "37e1d8ff0526": 124, "37it": 124, "38404a09": 136, "39": 133, "3927": [2, 4, 144], "3929": 140, "3938": 140, "3b": 17, "3rd": [31, 143], "4": [0, 1, 13, 14, 38, 46, 57, 61, 63, 80, 82, 92, 103, 104, 115, 127, 130, 133, 135, 136, 140, 142, 143, 145, 149, 150, 152, 158, 159], "40": [15, 63, 72, 131, 149], "400": 91, "400m": [140, 148], "401": 129, "402c": 136, "405a": 124, "4077": 124, "40f0": [2, 4, 144], "40th": 127, "417ab8b4e3cc": 136, "42": [92, 137, 149], "4206": 124, "424242424244": 115, "4248": [2, 4, 144], "428d": 136, "43": 133, "435b": 124, "43a4": 124, "43f5": 124, "44": 134, "440": 103, "442f": 124, "44a8aa37": [2, 4, 144], "44fc": 136, "45": [43, 127, 134], "4509756": 135, "4568096570283078": 143, "45efa517": 124, "46": 149, "465": 115, "4667": 124, "4682": 136, "46it": 124, "47": 115, "4780": 124, "48": 115, "483b": 124, "485": 115, "4870": 124, "48ce": 124, "48it": 149, "49": [115, 133], "4917": 126, "493d": 124, "49b5": [2, 4, 144], "49ff": 124, "4a392e464fe7": 136, "4aa8": 144, "4aae": 158, "4b89": [51, 53], "4bd0": 124, "4ca4": 144, "4cb6": [51, 53], "4ce3": 126, "4d8e": [104, 158, 159], "4e24": 124, "4eb4": 124, "4f": 135, "4f11": 144, "4f5f": 124, "4f6f": 136, "4f88": [2, 4, 144], "4o": [16, 127, 129, 143, 149, 151], "5": [0, 1, 2, 4, 9, 13, 15, 22, 23, 24, 25, 29, 32, 33, 37, 38, 39, 46, 57, 63, 74, 79, 80, 82, 86, 100, 103, 107, 115, 117, 120, 124, 127, 129, 132, 133, 135, 140, 142, 143, 144, 145, 150, 151, 152], "50": [2, 3, 17, 48, 53, 104, 115, 124, 135, 145, 158, 159], "51": 115, "51011": 149, "512": [8, 17], "512x512": 16, "5166601493236314": 143, "518a": 124, "52": 115, "5316efd58d58": 124, "5343238380789569": 143, "54": [104, 158, 161], "5432": 27, "544": 115, "55": 134, "56": 134, "569a": 124, "57": 149, "582859": 134, "5869e6cd": 136, "59it": 125, "5a8b57f25542995d1e6f1371": [154, 161], "5ba2": 126, "5px": 134, "6": [11, 63, 73, 104, 115, 124, 127, 133, 135, 140, 143, 145, 149, 150, 158, 159, 161], "60": 149, "600": [50, 53], "609": 124, "61": 149, "6175549": 135, "62": 154, "6229580777634034": [22, 23], "6294762236217233": 143, "63072": 124, "6333": 143, "64": [15, 33, 149], "64987b2b": 124, "65": [104, 127, 158], "66": 159, "6666666666666666": [127, 145], "67": 149, "69": 149, "6986ba52a0d3": 136, "7": [15, 27, 104, 107, 127, 129, 133, 137, 140, 142, 143, 150, 158, 159], "70": 137, "70b": [14, 115, 142], "71a2": 136, "72": [104, 127, 145, 158, 159], "7335e34ee0c6": 124, "73c12be3": 124, "75": [22, 23, 137, 143, 149], "756148": 134, "75dd1e09abab": 158, "75dd1e09abab_root": 158, "765794": 134, "768": 125, "77": [149, 159], "7749999761581421": 143, "7790170272403408": 143, "78": 149, "782": 115, "7844": 124, "78917586": 126, "79it": 124, "7a17ed45": 124, "7a4f86892556": 124, "7b": [14, 17], "7d2a": [51, 53], "7minut": 127, "8": [8, 13, 15, 22, 23, 104, 107, 127, 135, 140, 143, 149, 158, 159, 161], "80": [104, 149, 158, 159], "800": [2, 4], "8031794089550072": 143, "81": 149, "8109999895095825": 143, "8119999766349792": 143, "8169999718666077": 143, "8192": [14, 32, 115, 129, 135, 142], "81it": 149, "82": 149, "823": 149, "82e6": [104, 158, 159], "82fb": 144, "8348623853211009": 149, "83rd": 127, "84": [149, 159], "840021aa1953": 124, "8426": 149, "8462": 158, "85": 161, "8567": 154, "8568": 154, "86": 149, "8678": 124, "87": [104, 158, 159], "87e0": 124, "88": [104, 149, 158, 159], "8819": 149, "8819444444444444": 149, "8871": 144, "88b1": 144, "89": [104, 149, 158, 159], "8905dc5f": 144, "8977522850037": 149, "89th": 127, "8a12": 136, "8b": [14, 32, 115, 129, 135], "8b0d": 124, "8bc3": 124, "8be5": 144, "8c3e": 124, "8e52": 124, "8x7b": 14, "9": [15, 39, 76, 104, 127, 129, 140, 142, 143, 158, 159], "90": [104, 131, 149, 158, 159], "90ff": 136, "91": [104, 158, 159], "910e984cdb65": 124, "9122": 124, "92": [104, 158, 159], "93922b619293": 124, "94": [104, 158, 159], "9435ed755e20": 124, "9498793313012154": 143, "95": [15, 17, 56, 115, 127], "95297": 115, "96": [104, 158, 159], "9670": 124, "9696708": 143, "97": [101, 104, 154, 158, 159], "9701269": 143, "9752": 127, "9789": 127, "97db": [2, 4, 144], "98": [104, 133, 143, 158, 159], "9827": 127, "98742366": 143, "99": [104, 158, 159], "9950029253959656": 143, "99520767": 143, "9994476437568665": 143, "9994490742683411": 143, "9996004700660706": 143, "9a424d4c": 124, "9c14": 126, "9ca4": [2, 4, 144], "9dc8": [104, 158, 159], "9dd7d34128df": [104, 158, 159], "9nnn": [104, 158, 159], "A": [2, 4, 8, 9, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 25, 27, 29, 31, 33, 36, 37, 38, 39, 46, 51, 53, 57, 58, 61, 63, 68, 70, 72, 74, 77, 79, 83, 85, 92, 97, 101, 104, 107, 111, 115, 116, 117, 124, 126, 127, 129, 130, 133, 135, 136, 137, 140, 142, 143, 145, 147, 149, 158, 159], "And": [39, 57, 63, 101, 104, 108, 115, 116, 127, 132, 137, 139, 140, 143, 145, 148, 158, 159], "As": [8, 24, 32, 34, 38, 39, 68, 102, 104, 117, 120, 124, 126, 129, 139, 140, 143, 145, 148, 150, 152, 158, 159], "At": [1, 100, 115, 133, 142, 149], "Be": [63, 74, 79], "But": [17, 37, 63, 72, 80, 81, 101, 103, 104, 115, 116, 127, 132, 134, 138, 140, 143, 145, 158, 159, 161], "By": [39, 102, 104, 120, 125, 129, 140, 144, 145, 154, 158, 159], "For": [0, 1, 2, 4, 11, 15, 16, 19, 21, 24, 31, 33, 40, 58, 61, 63, 72, 80, 82, 100, 101, 103, 104, 108, 115, 116, 117, 124, 125, 129, 130, 135, 136, 138, 140, 141, 142, 143, 144, 145, 148, 150, 152, 158, 159], "If": [0, 1, 2, 4, 15, 17, 19, 21, 22, 24, 26, 31, 32, 35, 36, 38, 39, 43, 45, 46, 59, 61, 63, 71, 72, 73, 80, 81, 82, 86, 87, 95, 96, 100, 101, 103, 104, 107, 108, 115, 117, 124, 125, 127, 129, 131, 132, 135, 137, 139, 140, 143, 144, 145, 152, 154, 158, 159], "In": [33, 34, 39, 41, 46, 50, 53, 59, 61, 63, 66, 68, 74, 77, 78, 80, 81, 100, 101, 104, 116, 117, 120, 123, 124, 126, 127, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 147, 148, 149, 150, 152, 158, 159, 161], "It": [2, 3, 4, 6, 8, 9, 16, 17, 22, 23, 24, 32, 33, 34, 37, 38, 39, 40, 43, 46, 54, 59, 61, 63, 66, 69, 71, 72, 73, 74, 77, 78, 80, 81, 82, 86, 95, 100, 102, 104, 111, 114, 115, 116, 117, 118, 120, 124, 125, 126, 127, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 148, 150, 152, 158, 159], "Its": [124, 143], "NOT": [19, 21, 115, 137], "No": [37, 58, 61, 63, 80, 81, 108, 127, 135, 161], "Not": [103, 127, 129], "OR": 154, "Of": [104, 154, 158, 159], "On": [21, 117, 137], "One": [63, 80, 81, 88, 136, 147], "Or": [9, 39, 63, 72, 107, 127, 138, 145], "Such": 32, "That": 161, "The": [0, 1, 2, 3, 4, 6, 9, 15, 16, 17, 19, 21, 22, 23, 24, 25, 27, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 48, 53, 57, 58, 61, 62, 63, 66, 67, 68, 70, 72, 73, 74, 76, 77, 78, 80, 81, 83, 86, 87, 88, 91, 92, 93, 95, 96, 98, 100, 101, 102, 103, 104, 108, 109, 110, 111, 114, 115, 116, 117, 120, 123, 124, 125, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 158, 159, 161], "Then": [2, 4, 101, 124, 126, 129, 135, 136, 140, 142, 144, 145, 154], "There": [0, 1, 17, 22, 26, 74, 77, 100, 101, 116, 127, 131, 132, 133, 138, 143], "These": [4, 116, 120, 126, 127, 130, 135, 138, 139, 143, 144, 145, 150], "To": [15, 22, 23, 24, 42, 43, 46, 63, 69, 83, 92, 100, 101, 103, 104, 107, 108, 109, 115, 117, 120, 123, 125, 127, 130, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 150, 152, 158, 159, 161], "Will": [63, 80, 82], "With": [33, 38, 42, 63, 72, 79, 104, 115, 124, 126, 130, 135, 136, 137, 142, 149, 158, 159, 161], "_": [22, 23, 101, 135], "_______": 115, "________": [115, 137], "__________": 137, "__call__": [17, 32, 37, 44, 45, 63, 67, 68, 70, 80, 81, 116, 120, 129, 130, 135, 161], "__dict__": [31, 34, 124], "__getitem__": 92, "__getitems__": 92, "__init__": [17, 22, 23, 24, 32, 33, 37, 86, 101, 104, 114, 115, 120, 125, 133, 134, 135, 137, 143, 145, 149, 158, 159, 161], "__input_fields__": [19, 20, 117, 137, 149], "__len__": 92, "__main__": [137, 145], "__name__": [98, 133, 135], "__output_fields__": [19, 20, 137, 149], "__repr__": [63, 67, 120], "__str__": [1, 35], "__version__": 95, "_acal": [9, 13, 14, 16, 17, 40], "_additional_llm_tool": 115, "_auto_generator_callback": 147, "_auto_retriever_callback": 147, "_blank": 134, "_call": [9, 13, 14, 16, 17, 40, 87], "_coarse_label": 149, "_coarse_labels_desc": [117, 149], "_combine_input_and_model_kwarg": 135, "_compon": 134, "_compute_single_item": [57, 58, 61], "_diagnos": [104, 158, 159], "_embedd": 143, "_extra_repr": [120, 125], "_few_shot_demo": 136, "_generator_names_to_fil": 87, "_generator_trac": 86, "_init_tool": 115, "_is_async": 145, "_on_completion_callback": 147, "_output": 138, "_output_processor": 137, "_paramet": 134, "_pre_cal": 129, "_prepare_input": [149, 161], "_run_one_step": 115, "_score": 136, "_student_scor": [63, 66], "_student_trac": 32, "_teacher_scor": [63, 66], "_template_str": 134, "_trace": [32, 136], "_trace_map": 88, "a060": [51, 53], "a2acf8ba4c27": 124, "a433b76f37a5": [51, 53], "a45ad4690a47": 136, "a8b8": 136, "a958": 124, "aa81": 124, "aaa8": 124, "aaai": 127, "aad": 9, "ab": [0, 1, 17, 57, 79, 115, 127, 129, 140, 143, 148, 158, 159], "ab64": 124, "aba9": 124, "abbr": 149, "abbrevi": [117, 149], "abc": 124, "aberchird": 154, "aberdeen": 161, "aberdeenshir": 154, "abil": [6, 115, 124, 127, 130, 135, 140], "abl": [104, 116, 117, 123, 127, 129, 140, 143, 146, 147, 148, 149, 154, 158, 159], "about": [8, 27, 57, 101, 104, 127, 129, 131, 132, 135, 140, 141, 148, 149, 158, 159], "abov": [101, 104, 115, 120, 127, 129, 131, 132, 134, 137, 139, 140, 143, 145, 149, 158, 159, 161], "abstract": [21, 40, 55, 62, 63, 73, 92, 109, 116, 117, 119, 130, 131, 135, 137, 149], "abstract_algebra": 127, "ac": [22, 23, 140], "ac78": 126, "academ": [127, 144], "acal": [7, 8, 9, 11, 14, 15, 16, 32, 33, 36, 37, 39, 40, 42, 68, 116, 120, 129, 130, 135, 143, 145], "acc_list": [54, 61], "acc_scor": [63, 80, 82], "accept": [92, 114, 129, 135], "access": [1, 9, 17, 22, 26, 34, 45, 46, 83, 86, 101, 104, 107, 115, 116, 127, 129, 142, 143, 145, 158, 159], "accompani": 101, "accomplish": 130, "accord": [2, 4, 22, 23, 116, 127, 130, 140, 148, 150], "accordingli": 137, "accordion": [104, 158, 159], "account": 129, "accumul": [32, 116, 135, 138], "accur": [63, 74, 79, 111, 116, 140, 143], "accuraci": [54, 61, 63, 66, 104, 114, 115, 127, 131, 140, 144, 149, 150, 158, 159, 161], "accus": 161, "acetaminophen": 120, "achiam": 127, "achiev": [37, 39, 104, 117, 127, 129, 131, 135, 140, 145, 148, 158, 159, 161], "acl": 127, "acm": 127, "acronym": 149, "across": [38, 101, 104, 117, 127, 135, 145, 149, 152, 158, 159], "act": [33, 109, 111, 115, 126, 130, 142], "action": [0, 1, 46, 63, 74, 79, 103, 111, 142, 144], "activ": [6, 9, 46, 100, 101, 108, 116, 137], "actual": [19, 21, 22, 26, 38, 63, 80, 81, 111, 115, 134, 135, 137, 138, 143, 144], "acycl": 130, "ad": [9, 16, 22, 23, 24, 27, 32, 33, 34, 38, 46, 63, 66, 72, 101, 104, 108, 116, 120, 124, 133, 134, 135, 138, 143, 145, 149, 158, 159], "ada": [104, 144, 158, 159], "adaflow": 161, "adal": [19, 20, 33, 63, 80, 104, 116, 127, 129, 149, 158, 159, 161], "adal_compon": [104, 149, 158, 159, 161], "adal_exp": 154, "adalcompon": [72, 80, 81, 82, 83, 109, 127, 130, 161], "adalcomponent_": 130, "adalcomponnet": 147, "adalflow": [2, 4, 11, 16, 17, 21, 22, 23, 31, 32, 33, 34, 35, 37, 40, 41, 45, 46, 48, 53, 57, 62, 63, 66, 71, 72, 80, 82, 86, 87, 95, 96, 100, 101, 102, 105, 106, 109, 111, 115, 116, 117, 120, 123, 124, 125, 129, 130, 131, 133, 134, 135, 137, 138, 139, 140, 141, 143, 144, 145, 147, 148, 154, 158, 159, 161], "adalflow_default_prompt_arg": [35, 139], "adalflow_default_prompt_trainable_param": 35, "adalflow_trac": 134, "adalflow_xx": 101, "adaltask": [63, 80, 82, 104, 149, 158, 159, 161], "adaplcompon": [63, 80, 82], "adapt": [22, 23, 33, 57, 58, 61, 66, 78, 108, 125, 127, 140, 144, 145], "adaptat": 127, "add": [0, 1, 6, 19, 21, 22, 23, 25, 32, 33, 34, 36, 38, 43, 46, 63, 66, 68, 71, 72, 74, 79, 80, 81, 95, 96, 100, 103, 104, 108, 110, 115, 117, 120, 124, 125, 129, 130, 132, 135, 136, 137, 138, 142, 143, 145, 148, 149, 154, 158, 159], "add_a_b": 33, "add_assistant_messag": 135, "add_compon": 32, "add_context": [63, 69], "add_data": [63, 69], "add_dataclass_to_trac": [63, 72], "add_dialog_turn": [5, 6], "add_docu": [22, 25, 143], "add_failed_propos": [63, 74, 79], "add_generation_prompt": 17, "add_grad": [63, 72], "add_gradi": [63, 72], "add_histori": [63, 74, 79], "add_item": 143, "add_llm_as_fallback": [0, 1, 115], "add_missing_right_brac": [38, 43], "add_missing_right_bracket": [38, 43], "add_missing_right_parenthesi": 38, "add_on": 120, "add_point": 145, "add_prompt": [63, 69], "add_scor": [63, 65, 66, 71], "add_score_to_current_param": [63, 74, 79], "add_score_to_param": [63, 74, 79], "add_score_to_trac": [63, 72], "add_successor_map_fn": [63, 72, 116, 161], "add_user_messag": 135, "addab": 33, "addint": 101, "addit": [0, 1, 16, 22, 23, 38, 39, 46, 63, 68, 74, 78, 79, 101, 115, 125, 127, 129, 133, 140, 142, 145, 149], "addition": [11, 14, 15, 17, 22, 26, 27, 40, 101, 104, 115, 120, 125, 127, 130, 133, 136, 140, 143, 145, 158, 159], "additional_context": [45, 145], "additional_info": 55, "additon": 44, "addonecompon": 120, "address": [63, 74, 79, 101, 131, 144], "adher": 137, "adjust": [9, 12, 15, 104, 131, 140, 158, 159], "admit": [127, 150], "adopt": 109, "adpat": 129, "advanc": [47, 102, 120, 127, 132, 133, 143, 144, 154], "advantag": [104, 149, 158, 159], "advis": 31, "ae99": 124, "afbd": 124, "afc": [2, 4, 144], "affect": [15, 57, 117, 125, 127], "after": [15, 22, 23, 31, 34, 36, 39, 41, 43, 46, 100, 103, 104, 115, 117, 126, 127, 129, 132, 133, 135, 137, 138, 142, 143, 145, 154, 158, 159], "afun": [32, 68], "ag": [31, 46, 127, 137, 140, 152], "again": [101, 126, 135, 143], "against": [27, 63, 74, 76, 80, 81, 127], "agenda": 115, "agent": [1, 37, 46, 47, 62, 68, 102, 103, 108, 109, 111, 127, 129, 131, 132, 139, 140, 145, 154], "agent_respons": 115, "agenticrag": 37, "aggreg": [63, 72, 77, 101], "agnositc": 109, "agnost": [129, 130, 132, 135, 148], "ah": 17, "ahead": [117, 130], "ai": [9, 13, 17, 63, 74, 79, 95, 102, 105, 108, 109, 111, 120, 127, 129, 133, 140], "aim": [101, 131, 137], "akari": 140, "al": [127, 140, 148, 150], "alcohol": 161, "algorithm": [15, 17, 144], "alia": [31, 32, 46, 114, 136, 138], "alic": 141, "align": [2, 4, 57, 134, 140, 144], "all": [6, 11, 14, 15, 16, 17, 21, 27, 31, 32, 33, 34, 37, 39, 40, 41, 42, 45, 46, 49, 50, 53, 57, 61, 62, 63, 68, 71, 72, 74, 79, 80, 81, 82, 83, 85, 91, 92, 98, 100, 101, 102, 104, 107, 108, 110, 115, 117, 120, 124, 125, 127, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 145, 149, 150, 152, 154, 158, 159], "all_gener": 147, "all_gt_answ": [54, 61, 150], "all_gt_context": [59, 61, 150], "all_pred_answ": [54, 61, 150], "all_pred_at_onc": 39, "all_quest": 150, "all_retrieved_context": [59, 61, 150], "allevi": [120, 143], "allow": [17, 31, 32, 33, 37, 38, 39, 41, 46, 54, 61, 63, 68, 72, 87, 104, 108, 115, 117, 120, 124, 129, 131, 133, 135, 136, 139, 141, 142, 143, 144, 149, 150, 158, 159, 161], "allowed_typ": [63, 72], "allowi": 124, "almost": [127, 132, 137, 143], "alon": 127, "along": [22, 26, 27, 31, 32, 34, 39, 96, 101, 102, 114, 116, 117, 124, 129, 135, 136, 140, 143, 146, 149, 158], "alongsid": [115, 135], "alpha": 103, "alreadi": [22, 23, 31, 32, 46, 100, 101, 103, 104, 117, 129, 133, 135, 137, 143, 145, 158, 159, 161], "also": [2, 4, 15, 22, 23, 27, 32, 36, 37, 38, 39, 44, 46, 57, 59, 61, 63, 79, 80, 81, 82, 92, 100, 101, 104, 116, 117, 120, 123, 124, 127, 129, 131, 139, 140, 142, 143, 144, 145, 148, 149, 152, 158, 159, 161], "alt": 134, "altern": [6, 33, 101], "although": [22, 23, 33, 142, 143, 161], "alwai": [17, 19, 21, 31, 34, 39, 101, 115, 116, 124, 127, 129, 133, 137, 144, 145], "am": 135, "amazon": [111, 135], "ambigu": 140, "amount": [115, 124, 129], "an": [0, 1, 6, 9, 14, 15, 16, 17, 19, 20, 21, 28, 31, 32, 33, 35, 36, 37, 38, 39, 41, 42, 43, 46, 57, 58, 61, 63, 68, 72, 74, 76, 78, 79, 80, 81, 82, 86, 91, 92, 95, 96, 98, 104, 107, 109, 111, 115, 116, 117, 118, 120, 124, 125, 126, 127, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 143, 145, 148, 149, 150, 152, 158, 159], "analysi": [2, 4, 127, 135, 141, 144], "analyz": [135, 142, 161], "anautomat": 127, "andhannaneh": 140, "andrew": [22, 23], "andro": 127, "angel": 132, "anger": 127, "ani": [0, 1, 2, 4, 8, 9, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 45, 46, 54, 55, 57, 58, 61, 63, 67, 69, 71, 72, 73, 74, 79, 80, 81, 82, 83, 86, 87, 88, 91, 92, 93, 95, 98, 100, 103, 104, 108, 109, 114, 115, 117, 120, 123, 124, 125, 127, 129, 130, 131, 134, 135, 136, 137, 138, 139, 140, 143, 145, 148, 149, 158, 159, 161], "anim": 135, "annoat": 127, "annot": [57, 127, 150], "annual": 127, "anoth": [22, 26, 41, 63, 70, 73, 74, 79, 108, 115, 116, 127, 133, 134, 136, 137, 140, 143], "ansi": 96, "answer": [0, 1, 15, 19, 21, 51, 53, 54, 57, 58, 59, 61, 63, 68, 74, 79, 80, 81, 101, 104, 108, 114, 115, 117, 120, 127, 136, 137, 140, 142, 143, 144, 145, 148, 149, 150, 151, 152, 154, 161], "answer_match_acc": [61, 104, 150, 158, 159], "answer_templ": 161, "answerdata": 161, "answermacthevalu": 150, "answermatchacc": [54, 61, 104, 114, 127, 140, 149, 158, 159, 161], "answr": 154, "anthrop": [8, 46, 95, 107, 111, 132, 135], "anthropic_api_kei": [100, 107], "anthropic_cli": [7, 135], "anthropicapicli": [7, 8, 46, 135], "anticip": 102, "antrop": 8, "anybodi": 127, "anyth": [19, 21, 115, 131, 137, 139, 145], "ap": [127, 134], "api": [8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 32, 36, 40, 46, 63, 80, 82, 100, 101, 108, 116, 126, 130, 131, 132, 140, 141, 142], "api_kei": [8, 9, 11, 12, 13, 14, 16, 91], "api_kwarg": [8, 9, 11, 13, 14, 15, 16, 17, 40, 63, 72, 74, 79, 129, 135], "api_respons": 18, "api_vers": 9, "app": [15, 46, 96, 141], "app_logg": 133, "app_repo": 141, "appear": [63, 72, 74, 79, 127], "append": [17, 33, 34, 93, 114, 124, 135, 145, 147, 150, 161], "append_dialog_turn": 46, "append_to_jsonl": 93, "appl": [58, 59, 61, 127, 136, 158], "appli": [2, 4, 17, 28, 33, 34, 36, 38, 39, 41, 63, 68, 72, 74, 79, 80, 81, 86, 116, 123, 124, 125, 126, 129, 130, 138, 140, 143, 144, 161], "applic": [2, 4, 6, 31, 96, 101, 102, 103, 109, 111, 115, 116, 117, 124, 127, 130, 131, 133, 137, 141, 143, 144, 151, 152], "application_nam": 108, "apply_chat_templ": 17, "apply_transform": [34, 124], "appreci": 102, "approach": [2, 4, 120, 126, 127, 135, 140, 142, 144], "appropi": 135, "appropri": [15, 104, 120, 135, 144, 158, 159], "approv": 101, "apt": 135, "ar": [0, 1, 2, 4, 9, 16, 17, 19, 20, 21, 22, 23, 24, 32, 33, 34, 35, 37, 38, 41, 43, 45, 46, 57, 62, 63, 68, 71, 72, 74, 78, 79, 80, 81, 82, 86, 87, 95, 96, 100, 101, 102, 103, 104, 108, 109, 115, 116, 117, 120, 123, 124, 125, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 149, 150, 151, 152, 154, 158, 159, 161], "arbitrari": [33, 63, 67], "architectur": [33, 140, 148, 151], "arena": 127, "arg": [0, 1, 15, 21, 31, 32, 33, 37, 38, 40, 42, 43, 46, 48, 53, 55, 63, 67, 68, 70, 71, 72, 73, 74, 76, 77, 80, 81, 82, 85, 95, 114, 115, 135, 142, 145, 149], "argument": [0, 1, 11, 14, 15, 17, 31, 33, 35, 37, 38, 39, 40, 41, 46, 63, 67, 72, 73, 80, 81, 91, 104, 115, 116, 125, 126, 129, 134, 135, 136, 137, 139, 142, 143, 144, 145, 158, 159], "arithmet": 46, "ariz": 133, "around": [44, 86, 116, 119, 161], "arr": 145, "arrai": [38, 116, 135, 143, 145], "array1": 135, "array2": 135, "arsen": 127, "art": [63, 66], "articl": [57, 127, 144], "articul": 108, "artifici": 129, "arxiv": [0, 1, 17, 57, 79, 115, 127, 140, 143, 148, 150, 158, 159], "arxivpreprint": 140, "asai": 140, "asdict": [38, 117], "ask": [22, 26, 27, 46, 57, 58, 61, 108, 117, 124, 127, 134, 135, 139, 141, 142, 143, 144, 145, 149], "aspect": [63, 74, 79, 127], "aspirin": 120, "assert": [31, 125, 135], "assess": [57, 104, 127, 150, 158, 159], "asset": 134, "assign": [2, 4, 15, 32, 57, 63, 72, 104, 126, 127, 136, 138, 147, 158, 159], "assist": [6, 17, 19, 20, 21, 35, 41, 46, 104, 115, 120, 124, 129, 132, 133, 134, 135, 139, 150, 158, 159], "assistant_respons": [6, 46, 124], "assistant_response_timestamp": [46, 124], "assistantrespons": [46, 124], "assit": 139, "associ": [127, 137], "assum": [34, 46, 124, 133, 135, 136, 147, 161], "assumpt": 132, "ast": [38, 46, 137], "async": [8, 9, 11, 14, 15, 16, 32, 33, 36, 37, 39, 40, 42, 45, 68, 115, 129, 143, 145], "async_cli": 135, "async_function_1": 37, "async_function_2": 37, "async_tool_1": 37, "async_tool_2": 37, "asynccal": [46, 115], "asynchron": [15, 37, 120], "asyncio": [37, 45, 135, 145], "asyncopenai": 135, "atom": [124, 143], "attach": [86, 133, 136], "attempt": [37, 135], "attempted_val_scor": 83, "attent": [103, 104, 158, 159], "attention_mask": 17, "attribut": [22, 24, 26, 28, 29, 32, 34, 39, 41, 42, 59, 61, 63, 68, 72, 86, 91, 104, 117, 120, 124, 127, 134, 136, 137, 143, 145, 158, 159], "auc": 127, "audio": 143, "aug": 140, "augement": 143, "augment": [63, 66, 127, 130, 136, 140, 143, 148, 150, 151], "augmented_demo": [63, 66], "augmentedlanguag": 140, "authent": 9, "author": 127, "auto": [0, 1, 16, 32, 39, 68, 72, 75, 79, 101, 102, 104, 109, 114, 130, 131, 134, 135, 139, 140, 148, 151, 159, 161], "auto_text_grad_": 130, "autoai": 148, "autograd": [68, 70, 116], "autom": [127, 131, 147], "automat": [9, 24, 32, 33, 36, 39, 45, 63, 67, 72, 75, 76, 80, 81, 86, 100, 101, 104, 108, 116, 120, 127, 134, 137, 142, 145, 158, 159], "automodelforcausallm": 17, "autonom": [109, 115, 131], "autoreset": 96, "autotoken": 17, "avail": [14, 15, 46, 95, 107, 115, 129, 135, 145, 150], "available_funct": 145, "averag": [22, 23, 54, 59, 61, 63, 80, 81, 127, 135, 150], "average_embed": 135, "average_idf": [22, 23], "average_pool": [7, 17], "average_tim": 142, "avg_acc": [54, 61], "avg_judg": [58, 61, 150], "avg_paris_embed": 135, "avg_recal": [59, 61, 127, 150], "avg_relev": 150, "avg_scor": [55, 58, 127], "avgdl": [22, 23, 143], "avirup": 140, "avoid": [9, 16, 22, 23, 31, 32, 68, 100, 124, 125, 140, 143], "await": [0, 1, 33, 37, 45, 46, 129, 135, 145], "awar": [22, 26, 63, 74, 79, 135, 138, 141], "award": 152, "awlai": 145, "axi": 135, "azur": [9, 95, 111], "azure_endpoint": 9, "azure_modul": 95, "azure_module_nam": 95, "azure_openai_api_kei": 9, "azure_openai_endpoint": 9, "azure_openai_vers": 9, "azureai_cli": 7, "azureaicli": [7, 9], "azureopenai": 9, "b": [0, 1, 22, 23, 33, 46, 101, 115, 142, 143, 145], "b0cffa3e": [104, 158, 159], "b2dbdf2f": 124, "b3e9": 124, "b400": 144, "b64_json": 16, "b6c6": 124, "ba46": [51, 53], "ba8e1e23": 144, "baai": [17, 143], "back": [15, 19, 21, 22, 23, 34, 91, 93, 98, 102, 104, 115, 116, 117, 123, 126, 127, 129, 136, 137, 158, 159], "backend_engine_prompt": 74, "backpropag": [32, 39, 63, 66, 68, 70, 74, 78, 104, 116, 130, 136, 138, 158, 159], "backpropagatin": 138, "backpropog": 136, "backtick": [19, 21, 115, 137, 145], "backward": [32, 39, 45, 63, 67, 68, 70, 72, 74, 75, 76, 77, 78, 80, 81, 104, 109, 114, 116, 130, 136, 138, 149, 158, 159], "backward_engin": [39, 63, 67, 68, 70, 74, 77, 78, 80, 81, 104, 114, 158, 159, 161], "backward_engine_model_config": [63, 80, 81, 82, 104, 149, 158, 159, 161], "backward_fn": [63, 67], "backward_pass_setup": [39, 63, 80, 81, 82], "backward_with_pass_through_gradi": 68, "backwardcontext": [63, 67], "backwardengin": [39, 63, 67, 68, 70, 74, 77, 78, 80, 81], "backwardpasssetup": [39, 63, 80, 81, 82], "bad": [104, 127, 158, 159], "badg": 134, "balanc": [15, 50, 53, 135], "balconi": 161, "banana": [136, 158], "banerje": 127, "bank": 127, "bare": [109, 119, 139], "baromet": 161, "basd": 143, "base": [0, 1, 2, 3, 4, 6, 8, 9, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 54, 57, 58, 59, 61, 62, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 85, 87, 88, 90, 92, 95, 97, 98, 101, 102, 109, 114, 115, 117, 119, 120, 125, 129, 131, 133, 135, 137, 140, 141, 142, 145, 148, 149, 150, 152], "base64": 129, "base_class": 31, "base_data_class": [46, 117, 137, 150, 152], "base_url": [12, 16], "basedata": [51, 53], "basedataclass": 31, "baseevalu": [54, 55, 57, 58, 59, 61, 63, 74, 78], "basemodel": 116, "bash": [9, 24], "basic": [21, 62, 70, 102, 131], "basicqaoutput": [19, 20], "batch": [2, 4, 36, 46, 63, 74, 77, 79, 80, 81, 82, 92, 104, 123, 124, 125, 126, 135, 143, 149, 157, 158, 159], "batch_embedd": [124, 125], "batch_idx": [63, 80, 81], "batch_siz": [2, 3, 4, 36, 63, 72, 91, 92, 124, 125, 126, 138], "batch_val_score_threshold": [63, 80, 82], "batchembedd": [36, 124], "batchembedderinputtyp": 36, "batchembedderoutputtyp": 36, "bbh_object_count": [48, 53], "bc0ff7f6": 124, "bcbc6ff9": 124, "bceloss": 116, "bd3a": 136, "bdbd": 124, "beat": [104, 158, 159], "beauti": [22, 23], "becam": 161, "becaus": [2, 4, 104, 129, 131, 142, 144, 149, 152, 158, 159], "becom": [63, 72, 127, 136, 140, 143], "bed": 136, "bednnn": [104, 158, 159], "bedrock": 111, "bedrock_cli": 7, "been": [39, 46, 124, 127, 140, 143, 149], "befor": [2, 4, 43, 58, 59, 61, 63, 68, 80, 81, 100, 101, 102, 103, 104, 120, 124, 125, 127, 130, 142, 143, 144, 149, 152, 158, 159, 161], "begin": [63, 72, 96, 101, 108, 131], "begin_of_text": [132, 139], "behavior": [116, 133, 145], "behind": [19, 21, 63, 72, 115, 130, 132], "beij": [58, 61, 127], "being": [117, 130, 131, 136, 138, 140, 145, 149, 161], "belief": 140, "belong": 145, "below": [104, 115, 127, 135, 137, 143, 145, 158, 159], "bench": [48, 53], "benchmark": [100, 140, 142, 150, 154, 161], "benchmark_async_acal": 135, "benchmark_sync_cal": 135, "benef": 143, "benefici": 144, "benefit": [33, 46, 124, 143], "bert": [127, 161], "bert_scor": [54, 61, 127], "bertscor": [127, 140, 148], "besid": [32, 124, 127, 129, 139, 140, 142, 152], "best": [22, 23, 101, 102, 104, 108, 120, 127, 130, 140, 143, 144, 148, 158, 159], "beta": [17, 103, 145], "better": [2, 4, 20, 31, 39, 63, 66, 68, 74, 78, 79, 101, 104, 115, 116, 117, 127, 129, 135, 136, 137, 142, 143, 144, 145, 147, 149, 152, 158, 159], "between": [2, 4, 6, 15, 31, 40, 56, 57, 59, 61, 101, 108, 109, 115, 116, 127, 130, 131, 135, 138, 140, 143, 144, 148, 161], "beyond": [4, 102, 127, 131, 145], "bf52": 136, "bfc5": 144, "bfloat16": 17, "bge": [17, 143], "bhh_hard_object_count": 151, "bhh_object_count": [104, 158, 159], "bi": [140, 143, 148], "bias": [32, 120, 133], "bical": [0, 1, 22, 27, 28, 29, 32, 33, 36, 37, 42, 43, 45, 63, 68, 80, 81, 161], "big": [48, 53, 135, 140], "big_bench_hard": [104, 158, 159], "bigbenchhard": [48, 53, 104, 158, 159], "bigger": [22, 23], "biggest": 92, "binari": 56, "bit": [37, 117, 149], "black": [96, 140], "blackberri": [136, 158], "bleu": [127, 140, 148], "bleu_scor": [54, 61], "bleuscor": 127, "blob": [50, 53, 134], "block": [31, 32, 37, 47, 68, 96, 102, 108, 120, 130, 131, 135, 144, 147, 154], "blog": 101, "blow": 134, "blue": 96, "bm25": [22, 23, 124, 143], "bm25_index": [22, 23], "bm25_retriev": [22, 143], "bm25retriev": [22, 23], "bob": 141, "bodi": [57, 127], "bonjour": 134, "book": 144, "bool": [0, 1, 2, 3, 4, 15, 17, 19, 20, 21, 22, 23, 25, 27, 32, 34, 37, 38, 39, 41, 42, 43, 44, 46, 57, 58, 61, 63, 66, 67, 69, 71, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 86, 92, 96, 115, 124, 125, 136, 137], "bool_str": 137, "bool_str_2": 137, "bool_str_3": 137, "bool_str_4": 137, "bool_str_5": 137, "bool_str_6": 137, "bool_str_7": 137, "bool_str_8": 137, "boolean": [0, 1, 21, 38, 43, 137, 143], "boolean_pars": 43, "boolean_str": 137, "booleanoutputpars": [19, 21, 137], "booleanpars": 43, "boost": [124, 127, 143, 149], "boostrap": [66, 149, 151], "bootstrap": [63, 71, 80, 81, 136, 149], "bootstrap_optim": [65, 149], "bootstrap_shot": [63, 66, 80, 82, 104, 149, 158, 159], "bootstrapfewshot": [63, 65, 66, 104, 114, 149, 159], "bootstrapoptim": 149, "border": [2, 4, 144], "bore": 131, "boshengd": 140, "both": [4, 9, 16, 22, 23, 32, 37, 40, 43, 45, 46, 63, 66, 80, 81, 93, 96, 101, 104, 109, 115, 116, 117, 124, 127, 129, 130, 133, 134, 135, 136, 137, 140, 141, 143, 145, 147, 148, 149, 150, 152, 158, 159, 161], "boto3": 95, "botocor": 95, "bottom": 134, "bound": 56, "boundari": [27, 31, 46, 57, 61, 83, 95, 98], "boutiqu": 161, "box": [102, 120, 127, 131, 140], "brace": [38, 43], "bracket": [38, 43], "branch": [101, 103, 140], "brand": 149, "brazil": 127, "break": [2, 4, 63, 72, 115, 131, 133, 144], "bridg": [14, 17, 40, 135], "brief": [19, 20, 129], "briefli": 130, "brittl": 131, "broad": [127, 144], "broader": 144, "broccoli": 136, "brought": 127, "browser": 142, "bsd": 33, "budget": [2, 4, 144], "buffer": [1, 35], "bug": [101, 102, 103, 104, 158, 159], "buget": 140, "build": [22, 23, 24, 29, 32, 38, 42, 47, 57, 63, 72, 102, 103, 108, 109, 115, 116, 117, 120, 127, 143, 147, 148, 149, 150, 151, 161], "build_custom_model_cli": 135, "build_index": 150, "build_index_from_docu": [22, 23, 24, 26, 29, 42, 124, 143], "builder": 41, "built": [22, 23, 29, 35, 38, 42, 102, 104, 107, 127, 130, 137, 141, 142, 143, 145, 158, 159, 161], "bullet": [63, 74, 79], "bunch": 144, "burnlei": 127, "busi": 131, "bust": 127, "button": 101, "bytes_or_buff": [1, 35], "c": [22, 23, 32, 127, 140, 161], "c21d": [51, 53], "c4e4": 124, "c4e5": 126, "c5431397": 124, "c77c98ac260f": 124, "c8fc": 124, "ca": 145, "ca0af45b": [2, 4, 144], "cabbag": 136, "cach": [0, 1, 17, 39, 57, 58, 61, 94, 124], "cache_dataset": [48, 53], "cache_path": [39, 90], "cached_content_token_count": 13, "cached_dataset": 123, "cachedengin": [39, 90], "cafeteria": 141, "cai": 127, "calcul": [56, 63, 80, 81, 104, 116, 126, 127, 135, 158, 159], "calculate_class_weight": 50, "calculate_similar": 135, "call": [0, 1, 2, 4, 5, 6, 7, 8, 9, 11, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 31, 32, 33, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 57, 58, 61, 63, 66, 67, 68, 70, 72, 73, 74, 76, 79, 80, 81, 85, 86, 87, 93, 95, 96, 98, 101, 104, 108, 111, 114, 115, 116, 120, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 142, 143, 144, 147, 149, 150, 154, 158, 159, 161], "call_async_funct": 37, "call_logg": 147, "call_multipli": [0, 1], "callabl": [0, 1, 8, 9, 12, 16, 22, 23, 24, 26, 29, 31, 32, 34, 37, 38, 42, 45, 46, 63, 67, 68, 72, 73, 74, 78, 80, 81, 85, 114, 115, 116, 124, 149, 158, 161], "callan": 140, "callback": [63, 80, 81, 85, 104, 133, 147, 158, 159], "callbackmanag": [39, 85, 108], "caller": 135, "callfunctiontool": 45, "can": [0, 1, 2, 4, 6, 8, 9, 11, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 26, 27, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 53, 54, 57, 58, 59, 61, 63, 66, 68, 70, 72, 73, 74, 76, 78, 79, 80, 81, 82, 86, 88, 91, 92, 95, 97, 100, 101, 103, 104, 107, 108, 111, 115, 116, 117, 119, 120, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 147, 148, 149, 150, 152, 154, 158, 159, 161], "candid": 143, "candidates_token_count": 13, "cannon": 161, "cannot": [17, 108, 115, 127, 129], "cant": 1, "cantain": 32, "cap": [104, 158, 159], "capabl": [16, 37, 104, 111, 115, 116, 130, 133, 144, 145, 158, 159], "capac": 161, "capdev": [127, 140, 148], "capit": [31, 38, 115, 117, 125, 129, 134, 135, 139], "captur": [38, 57, 116, 127, 129], "carbon": [124, 143], "card": 139, "care": [104, 115, 140, 144, 148, 158, 159], "carefulli": [57, 101, 108, 127], "carri": 145, "carrot": 136, "carsnn": [104, 158, 159], "case": [6, 22, 26, 31, 34, 63, 66, 72, 100, 101, 104, 108, 115, 120, 124, 127, 129, 130, 131, 133, 135, 137, 139, 140, 142, 143, 144, 145, 147, 148, 149, 152, 158, 159, 161], "castl": [154, 161], "cat": 129, "catch": 39, "categor": [31, 115, 127, 135, 143], "categori": [101, 137, 143], "cauliflow": 136, "caus": 120, "caution": 37, "cd": [100, 141], "cdot": [22, 23, 140], "celeri": 136, "celsiu": 145, "center": [119, 134], "centr": 127, "certain": [17, 38, 133, 152], "chain": [33, 39, 46, 63, 74, 79, 104, 117, 120, 124, 125, 129, 130, 140, 142, 143, 149, 158, 159], "challeng": [104, 127, 131, 138, 143, 158, 159], "champion": 127, "chanc": [22, 26, 131, 136], "chang": [63, 74, 79, 88, 101, 115, 116, 124, 127, 129, 130, 131, 134, 140, 143, 161], "chapter": 144, "char": 154, "charact": [63, 72], "characterist": [138, 149], "chat": [8, 9, 11, 13, 14, 15, 16, 17, 35, 40, 124, 129, 134, 139, 141], "chat_completion_pars": [8, 9, 12, 16, 135], "chat_histori": [35, 124, 134], "chat_history_str": [35, 124, 129, 134, 139], "chatbot": [17, 102, 109, 124, 127, 129, 130, 131, 143], "chatcomplet": [9, 14, 16], "chatcompletionchunk": [9, 16], "chatcompletiontokenlogprob": 46, "chatconvers": 135, "chatconversationasync": 135, "cheapest": [140, 143], "check": [2, 4, 14, 31, 34, 38, 40, 41, 46, 63, 68, 70, 72, 73, 74, 79, 100, 103, 104, 107, 108, 113, 117, 120, 124, 126, 127, 129, 135, 140, 141, 142, 143, 144, 145, 148, 152, 158, 159, 160], "check_adal_dataclass": 31, "check_chat_convers": 135, "check_chat_conversations_async": 135, "check_data_class_field_args_on": 38, "check_data_class_field_args_zero": 38, "check_if_already_computed_gradient_respect_to": [63, 72], "check_if_class_field_args_one_exist": 38, "check_if_class_field_args_zero_exist": 38, "check_object": 98, "check_openai_additional_util": 135, "checkout": 101, "checkpoint": [63, 80, 82, 149], "chen": [127, 140], "chengwei": 140, "child": [32, 133], "children": [32, 161], "china": [58, 61, 125, 127], "chip": 17, "choic": [57, 127, 129, 135, 137, 140, 150], "choos": [15, 19, 20, 22, 23, 24, 42, 144, 145], "chosen": 111, "chronicl": [127, 150], "chunk": [2, 3, 4, 9, 24, 108, 111, 124, 125, 127, 129, 130, 140, 141, 143, 148, 150], "chunk_overlap": [2, 4, 144], "chunk_siz": [2, 4, 144], "ci": 100, "cindex": 135, "cite": [140, 148], "citi": 145, "ckpt": [63, 80, 82, 104, 147, 149, 154, 158, 159], "ckpt_file": [63, 80, 82, 104, 158, 159], "ckpt_path": [63, 80, 82], "cl": [38, 117], "cl100k_base": [2, 4, 44, 144], "claim": 127, "clarif": 101, "clarifi": 101, "clarinet": [104, 158, 159], "clariti": [57, 63, 74, 79, 109, 127, 131, 135], "class": [0, 1, 2, 3, 4, 6, 8, 9, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 54, 55, 57, 58, 59, 61, 62, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 95, 97, 98, 100, 101, 104, 108, 109, 111, 114, 115, 116, 120, 124, 125, 129, 131, 133, 134, 135, 136, 137, 138, 141, 142, 145, 149, 150, 152, 156, 157, 158, 159, 161], "class_descript": 149, "class_index": [51, 53, 117, 149], "class_inst": 46, "class_nam": [31, 51, 53, 86, 117, 149], "classes": 152, "classic": [109, 131, 151], "classif": [50, 53, 109, 127, 131, 137, 151], "classifi": [117, 127, 140, 149], "classmethod": [9, 14, 15, 16, 22, 23, 27, 31, 32, 34, 36, 39, 41, 42, 46, 63, 72, 97, 115, 117], "classroom": 115, "classsampl": [63, 73], "claud": [8, 132], "clean": [133, 154], "clean_device_cach": [7, 17], "clear": [57, 63, 71, 74, 79, 101, 108, 127, 130, 140, 142, 143], "clearli": [63, 74, 79, 127], "cli": 15, "click": [101, 127, 140, 141], "client": [0, 1, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 22, 26, 28, 29, 36, 39, 40, 46, 57, 58, 61, 62, 63, 74, 78, 95, 101, 111, 115, 129, 130, 131, 132, 143], "climat": [124, 143], "clone": [100, 101, 108, 141], "close": [38, 101, 104, 131, 143, 149, 158, 159], "cloth": 143, "cloud": [6, 13, 123, 135, 140, 143, 148], "co": [17, 50, 53, 125, 133, 143], "coach": 127, "coarse_label": [63, 73, 117], "code": [2, 4, 16, 31, 33, 38, 46, 63, 68, 72, 76, 79, 86, 96, 101, 102, 104, 108, 109, 115, 117, 120, 124, 125, 127, 129, 130, 131, 133, 134, 135, 137, 139, 140, 141, 143, 144, 145, 147, 148, 149, 150, 154, 158, 159, 161], "codebas": 100, "coder": 17, "coeffici": 127, "coher": [11, 15, 46, 57, 61, 95, 107, 111, 127, 132, 135, 140, 141, 143, 144], "cohere_api_kei": [100, 107], "cohere_cli": [7, 135], "cohereapicli": [7, 11, 22, 29, 46, 135, 143], "colab": [101, 134], "colbertv2": 154, "collabor": 105, "collect": [28, 46, 57, 63, 80, 82, 127, 134, 135, 143], "collection_nam": [28, 143], "color": [96, 115, 133], "colorama": 96, "colored_print": 96, "column": [24, 27, 127, 154], "com": [8, 9, 11, 12, 13, 14, 15, 16, 24, 63, 66, 100, 101, 127, 129, 133, 134, 139, 140, 141, 143, 145], "combat": [124, 143], "combin": [8, 9, 13, 16, 39, 41, 74, 77, 79, 108, 115, 126, 127, 129, 131, 140, 143, 145, 148, 149, 154, 161], "combine_kwarg": 38, "come": [108, 115, 124, 127, 129, 135, 137, 143, 147, 150, 161], "command": [15, 96, 100, 101, 141], "comment": [100, 101, 139], "commit": [101, 103, 108], "common": [43, 51, 53, 56, 59, 61, 127, 140, 143], "commonli": [4, 21, 126, 127, 140], "commun": [37, 40, 101, 102, 106, 108, 135, 140, 161], "compact": [46, 145], "compani": 141, "compar": [19, 20, 21, 22, 23, 27, 32, 38, 54, 57, 61, 63, 66, 68, 70, 74, 76, 101, 104, 115, 124, 125, 127, 135, 144, 149, 156, 157, 158, 159, 161], "comparison": [108, 115, 120, 127, 143, 145, 161], "compat": [12, 127, 129, 135, 137, 144], "complet": [0, 1, 6, 8, 9, 11, 12, 13, 14, 15, 16, 17, 37, 38, 39, 40, 46, 101, 103, 104, 115, 127, 135, 142, 144, 148, 158, 159], "completion_token": [46, 104, 158, 159], "completion_usag": 46, "completionusag": [8, 9, 13, 14, 16, 40, 46, 104, 158, 159], "complex": [19, 21, 38, 43, 63, 101, 108, 115, 117, 127, 133, 137, 144], "complext": 137, "complic": [115, 139, 140, 145, 160], "compon": [0, 1, 2, 3, 4, 6, 8, 9, 11, 12, 13, 14, 15, 16, 17, 19, 21, 22, 23, 24, 33, 34, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 57, 58, 61, 63, 68, 69, 70, 72, 74, 79, 80, 81, 82, 86, 91, 95, 97, 98, 101, 104, 107, 109, 111, 114, 115, 116, 117, 119, 124, 125, 126, 127, 129, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 158, 159, 161], "componenet": [32, 91], "component1": 33, "component2": 33, "component3": 33, "component4": 33, "component_config": [36, 39, 91, 129], "component_id": 147, "component_nam": [36, 39, 91, 129, 147], "component_trac": 63, "componentlist": 33, "componentnod": 72, "componenttrac": [63, 72], "componnet": 138, "compos": [33, 41, 81, 119, 132, 151], "compose_model_kwarg": 38, "compose_prompt_kwarg": 41, "compound": [63, 74, 79], "comprehens": [57, 111, 127, 129, 130, 140, 148], "compromis": 144, "comput": [25, 54, 55, 57, 58, 59, 61, 63, 67, 70, 72, 74, 76, 77, 78, 83, 104, 115, 116, 127, 131, 133, 135, 138, 140, 143, 150, 156, 157, 158, 159, 161], "computation": 140, "compute_bertscor": 127, "compute_bleu": 127, "compute_context_relev": 150, "compute_g_eval_summar": 127, "compute_grad_for_errors_onli": 39, "compute_judg": 150, "compute_llm_as_judg": 127, "compute_llm_as_judge_wo_quest": 127, "compute_match_acc": 150, "compute_recal": 150, "compute_roug": 127, "compute_single_item": [54, 55, 57, 59, 61, 104, 114, 149, 158, 159, 161], "con": [124, 143], "concaten": [74, 77, 140], "concept": [19, 20, 59, 61, 116, 117, 120, 129, 138, 149], "conceptu": 133, "concern": [63, 74, 79], "concis": [117, 120, 149], "conclud": [104, 158, 159], "conclus": [149, 150], "concurr": [135, 145], "conda": 24, "condit": [34, 116, 133, 139, 142, 161], "condition": [7, 139], "condition_fn": 124, "confer": [127, 140], "confid": [56, 127], "confidence_interv": [56, 58, 127], "config": [32, 36, 39, 63, 80, 81, 101, 114, 125, 133, 150, 161], "config_dataset": [63, 65, 66], "config_shot": [63, 65, 66, 71], "configur": [2, 4, 9, 32, 36, 63, 80, 81, 82, 91, 96, 97, 100, 101, 104, 107, 115, 126, 129, 131, 135, 143, 144, 149, 150, 158, 159, 161], "configure_backward_engin": [63, 80, 81, 104, 158, 159], "configure_backward_engine_engin": [63, 80, 81], "configure_backward_engine_help": [63, 80, 81, 104, 158, 159], "configure_callback": [63, 80, 81, 82, 147], "configure_demo_optimizer_help": [63, 80, 81, 104, 158, 159], "configure_loss_fn": 114, "configure_optim": [63, 80, 81, 104, 114, 158, 159], "configure_teacher_gener": [63, 80, 81, 104, 114, 158, 159], "configure_teacher_generator_help": [63, 80, 81, 104, 158, 159], "configure_text_optimizer_help": [63, 80, 81, 104, 158, 159], "conflict": [101, 138], "confus": [32, 103, 108, 117], "connect": [27, 101, 116, 143, 161], "conquer": 115, "conserv": 15, "consid": [31, 32, 59, 61, 63, 72, 101, 115, 133, 140, 143, 144], "consin": 143, "consist": [21, 33, 39, 41, 46, 57, 61, 63, 74, 79, 101, 104, 116, 127, 129, 130, 147, 150, 152, 158, 159], "consol": [14, 96, 133], "constant": [1, 22, 23, 31, 35, 38], "constantli": 117, "constrain": [63, 80, 82, 104, 149, 158, 159], "constrained_max_steps_12_848d2_run_7": 149, "constrained_max_steps_8_a1754_run_1": [104, 158, 159], "constraint": [63, 74, 79, 144], "constraint_text": [63, 74, 79], "construct": [63, 74, 79, 91, 92, 150], "constructor": [33, 35, 115, 125, 135], "consum": 136, "contain": [2, 4, 22, 23, 25, 27, 28, 32, 38, 43, 45, 46, 54, 57, 58, 61, 63, 72, 74, 79, 80, 81, 101, 104, 108, 120, 124, 125, 127, 129, 134, 135, 142, 144, 145, 150, 152, 154, 158, 159, 161], "content": [8, 9, 16, 17, 25, 57, 106, 112, 124, 127, 132, 134, 135, 140, 141, 143, 152, 154], "contex": [35, 129, 134], "context": [0, 1, 2, 4, 15, 31, 32, 33, 35, 37, 38, 39, 41, 45, 51, 53, 59, 61, 63, 67, 68, 69, 70, 72, 74, 78, 79, 80, 81, 101, 104, 108, 111, 114, 115, 116, 124, 127, 129, 130, 131, 134, 135, 138, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 154, 158, 159, 161], "context_map": [38, 46, 145], "context_recal": [59, 61], "context_str": [35, 41, 129, 134, 139, 140, 145, 150], "context_vari": [0, 1], "contextu": [127, 144, 150], "continu": [63, 80, 81, 124, 131, 133, 139, 140], "contravari": 143, "contribut": [100, 102, 108, 124, 143], "contributor": [101, 108], "control": [2, 4, 15, 19, 20, 46, 96, 100, 108, 109, 117, 124, 129, 131, 132, 133, 135, 139, 144, 149, 152], "conv1": 120, "conv2": 120, "conv2d": [33, 116, 120], "conveni": [33, 74, 77, 117, 120, 142], "convent": [19, 21, 115, 117, 137, 145], "conver": 124, "conver_db": [5, 6], "converag": [104, 158, 159], "converg": [104, 158, 159], "convers": [6, 46, 124, 129, 130, 135, 139, 140, 141, 142, 143, 145, 148], "conversation_histori": [135, 143], "conversation_id": 46, "conversation_str": [63, 74, 78], "convert": [9, 13, 14, 15, 16, 17, 24, 31, 32, 38, 39, 40, 43, 46, 54, 61, 63, 74, 78, 98, 104, 108, 114, 117, 120, 123, 124, 126, 132, 135, 136, 137, 143, 145, 158, 159, 161], "convert_inputs_to_api_kwarg": [7, 8, 9, 11, 13, 14, 15, 16, 17, 40, 135], "convert_schema_to_signatur": 38, "convert_y_pred_to_dataclass": 114, "convict": 161, "cookbook": [108, 140, 143, 152], "cool": 115, "cooper": 161, "copi": [2, 3, 16, 32, 63, 74, 79, 100, 108, 125, 126, 135, 149, 161], "cor": 127, "core": [0, 1, 2, 4, 21, 31, 32, 33, 34, 37, 38, 41, 45, 46, 87, 95, 101, 108, 115, 117, 120, 124, 125, 126, 129, 130, 131, 133, 134, 135, 137, 139, 141, 142, 143, 144, 145, 150, 152], "corner": 101, "coro": 45, "corpora": 127, "corpu": [22, 23, 127, 140, 148, 161], "corr": 140, "correct": [0, 1, 63, 72, 74, 76, 79, 80, 82, 101, 103, 104, 114, 115, 116, 127, 129, 135, 140, 150, 154, 158, 159], "correct_val_score_threshold": [63, 80, 82], "correctli": [9, 34, 37, 46, 63, 80, 81, 100, 101, 103, 104, 115, 116, 117, 140, 149, 158, 159], "correl": 127, "correspond": [2, 4, 38, 63, 80, 81, 101, 135, 137, 142, 144, 150], "cosin": [22, 24, 27, 127, 135], "cost": [104, 127, 140, 143, 149, 158, 159], "could": [38, 46, 92, 127], "council": 161, "count": [16, 44, 48, 53, 104, 136, 140, 144, 158, 159], "count_token": 44, "counter": 120, "countless": 127, "cours": [104, 127, 134, 154, 158, 159], "cover": [57, 100, 101, 102, 108, 117, 120, 124, 127, 129, 130, 137, 143, 145, 148, 152, 161], "coverag": [127, 143], "covert": 145, "cp": 100, "cpp": 15, "cpu": [24, 95, 107], "crag": 127, "creat": [1, 2, 4, 9, 14, 15, 16, 17, 31, 32, 34, 35, 36, 37, 39, 41, 46, 63, 68, 72, 91, 95, 102, 103, 104, 115, 116, 117, 120, 123, 124, 125, 126, 127, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 148, 149, 150, 152, 158, 159, 161], "create_complet": 15, "create_context_map_from_tool": 45, "create_demo_data_inst": 39, "create_embedding_respons": 46, "create_teacher_gener": 39, "created_at": 46, "createembeddingrespons": [9, 16, 135], "creativ": [15, 135], "credenti": 9, "credit": 161, "criteria": [57, 127], "criteria_coher": 57, "criteria_consist": 57, "criteria_flu": 57, "criteria_relev": 57, "criterion": [2, 4, 139, 144], "critic": [2, 4, 96, 140], "criticis": 127, "critiqu": 140, "cross": [140, 143], "crossentropyloss": 116, "crucial": [38, 101, 104, 117, 124, 127, 139, 143, 158, 159], "crud": [34, 124], "csv": [48, 53, 93], "ctrl": 142, "cup": 127, "current": [1, 6, 32, 34, 63, 72, 74, 79, 96, 104, 107, 116, 124, 125, 129, 134, 135, 137, 142, 143, 145, 147, 158, 159, 161], "current_convers": [5, 6], "current_step": [63, 80, 81], "current_tgd_output": [63, 74, 79], "cursor": 100, "curv": 149, "custom": [2, 4, 16, 17, 21, 22, 26, 27, 31, 38, 39, 42, 58, 61, 63, 92, 93, 96, 98, 103, 108, 114, 116, 117, 125, 127, 129, 130, 131, 133, 140, 141, 142, 148, 150], "custom_asdict": [38, 117], "custom_cli": 135, "customgener": 129, "customiz": [109, 119, 127, 142, 149], "customizellm": 17, "cut": [140, 143], "cyan": 96, "cycl": [63, 69, 74, 79], "d": [19, 21, 22, 23, 24, 63, 74, 78, 103, 104, 115, 116, 127, 158, 159, 161], "d19a": 124, "d414": 158, "d_": 116, "d_from_response_id": [63, 69], "d_g_output": 116, "d_t": 140, "d_to_pred_id": [63, 69], "dag": [116, 130, 138, 146], "dai": [22, 23, 59, 61, 127], "dall": [16, 129], "dan": 127, "data": [0, 1, 2, 3, 4, 6, 9, 14, 15, 16, 19, 21, 22, 24, 26, 27, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 43, 46, 48, 53, 62, 68, 69, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 93, 98, 104, 108, 109, 114, 116, 118, 120, 123, 125, 126, 127, 129, 131, 133, 134, 135, 136, 137, 138, 142, 144, 145, 147, 148, 149, 150, 152, 158, 159, 161], "data_class": [19, 20, 21, 31, 115, 137, 145, 149, 161], "data_class_for_yaml": [19, 21], "data_compon": [2, 126], "data_dict": 31, "data_id": [63, 69, 72], "data_in_prompt": [63, 72], "data_process": [4, 124, 126, 130, 144], "data_transform": 124, "databas": [6, 27, 42, 46, 130, 140, 141, 148, 150], "database_url": 27, "dataclass": [15, 19, 20, 21, 31, 38, 46, 51, 53, 63, 66, 69, 71, 72, 79, 83, 87, 88, 93, 98, 104, 109, 119, 123, 124, 125, 130, 135, 136, 143, 145, 149, 152, 158, 159], "dataclass_obj_from_dict": 38, "dataclass_pars": [19, 117, 137, 149], "dataclassformattyp": [19, 21, 31, 117], "dataclasspars": [19, 20, 117, 149, 161], "datacompon": [2, 4, 19, 20, 21, 32, 39, 41, 43], "dataformat": 46, "dataid": [63, 74, 79], "dataload": [63, 80, 82, 92, 123], "datapiplin": 124, "dataset": [38, 48, 49, 50, 51, 63, 66, 71, 73, 80, 81, 82, 92, 94, 95, 124, 130, 136, 137, 140, 142, 149, 150, 151, 154, 160], "dataset_item": [104, 158, 159], "datetim": 46, "david": [154, 161], "db": [111, 124, 130, 143], "db2": 34, "db_uri": [25, 143], "deal": [124, 135, 143], "debug": [0, 1, 63, 72, 80, 81, 82, 92, 96, 109, 124, 130, 131, 133, 135, 146, 147, 149, 156, 157], "debug_demo": [63, 80, 82, 158], "debug_report": [63, 80, 82], "debug_text_grad": [63, 80, 82, 104, 158, 159], "decemb": 161, "decid": [0, 1, 11, 14, 15, 17, 19, 20, 31, 32, 40, 45, 59, 61, 63, 80, 81, 108, 117, 127, 129, 133, 140, 142, 143, 145, 154, 161], "decis": [127, 142], "declar": [63, 66], "decod": [1, 17, 35, 44, 142], "decoded_output": 17, "decor": [31, 32, 68, 93, 104, 117, 120, 133, 134, 158, 159], "decreas": [125, 140], "decreaseembeddingdim": 125, "decreat": 125, "dedic": 101, "dedupl": [2, 3], "deep": [33, 127, 129, 131, 144], "deepcopi": 125, "deeper": 101, "deepmind": 79, "deepseek": [12, 17, 111], "deepseek_api_kei": 12, "deepseek_cli": 7, "deepseekcli": [7, 12], "def": [0, 1, 17, 19, 21, 32, 33, 37, 38, 46, 58, 61, 63, 68, 80, 81, 86, 104, 114, 115, 116, 117, 120, 124, 125, 127, 129, 133, 134, 135, 139, 142, 143, 145, 149, 158, 159, 161], "defail": 127, "defaul": 134, "default": [0, 1, 8, 9, 12, 14, 15, 16, 17, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 48, 50, 53, 56, 57, 58, 61, 63, 66, 68, 70, 72, 74, 76, 80, 81, 82, 86, 87, 88, 92, 93, 96, 98, 101, 104, 115, 116, 117, 120, 123, 124, 127, 129, 132, 133, 134, 135, 136, 137, 143, 144, 145, 149, 152, 158, 159], "default_adalflow_system_prompt": [35, 39, 41, 129, 139], "default_factori": [31, 46, 117], "default_judgement_queri": [58, 127], "default_llm_evaluator_prompt": 150, "default_model_kwarg": 38, "default_num_shot": [63, 73], "default_prompt_templ": [129, 139], "default_react_agent_system_prompt": [0, 1, 115], "default_task": [57, 61, 127], "default_train": 83, "defaultazurecredenti": [9, 95], "defaultllmjudg": [58, 61, 127, 129], "defens": 133, "defin": [0, 1, 2, 4, 9, 12, 19, 20, 22, 27, 28, 29, 31, 32, 33, 35, 36, 42, 43, 45, 63, 68, 70, 74, 77, 79, 80, 81, 86, 95, 103, 104, 109, 115, 116, 120, 123, 127, 129, 130, 133, 135, 136, 137, 142, 143, 144, 150, 152, 158, 159, 161], "defini": 143, "definit": [2, 4, 37, 45, 46, 115, 139, 142, 143, 145, 149], "definitli": 135, "degrad": 140, "degre": [135, 148], "del": 33, "delai": 95, "deleg": 149, "delet": [33, 34, 63, 74, 79, 103, 124], "delete_dialog_turn": 46, "delibr": [129, 145], "delta": [38, 136], "delux": 161, "demo": [32, 39, 63, 66, 71, 72, 74, 78, 80, 81, 82, 83, 104, 116, 120, 131, 136, 141, 149, 158, 159, 160, 161], "demo_class": 136, "demo_data_class": 136, "demo_data_class_input_map": 136, "demo_data_class_output_map": 136, "demo_optim": [80, 82], "demonstr": [17, 57, 58, 61, 63, 74, 79, 104, 109, 125, 126, 129, 135, 137, 141, 142, 143, 145, 149, 151, 152, 155, 156, 157, 158, 159], "demonstrate_embeddings_usag": 135, "demooptim": [63, 66, 71, 80, 81, 82, 104, 130, 149, 159], "demostr": [63, 66, 156], "deni": 101, "denomin": [22, 23], "denot": 132, "depend": [1, 4, 22, 23, 26, 38, 46, 101, 103, 108, 120, 127, 132, 135, 142, 143, 150, 152], "deploy": 103, "deriv": 145, "derrickson": 161, "desc": [19, 20, 31, 35, 63, 68, 69, 117, 127, 129, 134, 136, 137, 143, 149, 152], "descend": 32, "descent": [63, 71, 74, 79, 151], "describ": [31, 37, 63, 69, 137, 145, 149, 152, 161], "descript": [16, 19, 20, 21, 31, 38, 46, 63, 70, 74, 78, 83, 100, 103, 108, 111, 115, 117, 124, 127, 129, 130, 137, 139, 140, 142, 145, 149, 150, 151, 152, 161], "deseri": [32, 93, 98, 117, 131, 139, 143], "design": [31, 32, 37, 40, 46, 73, 101, 102, 109, 119, 124, 125, 130, 135, 138, 142, 144, 147, 150, 154], "desir": [19, 20, 21, 63, 74, 79, 129, 137, 139], "destin": [32, 131], "destruct": 161, "detail": [2, 4, 8, 11, 13, 14, 15, 16, 31, 33, 39, 57, 58, 61, 63, 72, 74, 79, 80, 82, 100, 101, 103, 104, 115, 117, 120, 124, 127, 129, 135, 137, 142, 145, 147, 149, 150, 152, 158, 159, 161], "detect": 86, "determin": [2, 4, 9, 102, 120, 127, 135, 136, 142], "determinist": 135, "detial": 101, "dev": [100, 103], "dev_titl": [49, 53], "develop": [2, 4, 22, 26, 101, 102, 104, 108, 109, 115, 119, 124, 126, 127, 129, 130, 131, 132, 134, 137, 139, 140, 142, 143, 144, 149, 152, 158, 159], "devic": 17, "df68": 124, "diagnos": [63, 80, 82, 109, 147, 149, 154], "diagnose_": [104, 158, 159], "diagnose_report": [63, 80, 82], "diagnose_train": [147, 154], "diagnost": [104, 158, 159], "diagram": [132, 139], "dialog": [6, 46, 124, 141], "dialog_turn": [46, 124], "dialog_turn_db": 124, "dialog_turns_as_docu": 124, "dialog_turns_input": 46, "dialogturn": [34, 46, 143], "dict": [0, 1, 2, 4, 8, 9, 11, 13, 14, 15, 16, 17, 19, 20, 21, 22, 25, 26, 29, 31, 32, 34, 36, 38, 39, 40, 41, 43, 45, 46, 51, 53, 55, 57, 58, 59, 61, 63, 66, 68, 71, 72, 73, 74, 76, 78, 79, 80, 81, 82, 83, 87, 88, 91, 93, 97, 98, 104, 114, 115, 116, 117, 124, 129, 135, 136, 137, 145, 149, 152, 158, 159, 161], "dict_exampl": 117, "dict_factori": 38, "dict_str": 137, "dict_to_yaml": 31, "dictat": 144, "dictionari": [2, 4, 9, 14, 15, 16, 31, 32, 36, 38, 39, 41, 43, 46, 63, 72, 80, 81, 91, 93, 98, 117, 124, 135, 137, 144, 145, 152], "did": [124, 127, 129, 134, 139, 140, 143, 145, 148, 149, 152], "diff": [75, 79, 116, 130], "differ": [0, 1, 6, 22, 23, 34, 46, 63, 69, 72, 73, 74, 79, 80, 81, 92, 101, 108, 116, 120, 125, 127, 129, 130, 131, 132, 133, 135, 139, 142, 143, 144, 145, 151, 161], "differen": 143, "differenti": [39, 63, 67, 75, 76, 109, 116, 143], "difficult": [145, 150], "dig": 127, "digit": [104, 158, 159], "dimens": [24, 25, 36, 46, 57, 91, 124, 125, 126, 127, 135, 143], "diminish": [22, 23], "dip": 115, "dir": 134, "direct": [32, 63, 72, 74, 79, 90, 104, 116, 120, 127, 130, 149, 158, 159], "directli": [2, 4, 11, 37, 38, 46, 57, 58, 61, 63, 71, 73, 101, 108, 115, 117, 118, 120, 124, 125, 127, 129, 139, 140, 143, 144, 145, 149, 161], "directori": [9, 40, 48, 53, 63, 80, 82, 86, 87, 88, 96, 100, 101, 104, 107, 108, 123, 134, 135, 158, 159], "disabl": [15, 63, 80, 81, 116, 142], "disable_backward": [63, 80, 82], "disable_backward_engin": [39, 63, 67, 68, 70, 74, 78, 80, 81], "disable_backward_engine_help": [63, 80, 81], "disable_backward_gradi": [63, 80, 82], "disappoint": 143, "discard": [63, 66, 74, 79], "disclos": [132, 139], "discord": 101, "discov": 161, "discuss": [101, 127, 144, 152], "disk": 143, "dispatch": [32, 45, 63, 80, 81], "displai": [95, 118, 134, 135], "disrupt": [124, 143], "distanc": [24, 27, 149], "distance_oper": 27, "distancetooper": [22, 27], "distil": 131, "distinct": [133, 144, 149], "distingush": 31, "distribut": 135, "div": 134, "dive": [101, 127, 140], "divers": [15, 63, 72, 127, 140, 150], "divid": [22, 23, 24, 101, 115, 127, 142, 144, 145, 150], "divide_by_thre": 33, "dividebythre": 33, "divis": [2, 4, 22, 23], "do": [6, 19, 21, 31, 38, 46, 59, 61, 63, 73, 74, 78, 86, 95, 96, 101, 103, 104, 107, 108, 114, 115, 116, 117, 124, 126, 127, 129, 131, 133, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 148, 149, 158, 159, 161], "do_sampl": 17, "doc": [2, 4, 8, 9, 11, 12, 13, 14, 16, 17, 22, 24, 29, 32, 42, 46, 59, 61, 100, 101, 117, 120, 124, 125, 126, 127, 133, 139, 143, 144, 145], "doc1": [2, 4, 144], "doc_index": 124, "doc_indic": [22, 23, 46, 124, 143, 161], "doc_len": 143, "doc_list": 150, "doc_qa": 32, "doc_scor": [22, 23, 46, 143, 161], "doc_str": 68, "docqa": [32, 120], "docstr": [100, 145], "doctor": [19, 21, 32, 120], "document": [2, 3, 4, 9, 11, 12, 15, 17, 22, 23, 24, 25, 26, 27, 28, 29, 34, 42, 44, 46, 57, 59, 61, 101, 102, 106, 108, 112, 116, 118, 120, 125, 126, 127, 129, 130, 141, 145, 148, 150, 154, 161], "document_map_func": [22, 23, 24, 26, 29, 42, 143], "document_splitt": 91, "documents_embed": 143, "documentsplitt": [46, 91, 126], "dodger": 132, "doe": [2, 3, 31, 32, 34, 38, 40, 43, 45, 58, 61, 68, 70, 91, 104, 116, 127, 135, 138, 140, 143, 150, 152, 158, 159], "doesn": [101, 142], "doesnt": 135, "dog": 135, "domain": [63, 74, 79, 127, 140], "doman": 140, "don": [21, 22, 23, 63, 72, 108, 129, 132, 133], "done": [116, 117, 133, 135, 142], "dont": [37, 108, 114, 116, 124, 132, 138], "dorianbrown": [22, 23, 143], "dot": 135, "dotenv": [107, 126, 142], "dotenv_path": [99, 126, 142], "doubl": [104, 115, 137, 145, 158, 159, 161], "doubt": 131, "down": [115, 143, 144], "download": [15, 108, 123], "downsid": [124, 127, 140, 143], "downstream": [125, 140], "downtown": 161, "draft": 101, "draw": [33, 63, 72, 127, 140], "draw_component_subgraph": [63, 72], "draw_graph": [63, 72, 155, 158], "draw_interactive_html_graph": [63, 72], "draw_output_subgraph": [63, 72], "drew": 127, "drink": 120, "drop": [133, 144], "drug": 161, "drum": [104, 158, 159], "dsp": 154, "dspy": [63, 66, 104, 114, 130, 154, 158, 159, 161], "dspy_retriev": 161, "dspyretriev": 161, "dtype": 24, "duc": [57, 127], "due": [127, 140, 143, 144, 145, 149], "duli": 127, "dummi": 108, "dump": [38, 145], "dumper": 38, "duplic": [63, 73, 101, 103, 135], "dure": [2, 4, 24, 33, 63, 67, 72, 103, 107, 124, 125, 126, 129, 130, 133, 134, 143, 144, 152], "dwivedi": 140, "dynam": [86, 130, 135, 141, 142, 144, 161], "dynamicdataclass": 31, "dynamicdataclassfactori": 31, "e": [2, 4, 15, 16, 22, 26, 63, 72, 73, 74, 79, 95, 103, 115, 127, 129, 132, 135, 140, 144, 145, 150], "e22084984bb9": 144, "e386e774d150": 144, "e3b48bcc": 124, "e636facc": 124, "e731": 161, "e7b617b2": [2, 4, 144], "each": [0, 1, 2, 4, 16, 17, 22, 23, 25, 31, 32, 33, 39, 46, 48, 53, 54, 59, 61, 63, 66, 70, 71, 72, 73, 74, 79, 80, 81, 83, 87, 88, 95, 101, 104, 111, 115, 116, 117, 124, 125, 126, 127, 129, 130, 131, 133, 135, 136, 138, 140, 142, 143, 144, 145, 147, 148, 149, 150, 158, 159, 160], "each_emb_data": 135, "each_emb_out": 135, "each_func": 135, "each_item": 135, "ear": 134, "earli": 102, "earsier": 116, "earth": [58, 61, 127], "eas": [46, 117, 127, 130, 131], "easi": [31, 33, 57, 63, 72, 96, 101, 104, 108, 109, 117, 120, 124, 127, 129, 131, 139, 142, 158, 159, 161], "easier": [109, 127, 135, 137, 138, 142, 145], "easili": [39, 63, 80, 81, 104, 108, 109, 120, 124, 125, 127, 130, 136, 137, 139, 143, 145, 152, 158, 159, 161], "eat": 17, "eb3ea13bd0d3": [51, 53], "ec0fc247ac8b": [2, 4, 144], "ec910402": 124, "echo": 141, "economi": [124, 143], "ecosystem": [109, 124, 143], "ed": 161, "edg": [63, 72, 116], "edibl": 17, "edit": [63, 74, 79, 129, 134], "editor": [104, 158, 159], "effcient": 31, "effecit": 149, "effect": [22, 23, 63, 66, 104, 115, 116, 124, 126, 140, 143, 144, 148, 149, 158, 159], "effective_measur": 83, "effici": [46, 63, 66, 100, 104, 109, 111, 127, 135, 140, 141, 142, 143, 144, 145, 148, 152, 158, 159], "effort": [34, 117, 130, 138], "eg": [95, 116], "eiffel": 134, "either": [0, 1, 9, 24, 38, 40, 43, 46, 63, 74, 79, 104, 107, 108, 117, 125, 129, 130, 134, 135, 137, 140, 143, 158, 159], "el": 124, "electr": [124, 143], "electron": [124, 143], "element": [41, 63, 74, 79, 83, 135, 145], "elif": [135, 145], "elimin": [140, 148], "els": [35, 39, 63, 72, 104, 115, 116, 129, 134, 135, 142, 145, 149, 158, 159, 161], "elsewher": 101, "em": 127, "emb": [4, 125, 135], "emb1": 135, "emb2": 135, "embed": [2, 3, 4, 9, 11, 14, 15, 16, 17, 18, 24, 25, 27, 36, 40, 46, 59, 61, 91, 124, 125, 126, 129, 130, 140, 141, 143, 144, 148, 161], "embedd": [2, 3, 9, 15, 16, 17, 24, 25, 27, 28, 32, 40, 46, 62, 91, 108, 111, 124, 129, 130, 140, 141, 143], "embedder_config": 36, "embedder_transform": 124, "embedderoutput": [9, 15, 16, 17, 18, 36, 40, 46, 124, 135], "embedderoutputtyp": 46, "embedderrespons": 126, "embedding_dim": [46, 125], "embedding_list": 135, "embeddingcollect": 135, "embeddingdatalist": 135, "embeddinglist": 135, "embeddingoutput": 135, "embeddings_arrai": 135, "embeddings_collect": 135, "embeddings_list": 135, "embrac": 109, "emiss": [124, 143], "emit": 31, "emphas": 152, "emploi": [127, 144], "empti": [6, 22, 26, 34, 35, 115, 129, 135, 136], "en": [8, 9, 15, 17, 22, 23, 59, 61, 125, 133, 139, 140, 143], "enabl": [15, 33, 39, 74, 77, 96, 102, 109, 114, 126, 133, 135, 141, 142, 143, 154, 161], "enable_consol": 96, "enable_fil": 96, "enable_library_log": 96, "enc": 140, "encapsul": [33, 142], "enclos": [19, 21, 115, 137, 145], "encod": [1, 2, 4, 35, 44, 129, 140, 143, 148], "encoding_format": [36, 91, 124, 125, 126, 135, 143], "encount": [15, 103], "encourag": [4, 33, 39, 93, 101, 127, 135, 140], "end": [19, 21, 33, 34, 38, 63, 72, 101, 104, 115, 117, 124, 130, 131, 132, 135, 136, 138, 140, 149, 151, 158, 159], "end_header_id": [132, 139], "end_of_assistant_step": 35, "end_of_context": 1, "end_of_exampl": 1, "end_of_output_format": 1, "end_of_sys_prompt": 145, "end_of_system_messag": [140, 149], "end_of_system_prompt": [1, 35, 104, 127, 158, 159], "end_of_text": [132, 139], "end_of_tool": 1, "end_of_us": [104, 127, 140, 145, 158, 159], "end_of_user_messag": 149, "end_of_user_prompt": 35, "end_of_user_queri": 1, "end_tim": [37, 135, 145], "endfor": [1, 41, 115, 139, 143, 145, 149], "endif": [1, 35, 41, 63, 74, 79, 104, 115, 127, 129, 134, 137, 139, 145, 149, 152, 158, 159], "endpoint": [9, 129], "energi": [124, 143], "enforc": [16, 63, 72, 115, 124, 129, 138], "engag": [117, 161], "engin": [32, 39, 63, 67, 68, 70, 72, 74, 75, 78, 79, 80, 81, 102, 104, 108, 109, 114, 116, 130, 131, 134, 136, 139, 140, 141, 148, 149, 158, 159], "enginelm": [63, 67], "england": 127, "english": [11, 143], "enhanc": [75, 96, 101, 120, 130, 140, 142, 144, 148, 152], "enhance_queri": 120, "enhancequerycompon": 120, "enjoi": 108, "enorm": 129, "enough": [101, 131, 154], "ensembl": 140, "enssenti": 152, "ensur": [9, 17, 24, 31, 33, 36, 37, 38, 41, 63, 66, 74, 78, 79, 80, 81, 101, 102, 103, 104, 107, 115, 117, 120, 125, 126, 127, 130, 132, 136, 138, 143, 149, 150, 158, 159], "entail": [57, 127], "enter": 141, "enti": 149, "entir": [63, 72, 104, 135, 143, 158, 159], "entiti": [91, 97, 109, 117, 131, 142, 149], "entity_cl": 97, "entity_config": 91, "entity_nam": 91, "entity_st": 91, "entitymap": 97, "entri": [135, 144], "enum": [27, 31, 38, 46, 57, 61, 83, 95, 98, 135, 145], "enum_cl": 38, "enumer": [32, 33, 135, 145], "env": [15, 99, 100, 107, 108, 125, 126, 142, 143], "env_api_key_nam": [12, 16], "env_exampl": 101, "environ": [4, 9, 16, 17, 38, 41, 99, 100, 101, 102, 108, 115, 124, 125, 126, 135, 142, 143], "environment": [124, 143], "eos_token_id": 17, "eot": 17, "eot_id": [132, 139], "epilon": [22, 23], "epsilon": [22, 23, 143], "equal": [17, 57, 58, 61, 143, 144], "equalis": 127, "equival": [32, 38, 102, 104, 124, 145, 158, 159], "error": [0, 1, 9, 11, 14, 15, 17, 22, 26, 31, 35, 38, 39, 40, 46, 57, 63, 74, 79, 80, 82, 86, 95, 96, 100, 103, 104, 115, 116, 117, 125, 127, 133, 135, 142, 145, 154, 158, 159], "error_messag": [46, 134], "error_onli": 86, "escap": [63, 72], "especi": [2, 3, 4, 31, 63, 74, 79, 86, 88, 101, 104, 116, 117, 120, 125, 127, 132, 137, 140, 143, 144, 146, 158, 159], "especial": 143, "espeic": 143, "essenc": 108, "essenti": [101, 102, 104, 124, 129, 135, 142, 143, 158, 159], "establish": [63, 74, 79, 108, 161], "estim": [16, 104, 158, 159], "estimate_token_count": [7, 16], "estimated_num_token": [46, 124, 126], "et": [127, 140, 148, 150], "etc": [32, 34, 38, 63, 68, 70, 73, 81, 94, 104, 108, 111, 116, 125, 127, 130, 135, 137, 140, 150, 158, 159], "euclidean": 24, "eval": [0, 1, 32, 37, 38, 45, 46, 57, 63, 72, 74, 78, 80, 81, 104, 116, 129, 136, 138, 140, 145, 147, 148, 150, 158, 159, 161], "eval_comp_id": 72, "eval_comp_nam": 72, "eval_fn": [63, 72, 74, 76, 78, 80, 81, 104, 114, 127, 149, 158, 159, 161], "eval_fn_desc": [63, 74, 78, 104, 114, 149, 158, 159, 161], "eval_input": [63, 72, 80, 81, 104, 149, 158, 159, 161], "eval_rslt": 127, "eval_scor": [74, 79, 147], "eval_system_prompt": [63, 74, 76], "evalfntotextloss": [63, 74, 76, 78, 80, 81, 104, 114, 136, 149, 158, 159, 161], "evalu": [32, 33, 38, 46, 50, 53, 54, 55, 57, 58, 63, 66, 74, 76, 78, 79, 80, 81, 82, 83, 101, 109, 114, 116, 120, 129, 131, 134, 140, 143, 144, 148, 149, 161], "evaluate_ast_nod": 38, "evaluate_one_sampl": [104, 114, 159], "evaluate_sampl": [63, 80, 81], "evaluation_criteria_str": 127, "evaluation_steps_str": 127, "evaluationmeasur": 127, "evaluationresult": [54, 55, 59, 61, 63, 80, 81, 83], "evalul": 127, "even": [2, 4, 19, 20, 21, 38, 59, 61, 101, 104, 117, 120, 125, 127, 129, 131, 135, 136, 137, 139, 140, 143, 144, 145, 148, 149, 154, 158, 159], "event": [37, 45, 85, 133], "event_typ": 85, "eventu": [117, 143, 147, 154], "ever": [135, 140], "everi": [34, 63, 80, 81, 102, 108, 129, 130, 131, 138], "everyth": [63, 74, 79, 101, 104, 115, 138, 158, 159], "eviron": 142, "exact": [2, 4, 59, 61, 127, 144, 150], "exact_match": [54, 61, 104, 149, 150, 158, 159], "exactli": [24, 32, 33, 54, 61, 104, 115, 129, 143, 150, 158, 159], "exam": 127, "examin": [22, 23], "exampl": [0, 1, 2, 4, 9, 11, 14, 15, 17, 19, 20, 21, 22, 23, 26, 27, 29, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 46, 48, 51, 53, 54, 58, 59, 61, 63, 68, 71, 72, 73, 74, 79, 80, 81, 82, 86, 91, 95, 96, 100, 103, 104, 107, 108, 114, 115, 116, 120, 123, 124, 125, 126, 127, 130, 132, 134, 136, 137, 138, 139, 140, 142, 143, 145, 149, 150, 152, 157, 158, 159, 161], "examplari": 101, "example1": 126, "example_funct": 38, "example_json": [31, 117], "example_str": [58, 117], "example_using_multipli": 115, "example_yaml": [31, 117], "examples_prompt": 41, "examples_str": [35, 41, 127, 129, 134, 137, 139], "examples_templ": 41, "excel": [63, 74, 79, 131], "except": [2, 4, 40, 63, 74, 79, 95, 104, 115, 125, 135, 145, 158, 159], "excerpt": 144, "excess": [57, 127], "exchang": 135, "exclud": [15, 19, 20, 21, 31, 32, 38, 45, 46, 63, 66, 117, 124, 137, 145], "exclude_field": [19, 21, 115, 137, 145], "exclude_input": [63, 66], "exclude_input_fields_from_bootstrap_demo": [63, 66, 71, 80, 82, 149], "excludetyp": [31, 117, 137], "exclus": [101, 117, 120], "execlud": 145, "execut": [0, 1, 2, 4, 33, 37, 38, 45, 115, 133, 135, 142, 144, 145], "execute_func": [45, 145], "execute_func_async": [45, 145], "execute_func_expr": [45, 145], "execute_func_expr_async": 45, "execute_func_expr_via_ev": [45, 145], "execute_func_expr_via_sandbox": [45, 145], "exist": [6, 41, 63, 74, 79, 103, 104, 110, 117, 127, 129, 131, 142, 143, 158, 159, 161], "exmplari": 17, "exp": 103, "expand": [108, 140, 141], "expans": [3, 140, 143, 148], "expect": [11, 15, 22, 23, 29, 34, 42, 43, 92, 127, 135], "expens": [104, 140, 143, 158, 159], "experi": [6, 22, 23, 34, 109, 120, 124, 131], "expertis": [63, 74, 79], "explain": [101, 108, 124, 127, 129, 133, 142, 150], "explan": [19, 20, 22, 23, 127, 129, 149], "explicitli": [31, 63, 74, 79, 117], "explor": [144, 149], "export": 9, "expos": [1, 35], "expr": [45, 145], "expr_or_fun": 45, "express": [37, 38, 45, 46, 104, 115, 145, 158, 159], "expressli": 161, "extend": [4, 12, 16, 33, 34, 37, 108, 109, 116, 124, 125, 143, 145, 149], "extens": [27, 32, 33, 108, 133, 144], "extern": [98, 126, 127, 137, 142, 143], "extract": [2, 4, 9, 19, 21, 38, 43, 63, 73, 108, 135, 137, 142, 144, 150], "extract_dataclass_typ": 38, "extract_first_boolean": 38, "extract_first_float": 38, "extract_first_int": 38, "extract_function_express": 38, "extract_json_str": 38, "extract_list_str": 38, "extract_new_vari": [74, 79], "extract_yaml_str": 38, "extrins": 127, "ey": 134, "f": [2, 3, 4, 22, 23, 32, 37, 93, 104, 114, 115, 120, 125, 126, 127, 129, 135, 139, 140, 142, 143, 145, 147, 150, 152, 158, 159, 161], "f1": [127, 140, 148, 150], "f179cc285499": 127, "f1_score": [54, 60, 61], "f2eddc77": 124, "f513": 124, "f98f": 124, "face": [36, 39, 101, 111, 125, 127, 129, 133], "facebookresearch": [24, 143], "facet": 143, "facilit": [142, 144], "fact": [57, 127, 134, 140, 142, 143, 148, 161], "factoid": [68, 161], "factor": [22, 23, 144], "factori": [31, 34, 46, 83, 87, 88], "factual": [57, 127, 143], "fahrenheit": 145, "fail": [0, 1, 22, 26, 46, 63, 66, 72, 74, 79, 86, 95, 103, 104, 116, 124, 125, 127, 129, 130, 131, 134, 135, 137, 142, 145, 149, 154, 158, 159], "failed_propos": [63, 74, 79], "failur": [63, 80, 81, 115, 116, 125, 129], "failure_message_to_backward": 116, "failure_message_to_backward_engin": 39, "failure_message_to_optim": 39, "fair": [57, 127], "fairli": 124, "faiss": [24, 34, 95, 107, 141, 143], "faiss_retriev": [22, 124, 143], "faissretriev": [22, 24, 91, 124], "faissretrieverdocumenttyp": 24, "fallback": [0, 1, 115], "fals": [0, 1, 2, 3, 15, 17, 19, 20, 21, 31, 32, 34, 38, 39, 42, 44, 46, 57, 58, 61, 63, 66, 68, 69, 71, 72, 73, 74, 78, 79, 80, 81, 82, 104, 114, 115, 127, 134, 135, 137, 145, 149, 150, 158, 159, 161], "famili": 115, "famou": 135, "fangkaijiao": 140, "fantast": 126, "far": [15, 101, 104, 124, 136, 158, 159], "farm": [124, 143, 161], "fast": [22, 23], "faster": [100, 143], "fastest": 140, "fastrag": 140, "favorit": 102, "fd11f12958b3": 124, "fdbc447d": 126, "feasibl": 117, "featur": [37, 101, 102, 120, 130, 132, 145], "feburari": [59, 61, 127], "fed": [145, 150], "feed": 140, "feedback": [15, 63, 69, 70, 74, 78, 79, 83, 101, 104, 116, 130, 140, 158, 159], "feel": [114, 127, 133, 140], "fetch": [22, 26, 27, 28, 34, 92, 101, 124, 135, 150], "fetch_item": 34, "fetch_transformed_item": 34, "fetched_dialog_turn": 124, "fever": 142, "few": [31, 39, 57, 66, 71, 72, 73, 80, 82, 109, 115, 116, 117, 127, 130, 135, 138, 139, 140, 142, 143, 145, 148, 149, 151, 152, 161], "few_shot": [104, 149, 159], "few_shot_demo": [104, 136, 149, 158, 159, 161], "few_shot_demo_debug_path": [63, 80, 82], "few_shot_optim": [104, 159], "few_shot_optimizer_": 130, "few_shot_templ": [104, 136, 158, 159], "few_shots_config": [63, 80, 82], "fewshot": 66, "fewshotconfig": [63, 80, 82], "field": [0, 1, 13, 19, 20, 21, 22, 23, 25, 31, 36, 38, 39, 45, 46, 63, 66, 115, 117, 123, 124, 125, 126, 127, 129, 132, 136, 137, 143, 145, 149, 152, 161], "field_nam": 31, "field_valu": 31, "fieldcondit": 143, "fieldnam": 93, "fieldtyp": 38, "fifa": 127, "fig": 149, "figur": [101, 144, 149], "file": [6, 17, 22, 23, 32, 34, 36, 42, 63, 72, 80, 82, 86, 87, 88, 93, 96, 99, 100, 101, 103, 104, 107, 108, 117, 125, 126, 129, 130, 133, 134, 135, 143, 147, 150, 154, 158, 159], "file_io": 120, "file_path": [87, 147], "filenam": [86, 87, 88, 96], "filepath": [32, 34, 63, 72, 86, 88, 124], "filesystem": 34, "fill": [15, 22, 23, 39, 41, 101, 108], "filter": [28, 34, 108, 139], "filter_fn": 34, "filtered_docu": 143, "final": [0, 1, 22, 23, 41, 46, 63, 68, 72, 74, 76, 79, 80, 82, 104, 115, 124, 126, 127, 129, 130, 135, 139, 140, 142, 143, 145, 148, 149, 150, 158, 159, 161], "final_model_kwarg": 135, "final_output": 161, "final_prompt": 139, "financ": 127, "financi": 127, "finardi": [127, 150], "find": [17, 37, 39, 44, 48, 53, 56, 63, 66, 80, 81, 101, 104, 107, 115, 124, 125, 126, 127, 129, 135, 136, 142, 143, 149, 150, 158, 159], "find_demo_paramet": 39, "find_instance_name_from_self": 37, "find_nearest_neighbor": 135, "findal": [104, 158, 159], "fine": [46, 140, 148, 158], "finer": 144, "finetun": [127, 140, 148], "finish": [1, 68, 115, 135, 142], "first": [2, 4, 8, 16, 24, 33, 34, 38, 83, 93, 101, 102, 104, 115, 124, 126, 127, 129, 130, 132, 133, 135, 136, 137, 138, 140, 142, 143, 144, 145, 149, 150, 154, 158, 159, 161], "firstli": 144, "fit": [24, 31, 36, 46, 63, 80, 82, 104, 115, 124, 130, 140, 144, 148, 149, 156, 157, 158, 159], "five": [101, 120, 127, 154], "fix": [101, 102, 103, 149, 154, 161], "fix_json_escaped_single_quot": 38, "fix_json_missing_comma": 38, "flagembed": 143, "flagopen": 143, "flare": 140, "flashrag": 140, "flat": [58, 61, 127], "flex": 134, "flexibl": [33, 34, 38, 46, 108, 117, 120, 127, 129, 131, 133, 135, 139, 140, 142, 145, 148, 149, 152], "flexibli": [130, 149], "float": [15, 17, 22, 23, 24, 25, 27, 36, 38, 43, 46, 54, 55, 56, 58, 59, 60, 61, 63, 66, 69, 71, 72, 73, 74, 78, 79, 80, 81, 82, 83, 91, 104, 115, 124, 125, 126, 127, 135, 136, 137, 143, 145, 149, 158, 159, 161], "float32": 24, "float_pars": 43, "float_str": 137, "float_str_2": 137, "float_str_3": 137, "float_str_4": 137, "floatpars": [43, 127], "floor": [154, 161], "flow": [124, 135, 142, 143, 144, 152], "fluenci": [57, 61, 127], "flute": [104, 158, 159], "fly": 127, "fn": [37, 38, 63, 72, 115, 142, 145], "fn_name": [63, 67], "fn_schema_str": [46, 142], "focu": [8, 124, 142, 149], "focus": [15, 127, 130, 144], "folder": [100, 108], "follow": [1, 4, 9, 11, 15, 18, 19, 21, 22, 26, 27, 31, 32, 33, 37, 39, 48, 53, 57, 63, 74, 79, 80, 81, 83, 95, 96, 100, 101, 103, 104, 107, 108, 115, 116, 117, 125, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 143, 145, 149, 150, 152, 158, 159, 161], "food": 17, "fool": 115, "footprint": [124, 143], "forc": 129, "forest": 135, "forev": 39, "fork": 101, "form": [2, 4, 46, 57, 61, 68, 70, 76, 104, 109, 116, 117, 124, 127, 135, 139, 140, 143, 144, 148, 158, 159, 161], "format": [1, 2, 4, 6, 9, 13, 14, 16, 17, 19, 20, 21, 22, 23, 24, 27, 31, 32, 35, 38, 39, 40, 42, 46, 63, 71, 72, 74, 79, 91, 96, 98, 100, 104, 115, 124, 125, 127, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 149, 150, 152, 158, 159, 161], "format_chat_history_str": 124, "format_class_str": [31, 117], "format_example_str": [31, 117], "format_instruct": [19, 21, 137, 145], "format_str": 31, "format_typ": [19, 20, 21, 31, 117, 137, 149, 161], "format_vector_search_queri": [22, 27], "former": 127, "formrecogn": 95, "formul": [140, 148], "forward": [0, 1, 32, 33, 37, 39, 42, 44, 45, 63, 68, 70, 72, 74, 76, 77, 78, 80, 81, 114, 116, 120, 136, 138, 161], "fossil": [124, 143], "found": [37, 38, 58, 59, 61, 63, 74, 76, 95, 104, 123, 124, 127, 143, 149, 150, 158, 159], "four": [40, 63, 72, 74, 79, 104, 115, 130, 143, 145, 158, 159], "foward": [116, 161], "frac": [22, 23, 140], "framework": [31, 33, 59, 61, 101, 102, 104, 108, 109, 127, 130, 135, 140, 142, 158, 159], "franc": [31, 38, 115, 117, 129, 134, 135, 139], "francisco": 145, "frank": 140, "franklin": 115, "fratern": 161, "free": [15, 124, 140, 143, 161], "frequenc": [22, 23], "frequency_penalti": [104, 158, 159], "frequent": [22, 23], "fresh": 143, "friendli": [17, 102, 127], "from": [0, 1, 2, 3, 4, 9, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 48, 53, 57, 58, 61, 63, 66, 68, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 86, 87, 91, 92, 93, 95, 96, 99, 100, 101, 102, 104, 107, 108, 109, 115, 116, 119, 124, 125, 126, 127, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 154, 158, 159, 161], "from_config": [32, 36, 39, 129, 143], "from_default": 142, "from_dict": [7, 9, 14, 15, 16, 19, 21, 22, 23, 31, 32, 41, 42, 46, 63, 72, 93, 117, 137, 139, 143, 145, 152], "from_dict_to_json": 38, "from_dict_to_yaml": 38, "from_funct": [0, 1, 46, 115, 145], "from_json": [31, 117], "from_json_to_dict": 38, "from_pretrain": 17, "from_respons": [63, 69], "from_response_component_id": [63, 69, 72], "from_response_id": [63, 69], "from_yaml": [31, 117], "from_yaml_to_dict": 38, "front": 127, "fruit": [136, 158], "frustrat": [131, 134], "fsspec": 124, "fuel": [124, 143], "full": [46, 104, 108, 109, 129, 131, 135, 140, 143, 144, 150, 158, 159], "full_respons": [63, 68, 72, 80, 81, 104, 149, 158, 159, 161], "full_trac": [63, 72], "fulli": [63, 67], "fullwiki": 150, "fun": [32, 46, 68, 108, 134], "fun_compon": [32, 120], "fun_expr": 46, "fun_to_grad_compon": 68, "func": [38, 45, 46, 95, 115, 135, 145], "func_desc": [46, 115, 145], "func_doc_str": 68, "func_expr": 145, "func_list": 135, "func_nam": [46, 115, 145], "func_output": 145, "func_paramet": [46, 115, 145], "func_pars": 145, "func_to_compon": [32, 120, 158, 159], "func_to_data_compon": [32, 104], "func_tool": [0, 1, 145], "funccompon": 32, "funcdatacompon": 32, "funciton": 145, "funcnam": [115, 145], "function": [0, 1, 2, 3, 4, 8, 9, 12, 15, 16, 17, 18, 22, 23, 29, 31, 32, 34, 37, 39, 40, 41, 45, 46, 47, 50, 52, 60, 62, 63, 68, 69, 70, 72, 74, 77, 78, 79, 86, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 104, 108, 109, 114, 115, 116, 117, 120, 124, 125, 129, 130, 131, 133, 135, 136, 137, 138, 140, 141, 142, 143, 144, 150, 152, 158, 159, 161], "function_arg": 145, "function_definit": [45, 145], "function_expr": [38, 145], "function_nam": [96, 145], "function_respons": 145, "function_to_cal": 145, "functiondefinit": [37, 45, 46, 115, 145], "functionexperssiontofunct": 45, "functionexpress": [0, 1, 37, 45, 46, 115], "functionoutput": [37, 45, 46, 145], "functiontool": [0, 1, 37, 45, 115, 142], "fundament": [102, 108, 109, 120, 131], "fungradcompon": 68, "further": [2, 4, 36, 104, 108, 109, 115, 117, 120, 125, 127, 129, 130, 134, 135, 137, 143, 144, 158, 159], "futur": [2, 4, 102, 108, 115, 116, 125, 129, 131, 133, 135, 140, 143, 144], "futuredata": 127, "fuzzi": [127, 143, 150], "fuzzy_match": [54, 61, 114, 150, 161], "g": [2, 4, 15, 16, 22, 26, 57, 63, 72, 73, 74, 79, 103, 115, 127, 132, 135, 140, 144, 145, 148, 150], "g_evalu": 127, "ga": [124, 143], "gain": [68, 70], "game": [124, 127], "gamma": 161, "gao": 140, "gap": [40, 131, 134, 149], "garlic": 136, "garret": 154, "gase": [124, 143], "gate": 17, "gather": [37, 101, 135, 136, 139, 145], "gather_trainer_st": [63, 80, 82], "gemini": 13, "gemma": [14, 17], "gen": 129, "genai": [13, 109, 127, 131, 149], "genear": [63, 71, 140, 143], "geneat": 85, "gener": [0, 1, 2, 4, 9, 13, 15, 16, 17, 19, 20, 21, 31, 32, 33, 34, 37, 38, 40, 42, 46, 54, 57, 58, 61, 62, 63, 68, 70, 71, 72, 73, 74, 76, 80, 81, 82, 86, 87, 88, 92, 93, 101, 102, 103, 104, 108, 109, 111, 114, 115, 117, 120, 124, 125, 126, 127, 130, 131, 132, 133, 134, 135, 136, 137, 139, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 154, 158, 159, 160, 161], "generate_function_call_expression_from_cal": [38, 145], "generate_node_html": [63, 72], "generate_readable_key_for_funct": 38, "generateansw": 149, "generatecontentrespons": 13, "generaterespons": 15, "generation_nod": 116, "generativeai": [95, 107], "generator2": 134, "generator2_cal": 134, "generator_2": 134, "generator_2_cal": 134, "generator_cal": 134, "generator_call_logg": [86, 129, 134], "generator_evalu": 150, "generator_nam": 88, "generator_names_to_fil": 87, "generator_out": [116, 161], "generator_output": [63, 83, 104, 158, 159], "generator_state_logg": 129, "generator_state_trac": [88, 134], "generatorcalllogg": [87, 129, 134, 147], "generatorcallrecord": 87, "generatorlogg": 86, "generatoroutput": [8, 9, 13, 14, 15, 16, 17, 22, 26, 39, 40, 46, 63, 68, 70, 80, 81, 86, 87, 104, 115, 116, 124, 133, 135, 149, 158, 159, 161], "generatoroutputtyp": 39, "generatorstatelogg": [88, 129, 134], "generatorstatesrecord": 88, "genereratoroutput": 161, "genet": [144, 149], "genreat": 116, "genuin": 127, "geograph": 149, "get": [2, 4, 16, 17, 22, 23, 31, 33, 34, 38, 39, 41, 42, 46, 57, 58, 61, 63, 69, 87, 96, 97, 103, 104, 115, 116, 117, 120, 124, 127, 133, 135, 137, 140, 142, 143, 144, 145, 149, 150, 152, 158, 159, 161], "get_adalflow_default_root_path": 94, "get_al": 97, "get_all_messages_cont": [7, 16, 135], "get_average_embed": 135, "get_bearer_token_provid": 95, "get_cache_path": 39, "get_cal": 87, "get_chat_history_str": 46, "get_context_index": 45, "get_current_script_and_lin": 96, "get_current_weath": 145, "get_data_class_schema": [38, 152], "get_data_key_fun": [63, 73], "get_dataclass_schema": 38, "get_default_task_instruct": [48, 53], "get_devic": [7, 17], "get_dialog_turn": 46, "get_enum_schema": 38, "get_examples_str": [19, 20, 137], "get_first_message_cont": [7, 8, 9, 16, 135], "get_fun_schema": [37, 38, 145], "get_grad_fn": [63, 72], "get_gradient_and_context_text": [63, 72], "get_gradients_component_schema": [63, 72], "get_gradients_nam": [63, 72], "get_gradients_str": [63, 72], "get_gt": [63, 72], "get_input_field": 31, "get_input_format_str": [19, 20, 137], "get_input_str": [19, 20, 137, 149], "get_jinja2_environ": 41, "get_log_loc": [87, 88, 147], "get_logg": [63, 80, 82, 96, 133, 158], "get_model_arg": 46, "get_next_ord": 46, "get_openai_embed": 135, "get_output_field": 31, "get_output_format_str": [19, 20, 137, 149, 161], "get_param_info": [63, 72], "get_prob": [7, 16, 135], "get_prompt": 39, "get_prompt_data": [63, 72], "get_prompt_vari": 41, "get_respons": 135, "get_short_valu": [63, 72], "get_string_token": 44, "get_subcompon": 32, "get_supporting_sent": 150, "get_task_desc": 31, "get_task_desc_str": [19, 20, 137, 149], "get_top_k_indices_scor": 38, "get_transformed_data": 34, "get_transformer_kei": 34, "get_type_schema": 38, "getdefaultencod": [1, 35], "getlogg": 133, "geval": [57, 61, 127], "gevaljudgeevalu": [57, 61, 127], "gevalllmjudg": [57, 61, 127], "gevalmetr": [57, 61], "git": [100, 101, 103, 108, 141], "github": [24, 100, 101, 103, 113, 134, 141, 149], "github_chat": 141, "githubasset": 134, "gitignor": 101, "give": [15, 63, 72, 102, 104, 115, 116, 120, 129, 131, 136, 143, 145, 154, 158, 159], "given": [1, 16, 22, 23, 24, 25, 32, 33, 35, 38, 42, 57, 63, 67, 68, 71, 74, 79, 85, 88, 91, 92, 115, 127, 130, 132, 135, 140, 142, 143, 145, 148, 149, 150], "glad": 103, "global": [95, 116, 147], "go": [15, 63, 72, 101, 102, 103, 104, 108, 131, 134, 140, 142, 148, 154, 158, 159], "goal": [102, 127, 129, 142, 144, 145], "goe": 131, "gold_titl": [51, 53, 161], "good": [22, 23, 57, 63, 74, 79, 101, 104, 117, 120, 124, 127, 136, 140, 145, 149, 158, 159], "googl": [13, 17, 58, 59, 61, 79, 95, 100, 101, 107, 126, 127, 134, 135, 139, 140], "google_api_kei": [100, 107], "google_cli": [7, 135], "google_genai": 46, "google_generativeai": 95, "googlegenaicli": [7, 13, 135], "got": [127, 143], "gov": [127, 140, 148], "govtech": [127, 140], "govtext": [127, 140, 148], "gpt": [0, 1, 9, 16, 32, 38, 39, 86, 115, 120, 124, 127, 129, 132, 135, 143, 144, 145, 151], "gpt_3_model": [104, 154, 158, 159, 161], "gpt_4o_model": [104, 149, 158, 159, 161], "gpt_model_kwarg": 115, "gpu": [24, 95], "grab": 115, "grad": [68, 77, 79, 104, 127, 130, 136, 149, 158, 159, 161], "grad_component_onli": 32, "grad_fn": [63, 72], "gradcompon": [32, 37, 39, 42, 45, 63, 68, 70, 74, 77, 80, 81, 116, 151, 161], "gradid": [63, 74, 78, 130], "gradient": [68, 70, 71, 72, 74, 76, 77, 78, 79, 80, 81, 109, 130, 136, 138, 140, 146, 151, 157], "gradient_context": [63, 74, 78], "gradient_respons": 39, "gradientcontext": [63, 69, 74, 78], "graesser": 115, "graham": 140, "graient": [63, 72], "grammar": [57, 127], "grammarli": [63, 74, 79], "grammat": 144, "granular": [144, 149], "grape": [136, 158], "graph": [63, 72, 80, 82, 104, 109, 116, 124, 130, 143, 158, 159, 161], "graphstat": 116, "gre": 127, "great": [2, 4, 102, 117, 126, 127, 130, 133, 134], "greatli": 102, "green": [96, 133], "greenhous": [124, 143], "greet": 46, "gregori": [154, 161], "groq": [14, 46, 95, 107, 111, 115, 129], "groq_api_kei": [100, 107], "groq_client": [7, 135], "groqapi": 135, "groqapicli": [7, 14, 32, 46, 115, 129, 135, 142], "ground": [54, 55, 58, 59, 61, 63, 74, 78, 80, 81, 104, 108, 114, 116, 124, 127, 143, 150, 158, 159, 161], "ground_truth": [63, 74, 78], "grounth": [59, 61], "group": [33, 46, 100, 101, 144], "grow": 102, "growth": [124, 143], "gt": [59, 61, 63, 72, 74, 78, 79, 80, 81, 104, 116, 133, 143, 159, 161], "gt_answer": [54, 58, 61, 127], "gt_answer_str": 127, "gt_context": [59, 61], "gt_context_sentence_list": 150, "gt_score": 127, "gte": [17, 125, 135, 143], "guid": [9, 12, 16, 63, 72, 74, 79, 100, 101, 104, 129, 130, 141, 142, 145, 158, 159], "guidelin": [100, 101, 127, 140, 150], "guo": [127, 140], "guu": 140, "ha": [22, 29, 31, 34, 38, 39, 42, 57, 59, 61, 63, 73, 74, 79, 80, 81, 86, 88, 98, 101, 104, 107, 108, 109, 115, 116, 117, 124, 127, 133, 136, 138, 140, 143, 144, 145, 149, 150, 152, 154, 158, 159, 161], "had": [126, 127, 161], "hailin": 140, "hajishirzi": 140, "half": 127, "halluci": 143, "hallucin": [57, 127, 130, 140, 148], "han": 140, "hand": [63, 80, 81, 127, 143, 161], "handi": 139, "handl": [6, 9, 11, 12, 14, 15, 16, 17, 21, 22, 26, 31, 32, 38, 40, 45, 63, 69, 80, 81, 92, 95, 104, 111, 115, 116, 117, 123, 124, 125, 127, 129, 130, 134, 135, 137, 140, 142, 143, 145, 149, 152, 158, 159], "handle_one_loss_sampl": [104, 114, 159], "handle_one_task_sampl": [104, 114, 159], "handle_streaming_respons": [7, 16], "handler": [1, 35, 133], "happen": 116, "happi": 115, "hard": [48, 53, 57, 63, 72, 127, 131], "harri": 152, "hash": [63, 80, 82], "hash_text": 90, "hash_text_sha1": 90, "hat": 129, "have": [1, 8, 9, 11, 15, 17, 22, 23, 24, 31, 32, 33, 36, 37, 38, 39, 40, 46, 57, 59, 61, 63, 69, 70, 72, 73, 74, 76, 78, 79, 80, 81, 86, 96, 100, 101, 104, 107, 108, 109, 115, 116, 117, 120, 124, 125, 126, 127, 129, 130, 132, 133, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 147, 149, 150, 154, 158, 159, 160, 161], "haven": 101, "hazard": [124, 143], "hd": [16, 129], "he": [127, 140, 152, 161], "head": [115, 127, 136], "headach": 120, "healthcar": 127, "healthi": 109, "heap": [57, 127], "hearti": 17, "heat": 115, "heavi": 131, "height": [134, 137], "helicopt": 17, "hello": [2, 4, 22, 23, 34, 46, 96, 129, 132, 133, 144], "helm": 127, "help": [2, 3, 4, 19, 20, 21, 31, 35, 37, 41, 46, 63, 74, 79, 80, 81, 95, 100, 101, 104, 109, 115, 116, 117, 118, 120, 124, 129, 130, 131, 132, 133, 134, 136, 137, 139, 140, 143, 144, 145, 146, 148, 149, 150, 158, 159, 161], "helper": [3, 18, 32, 41, 91, 135, 143], "henc": [142, 152], "hendryck": 127, "here": [2, 4, 11, 13, 14, 15, 17, 32, 37, 40, 45, 46, 50, 53, 62, 63, 68, 73, 80, 81, 101, 102, 103, 104, 106, 107, 108, 112, 114, 115, 116, 117, 120, 124, 127, 129, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 149, 150, 152, 158, 159, 161], "hero": 131, "hf_token": [17, 100, 107], "hi": [46, 127, 152, 161], "hierarchi": 130, "high": [16, 108, 109, 127, 131, 136, 140, 143, 148], "higher": [15, 63, 66, 74, 78, 131, 136, 143, 144], "highest": [57, 63, 72, 101, 104, 127, 140, 158, 159], "highli": [4, 34, 102, 108, 127, 131, 134, 135, 143, 150], "highlight": [63, 72], "him": [127, 161], "hint": [38, 117, 129, 145], "histor": 124, "histori": [1, 6, 35, 46, 63, 68, 74, 79, 88, 115, 124, 129, 130, 134, 135, 139, 141, 142], "historyprompt": [63, 74, 79], "hit": [127, 140, 148], "hitrat": 127, "hodgson": 127, "hold": [33, 46, 127], "homepag": [22, 23], "honestli": 137, "hook": [101, 108, 133], "hop": [127, 142, 147], "hope": [102, 127], "host": [15, 16, 100, 143], "hotel": 161, "hotpot": [54, 61], "hotpot_qa": [150, 154, 161], "hotpotqa": [49, 51, 53, 54, 61, 127, 142, 150, 151, 160], "hotpotqadata": [51, 53, 114, 161], "hotpotqaragad": 114, "hour": 127, "hous": [101, 154, 161], "how": [2, 4, 9, 12, 15, 17, 22, 23, 24, 26, 31, 32, 33, 39, 45, 46, 57, 58, 61, 63, 68, 74, 79, 80, 81, 100, 103, 104, 109, 115, 116, 117, 123, 124, 125, 127, 129, 130, 132, 133, 135, 137, 139, 140, 141, 142, 143, 145, 148, 149, 150, 151, 152, 154, 158, 159, 161], "howev": [4, 102, 115, 120, 124, 127, 131, 132, 133, 136, 137, 139, 140, 143, 145, 148], "href": 134, "html": [2, 4, 59, 61, 63, 72, 117, 127, 133, 134, 137, 143, 144], "http": [0, 1, 8, 9, 11, 12, 13, 14, 15, 16, 17, 22, 23, 24, 28, 33, 50, 53, 57, 59, 61, 79, 100, 101, 115, 117, 125, 127, 129, 133, 134, 139, 140, 141, 143, 145, 148, 158, 159], "hub": [17, 127], "hug": [111, 127], "huggingfac": [17, 50, 53, 92, 117, 125, 133, 135, 143], "huggingfaceh4": 17, "hum": 149, "human": [17, 116, 117, 127, 129, 143, 149, 161], "humanalign": 127, "humanev": 127, "humor": 134, "hundr": 143, "hurt": 140, "hydrat": 120, "hydro": [124, 140, 143], "hypernetwork": 108, "hyperparam": [63, 72, 83], "hyperparamet": [63, 72, 116, 140, 143, 148], "hyperparametr": 116, "hyperparmet": [140, 143], "hypothesi": 142, "i": [0, 1, 2, 3, 4, 6, 8, 9, 12, 13, 15, 16, 17, 19, 21, 22, 23, 24, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 53, 54, 57, 58, 59, 61, 62, 63, 66, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 91, 92, 93, 95, 96, 100, 101, 102, 103, 104, 106, 107, 109, 112, 114, 115, 116, 117, 118, 119, 120, 123, 124, 125, 126, 127, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 152, 154, 156, 157, 158, 159, 161], "ibuprofen": 120, "icc": 161, "icl": [63, 66, 73, 104, 130, 131, 136, 140, 148, 158, 159], "id": [0, 1, 2, 4, 17, 39, 42, 44, 46, 51, 53, 59, 61, 63, 66, 68, 69, 70, 71, 72, 74, 78, 79, 83, 100, 104, 114, 116, 124, 126, 136, 137, 138, 144, 147, 149, 154, 158, 159, 161], "ideal": [2, 4, 127, 139, 144], "ident": [9, 63, 74, 79, 95], "identifi": [34, 38, 46, 57, 63, 74, 78, 88, 123, 127, 135, 136, 138, 149], "idf": [22, 23, 124, 143], "idx": [32, 33, 135, 145], "ifram": [118, 146, 155, 156, 157], "igh": 144, "ik": [2, 4], "illicit": [63, 74, 79, 161], "illustr": [2, 4, 142, 144], "imag": [16, 125, 134, 140, 143], "image_gener": [16, 46, 129], "imagegener": 129, "img": 134, "immedi": 32, "impact": [2, 4, 15, 22, 23, 73, 124, 142, 143], "implement": [1, 2, 4, 11, 14, 15, 17, 22, 23, 33, 39, 40, 42, 57, 59, 61, 63, 68, 76, 92, 101, 104, 115, 116, 125, 135, 140, 143, 144, 149, 150, 152, 158, 159, 161], "import": [0, 1, 2, 4, 9, 11, 17, 19, 21, 22, 23, 31, 32, 37, 38, 41, 46, 57, 63, 68, 70, 72, 80, 82, 86, 95, 96, 101, 104, 107, 108, 115, 116, 117, 120, 124, 125, 126, 127, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 149, 150, 152, 158, 159, 161], "import_path": 95, "importerror": 95, "impress": 127, "improv": [22, 23, 63, 74, 79, 101, 116, 127, 129, 130, 134, 135, 140, 143, 144, 148, 149, 158], "improving_rag": 140, "in_context_exampl": [63, 74, 79], "inabl": 38, "inact": 137, "inc": [100, 101, 134, 141], "includ": [0, 1, 2, 4, 6, 16, 19, 20, 21, 22, 23, 27, 31, 32, 33, 34, 38, 40, 42, 46, 57, 63, 71, 72, 91, 96, 100, 101, 103, 108, 111, 115, 116, 120, 123, 124, 127, 130, 135, 137, 139, 140, 141, 142, 143, 144, 145, 147, 149, 150, 151, 152, 161], "include_demo": [63, 72], "include_field": [19, 21], "includetyp": [31, 137], "includng": 108, "incomplet": 38, "inconsist": [57, 63, 74, 79, 127], "incorpor": 127, "incorrect": [114, 129, 140], "incorrectansw": 127, "increa": 124, "increas": [15, 22, 23, 63, 72, 124, 127, 140, 143], "increasingli": 127, "increment": [63, 80, 82, 103], "increment_steps_from_last_improv": [63, 74, 79], "incress": 145, "incud": [63, 72], "indent": [19, 21, 38, 137], "independ": 135, "index": [1, 4, 17, 22, 23, 24, 26, 28, 29, 33, 34, 41, 42, 46, 63, 73, 74, 79, 80, 81, 92, 101, 114, 115, 124, 125, 127, 135, 139, 140, 143, 145, 148, 149, 150], "index_kei": [42, 143], "index_path": 34, "indexflatip": 24, "indexflatl2": 24, "indic": [22, 25, 26, 27, 31, 38, 46, 92, 101, 104, 127, 129, 135, 143, 149, 158, 159], "indirectli": 127, "individu": [104, 135, 149, 158, 159], "individualn": [104, 158, 159], "industri": [101, 130, 140, 148], "inf": [24, 136], "infanc": 131, "infer": [0, 1, 13, 17, 22, 24, 27, 28, 29, 32, 33, 36, 42, 43, 45, 46, 63, 68, 80, 81, 101, 116, 125, 127, 140, 161], "infer_bge_reranker_bas": [7, 17], "infer_gte_base_embed": [7, 17], "infer_llm": [7, 17], "infinit": 15, "influenc": [15, 22, 23, 144], "info": [13, 96, 133], "inform": [0, 1, 31, 44, 57, 61, 63, 70, 83, 100, 101, 104, 107, 108, 113, 115, 120, 127, 129, 135, 140, 142, 143, 144, 149, 150, 152, 154, 158, 159], "infrastructur": [124, 143], "ingest": [4, 108], "ingestionpipelin": 108, "inherit": [31, 40, 101, 108, 116, 124, 143, 154, 161], "init": [96, 161], "init_async_cli": [7, 8, 9, 11, 14, 15, 16, 40, 135], "init_llm_cli": [7, 17], "init_model": [7, 17], "init_reranker_cli": [7, 17], "init_sync_cli": [7, 8, 9, 11, 13, 14, 15, 16, 17, 40, 135], "initi": [9, 16, 17, 22, 23, 24, 26, 28, 29, 40, 41, 42, 63, 66, 71, 73, 80, 82, 96, 104, 115, 124, 127, 129, 135, 137, 139, 140, 142, 143, 145, 149, 150, 152, 158, 159], "initial_valid": [63, 80, 82], "initvar": 46, "inject": 133, "innatur": 140, "inner": [24, 27], "inner_product": [22, 27], "input": [0, 1, 2, 3, 6, 8, 9, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 31, 32, 33, 35, 36, 37, 39, 40, 42, 43, 44, 46, 54, 57, 61, 63, 66, 68, 69, 72, 74, 77, 78, 79, 80, 81, 83, 87, 101, 104, 108, 115, 116, 117, 123, 124, 125, 126, 127, 129, 130, 132, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 149, 152, 158, 159, 161], "input_arg": [63, 68, 72, 104, 116, 138, 158, 159], "input_data": [116, 149], "input_field": [31, 137], "input_format": 35, "input_format_str": 35, "input_map": 136, "input_output": [63, 69], "input_prompt_kwarg": 39, "input_queri": 115, "input_str": [1, 19, 20, 32, 35, 57, 61, 86, 104, 115, 120, 124, 127, 129, 134, 135, 136, 139, 140, 143, 145, 149, 158, 159], "input_templ": 127, "input_text_list": 135, "input_typ": [9, 12, 16], "inputfield": 149, "inquiri": [101, 149], "insert": [33, 34], "insid": [2, 4, 33, 37, 63, 80, 81, 101, 116, 144], "inspir": [33, 67, 114], "instal": [7, 24, 95, 96, 100, 101, 106, 108, 124, 125, 127, 141, 143], "install_messag": 95, "instanc": [9, 14, 15, 16, 19, 21, 25, 28, 31, 32, 37, 38, 39, 41, 63, 69, 80, 82, 86, 98, 108, 115, 126, 127, 135, 136, 137, 138, 145, 150, 152], "instanti": [32, 91, 95, 117, 129, 135], "instead": [2, 4, 11, 15, 16, 31, 32, 38, 39, 57, 58, 61, 76, 108, 116, 117, 124, 125, 129, 131, 140, 144, 145, 149], "instruct": [1, 9, 17, 19, 20, 21, 22, 26, 31, 57, 63, 68, 72, 74, 79, 101, 104, 108, 109, 115, 117, 127, 129, 130, 136, 137, 138, 140, 144, 145, 149, 152, 158, 159], "instruction_to_backward_engin": [63, 72], "instruction_to_optim": [63, 72, 74, 79, 136], "instructur": 145, "instrument": [104, 158, 159], "int": [0, 1, 2, 3, 4, 11, 13, 16, 17, 22, 23, 24, 25, 26, 27, 28, 29, 31, 33, 34, 36, 38, 42, 43, 44, 46, 49, 50, 51, 53, 63, 66, 69, 72, 73, 74, 79, 80, 81, 82, 83, 92, 96, 104, 115, 116, 117, 124, 125, 135, 137, 142, 143, 145, 149, 152, 158, 159, 161], "int32": 13, "int_pars": 43, "int_str": 137, "int_str_2": 137, "int_str_3": 137, "int_str_4": 137, "integ": [38, 43, 104, 137, 158, 159], "integr": [2, 4, 7, 8, 9, 11, 13, 14, 15, 16, 17, 18, 92, 108, 114, 124, 125, 127, 130, 131, 135, 140, 142, 143], "intellab": 140, "intellig": [116, 127, 129], "intens": [127, 140, 143, 148], "intent": [104, 158, 159], "intepret": 130, "inter": 161, "interact": [9, 20, 21, 31, 46, 63, 72, 104, 109, 117, 129, 130, 131, 135, 137, 138, 140, 142, 145, 152, 158, 159], "interchang": 145, "interest": [124, 140], "interfac": [21, 37, 38, 39, 40, 68, 70, 81, 104, 120, 125, 126, 129, 130, 131, 141, 158, 159], "intergr": [130, 131, 143], "interleav": [115, 132, 142], "intermedi": [63, 72, 116, 124, 142], "intermedia": 136, "intern": [16, 31, 32, 39, 45, 63, 68, 80, 81, 95, 98, 115, 127, 131, 135, 140, 142, 145], "internlm2": 15, "interpret": [2, 4, 109, 129, 130, 137, 140, 148], "interv": [56, 127], "intial": [129, 140], "intpars": 43, "intrins": 127, "intro": 8, "introduc": [2, 4, 104, 115, 116, 127, 130, 139, 140, 144, 148, 158, 159, 161], "introducesmock": 127, "introduct": 16, "intuit": [2, 4], "invalid": [135, 154], "invalid_api_kei": 129, "invalid_request_error": 129, "invent": 161, "inventor": 161, "invers": [22, 23], "invest": [124, 143], "investig": [129, 152], "invok": [31, 38, 46, 85, 116, 143], "involv": [101, 127, 144], "io": [15, 32, 36, 59, 61, 133], "ipynb": [101, 134], "irrelev": [57, 127, 140, 143], "is_async": 37, "is_dataclass_inst": 38, "is_default_copi": [63, 69], "is_irrelev": 140, "is_key_in_templ": 41, "is_norm": [38, 46, 125], "is_pick": 120, "is_pickl": 32, "is_potential_dataclass": 38, "is_relev": 140, "is_running_in_event_loop": 37, "is_support": 140, "is_teach": [63, 66, 72], "isaac": 161, "isinst": [135, 161], "isol": 101, "isrel": 140, "issu": 103, "issue_numb": 101, "issue_titl": 101, "issup": 140, "isus": 140, "itali": 127, "item": [1, 34, 55, 57, 61, 63, 80, 81, 101, 104, 124, 134, 135, 136, 143, 145, 158, 159], "item1": 43, "item2": 43, "iter": [32, 33, 35, 63, 71, 74, 79, 80, 82, 101, 109, 127, 131, 135, 142], "its": [2, 4, 22, 23, 32, 38, 42, 45, 46, 63, 69, 70, 72, 74, 79, 80, 82, 86, 87, 88, 91, 101, 104, 108, 115, 116, 120, 124, 127, 130, 131, 133, 135, 136, 137, 139, 142, 143, 144, 145, 146, 149, 150, 158, 159], "itself": [6, 32, 41, 74, 77, 93, 95, 104, 115, 131, 132, 139, 150, 154, 158, 159], "j": [127, 135], "jami": 140, "jane": [137, 140], "jax": 102, "jianfeng": 140, "jiang": 140, "jiawei": 140, "jina": 15, "jinja": [108, 139], "jinja2": [19, 20, 41, 108, 129, 130, 152], "jinja2_template_exampl": 139, "job": [124, 143], "john": [31, 137, 152], "join": [59, 61, 115, 116, 124, 127, 142, 145, 149, 150, 161], "jointli": [140, 148], "joke": [135, 152], "joke_exampl": 152, "jokeoutput": 152, "josh": 127, "json": [2, 4, 19, 20, 21, 22, 23, 31, 38, 43, 45, 46, 86, 87, 88, 91, 93, 98, 104, 108, 115, 117, 120, 129, 134, 137, 142, 143, 144, 145, 147, 149, 150, 152, 154, 158, 159, 161], "json_definit": [45, 145], "json_obj": 43, "json_output_format_prompt": 137, "json_output_pars": 137, "json_pars": 43, "json_parser_output_typ": 43, "json_signatur": 117, "json_signature_exclud": 117, "json_str": [31, 38, 43, 117], "jsonl": [86, 87, 93, 104, 134, 147, 154, 158, 159], "jsonoutputpars": [19, 20, 21, 115, 117, 145], "jsonpars": [0, 1, 43, 115, 129, 142, 150], "judeg": 127, "judg": [57, 58, 61, 63, 74, 76, 116, 129, 140, 150], "judgement": [56, 57, 58, 61, 150], "judgement_list": [58, 61, 150], "judgement_queri": [58, 61, 127, 150], "judgement_score_list": [58, 127], "judgment": [56, 101, 127], "jugement_queri": [58, 127], "jump": 108, "june": 161, "jupyt": 135, "just": [17, 32, 39, 45, 57, 63, 70, 74, 76, 80, 81, 104, 108, 109, 115, 116, 124, 127, 129, 130, 131, 133, 135, 138, 145, 149, 158, 159, 161], "justifi": 134, "k": [15, 22, 24, 25, 26, 27, 28, 29, 59, 61, 127, 135, 140, 143, 148, 150, 161], "k1": [22, 23, 143], "karl": 161, "karpathi": [63, 72], "keep": [31, 34, 39, 63, 66, 72, 74, 79, 80, 82, 104, 117, 120, 124, 132, 133, 135, 143, 144, 152, 158, 159], "keep_detail": [49, 53], "kei": [1, 9, 11, 12, 15, 16, 28, 31, 32, 34, 38, 41, 42, 43, 46, 57, 63, 72, 80, 82, 92, 100, 104, 108, 115, 117, 120, 124, 125, 126, 127, 129, 135, 137, 140, 141, 142, 143, 144, 145, 152, 158, 159], "kelvin": 140, "kendallrank": 127, "kenton": 140, "kept": [2, 4], "keyerror": 154, "keyword": [33, 38, 41, 46, 63, 67, 139, 143, 145], "kilt": 127, "kind": [108, 137], "kinnairdi": [154, 161], "kitchen": 161, "knock": [124, 143], "know": [63, 72, 101, 104, 107, 115, 129, 131, 132, 134, 140, 145, 154, 158, 159, 161], "knowledg": [63, 74, 79, 115, 127, 130, 131, 140, 142, 143, 145, 148, 150], "known": [115, 117, 143], "kunlun": 127, "kwarg": [0, 1, 8, 9, 13, 14, 16, 17, 21, 22, 23, 26, 27, 28, 29, 32, 33, 36, 37, 38, 39, 40, 41, 42, 43, 46, 48, 49, 53, 55, 57, 58, 61, 63, 67, 68, 70, 71, 73, 74, 76, 77, 78, 80, 81, 82, 85, 95, 104, 114, 115, 135, 139, 142, 143, 145, 149, 158, 159, 161], "l": [17, 33, 140, 144], "l1": [22, 27], "l2": [22, 24, 27], "label": [31, 38, 50, 53, 63, 73, 108, 117, 127, 140, 143, 149], "label_desc": 149, "lack": [139, 143, 144], "lambda": [32, 34, 45, 63, 73, 116, 124, 135, 136, 143, 161], "lamp": [104, 158, 159], "lampnn": [104, 158, 159], "lancedb": [25, 95, 111, 143], "lancedb_retriv": 22, "lancedbretriev": [22, 25], "land": [124, 143], "landmark": 135, "langag": 140, "langgraph": 116, "languag": [2, 4, 22, 23, 63, 66, 72, 104, 108, 111, 115, 127, 129, 132, 135, 136, 140, 141, 142, 144, 158, 159, 161], "larg": [36, 111, 115, 124, 127, 129, 135, 140, 143, 144, 148, 149, 161], "larger": [36, 63, 80, 81, 104, 144, 149, 158, 159], "last": [2, 4, 24, 34, 104, 124, 127, 136, 137, 143, 145, 147, 154, 158, 159, 161], "last_hidden_st": 17, "lastli": 135, "later": [34, 39, 104, 116, 117, 124, 143, 145, 158, 159], "latest": [13, 15, 103, 127, 142], "lavi": 127, "layer": [33, 116, 131, 140], "layout": [63, 72], "lazi": [11, 95, 101], "lazy_import": [46, 101], "lazyimport": [46, 95], "lc": [59, 61], "lead": [15, 22, 26, 73, 103, 124, 143], "leaf": [63, 72, 116, 138], "leap": [59, 61, 127], "learn": [9, 15, 32, 33, 39, 101, 102, 105, 106, 108, 115, 125, 127, 129, 130, 131, 138, 140, 143, 148, 149, 150, 158, 159, 161], "least": [116, 130, 140], "leav": 149, "led": [140, 161], "lee": 140, "left": [22, 23, 140], "legal": [127, 144], "legendari": 102, "len": [17, 59, 61, 124, 135, 145, 150], "length": [1, 2, 4, 22, 23, 34, 46, 63, 67, 124, 125, 135, 140, 144, 145, 148], "lengthi": [104, 108, 158, 159], "lengthier": [22, 23], "lenient": 15, "less": [15, 19, 21, 22, 23, 24, 46, 63, 72, 116, 117, 125, 127, 140, 143, 145], "let": [7, 104, 115, 117, 120, 124, 134, 137, 139, 140, 142, 143, 145, 150, 154, 158, 159, 161], "lettuc": 136, "levarag": 149, "level": [15, 16, 56, 63, 80, 82, 96, 101, 104, 108, 111, 117, 119, 133, 142, 145, 154, 158, 159], "lever": 127, "leverag": [4, 27, 28, 38, 42, 63, 74, 79, 104, 117, 124, 130, 136, 140, 142, 143, 144, 145, 150, 158, 159], "leverg": [22, 23, 42], "lewi": [140, 148], "li": [102, 140, 143], "lib": [96, 104, 133, 154, 158, 159], "librari": [2, 4, 15, 31, 33, 34, 39, 57, 58, 61, 63, 66, 86, 95, 96, 101, 102, 103, 104, 108, 109, 116, 117, 119, 120, 130, 131, 132, 133, 135, 143, 144, 148, 149, 158, 159, 161], "licens": [33, 101], "life": [9, 161], "lifecyl": 145, "lifelong": 143, "lifestyl": 120, "lift": 131, "light": [109, 124, 143], "light_rag": 108, "lightn": [101, 104, 114, 127, 133, 158, 159], "lightningmodul": [104, 114, 158, 159], "lightrag": [2, 4, 9, 15, 17, 96, 103, 119, 120, 126, 150, 152, 154], "lightweight": [117, 140], "like": [2, 4, 9, 33, 34, 37, 38, 40, 43, 46, 62, 63, 72, 80, 81, 86, 96, 100, 101, 104, 108, 109, 115, 116, 117, 120, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 137, 140, 142, 143, 144, 147, 148, 152, 158, 159, 161], "likelihood": 140, "limit": [39, 104, 124, 127, 130, 135, 140, 143, 144, 145, 158, 159], "lin": 127, "linalg": 135, "line": [15, 96, 101, 104, 108, 130, 131, 133, 134, 136, 141, 154, 158, 159], "line_numb": 96, "linear": [33, 116, 140], "linguist": 127, "link": [48, 53, 101, 104, 140, 144, 148, 158, 159], "list": [0, 1, 2, 3, 4, 11, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 43, 44, 45, 46, 54, 55, 56, 57, 58, 59, 61, 63, 66, 67, 71, 72, 73, 74, 77, 79, 80, 81, 82, 83, 86, 87, 92, 93, 95, 101, 102, 103, 104, 107, 110, 115, 116, 117, 120, 124, 125, 127, 132, 135, 136, 137, 143, 145, 150, 158, 159, 161], "list_dict_str": 137, "list_output_format_templ": [19, 21], "list_pars": 43, "list_str": 137, "list_str_2": 137, "list_str_3": 137, "listoutputpars": [19, 21, 137], "listpars": [22, 26, 43, 143], "liter": [2, 4, 9, 12, 16, 19, 20, 24, 38, 45, 46, 48, 49, 50, 53, 54, 58, 61, 63, 72, 80, 82, 85, 96, 137, 143], "literal_ev": 137, "literatur": [127, 150], "littl": 149, "liu": [127, 140], "liyin": [100, 147, 149, 154], "ll": [101, 104, 127, 158, 159], "llama": [4, 15, 135, 139], "llama3": [14, 15, 32, 115, 129, 132, 135, 139, 142], "llama3_model": [63, 80, 82], "llama3_model_kwarg": 115, "llama_cpp": 15, "llama_index": 108, "llamacpp": 15, "llamaindex": [4, 108], "llm": [0, 1, 6, 9, 15, 16, 17, 20, 22, 26, 31, 32, 33, 37, 39, 46, 57, 58, 61, 63, 68, 70, 74, 76, 79, 80, 82, 102, 103, 104, 108, 109, 115, 116, 120, 123, 124, 129, 130, 134, 136, 137, 138, 140, 141, 142, 144, 145, 147, 148, 149, 150, 151, 152, 154, 158, 161], "llm_as_judg": [127, 129], "llm_call": [147, 154], "llm_client": 17, "llm_counter": [104, 136, 158, 159], "llm_counter_cal": [104, 158, 159], "llm_counter_diagnos": [104, 158, 159], "llm_evalu": [58, 61, 127, 150], "llm_judg": [57, 58, 61, 127, 150], "llm_kwarg": 124, "llm_model_kwarg": 142, "llm_parser": 161, "llm_respons": 115, "llm_retriev": [22, 129, 143], "llm_text_loss": 74, "llm_tool": [115, 142], "llmasjudg": [58, 61, 127, 150], "llmasretriev": 143, "llmastextloss": [63, 74, 76], "llmevalresult": [58, 61], "llmjudg": [58, 61], "llmjudgeevalresult": [58, 61, 127], "llmretriev": [22, 26, 86, 129, 143], "llmretrieveroutputtyp": [22, 26], "lo": 132, "load": [22, 23, 31, 32, 34, 42, 50, 53, 87, 88, 91, 92, 93, 99, 104, 123, 124, 127, 130, 137, 141, 142, 143, 145, 149, 150, 152, 154, 158, 159], "load_class": 95, "load_dataset": [63, 80, 82, 104, 127, 149, 150, 158, 159, 161], "load_dotenv": [107, 126, 142], "load_from_fil": [22, 23, 42, 143], "load_from_pickl": 32, "load_json": 93, "load_jsonl": 93, "load_meta_data": 87, "load_pickl": 93, "load_standard_json": 93, "load_stat": [34, 124], "load_state_dict": [32, 120], "load_state_pickl": 32, "loaded_exampl": 152, "loader": 130, "lobbi": 161, "loc": 149, "local": [6, 17, 32, 40, 62, 101, 103, 111, 123, 129, 130, 135, 137, 143, 145, 148], "local_db": 34, "local_db_load": 34, "local_embedd": 125, "local_embedder_256": 125, "local_item_db": 34, "localdb": [6, 34, 46, 124, 140], "localhost": [15, 27, 143], "locat": [101, 117, 137, 143, 145, 149, 154, 161], "lock": [101, 108], "log": [22, 23, 63, 80, 82, 86, 87, 88, 93, 94, 96, 103, 104, 115, 124, 129, 131, 134, 135, 140, 147, 154, 158, 159], "log_cal": [87, 147], "log_path": [63, 80, 82], "log_prompt": 88, "loggedllmretriev": 86, "logger": [86, 130, 134, 147], "logger_cal": 147, "logger_metadata": [104, 134, 147, 158, 159], "loggind": 133, "logging_config": 133, "logic": [11, 14, 15, 17, 39, 40, 57, 63, 68, 74, 79, 127, 131, 133, 135], "logos_pag": 134, "logprob": [46, 135, 140, 143], "logs_dict": 154, "long": [2, 4, 63, 72, 124, 129, 130, 134, 140, 143, 144, 149], "longer": [144, 161], "longest": [56, 59, 61], "longest_common_substr": 56, "look": [15, 38, 101, 104, 117, 124, 125, 134, 139, 142, 143, 147, 149, 158, 159], "lookup": 142, "loop": [1, 33, 37, 41, 45, 115, 127, 135, 139, 143, 145, 149], "lose": [108, 134], "loss": [63, 68, 70, 74, 76, 77, 78, 80, 81, 83, 104, 109, 114, 130, 136, 138, 140, 157, 158, 159, 161], "loss1": [74, 77], "loss2": [74, 77], "loss_eval_fn": [63, 80, 81], "loss_fn": [63, 80, 81, 104, 114, 149, 158, 159, 161], "loss_output": [63, 83], "loss_step": [63, 80, 81], "losscalllogg": 147, "losscompon": [63, 70, 74, 76, 78, 80, 81], "lost": [34, 104, 143, 149, 158, 159], "lot": [127, 149], "low": [15, 16, 111, 127, 136], "lower": [15, 56, 131, 145, 161], "lowest": [57, 63, 72, 101, 104, 127, 158, 159], "lr": [63, 72], "lstrip_block": 139, "lt": 133, "luyu": 140, "m": [46, 101, 103, 115, 116, 127, 133, 134], "m1": 17, "ma": 140, "macbook": 17, "machin": [127, 140], "made": [17, 19, 20, 34, 79, 101, 117, 127, 129, 130, 138], "magenta": 96, "mai": [4, 15, 104, 120, 127, 129, 132, 133, 143, 144, 158, 159, 161], "main": [34, 41, 50, 53, 57, 61, 63, 73, 101, 108, 120, 126, 127, 129, 133, 134, 137, 143, 149], "main_class": 133, "mainli": [39, 46, 63, 68, 80, 81, 95, 100, 103, 108, 116, 117, 124, 127, 130, 131, 133], "maintain": [2, 4, 31, 102, 117, 119, 129, 135, 141, 144], "major": [111, 115], "make": [12, 15, 19, 21, 34, 37, 39, 40, 57, 63, 80, 81, 92, 95, 100, 101, 102, 103, 104, 107, 108, 109, 114, 115, 116, 117, 120, 124, 127, 129, 130, 134, 135, 137, 138, 139, 140, 142, 143, 145, 152, 158, 159, 161], "man": 127, "manag": [4, 33, 34, 35, 42, 45, 46, 85, 91, 100, 101, 103, 111, 115, 116, 120, 124, 126, 129, 130, 135, 142, 143, 144, 145, 152], "manchest": 127, "mani": [17, 57, 92, 104, 111, 117, 127, 136, 139, 140, 143, 145, 148, 149, 150, 154, 158, 159, 161], "manipul": [108, 135, 142], "manner": [135, 142], "manual": [32, 33, 91, 95, 108, 116, 127, 131, 134, 140, 149], "manufactur": [124, 143], "mao": 140, "map": [2, 4, 22, 29, 32, 34, 38, 42, 63, 72, 92, 93, 98, 116, 117, 124, 127, 140, 143, 144, 145, 148, 150, 161], "map_dialogturn_to_docu": 124, "map_fn": [34, 45, 63, 72, 116, 124, 161], "map_to_docu": 124, "map_to_successor": [63, 72], "mapper_setup": [34, 124], "mar": [0, 1], "marco": 127, "margin": [134, 140, 149], "marilyn": 161, "mark": [101, 117, 127, 134], "markdown": [2, 4, 144], "marshmallow": [31, 117], "mask": [129, 140], "massiv": 127, "match": [22, 23, 32, 54, 59, 61, 116, 117, 127, 143, 144, 150], "match_acc_list": 150, "matchvalu": 143, "matei": 17, "materi": [17, 124, 143, 149], "math": [63, 74, 78, 115, 116], "mathcal": 140, "mathemat": [115, 127, 161], "matric": 116, "matter": [37, 117, 124, 127], "matur": 102, "max": [1, 37, 63, 80, 81, 135, 142, 149], "max_correct_sampl": [63, 80, 82], "max_error_sampl": [63, 80, 82], "max_failed_propos": [63, 74, 79], "max_new_token": 17, "max_past_histori": [63, 74, 79], "max_proposals_per_step": [63, 80, 82], "max_sampl": [63, 80, 82, 104, 158, 159], "max_scor": 83, "max_step": [0, 1, 63, 80, 82, 92, 104, 115, 142, 149, 158, 159], "max_token": [8, 17, 104, 127, 132, 135, 158, 159], "maxim": [101, 131, 133, 139, 140], "maximum": [0, 1, 2, 4, 15, 24, 63, 80, 82, 104, 109, 115, 119, 132, 135, 144, 158, 159, 161], "mayb": 108, "md": [100, 101, 108], "me": [17, 115, 129, 135, 139, 140, 143, 148], "mean": [2, 4, 9, 34, 63, 66, 73, 74, 79, 83, 96, 116, 127, 129, 131, 132, 135, 136, 138, 140, 142, 144, 145, 148, 149, 150], "mean_of_scor": 83, "meaning": 102, "measur": [22, 23, 101, 127, 135, 140, 149], "meatur": 130, "mechan": [133, 135], "medata": 31, "media": 144, "medic": [120, 127, 144], "medium": [101, 127], "meet": [103, 104, 127, 158, 159], "member": [32, 161], "memeori": 143, "memo": 32, "memoi": 130, "memori": [24, 34, 36, 46, 101, 102, 124, 125, 130, 131, 143, 144, 145], "ment": 140, "mention": [63, 72, 104, 136, 140, 148, 158, 159], "merefli": 149, "merg": [2, 4, 63, 72, 101, 108, 144], "merge_gradients_for_cycle_compon": [63, 72], "merson": 127, "messag": [0, 1, 6, 8, 9, 12, 13, 15, 16, 17, 46, 95, 101, 104, 115, 116, 125, 129, 132, 133, 135, 139, 158, 159], "message_prompt": 135, "meta": [75, 132, 139, 140, 147], "meta_data": [2, 4, 28, 46, 124, 126, 144, 150], "metadata": [19, 20, 21, 28, 31, 34, 37, 38, 46, 63, 74, 78, 80, 81, 87, 104, 114, 115, 117, 124, 129, 133, 134, 136, 137, 142, 143, 149, 152, 158, 159], "metadata_kei": 28, "metal": 17, "meteor": [127, 140, 148], "methd": 42, "method": [2, 4, 9, 11, 13, 14, 15, 16, 17, 19, 21, 22, 23, 24, 31, 32, 33, 34, 37, 39, 40, 41, 42, 44, 45, 57, 58, 61, 63, 67, 68, 70, 72, 73, 74, 76, 79, 80, 81, 86, 92, 98, 109, 115, 116, 117, 120, 124, 125, 127, 129, 130, 134, 135, 136, 137, 139, 140, 143, 144, 145, 149, 155, 156, 157, 161], "metric": [24, 54, 55, 57, 58, 59, 61, 130, 140, 143, 148, 150], "metric_nam": 127, "michigan": 161, "micrograd": [63, 72], "microsoft": 9, "microstat": 15, "microwavenn": [104, 158, 159], "middl": [104, 134, 143, 149, 158, 159], "midfield": 127, "might": [17, 22, 24, 26, 32, 34, 37, 100, 103, 104, 115, 116, 117, 124, 125, 129, 143, 144, 145, 149, 158, 159], "mile": 154, "militari": 161, "million": 143, "mimick": 117, "min_scor": [63, 80, 81, 83], "mind": [104, 127, 131, 134, 158, 159], "mingwei": 140, "mini": [16, 129], "minim": [115, 131], "minimum": [104, 109, 119, 139, 158, 159], "minimum_scor": [63, 80, 81], "minimumli": 161, "minist": 161, "minut": [106, 127, 149], "minzhi": 140, "mirostat": 15, "mirostat_eta": 15, "mirostat_tau": 15, "mirror": 33, "miscount": [104, 158, 159], "mislead": [31, 140, 152], "miss": [31, 38, 43, 46, 63, 74, 79, 101, 127, 136, 140, 143, 145], "mistak": 127, "mistaken": [19, 21, 115, 137], "mistral": 111, "mix": [63, 80, 82, 149], "mixtral": 14, "mkdir": 141, "mlm": 140, "mmlu": 127, "mock": 39, "mock_output": 39, "mock_output_data": 39, "mode": [0, 1, 32, 37, 39, 63, 68, 70, 80, 81, 82, 108, 116, 129, 130, 136, 147, 161], "modecli": 126, "model": [0, 1, 2, 4, 6, 7, 8, 9, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 26, 28, 29, 32, 33, 34, 36, 38, 39, 40, 46, 57, 58, 61, 62, 63, 66, 71, 72, 74, 78, 79, 86, 91, 94, 101, 102, 104, 108, 109, 114, 116, 120, 126, 130, 131, 132, 136, 139, 140, 142, 143, 144, 145, 148, 149, 150, 152, 158, 159, 161], "model_cli": [0, 1, 11, 16, 17, 19, 20, 22, 26, 29, 32, 36, 39, 46, 57, 58, 61, 63, 68, 74, 76, 78, 79, 80, 81, 86, 91, 95, 104, 115, 120, 124, 125, 126, 127, 130, 135, 136, 142, 143, 145, 149, 150, 158, 159, 161], "model_kwarg": [0, 1, 8, 9, 11, 13, 14, 15, 16, 17, 19, 20, 22, 26, 29, 32, 36, 38, 39, 40, 46, 57, 58, 61, 63, 68, 74, 76, 78, 79, 80, 81, 86, 87, 91, 104, 115, 120, 124, 125, 126, 127, 129, 130, 134, 135, 136, 138, 142, 143, 145, 149, 150, 158, 159, 161], "model_nam": [17, 91], "model_to_init_func": [7, 17], "model_typ": [8, 9, 11, 13, 14, 15, 16, 17, 32, 36, 39, 40, 46, 120, 129, 135], "modelcli": [0, 1, 8, 9, 11, 13, 14, 15, 16, 17, 22, 26, 29, 32, 36, 39, 40, 46, 57, 58, 61, 63, 68, 74, 76, 78, 79, 80, 81, 101, 104, 111, 115, 120, 125, 129, 130, 139, 143, 149, 158, 159, 161], "modelclienttyp": [46, 115, 124, 129, 143, 145], "modelfil": 15, "modeltyp": [8, 9, 11, 13, 14, 15, 16, 17, 32, 36, 39, 40, 46, 120, 129, 135, 143], "modif": 120, "modifi": [2, 3, 12, 16, 115, 133, 135], "modoel": 124, "modul": [9, 11, 26, 27, 31, 32, 33, 38, 46, 57, 61, 68, 70, 83, 95, 98, 108, 116, 117, 120, 124, 130, 133, 134, 143, 150, 154], "modular": [33, 102, 109], "module_nam": [95, 100], "modulelist": 33, "moduletyp": 95, "moment": 131, "monitor": [103, 108, 124], "monro": 161, "month": [59, 61, 102, 127], "monument": 134, "moor": 127, "more": [1, 2, 4, 8, 11, 13, 14, 15, 22, 23, 31, 32, 33, 38, 43, 44, 45, 46, 47, 57, 58, 61, 63, 66, 72, 74, 79, 80, 81, 82, 100, 101, 102, 103, 104, 107, 108, 111, 113, 115, 117, 119, 120, 124, 125, 127, 129, 130, 131, 132, 133, 134, 135, 137, 138, 140, 141, 142, 143, 144, 145, 148, 149, 150, 152, 158, 159, 161], "moreov": [140, 142], "most": [21, 63, 102, 120, 127, 129, 130, 132, 134, 135, 137, 139, 140, 143, 148, 149, 154], "mostli": [31, 129, 143], "move": [2, 4, 104, 114, 115, 130, 143, 144, 158, 159], "movi": 126, "mp": 17, "mrr": [127, 140, 148, 150], "mseloss": 116, "mt": 127, "much": [57, 104, 114, 116, 120, 127, 134, 158, 159], "multi": [63, 80, 81, 108, 125, 127, 132, 135, 136, 140, 142, 147, 151], "multifacet": 127, "multihopragad": [147, 154], "multilingu": 11, "multimod": [16, 140], "multipl": [0, 1, 3, 15, 33, 34, 63, 73, 74, 77, 79, 80, 81, 82, 87, 88, 91, 95, 108, 115, 123, 124, 125, 127, 129, 135, 137, 138, 140, 141, 142, 143, 145, 147, 151, 154], "multipli": [0, 1, 115, 142, 145], "multiply_by_two": 33, "multiplybytwo": 33, "multitask": 127, "multple_function_call_templ": 145, "music": [104, 158, 159], "must": [0, 1, 16, 22, 24, 27, 28, 29, 32, 33, 34, 35, 36, 42, 43, 45, 58, 63, 68, 74, 79, 80, 81, 92, 102, 103, 104, 115, 116, 135, 143, 158, 159], "mutabl": [35, 138], "my": [115, 127, 144], "my_app": 133, "my_db": 34, "my_funct": [32, 68], "my_function_compon": [32, 68], "my_function_data_compon": 32, "my_inst": [31, 152], "mycompon": 33, "myfunctioncompon": 32, "myfunctiondatacompon": 32, "mymodel": 116, "mymodul": 33, "myoutput": [31, 152], "mytaskpipelin": 116, "n": [1, 2, 4, 15, 16, 19, 21, 22, 23, 35, 43, 57, 63, 74, 79, 104, 115, 116, 124, 127, 129, 134, 135, 136, 137, 145, 149, 158, 159, 161], "n0": 149, "n1": [63, 74, 79, 104, 115, 136, 149, 158, 159], "n10": 136, "n2": [63, 74, 79, 104, 115, 135, 136, 149, 158, 159], "n3": [63, 74, 79, 115, 135, 136, 149], "n4": [63, 74, 79, 104, 115, 136, 149, 158, 159], "n5": [63, 74, 79, 115, 136, 149], "n6": [63, 74, 79, 136], "n7": 136, "n8": 136, "n9": 136, "n________": 115, "n_________": 124, "n_____________________": 1, "n_words_offset": [63, 72], "nad": [104, 158, 159], "nadd": [136, 145], "nage": 137, "name": [1, 9, 16, 27, 28, 31, 32, 34, 37, 38, 39, 42, 44, 46, 48, 53, 57, 61, 63, 67, 68, 72, 74, 77, 80, 81, 82, 83, 86, 87, 88, 91, 93, 95, 96, 97, 98, 100, 102, 103, 104, 108, 109, 114, 115, 117, 120, 124, 127, 131, 133, 134, 135, 137, 138, 142, 143, 145, 147, 149, 150, 152, 154, 158, 159, 161], "named_children": 32, "named_compon": 32, "named_paramet": [32, 63, 72, 114, 120], "nand": 115, "nanswer": [104, 134, 136, 158, 159], "nario": 127, "narrow": 143, "nasynchron": 135, "nation": 161, "nativ": [117, 130, 133, 139], "nattribut": 137, "natur": [2, 4, 38, 127], "navig": 144, "nbut": 115, "nclass_nam": 149, "ncompar": 135, "ncount": [104, 158, 159], "ncurrent": 1, "nd": 143, "ndarrai": [24, 25, 38, 143, 145], "ndcg": [127, 140, 148, 150], "ndivid": 145, "nearest": 135, "neat": 133, "necessari": [17, 101, 104, 107, 108, 115, 135, 145, 150, 158, 159], "nectarin": [136, 158], "need": [0, 1, 2, 4, 8, 11, 14, 15, 16, 17, 19, 20, 21, 22, 23, 31, 32, 36, 37, 39, 40, 45, 46, 63, 68, 72, 80, 81, 95, 96, 100, 101, 103, 104, 107, 108, 109, 114, 115, 116, 117, 123, 124, 125, 127, 129, 131, 133, 135, 136, 138, 139, 140, 143, 144, 145, 147, 148, 149, 150, 158, 159, 161], "neg": [22, 23, 54, 61, 127, 140], "neighbor": 135, "nest": [31, 32, 38, 46, 117, 130, 137], "nested_dict_str": 137, "net": 127, "neubig": 140, "neural": 127, "neutral": [54, 61, 108], "never": [103, 161], "new": [1, 2, 4, 6, 34, 35, 38, 45, 63, 71, 72, 74, 77, 79, 100, 102, 104, 108, 109, 115, 124, 125, 127, 135, 137, 138, 140, 142, 143, 145, 149, 150, 156, 157, 158, 159], "new_compon": [91, 129], "new_components_from_config": 91, "new_dim": 125, "new_docu": 116, "new_embed": 125, "new_turn": 124, "newton": 161, "nexampl": [1, 115], "next": [15, 33, 70, 101, 115, 126, 127, 132, 139, 142, 145, 150], "nfinish": 115, "nfollow": 115, "nformat": 149, "nfull": 135, "nfunc_desc": 115, "nfunc_paramet": 115, "nget": 145, "ni": 115, "nif": [63, 74, 79], "night": 127, "nightli": 103, "nin": 115, "nine": 161, "ninput": 1, "nkei": 43, "nlgtask": [57, 61, 127], "nlp": [2, 4, 109, 126, 127, 131, 140, 143, 144, 148, 149, 151], "nlpir": 140, "nlplanet": 127, "nlpyang": [57, 127], "nlu": 127, "nmultipli": 145, "nn": [32, 33, 104, 116, 120, 130, 133, 158, 159], "nname": 137, "nnearest": 135, "nnext": 136, "nnone": 145, "nnow": [115, 134, 136], "no_grad": 116, "node": [38, 63, 72, 104, 116, 138, 147, 158, 159], "node_pag": [63, 72], "nois": 127, "non": [2, 4, 76, 92, 127, 129], "none": [0, 1, 2, 4, 6, 8, 9, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 45, 46, 48, 49, 50, 51, 53, 55, 57, 58, 61, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 78, 79, 80, 81, 82, 83, 86, 87, 88, 93, 95, 96, 98, 104, 114, 115, 116, 117, 124, 126, 127, 129, 133, 135, 136, 137, 140, 143, 144, 145, 149, 158, 159, 161], "none_str": 137, "nonetyp": 46, "nonsens": [15, 144], "noqa": 161, "norm": 135, "normal": [22, 23, 24, 32, 37, 38, 46, 95, 116, 117, 123, 125, 135], "normalize_answ": 60, "normalize_np_arrai": 38, "normalize_vector": [38, 125], "nosql": 143, "not_support": 140, "note": [8, 9, 17, 22, 23, 24, 31, 32, 39, 42, 46, 63, 68, 74, 78, 80, 81, 96, 101, 104, 108, 116, 120, 124, 129, 130, 135, 142, 143, 145, 150, 158, 159], "notebook": [134, 135, 142], "noth": [127, 142, 150], "notic": [129, 132], "notimplementederror": [135, 143], "now": [17, 32, 59, 61, 86, 101, 104, 108, 115, 116, 117, 124, 125, 126, 127, 134, 137, 139, 140, 142, 143, 145, 149, 158, 159], "nowher": 127, "np": [24, 135, 143, 145], "nqueri": 135, "nsearch": 145, "nso": [115, 136], "nstart": 135, "nstep": 1, "nsum": 145, "nsynchron": 135, "nthe": [63, 74, 79, 115, 134], "nthese": [63, 74, 79], "nthu": 136, "ntool": 1, "ntotal": [104, 158, 159], "nu": 161, "null": [124, 134, 137], "null_str": 137, "num": [24, 63, 73, 149], "num_class": [63, 73], "num_ctx": 15, "num_doc": 150, "num_indic": 135, "num_predict": 15, "num_return_sequ": 17, "num_sampl": [50, 92], "num_shot": [38, 63, 65, 66, 73], "num_work": [63, 80, 81, 82, 104, 149, 158, 159], "number": [0, 1, 2, 4, 13, 15, 16, 22, 23, 24, 25, 27, 29, 44, 46, 59, 61, 63, 72, 80, 81, 82, 96, 103, 104, 115, 125, 126, 127, 129, 135, 136, 137, 140, 142, 144, 145, 148, 150, 154, 158, 159], "numer": [104, 116, 117, 126, 127, 136, 143, 149, 158, 159], "numpi": [95, 125, 135, 143, 145], "numpy_sum": 145, "nuser": [35, 135], "nwith": [115, 135], "nyou": [1, 35, 63, 74, 79], "nyour": [1, 63, 74, 79], "nz": [22, 23], "o": [98, 135], "o1": 16, "obj": [32, 38, 93, 98], "object": [1, 2, 4, 17, 19, 21, 31, 32, 33, 35, 38, 39, 41, 43, 44, 45, 46, 48, 51, 53, 54, 55, 58, 61, 63, 67, 68, 70, 71, 72, 73, 74, 76, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 90, 92, 93, 95, 97, 98, 104, 115, 116, 117, 123, 126, 127, 129, 133, 135, 137, 140, 142, 144, 145, 158, 159], "object_count": [48, 53], "objectcountadalcompon": [104, 158, 159], "objectcountingevalfn": [114, 116], "objectcountsimpl": 136, "objectcounttaskpipelin": [104, 158, 159], "objecttyp": [98, 115, 145], "observ": [0, 1, 46, 63, 74, 79, 115, 127, 131, 135, 142], "obtain": [126, 127, 154], "occur": [22, 23, 125, 129], "off": [32, 104, 127, 136, 138, 140, 143, 158, 159], "offer": [101, 104, 108, 109, 111, 124, 127, 131, 135, 140, 143, 148, 152, 158, 159], "offici": [33, 101], "often": [22, 23, 33, 46, 101, 104, 116, 117, 123, 124, 125, 127, 129, 135, 139, 140, 143, 144, 150, 158, 159], "ofth": 127, "oj": 127, "okapi_bm25": [22, 23, 143], "old_dim": 125, "old_embed": 125, "ollama": [15, 46, 95, 101, 111], "ollama_cli": [7, 101], "ollama_client_not": 101, "ollama_host": 15, "ollamacli": [7, 15], "on_complet": [85, 147], "on_failur": 85, "on_success": 85, "onc": [17, 63, 74, 79, 101, 104, 127, 136, 138, 143, 154, 158, 159], "one": [3, 8, 17, 19, 20, 24, 33, 37, 38, 39, 63, 72, 74, 79, 80, 81, 96, 101, 104, 114, 115, 116, 125, 127, 129, 130, 132, 134, 135, 136, 137, 138, 139, 140, 142, 143, 145, 147, 149, 151, 158, 159, 160, 161], "one_parameter_at_a_tim": [63, 74, 79], "ones": [63, 74, 79, 80, 81, 86, 144], "onli": [8, 16, 17, 19, 21, 22, 23, 31, 32, 33, 34, 36, 38, 39, 45, 46, 50, 53, 57, 58, 59, 61, 63, 68, 72, 74, 78, 80, 81, 86, 91, 95, 103, 104, 108, 109, 116, 117, 120, 123, 124, 125, 127, 129, 131, 134, 136, 137, 138, 139, 140, 142, 143, 145, 147, 148, 149, 151, 152, 158, 159, 161], "only_hard_exampl": [49, 53], "op": 74, "open": [33, 104, 108, 115, 117, 120, 125, 127, 129, 133, 134, 135, 137, 139, 140, 144, 145, 148, 149, 150, 158, 159, 161], "openai": [9, 11, 12, 13, 14, 15, 16, 17, 18, 40, 46, 95, 101, 107, 108, 111, 115, 124, 126, 129, 132, 140, 141, 143, 144, 145, 152], "openai_api_kei": [16, 100, 107, 125, 141], "openai_cli": [0, 1, 7, 95, 104, 125, 129, 135, 150, 158, 159], "openaicli": [0, 1, 7, 11, 12, 14, 15, 16, 17, 32, 36, 39, 40, 46, 86, 91, 95, 101, 104, 120, 124, 125, 126, 127, 129, 135, 142, 143, 150, 158, 159], "oper": [2, 3, 15, 27, 31, 33, 34, 36, 46, 63, 68, 74, 76, 77, 104, 115, 124, 129, 135, 143, 152, 158, 159], "operand": 145, "opinion": [108, 127], "opro": [79, 158], "opt": 139, "optim": [0, 1, 22, 23, 24, 39, 45, 66, 72, 74, 75, 78, 79, 80, 81, 82, 83, 101, 102, 108, 109, 114, 117, 120, 124, 127, 129, 134, 138, 141, 143, 144, 148], "optimiz": 76, "optimization_ord": [63, 80, 82, 149], "optimizaton": 161, "optimize_ord": 149, "optimizer_": 130, "optimizer_model_config": [63, 80, 82], "optimizer_system_prompt": [63, 74, 79], "optimizinh": 127, "optimizor": [63, 80, 81, 130], "option": [0, 1, 2, 4, 9, 12, 14, 15, 16, 17, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 48, 53, 57, 58, 61, 63, 72, 74, 76, 79, 80, 81, 82, 86, 87, 88, 92, 93, 95, 96, 100, 101, 115, 116, 117, 120, 123, 124, 127, 129, 135, 136, 137, 140, 143, 144, 145, 149, 152, 161], "optional_packag": 95, "optionalpackag": [95, 107], "opu": 132, "orang": [136, 158], "orchestr": [36, 39, 111, 115, 124, 125, 126, 130, 137, 139, 148], "ord_docu": 124, "order": [2, 4, 19, 20, 27, 31, 33, 41, 46, 57, 63, 69, 72, 74, 79, 100, 117, 124, 125, 127, 131, 144, 149], "orderdict": 33, "ordereddict": [32, 33, 46], "org": [0, 1, 17, 22, 23, 33, 57, 79, 115, 117, 127, 133, 140, 143, 148, 158, 159], "org_docu": 124, "organ": [57, 62, 63, 80, 81, 101, 108, 124, 127, 149, 161], "origin": [2, 4, 34, 63, 74, 79, 101, 103, 117, 124, 126, 129, 143, 161], "orpo": [79, 130, 159], "oss": 108, "otago": [22, 23], "other": [2, 4, 17, 19, 21, 24, 32, 33, 37, 38, 39, 45, 46, 59, 61, 63, 74, 79, 91, 98, 100, 101, 108, 115, 117, 120, 125, 129, 130, 131, 135, 137, 138, 140, 143, 145, 148, 149, 152, 154, 161], "othersi": 32, "otherwis": [1, 32, 35, 37, 46, 68, 70, 103, 144], "our": [7, 31, 32, 39, 57, 58, 59, 61, 63, 66, 73, 100, 101, 102, 104, 106, 107, 108, 109, 112, 115, 116, 117, 120, 124, 125, 127, 129, 130, 132, 133, 135, 137, 138, 139, 141, 142, 143, 144, 145, 149, 150, 158, 159, 161], "ourselv": 108, "out": [102, 108, 115, 117, 120, 124, 127, 129, 130, 131, 135, 140, 141, 142, 143, 144, 145, 149], "outcom": [2, 4], "outer": 117, "outlin": [103, 127, 140, 142], "outperform": 142, "output": [1, 2, 4, 9, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 26, 27, 31, 32, 33, 35, 36, 37, 38, 39, 43, 45, 46, 57, 58, 61, 62, 63, 66, 68, 69, 70, 71, 72, 73, 74, 78, 79, 80, 81, 83, 86, 87, 96, 100, 104, 108, 109, 111, 114, 115, 116, 117, 120, 123, 124, 126, 127, 130, 132, 133, 134, 135, 136, 138, 139, 140, 142, 143, 144, 147, 150, 152, 155, 158, 159, 161], "output_1": 143, "output_2": 143, "output_3": 143, "output_data_class": 145, "output_dir": [63, 72], "output_field": [31, 137], "output_format": [19, 20, 35, 115, 129, 134, 145, 152], "output_format_prompt": [115, 137], "output_format_str": [1, 19, 20, 35, 63, 74, 79, 115, 129, 134, 139, 145, 149, 161], "output_map": 136, "output_pars": [117, 137, 145, 149], "output_processor": [0, 1, 19, 20, 21, 22, 26, 36, 39, 104, 111, 115, 125, 126, 127, 130, 136, 137, 142, 143, 145, 149, 150, 158, 159, 161], "output_str": 134, "output_typ": 58, "outputfield": 149, "outputformat": 117, "outputparamet": [63, 68], "outputpars": [16, 19, 21, 137, 145], "outsid": [37, 101], "outstand": 152, "oven": 136, "over": [32, 33, 37, 108, 109, 115, 120, 129, 135, 139, 140, 149], "overal": [31, 55, 101, 102, 104, 115, 127, 131, 140, 142, 145, 149, 158, 159], "overcom": 130, "overflow": 125, "overhead": 37, "overkil": 115, "overlap": [2, 4, 117, 140, 144, 148], "overrid": [0, 1, 8, 22, 27, 28, 29, 32, 33, 36, 42, 43, 45, 63, 68, 80, 81, 115, 126, 142], "overview": [9, 16, 124, 127, 137], "overwrit": [25, 31, 38, 63, 80, 81, 92], "overwritten": [104, 158, 159], "own": [4, 16, 31, 32, 37, 38, 39, 42, 45, 63, 74, 79, 80, 82, 87, 101, 104, 108, 115, 117, 125, 130, 135, 140, 143, 148, 150, 158, 159], "owner": 101, "p": [140, 141], "p0": 101, "p1": [101, 145], "p2": [101, 145], "packag": [24, 95, 100, 101, 103, 108, 117, 124, 126, 127, 143, 154], "package_nam": 107, "page": [2, 4, 15, 17, 63, 72, 101, 127, 140, 142, 144], "page_cont": 116, "pai": [103, 104, 158, 159], "paid": 134, "pain": 120, "pair": [63, 74, 78, 127, 135, 140, 143, 144], "paitesanshi": 115, "palletsproject": 139, "panel": [124, 143], "panupong": 140, "paper": [17, 22, 23, 127, 140, 142], "papineni": 127, "par": 151, "paradigm": [115, 130, 140, 148, 149], "paragraph": 144, "parallel": [63, 80, 81, 82, 101, 104, 115, 123, 135, 140, 149, 158, 159], "param": [14, 17, 25, 32, 38, 40, 59, 61, 63, 66, 71, 72, 74, 77, 79, 80, 82, 93, 114, 120, 129], "param_id": [63, 74, 79], "param_typ": [63, 68, 72, 104, 136, 138, 149, 158, 159, 161], "paramet": [0, 1, 2, 4, 6, 9, 12, 15, 16, 19, 21, 22, 23, 24, 26, 27, 28, 29, 31, 32, 33, 34, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 48, 53, 54, 56, 57, 58, 59, 61, 63, 66, 67, 68, 69, 70, 71, 74, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 91, 92, 93, 95, 96, 98, 104, 108, 109, 114, 115, 116, 117, 120, 129, 130, 135, 136, 137, 140, 142, 143, 145, 148, 149, 150, 155, 156, 157, 158, 159, 160, 161], "parameter_": 130, "parametertyp": [63, 68, 72, 83, 104, 136, 149, 158, 159, 161], "parametr": [63, 72, 138], "params_histori": [63, 74, 79], "paramt": [39, 63, 66], "parent": 135, "parent_doc_id": [2, 4, 46, 124, 144], "parenthesi": 38, "pari": [115, 134, 135, 145], "paris_embed": 135, "paris_indic": 135, "pars": [8, 9, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 37, 38, 39, 40, 43, 45, 46, 104, 109, 115, 116, 129, 130, 135, 137, 142, 145, 149, 158, 159, 161], "parse_chat_complet": [7, 8, 9, 13, 14, 15, 16, 17, 40, 135], "parse_embedding_respons": [7, 9, 15, 16, 17, 18, 40, 135], "parse_func_expr": [45, 145], "parse_function_call_expr": [38, 145], "parse_generate_respons": [7, 15], "parse_image_generation_respons": [7, 16], "parse_integer_answ": [104, 136, 158, 159], "parse_json_str_to_obj": 38, "parse_stream_respons": [7, 15, 16], "parse_yaml_str_to_obj": 38, "parsed_input": [46, 145], "parsed_inst": 137, "parsed_us": 137, "parser": [8, 16, 19, 20, 21, 32, 62, 111, 117, 129, 130, 135, 142, 145, 149], "part": [33, 38, 39, 63, 80, 81, 100, 104, 115, 116, 129, 130, 139, 140, 143, 149, 151, 158, 159], "parti": [16, 31, 96, 135, 143], "partial": [135, 140, 147], "partically_support": 140, "particl": [124, 143], "particular": [14, 17, 36, 40, 42, 101, 115, 129, 130, 134, 140, 157, 161], "particularli": [104, 115, 127, 158, 159], "pass": [1, 8, 16, 17, 22, 23, 24, 29, 33, 36, 37, 38, 39, 41, 45, 46, 57, 58, 59, 61, 63, 67, 68, 70, 72, 74, 77, 80, 81, 82, 86, 104, 109, 114, 115, 116, 117, 120, 125, 127, 129, 132, 135, 136, 138, 139, 140, 142, 143, 145, 158, 159, 161], "passag": [2, 4, 127, 140, 144, 148, 161], "passages_per_hop": 161, "password": [27, 144], "past": [46, 63, 74, 79, 139], "pasu": 140, "pat": 140, "path": [16, 22, 23, 39, 42, 63, 72, 80, 82, 86, 88, 90, 95, 127, 129, 130, 141, 147, 149, 150], "pattern": [15, 18, 32, 33, 37, 46, 63, 74, 79, 143], "paul": 127, "paulmers": 127, "paulo": [127, 150], "payload": [28, 143], "pdf": [2, 4, 22, 23, 127, 144], "pdfminer": [2, 4, 144], "peach": [136, 158], "pearson": 127, "peer": [63, 72, 74, 75, 79, 138], "penal": [15, 57, 127], "pencil": 115, "pengcheng": 140, "penlaiz": 15, "pep": 103, "per": [46, 50, 53, 55, 63, 72, 80, 81, 82, 137, 143], "per_item_scor": 55, "percent": 139, "perfect": [104, 116, 158, 159], "perfectli": 127, "perform": [34, 57, 58, 61, 63, 66, 73, 74, 77, 79, 101, 108, 109, 116, 124, 125, 127, 129, 131, 134, 135, 139, 140, 142, 143, 144, 148, 150, 151, 161], "perhap": 134, "period": [2, 4, 144], "permiss": 101, "perplex": [15, 127], "persist": [6, 22, 23, 34, 42, 46, 116, 120, 124, 138, 143], "persit": 124, "person": [31, 46, 152], "pgvector": [27, 95, 107, 140, 143], "philosophi": [109, 119, 130], "phoenix": [108, 133], "photon": [124, 143], "php": 127, "phrase": 143, "physician": 161, "piano": [104, 158, 159], "pick": 140, "pickabl": 120, "pickl": [32, 34, 93, 124, 143], "picklabl": [32, 34], "pickle_to_fil": 32, "piec": [2, 4, 140], "pile": [63, 66], "pip": [24, 95, 96, 101, 107], "pipelin": [6, 17, 32, 33, 34, 37, 39, 63, 66, 79, 80, 81, 82, 83, 91, 103, 109, 114, 120, 125, 127, 129, 131, 136, 138, 143, 146, 147, 148, 150, 151, 155, 160, 161], "pirat": 17, "pkl": [34, 91, 124], "place": [63, 72, 80, 81, 101, 145, 149], "placehold": [116, 135, 139], "plai": [40, 124, 127, 132, 139, 143], "plain": 144, "plan": [46, 104, 107, 110, 115, 129, 130, 135, 142, 158, 159], "planner": [0, 1, 115, 129, 130], "plastic": 17, "platform": [9, 16, 111, 127, 129, 145], "playbook": [127, 130], "player": 127, "pleas": [2, 4, 15, 19, 21, 31, 39, 57, 58, 61, 95, 96, 100, 101, 103, 108, 113, 115, 120, 124, 125, 127, 129, 135, 137, 140, 142, 143, 144, 145, 150, 152], "plenti": [120, 123], "plot": 119, "plu": [104, 140, 158, 159], "plug": [40, 108], "plum": [136, 158], "plural": [104, 158, 159], "pmlr": 140, "png": [63, 72, 104, 129, 134, 158, 159], "poem": 115, "poetri": [100, 101, 103, 108, 141], "point": [2, 4, 57, 63, 74, 78, 79, 86, 104, 117, 123, 127, 133, 135, 144, 145, 150, 158, 159], "pollut": [124, 133, 143], "pool": [115, 143], "poor": [57, 127], "pop": [33, 34, 124], "popul": 135, "popular": [111, 115, 127, 140], "posit": [33, 38, 46, 54, 61, 63, 74, 79, 96, 124, 126, 127, 140, 143, 145], "possibl": [12, 79, 101, 115, 117, 140], "post": [22, 26, 32, 143, 144], "postgr": [27, 140, 143], "postgres_retriev": 22, "postgresql": [27, 143], "postgresretriev": [22, 27], "postprocessor": 108, "potato": 136, "potenti": [33, 38, 63, 80, 81, 103, 115, 117, 127, 132, 138, 142, 144, 147, 149, 158], "power": [102, 109, 119, 124, 127, 130, 133, 143], "powershel": 96, "pp": 127, "pr": 100, "practic": [108, 120, 130, 140, 141, 143, 148], "practis": 143, "pramet": [116, 149], "pre": [25, 32, 101, 103, 108, 124, 127, 140], "prececessor": 138, "precessor": 70, "precis": [59, 61, 127, 140, 143, 144, 148, 150], "pred": [63, 80, 81, 104, 114, 127, 136, 158, 159, 161], "pred_answ": [54, 58, 61, 127], "pred_answer_str": 127, "pred_step": [63, 80, 81], "predecessor": [39, 63, 68, 70, 72, 74, 77, 104, 116, 136, 138, 158, 159], "predefin": [38, 115], "predict": [15, 31, 39, 46, 54, 55, 57, 58, 61, 63, 68, 70, 80, 81, 86, 111, 115, 117, 127, 129, 130, 132, 134, 139, 140, 148, 149, 150, 161], "prefer": [127, 133, 143, 145], "prefix": [31, 32, 137, 139, 152], "prep_ckpt_file_path": [63, 80, 82], "prepar": [22, 26, 63, 80, 81, 82, 124, 126, 135, 143, 145, 148, 149], "prepare_dataset": 50, "prepare_dataset_path": 52, "prepare_ev": [63, 80, 81, 149, 158, 161], "prepare_loss": [63, 80, 81, 149, 158, 161], "prepare_loss_ev": [63, 80, 81], "prepare_task": [63, 80, 81, 149, 158, 161], "prepend": 32, "preprint": [127, 140, 150], "preprintarxiv": 140, "preprocess": [4, 44, 123, 129, 140, 141, 144, 148], "presbyterian": 161, "prescript": 120, "presenc": [22, 23], "presence_penalti": [104, 158, 159], "present": [57, 127], "preserv": [63, 74, 79, 117, 141], "preset": [0, 1, 39, 41, 139], "preset_prompt_kwarg": [19, 21, 41, 134, 142, 143, 150], "pretrain": [127, 140], "pretti": 143, "prevent": [2, 4, 15, 144], "previou": [1, 33, 63, 66, 72, 74, 79, 104, 115, 124, 129, 135, 137, 141, 142, 144, 147, 150, 151, 158, 159, 161], "previous": [9, 14, 15, 16, 32, 41, 143], "principl": [33, 102, 108], "print": [0, 1, 2, 4, 9, 17, 19, 21, 22, 23, 31, 32, 33, 37, 38, 41, 43, 46, 63, 68, 80, 82, 95, 96, 104, 114, 115, 117, 124, 125, 126, 127, 129, 133, 135, 137, 139, 142, 143, 144, 145, 149, 150, 152, 158, 159, 161], "print_prompt": [39, 41, 115, 124, 129], "print_prompt_templ": 41, "printc": [96, 133], "printout": [115, 120, 124, 127, 129, 137, 139, 143, 145], "prior": 96, "priorit": [63, 66, 101, 143], "privaci": 127, "pro": [13, 124, 143], "prob": [24, 143], "probab": 143, "probability_model_kwarg": 135, "probabl": [15, 16, 24, 104, 135, 140, 143, 149, 158, 159], "problem": [63, 72, 108, 115, 116, 127, 136, 140, 142, 143, 145], "proce": 101, "proceed": 127, "procesor": 125, "process": [2, 4, 16, 22, 26, 32, 34, 36, 46, 62, 63, 80, 81, 82, 102, 103, 104, 108, 111, 115, 117, 120, 124, 125, 126, 127, 129, 130, 131, 134, 137, 138, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 158, 159], "process_embed": 135, "process_queri": 145, "processor": [19, 21, 36, 39, 46, 104, 129, 130, 135, 158, 159], "produc": [32, 45, 63, 80, 81, 124, 143, 150], "product": [4, 24, 27, 124, 125, 127, 131, 143], "production": [108, 130], "profess": 143, "professor": 161, "profil": 143, "program": [117, 129, 133, 140, 141], "programmat": [130, 139], "progress": [103, 130, 140, 143], "project": [33, 87, 88, 100, 102, 106, 107, 112, 116, 125, 134, 141, 143], "project_nam": [86, 87, 88], "prompt": [0, 1, 8, 15, 16, 19, 20, 21, 22, 26, 27, 31, 32, 35, 39, 41, 46, 63, 68, 69, 71, 72, 74, 75, 76, 78, 79, 80, 81, 82, 83, 86, 88, 96, 102, 108, 109, 111, 116, 117, 120, 124, 127, 129, 130, 131, 132, 134, 135, 136, 137, 138, 140, 142, 143, 145, 148, 149, 150, 152, 157, 160, 161], "prompt_build": [129, 139, 145, 150, 152], "prompt_kwarg": [0, 1, 17, 19, 20, 39, 41, 63, 72, 74, 76, 86, 87, 104, 115, 116, 120, 124, 127, 129, 134, 135, 136, 138, 139, 145, 149, 158, 159, 161], "prompt_stat": [88, 134], "prompt_str": 39, "prompt_templ": 152, "prompt_token": [46, 104, 135, 158, 159], "prompt_token_count": 13, "prompt_vari": [32, 115, 120, 127, 129, 134, 137, 139, 143], "promptdata": 83, "promptoptim": [104, 159], "promt_kwarg": [0, 1], "propag": [104, 158, 159], "proper": 144, "properli": [33, 137, 152], "properti": [19, 21, 34, 37, 38, 45, 46, 63, 66, 74, 79, 87, 88, 115, 117, 125, 137, 142, 145, 161], "propetriari": 132, "propogat": 116, "proport": 127, "propos": [63, 65, 66, 71, 72, 74, 79, 80, 82, 101, 104, 127, 130, 136, 140, 146, 156, 157, 158, 159], "propose_data": [63, 72], "proposed_vari": [74, 79], "proprietari": [108, 139], "proto": 13, "protocol": [40, 127, 130, 143], "proven": [127, 149], "provid": [2, 4, 6, 7, 9, 14, 15, 16, 17, 22, 24, 26, 27, 31, 32, 33, 38, 40, 41, 45, 46, 63, 74, 78, 79, 80, 81, 86, 87, 92, 96, 101, 102, 104, 108, 109, 115, 117, 119, 120, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 142, 143, 145, 148, 149, 150, 152, 158, 159, 161], "proxi": 95, "proxim": 143, "prune": 101, "pt": 17, "public": 101, "publish": [0, 1, 103, 130], "pull": [15, 100, 127], "punchlin": 152, "punctuat": [2, 4, 57, 127, 144], "pundit": 127, "punish": 140, "purchas": 161, "pure": 129, "purpos": [2, 4, 32, 63, 80, 81, 92, 104, 120, 124, 135, 144, 150, 158, 159], "pursuit": 115, "push": [101, 103, 104, 158, 159], "put": [9, 16, 17, 24, 63, 72, 108, 114, 115, 117, 120, 125, 127, 131, 140, 143, 161], "puzzler": 17, "py": [46, 50, 53, 100, 101, 108, 115, 133, 141, 150, 154], "pydant": [31, 117], "pypdf2": [2, 4, 144], "pypi": 103, "pyproject": [100, 101, 103], "pytest": 100, "python": [2, 4, 15, 17, 19, 21, 31, 33, 38, 43, 46, 68, 93, 100, 107, 108, 117, 127, 133, 135, 137, 139, 140, 144, 147, 154, 161], "python3": 154, "pytorch": [32, 33, 63, 72, 73, 92, 101, 102, 103, 104, 109, 114, 116, 117, 120, 123, 130, 131, 133, 138, 152, 158, 159], "pyvi": [63, 72], "q": [22, 23, 142], "q_i": [22, 23], "qa": [32, 54, 127, 158, 161], "qa_templ": [19, 20], "qdrant": [28, 95, 111, 140], "qdrant_client": [28, 143], "qdrant_retriev": [22, 101, 143], "qdrantclient": [28, 143], "qdrantretriev": [22, 28, 143], "qe": 140, "qian": 140, "qin": 140, "qualifi": [63, 67], "qualiti": [16, 57, 63, 74, 79, 101, 102, 127, 129, 150], "qualnam": [27, 31, 46, 57, 61, 83, 95, 98], "quantit": 127, "quantiti": [104, 136, 149, 158, 159], "queri": [0, 1, 3, 11, 17, 19, 21, 22, 23, 24, 25, 26, 27, 28, 32, 46, 54, 57, 58, 59, 61, 101, 111, 115, 120, 125, 127, 129, 134, 135, 139, 140, 141, 142, 143, 144, 145, 148, 150, 154, 161], "querir": 154, "query_1": 143, "query_1_short": 143, "query_1_token": 143, "query_1_word": 143, "query_2": 143, "query_2_short": 143, "query_embed": [27, 135], "query_expans": 140, "query_gener": 147, "query_idx": 135, "query_index": 135, "query_or_queri": [22, 26, 161], "query_str": [46, 124], "question": [2, 4, 17, 19, 21, 31, 38, 50, 51, 53, 57, 58, 61, 101, 104, 108, 114, 116, 117, 120, 127, 134, 135, 136, 140, 141, 142, 144, 148, 149, 150, 151, 152, 154, 161], "question_answ": [104, 158, 159], "question_str": 127, "questiona": 127, "quick": [17, 45, 46, 104, 130, 142, 158, 159], "quickli": [15, 108, 109, 124, 143, 149], "quit": [101, 104, 127, 129, 137, 138, 139, 140, 143, 158, 159], "quot": [115, 137, 145], "r": [32, 37, 41, 104, 115, 120, 127, 129, 139, 140, 145, 149, 150, 152, 158, 159, 161], "rag": [47, 63, 74, 76, 102, 103, 108, 109, 111, 115, 142, 143, 147, 151], "rag_chain": 116, "rag_hotpotqa": 150, "rag_prompt_templ": 140, "raga": [59, 61, 140, 148], "ragev": 127, "rais": [2, 4, 31, 38, 39, 43, 46, 63, 74, 79, 95, 114, 117, 125, 129, 135, 137, 143, 161], "ralm_survei": 140, "random": [15, 43, 63, 73, 80, 82, 104, 135, 149, 158, 159], "random_max_steps_8_bb908_run_1": [104, 158, 159], "random_replac": [63, 73], "random_sampl": [38, 63, 73], "random_se": [63, 80, 82], "randomli": [38, 63, 73, 140], "randomsampl": [63, 73], "rang": [24, 33, 46, 57, 58, 61, 63, 66, 73, 74, 78, 83, 111, 117, 127, 135, 136, 140, 143, 144, 145, 148, 150, 151], "rank": [22, 23, 29, 104, 127, 130, 150, 158, 159], "rank_bm25": [22, 23, 143], "rankdir": [63, 72], "rare": [22, 23], "raspberri": [136, 158], "rate": [15, 39, 104, 145, 158, 159], "rather": [117, 125, 127, 129, 144], "ratio": 150, "rational": 149, "rau": 140, "raw": [4, 17, 22, 23, 46, 63, 66, 71, 80, 82, 104, 116, 117, 129, 134, 135, 136, 139, 144, 145, 149, 158, 159], "raw_respons": [9, 16, 22, 26, 46, 72, 104, 115, 125, 129, 133, 134, 135, 136, 138, 145, 158, 159], "raw_shot": [63, 66, 80, 82, 104, 149, 158, 159], "rc": 103, "re": [102, 103, 104, 111, 115, 142, 143, 158, 159], "reach": [22, 23, 83, 130, 139, 140, 142, 149], "react": [0, 46, 129, 154], "react_agent_task_desc": 1, "reactag": [0, 1, 111, 115, 129, 130, 142], "reactoutput": [0, 1], "read": [57, 63, 72, 86, 101, 102, 108, 115, 127, 132, 139, 141, 142, 150, 152], "readabl": 117, "readi": [63, 80, 82, 101, 116, 133, 143, 145], "readili": 127, "readm": [100, 101, 108], "readthedoc": [15, 133], "real": [2, 4, 63, 80, 81, 124, 127, 130, 143, 144], "realiti": 139, "realli": [124, 129, 135, 142], "realtion": 143, "reason": [19, 21, 22, 23, 63, 66, 74, 79, 104, 111, 115, 116, 117, 127, 130, 136, 140, 142, 143, 149, 158, 159], "reasoning_model": 12, "reattach": [2, 4], "rebas": 101, "rebuilt": 91, "recal": [59, 61, 140, 143, 148, 150], "recall_list": [59, 61, 127, 150], "receiv": [33, 126, 132, 161], "recent": 154, "reciproc": [127, 150], "recogn": 108, "recognit": [109, 131], "recommend": [9, 16, 100, 101, 107, 117], "recomput": 143, "reconstruct": [91, 117], "reconstructed_from_json": 117, "reconstructed_from_yaml": 117, "record": [46, 86, 87, 115, 124, 129, 135], "recreat": 91, "recurs": [32, 38, 120, 136, 147], "red": [96, 129], "reduc": [15, 63, 72, 124, 127, 140, 143], "redund": [57, 103, 127], "refer": [0, 1, 2, 4, 8, 9, 11, 13, 15, 16, 17, 22, 23, 24, 27, 28, 31, 32, 33, 39, 50, 53, 54, 57, 58, 59, 61, 63, 66, 72, 75, 100, 101, 104, 114, 116, 141, 142, 144, 152], "refin": [63, 74, 79, 143], "reflect": [2, 4, 127, 140, 144, 150], "regard": [63, 74, 79, 116], "regardless": [129, 145], "regist": [33, 34, 85, 87, 97, 124, 133, 147], "register_callback": [85, 147], "register_compon": 32, "register_gener": [87, 147], "register_module_forward_hook": 133, "register_paramet": [32, 120], "register_transform": [34, 124], "regress": [137, 139], "regular": [32, 33, 104, 158, 159], "reimplement": 143, "reinforc": 140, "reiniti": [22, 26, 143], "rel": [22, 23], "relai": [63, 72, 116, 129], "relat": [46, 57, 95, 101, 103, 127, 140, 143, 161], "relax": 120, "releas": [138, 140], "relev": [22, 26, 57, 59, 61, 63, 74, 79, 100, 101, 124, 125, 127, 129, 130, 132, 140, 143, 144, 145, 148, 150, 161], "relevance_list": 150, "reli": [31, 116, 131, 145], "reliabl": [102, 104, 127, 158, 159], "relianc": [124, 143], "reliev": 120, "reload": 124, "reloaded_dialog_turn_db": 124, "relu": [33, 120], "remain": [102, 126, 127, 143], "rememb": [115, 129], "remot": 101, "remov": [33, 34, 116, 124], "remove_dupl": 32, "remove_stop_word": 44, "remove_transform": [34, 124], "renden": 101, "render": [41, 139, 149], "render_failed_propos": [63, 74, 79], "render_histori": [63, 74, 79], "renered_prompt": 145, "renew": [124, 143], "renewab": 124, "repeat": [63, 72, 135, 144], "repeat_last_n": 15, "repeat_penalti": 15, "repetit": 15, "rephras": [63, 74, 79], "replac": [0, 1, 38, 63, 73, 74, 79, 116, 127, 135], "repli": 135, "replug": 140, "repo": [102, 108, 135, 149], "repons": 127, "reponse_embedder_output": 135, "report": [101, 127, 144, 158], "repositori": [100, 101, 103, 108, 113, 141], "repr": [1, 35], "repr_str": 125, "repres": [31, 32, 38, 51, 53, 63, 67, 72, 74, 77, 92, 117, 124, 127, 139, 143, 145, 150], "represent": [31, 41, 46, 63, 67, 74, 79, 98, 104, 126, 127, 137, 158, 159], "represent_ordereddict": 38, "reproduct": 140, "request": [100, 135, 142], "requir": [1, 7, 15, 19, 21, 22, 26, 31, 34, 38, 39, 46, 54, 61, 63, 71, 72, 74, 79, 80, 81, 104, 115, 117, 124, 127, 129, 130, 132, 133, 135, 137, 138, 139, 140, 142, 143, 144, 145, 148, 149, 150, 152, 158, 159], "required_field": [31, 38, 46, 117], "requires_opt": [63, 68, 72, 80, 81, 83, 104, 114, 136, 149, 158, 159, 161], "requr": 145, "rerank": [11, 17, 22, 29, 46, 108, 129, 135, 148], "reranker_retriev": [22, 143], "rerankerretriev": [22, 29, 143], "rerun": 154, "research": [63, 66, 108, 116, 124, 125, 127, 130, 131, 134, 139, 140, 142, 143, 148, 149, 161], "resembl": 109, "reserch": [63, 66], "reserv": 129, "reset": [22, 23, 24, 26, 28, 29, 34, 42, 63, 72, 87, 124, 144, 147], "reset_all_gradi": [63, 72], "reset_gradi": [63, 72], "reset_index": [22, 23, 24, 26, 28, 29, 42], "reset_mock_output": 39, "reset_steps_from_last_improv": [63, 74, 79], "resist": 127, "resolv": [38, 63, 74, 79, 101, 152], "reson": 154, "resort": 137, "resourc": [142, 143, 148], "respect": [38, 104, 126, 127, 130, 135, 140, 149, 158, 159], "respond": [15, 17, 104, 135, 139, 145, 158, 159], "respons": [0, 1, 6, 9, 12, 15, 16, 17, 18, 21, 22, 26, 39, 40, 42, 46, 58, 63, 68, 69, 72, 74, 76, 78, 79, 80, 82, 83, 101, 104, 115, 116, 120, 124, 125, 127, 129, 132, 133, 135, 136, 138, 140, 141, 142, 143, 144, 145, 148, 150, 158, 159], "response_component_id": [63, 72], "response_desc": [63, 69, 74, 78], "response_format": 16, "response_id": [63, 72], "response_str": [46, 124], "response_text": 135, "respos": 136, "rest": [33, 40, 120, 132, 139], "restart": 127, "restor": [22, 23, 31, 34, 42, 143], "restored_data": 31, "restored_dialog_turn_db": 124, "restructuredtext": 101, "result": [0, 1, 4, 15, 22, 23, 27, 32, 33, 35, 37, 38, 39, 46, 55, 57, 58, 61, 63, 67, 74, 76, 104, 109, 115, 116, 119, 126, 127, 130, 131, 134, 135, 138, 143, 144, 145, 149, 158, 159], "result1": 145, "result1someth": 145, "result2": 145, "result2someth": 145, "resum": [63, 80, 82], "resume_from_ckpt": [63, 80, 82], "resume_params_from_ckpt": [63, 80, 82], "retain": [63, 74, 79], "retent": 130, "retrain": 140, "retrank": 111, "retri": [11, 14, 15, 17, 40, 135], "retriev": [2, 3, 4, 6, 23, 24, 25, 26, 27, 28, 29, 32, 34, 37, 38, 46, 59, 61, 62, 63, 68, 70, 86, 102, 103, 108, 111, 120, 124, 126, 129, 130, 131, 135, 137, 138, 139, 141, 144, 145, 147, 148, 150, 151, 154, 160], "retrieve_by_sql": [22, 27], "retrieve_embedding_queri": [22, 24], "retrieve_string_queri": [22, 24], "retrieved_context": [59, 61, 127, 161], "retriever2": [22, 23], "retriever_1": 143, "retriever_as_tool": 37, "retriever_evalu": 150, "retriever_nod": 116, "retriever_out": [116, 161], "retriever_output": [3, 42, 83], "retriever_output_to_context_str": [2, 3], "retriever_recal": [61, 127], "retriever_repons": 138, "retrievercalllogg": 147, "retrieverdocumentstyp": [22, 29, 143], "retrieverdocumenttyp": [22, 23, 26, 29, 42, 46, 143], "retrieverevalu": [59, 61, 150], "retrieveroutput": [3, 22, 23, 24, 25, 26, 27, 28, 29, 42, 46, 68, 70, 116, 124, 143, 161], "retrieveroutputtocontextstr": [2, 3], "retrieveroutputtyp": [22, 26, 143], "retrieverqueriestyp": 143, "retrieverquerytyp": [42, 46, 143], "retrieverrecal": [59, 61, 127], "retrieverrelev": 127, "retrieverstrqueriestyp": [22, 26, 143], "retrieverstrquerytyp": 143, "return": [0, 1, 2, 4, 6, 15, 16, 17, 19, 20, 21, 22, 23, 25, 26, 27, 31, 32, 33, 34, 35, 36, 37, 38, 39, 43, 44, 46, 54, 55, 56, 57, 58, 59, 61, 63, 67, 68, 70, 72, 74, 77, 78, 79, 80, 81, 82, 91, 92, 93, 95, 96, 98, 104, 114, 115, 116, 117, 120, 124, 125, 127, 129, 130, 135, 136, 137, 139, 142, 143, 144, 145, 149, 158, 159, 161], "return_data_class": [19, 20, 21, 115, 137, 149, 161], "return_tensor": 17, "reus": 103, "reusabl": 33, "revers": [63, 72, 135], "revert": [63, 65, 66, 71, 72, 74, 79, 130, 149], "revert_data": [63, 72], "review": [103, 126, 127], "reward": 140, "rewrit": [63, 74, 79, 140], "rewritt": 140, "rewritten": 140, "rgb": 127, "rhyme": 115, "right": [22, 23, 38, 43, 95, 101, 104, 115, 116, 131, 134, 137, 140, 143, 154, 158, 159], "rigid": 108, "rigor": 127, "risk": 144, "ro": [116, 127], "robust": [109, 115, 116, 127, 137], "roc": 127, "roi": 127, "role": [9, 17, 63, 70, 74, 79, 108, 115, 116, 124, 130, 132, 135, 139, 142, 143, 152], "role_desc": [63, 68, 72, 74, 78, 104, 114, 136, 138, 149, 158, 159, 161], "rom": 137, "room": 161, "root": [48, 49, 50, 52, 53, 63, 72, 80, 82, 96, 100, 101, 104, 107, 133, 158, 159], "root_logg": [96, 133], "roug": [127, 140, 148], "rouge1_fmeasur": 127, "rouge1_precis": 127, "rouge1_recal": 127, "rouge2_fmeasur": 127, "rouge2_precis": 127, "rouge2_recal": 127, "rouge_scor": [54, 61, 127], "rougel_fmeasur": 127, "rougel_precis": 127, "rougel_recal": 127, "rougelsum_fmeasur": 127, "rougelsum_precis": 127, "rougelsum_recal": 127, "rougescor": 127, "rouko": 127, "round": 136, "row": [46, 127], "rrag": 127, "rst": [101, 134], "rubberdub": 127, "ruc": 140, "rule": [2, 4, 63, 72, 103, 115, 131, 144], "run": [0, 1, 15, 17, 37, 45, 63, 68, 70, 80, 81, 82, 100, 101, 103, 104, 107, 108, 115, 120, 124, 125, 126, 130, 133, 134, 135, 136, 138, 141, 142, 144, 145, 152, 158, 159], "run_async_function_cal": 145, "run_async_in_new_loop": 45, "run_model_client_embedding_usag": 135, "run_one_loss_sampl": [63, 80, 81], "run_one_task_sampl": [63, 80, 81], "run_sync_and_async_mix": 37, "run_sync_and_async_mix_without_wait": 37, "run_utils_funct": 135, "running_ev": [63, 80, 81], "runtim": [41, 107], "ruochen": 140, "s1": 56, "s2": 56, "safe": [38, 95], "safe_import": 95, "safe_load": [137, 150], "sai": [117, 127, 134], "said": 127, "same": [15, 22, 24, 26, 32, 33, 34, 39, 44, 46, 54, 61, 63, 69, 72, 73, 74, 79, 80, 82, 108, 115, 116, 117, 124, 125, 127, 129, 135, 137, 139, 140, 142, 143, 161], "sampl": [15, 38, 63, 65, 66, 71, 72, 73, 74, 77, 79, 80, 81, 82, 92, 103, 104, 114, 116, 135, 137, 140, 144, 149, 150, 158, 159, 161], "sample_embed": 135, "sample_subset_dataset": 50, "sample_text": 135, "sample_weight": 50, "sampledataclass": 137, "sampler": [63, 71, 92], "samples_to_str": [63, 65, 66], "san": 145, "sandbox": [37, 38, 45, 145], "sandbox_exec": [37, 38], "sandbox_execut": 145, "sat": 127, "satanjeev": 127, "satur": [22, 23], "save": [19, 20, 22, 23, 31, 32, 34, 42, 46, 48, 53, 63, 66, 72, 74, 79, 80, 82, 86, 87, 88, 93, 96, 104, 116, 120, 123, 124, 125, 129, 133, 134, 143, 149, 158, 159, 161], "save_csv": 93, "save_dir": [63, 80, 81, 86, 87, 88, 96, 133, 147], "save_json": [93, 120], "save_meta_data": 87, "save_pickl": 93, "save_st": [34, 124], "save_to_fil": [22, 23, 42, 143], "save_trac": [63, 80, 82], "scalabl": 143, "scale": [57, 127, 140, 143, 148], "scarecrow": 152, "sce": 127, "scenario": [0, 1, 22, 27, 28, 29, 32, 33, 36, 42, 43, 45, 63, 68, 80, 81, 115, 127, 135, 144, 160], "scene": 132, "schema": [19, 21, 31, 38, 46, 63, 74, 79, 115, 117, 137, 145, 152], "scheme": 140, "schmea": 117, "school": 115, "scientist": 141, "scope": 4, "score": [2, 4, 22, 23, 25, 26, 27, 32, 38, 39, 46, 55, 57, 58, 61, 63, 66, 68, 69, 70, 71, 72, 74, 78, 79, 80, 81, 83, 114, 116, 124, 126, 127, 135, 136, 138, 140, 144, 148], "score_i": 136, "score_i_t": 136, "scoretrac": 72, "scotland": 154, "scott": 161, "scottish": 161, "scratch": 150, "script": [96, 150, 154], "script_nam": 96, "sdk": [7, 12, 15, 17, 46, 101, 107, 143], "seamless": 142, "seamlessli": 143, "search": [24, 38, 126, 127, 140, 141, 142, 143, 144, 145, 148, 149], "search_reranking_with_cross": 143, "second": [37, 38, 59, 61, 83, 104, 115, 127, 134, 135, 140, 143, 144, 145, 147, 149, 154, 158, 159], "secondli": 115, "secret": [132, 141], "section": [100, 101, 107, 124, 127, 130, 132, 135, 139, 141, 142, 144, 145], "sector": [124, 143], "secur": 17, "see": [2, 4, 11, 14, 15, 17, 40, 63, 72, 86, 100, 101, 103, 104, 108, 115, 117, 119, 120, 123, 124, 126, 127, 132, 133, 135, 139, 140, 142, 143, 144, 145, 149, 158, 159], "seed": [15, 63, 80, 82, 92], "seek": [108, 139], "seem": 127, "seen": [124, 127, 154], "segment": [2, 4, 111, 140, 144], "select": [27, 57, 63, 73, 80, 82, 92, 101, 102, 127, 135, 137, 144, 149, 150, 152], "selected_embed": 135, "selected_text": 135, "self": [16, 17, 19, 20, 21, 32, 33, 37, 38, 63, 74, 79, 80, 81, 86, 104, 114, 115, 116, 117, 120, 125, 129, 133, 134, 135, 136, 138, 143, 145, 149, 158, 159, 161], "semant": [24, 103, 124, 126, 127, 135, 143, 144], "semscor": 127, "send": [104, 129, 135, 139, 143, 158, 159], "sens": [115, 127, 134], "sensit": [9, 31, 117, 131, 143, 144], "sensor": 143, "sent": [15, 139], "sentenc": [2, 4, 19, 20, 57, 115, 127, 129, 142, 144, 150], "sentiment": [2, 4, 126, 127, 144], "separ": [2, 4, 8, 15, 40, 96, 108, 116, 133, 138, 139, 140, 144, 161], "seq": [33, 120], "seq1": 33, "seq2": 33, "seq3": 33, "sequenc": [2, 3, 15, 17, 22, 23, 24, 25, 26, 27, 28, 29, 35, 36, 38, 42, 63, 71, 73, 92, 104, 120, 124, 130, 135, 142, 143, 144, 158, 159], "sequenti": [0, 1, 33, 39, 44, 63, 80, 82, 115, 124, 125, 129, 130, 142, 149, 150], "sequential_ord": [63, 80, 82], "seral": [117, 131], "sercur": 145, "seri": [2, 4, 17, 132, 135, 144], "serial": [9, 14, 15, 16, 31, 32, 33, 41, 46, 93, 117, 130, 139, 143, 152], "serializ": 34, "serv": [63, 80, 81, 104, 120, 158, 159], "servic": 9, "session": [46, 135], "session_id": [46, 124], "set": [0, 1, 2, 4, 8, 9, 15, 17, 19, 20, 22, 23, 24, 26, 31, 32, 38, 39, 41, 42, 51, 53, 57, 58, 61, 63, 68, 70, 71, 72, 73, 74, 78, 79, 80, 81, 82, 92, 93, 96, 101, 102, 115, 116, 124, 125, 126, 127, 129, 130, 133, 135, 136, 141, 142, 143, 144, 149, 150, 152, 156, 157, 161], "set_assistant_respons": 46, "set_backward_engin": [39, 63, 68, 70, 74, 78, 116], "set_cache_path": 39, "set_dataset": [63, 71, 73], "set_eval_fn_input": [63, 72], "set_grad_fn": [63, 72], "set_gt": [63, 72], "set_input_field": 31, "set_llm_client": [7, 17], "set_max_step": 92, "set_mock_output": 39, "set_output_field": 31, "set_paramet": 39, "set_peer": [63, 72], "set_predecessor": [63, 72], "set_random_se": [63, 80, 82], "set_scor": [63, 72], "set_target_param": [63, 74, 79], "set_task_desc": [31, 149], "set_teacher_gener": 39, "set_teacher_generatpr": 136, "set_user_queri": 46, "setup": [9, 34, 39, 63, 80, 81, 82, 100, 102, 107, 108, 115, 124, 125, 126, 129, 133, 134, 135, 140, 143, 148, 152], "setup_env": [104, 107, 115, 125, 127, 135, 158, 159], "seven": [127, 139], "sever": [33, 120, 141, 144], "sg": [127, 140, 148], "shallow": 32, "shape": [109, 131], "share": [4, 101, 103, 105, 108], "shell": [100, 101, 108], "shen": 140, "shift": [2, 4, 144], "shine": 130, "short": [63, 68, 72, 140, 148, 149, 161], "shorter": [143, 144], "shot": [31, 39, 66, 71, 72, 73, 80, 82, 109, 116, 130, 138, 139, 140, 142, 143, 148, 149, 151, 152, 161], "should": [2, 4, 9, 11, 14, 15, 16, 17, 19, 21, 22, 26, 31, 32, 33, 34, 36, 39, 40, 46, 57, 63, 68, 70, 74, 79, 88, 92, 100, 103, 104, 108, 115, 116, 120, 124, 125, 127, 129, 134, 136, 137, 138, 139, 140, 143, 144, 145, 148, 152, 158, 159], "show": [19, 21, 46, 63, 72, 80, 82, 101, 104, 108, 115, 116, 120, 126, 129, 136, 137, 138, 140, 142, 143, 145, 149, 150, 152, 157, 158, 159, 161], "showcas": [135, 143], "shown": [115, 145, 149], "shuffl": [92, 123], "siames": 129, "signal": [32, 101, 117], "signatur": [31, 117, 145, 149, 152], "signature_json": [19, 21, 31, 117], "signature_yaml": [19, 21, 31, 117], "signific": [124, 143], "significantli": [22, 23, 124, 143], "signitur": 152, "sil": 140, "similar": [24, 27, 38, 46, 59, 61, 92, 100, 101, 109, 116, 120, 125, 126, 127, 130, 133, 135, 136, 139, 141, 142, 143, 149, 154], "similaritypostprocessor": 108, "similarli": [101, 104, 108, 117, 134, 158, 159], "similr": 116, "simpl": [19, 21, 39, 43, 63, 73, 74, 77, 85, 101, 104, 115, 118, 124, 125, 126, 129, 133, 135, 137, 139, 140, 143, 144, 147, 158, 159], "simple_default_adalflow_system_prompt": 35, "simple_prompt": 139, "simplecustommodelcli": 135, "simpleqa": 134, "simpler": [19, 20, 152], "simplest": [115, 127, 129, 133, 145], "simpli": [37, 38, 39, 63, 74, 77, 78, 104, 109, 115, 117, 125, 127, 129, 133, 135, 137, 140, 158, 159], "simplier": 116, "simplifi": [9, 16, 92, 114, 115, 116, 124, 125, 131, 134, 142, 143, 145], "simplili": 145, "simul": [24, 37, 127, 135, 142, 143], "simultan": 135, "sinc": [100, 103, 115, 140], "singapor": [127, 140], "singl": [32, 33, 34, 36, 39, 45, 46, 54, 55, 57, 58, 59, 61, 63, 80, 81, 83, 91, 104, 124, 125, 127, 129, 130, 132, 133, 134, 135, 139, 140, 142, 143, 145, 147, 152, 158, 159, 161], "sit": 17, "site": [133, 154], "situat": [115, 125, 149], "six": [63, 74, 79, 101, 135], "size": [2, 4, 15, 16, 36, 48, 49, 53, 92, 104, 125, 127, 129, 135, 140, 141, 143, 148, 149, 157, 158, 159, 161], "skill": [63, 74, 79, 102], "skim": 143, "skip": [63, 73, 80, 82, 140], "skip_correct_sampl": [63, 72], "skip_special_token": 17, "skip_subset_v": [63, 80, 82], "sklearn": 127, "sky": 127, "sleep": [37, 145], "slice": 33, "slide": [2, 4, 144], "slightli": 145, "slow": 144, "slower": 15, "slowest": 140, "small": [36, 50, 53, 91, 124, 125, 126, 127, 135, 143], "small_tool_manag": 145, "smaller": [2, 4, 111, 125, 130, 140, 143, 144], "smallest": [2, 4, 144], "smapl": 15, "smooth": [57, 104, 114, 127, 159], "snippet": [46, 115, 127, 145, 150], "so": [0, 1, 38, 39, 44, 46, 57, 63, 74, 76, 80, 81, 101, 104, 107, 114, 115, 116, 117, 124, 127, 131, 132, 133, 136, 140, 142, 143, 144, 147, 150, 154, 158, 159, 161], "social": 144, "soft": [104, 158, 159], "softwar": [12, 131, 141], "solar": [124, 143], "solut": [63, 72, 101, 108, 111, 127, 131, 140], "solv": [108, 111, 115, 136, 140, 142, 152], "some": [17, 22, 26, 37, 43, 57, 63, 66, 73, 100, 104, 108, 117, 123, 127, 133, 134, 136, 139, 143, 149, 158, 159], "someth": [129, 145], "sometim": [57, 58, 61, 63, 72, 108, 117, 140, 148, 161], "soon": [101, 143, 147], "sort": [17, 41, 63, 72, 104, 135, 158, 159], "sort_desc": 27, "sort_gradi": [63, 72], "sort_kei": [31, 38], "sorted_id": 154, "sorted_log": 154, "sota": [130, 140, 148, 149], "sound": [57, 127], "sourc": [0, 1, 2, 3, 4, 6, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 104, 108, 109, 115, 117, 120, 124, 125, 127, 129, 133, 134, 135, 137, 139, 140, 142, 143, 144, 145, 148, 149, 158, 159, 161], "south": 154, "space": [2, 4, 19, 21, 126, 129, 137, 142, 144, 149], "span": [127, 134], "spatial": 149, "speak": [108, 145], "spec": 46, "speci": 161, "speciaf": 150, "special": [63, 72, 116, 129, 132, 139], "specif": [9, 13, 14, 15, 16, 17, 22, 29, 37, 39, 40, 42, 45, 46, 57, 58, 61, 63, 72, 74, 79, 85, 100, 104, 115, 117, 120, 127, 129, 133, 135, 139, 140, 142, 143, 144, 149, 150, 158, 159], "specifc": 46, "specifi": [1, 2, 4, 9, 13, 15, 16, 17, 25, 31, 33, 35, 46, 48, 53, 63, 72, 80, 82, 92, 96, 104, 115, 117, 135, 137, 139, 143, 144, 145, 158, 159], "spectrum": 127, "speed": [33, 140, 143], "speedup": 92, "spell": [57, 127, 161], "spelt": 161, "spend": 131, "split": [2, 3, 4, 22, 23, 48, 49, 50, 53, 63, 80, 82, 123, 124, 126, 130, 140, 141, 143, 154, 161], "split_and_emb": 124, "split_bi": [2, 4, 91, 124, 126, 144], "split_length": [91, 124, 126], "split_overlap": [91, 124, 126], "split_text": [2, 4], "split_text_by_word_fn": [22, 23, 143], "split_text_by_word_fn_then_lower_token": [22, 23, 143], "split_text_token": [22, 23], "splitted_doc": [2, 4, 126, 144], "splitter": [2, 4, 124, 126, 130, 141, 143], "splitter_config": 124, "sport": 127, "sql": [27, 124, 137, 143], "sqlalchemi": [95, 107, 124, 143], "squad": 127, "src": [133, 134], "srcdoc": [146, 155, 156, 157], "st": 161, "stabl": [15, 59, 61, 103, 127, 133], "stage": [108, 125, 127, 136, 140, 142, 143, 148, 150], "stai": [108, 120], "stalk": 136, "stamp": [104, 158, 159], "stand": [115, 129, 161], "standar": [13, 131], "standard": [9, 13, 14, 16, 17, 19, 21, 31, 37, 40, 46, 93, 100, 101, 103, 104, 108, 115, 120, 125, 127, 129, 130, 135, 137, 143, 144, 145, 150, 151, 152, 158, 159, 161], "stanford": 127, "start": [19, 21, 27, 31, 38, 46, 57, 61, 83, 95, 98, 100, 102, 115, 125, 130, 134, 135, 136, 143, 145, 149, 150, 161], "start_header_id": [132, 139], "start_of_assistant_step": 35, "start_of_context": 1, "start_of_exampl": 1, "start_of_output_format": 1, "start_of_sys_prompt": 145, "start_of_system_messag": [140, 149], "start_of_system_prompt": [1, 35, 104, 127, 158, 159], "start_of_tool": 1, "start_of_us": [104, 127, 140, 145, 158, 159], "start_of_user_messag": 149, "start_of_user_prompt": 35, "start_of_user_queri": 1, "start_tim": [37, 135, 145], "starter": 135, "stat": [104, 158, 159], "state": [22, 23, 24, 26, 28, 29, 31, 32, 34, 42, 63, 66, 86, 88, 91, 104, 115, 116, 120, 124, 129, 130, 131, 134, 143, 145, 159, 161], "state_dict": [32, 63, 71, 120], "statement": [57, 59, 61, 127, 140], "static": [31, 39, 45, 48, 53, 63, 66, 72], "stats_list": [63, 80, 82], "statu": [117, 137, 161], "std_of_scor": 83, "step": [0, 1, 2, 4, 35, 45, 46, 63, 65, 66, 68, 71, 74, 79, 80, 81, 82, 83, 100, 104, 109, 114, 115, 125, 127, 129, 130, 134, 136, 137, 139, 142, 143, 144, 149, 150, 158, 159, 161], "step_data": [63, 72], "step_histori": [1, 115], "step_result": 83, "stepoutput": [0, 1, 46, 115, 142], "steps_coher": 57, "steps_consist": 57, "steps_fluenc": 57, "steps_from_last_improv": [63, 74, 79], "steps_relev": 57, "steps_str": [35, 129, 134, 139], "stick": [63, 74, 79, 129], "still": [57, 68, 70, 101, 104, 124, 127, 129, 131, 133, 136, 140, 143, 144, 145, 149, 158, 159, 161], "stop": [15, 104, 114, 115, 116, 129, 139, 154, 158, 159], "storag": [4, 6, 34, 91, 124, 140, 141, 143], "store": [0, 1, 4, 6, 15, 27, 32, 34, 39, 63, 80, 81, 87, 88, 94, 116, 117, 124, 126, 129, 130, 134, 135, 143], "storei": [154, 161], "stori": 129, "stove": [104, 158, 159], "stovenn": [104, 158, 159], "str": [0, 1, 2, 3, 4, 6, 8, 9, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 63, 66, 67, 68, 69, 71, 72, 74, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 90, 91, 93, 94, 95, 96, 97, 98, 99, 104, 114, 115, 116, 117, 120, 124, 125, 129, 135, 136, 137, 143, 144, 145, 149, 152, 158, 159, 161], "straightforward": [127, 129, 137, 142], "strateg": 142, "strategi": [63, 80, 82, 104, 115, 127, 140, 148, 158, 159], "strawberri": [136, 158], "stream": [9, 15, 16, 101, 129], "streamlin": [31, 130, 145, 149, 152], "streamlit": 141, "strength": [140, 148], "stress": 120, "strict": [1, 32, 35, 144], "string": [0, 1, 6, 14, 15, 16, 19, 20, 21, 22, 24, 25, 26, 27, 31, 35, 38, 39, 41, 43, 44, 46, 54, 56, 57, 58, 59, 61, 63, 67, 74, 78, 79, 98, 104, 108, 115, 120, 129, 130, 132, 135, 136, 137, 138, 139, 140, 142, 143, 145, 150, 158, 159, 161], "string_pars": [21, 129, 137, 150], "strong": [63, 74, 79, 158], "strongli": 15, "structu": 117, "structur": [2, 4, 9, 13, 15, 16, 17, 19, 20, 21, 31, 32, 38, 40, 46, 57, 69, 73, 74, 79, 104, 114, 115, 116, 117, 123, 124, 125, 127, 129, 130, 134, 135, 137, 141, 143, 144, 145, 152, 158, 159, 161], "stuck": 144, "student": [39, 104, 136, 149, 158, 159], "student_graph": 158, "stun": 127, "style": [17, 33, 63, 74, 79, 92, 100, 101, 134], "subclass": [11, 14, 15, 17, 21, 22, 23, 31, 32, 39, 40, 42, 46, 63, 68, 86, 92, 95, 104, 111, 115, 116, 117, 120, 123, 125, 130, 135, 139, 143, 145, 149, 158, 159], "subcompon": [32, 33, 39, 63, 80, 81, 120, 129], "subcomponn": 120, "subdirectori": [62, 101], "subgraph": [63, 72], "submiss": 103, "submit": 101, "subqueri": [115, 142], "subquest": 115, "subsampl": [104, 158, 159], "subsequ": [59, 61, 142], "subset": [50, 53, 92, 104, 117, 127, 136, 150, 158, 159], "subset_dataset": [92, 104, 158, 159], "substanc": 161, "substanti": [124, 143], "substitut": 139, "substr": 56, "subtract": 142, "success": [63, 66, 104, 129, 145, 158, 159], "successfulli": [103, 145], "successor": [63, 72, 116, 138, 161], "successor_map_fn": [63, 72, 116, 161], "succssor": [63, 72], "sudden": [2, 4, 144], "suffici": 127, "suggest": [22, 23, 100, 101, 102, 115, 142], "suit": [46, 129, 161], "suitabl": [4, 101, 135], "sum": [63, 74, 77, 83, 104, 136, 140, 145, 149, 158, 159], "sum_": [22, 23, 140], "sum_op": [74, 77], "sum_output": [63, 83], "summar": [57, 108, 109, 127, 131, 140, 144], "summari": [57, 127, 129, 152], "summariza": 127, "summat": [74, 77], "summer": 115, "sundai": 127, "sunlight": [124, 143], "super": [32, 33, 37, 63, 68, 80, 81, 86, 104, 114, 117, 120, 125, 129, 134, 135, 149, 158, 159, 161], "supervis": [140, 148, 161], "support": [2, 4, 9, 14, 16, 17, 31, 32, 37, 38, 39, 40, 45, 46, 48, 53, 57, 63, 80, 81, 92, 93, 95, 96, 98, 102, 104, 107, 111, 116, 117, 125, 127, 129, 130, 132, 135, 137, 138, 140, 141, 143, 144, 145, 147, 148, 150, 152, 158, 159, 161], "support_model": [7, 17], "support_model_list": 135, "supporting_fact": 150, "suppos": [143, 161], "suppport": 147, "sure": [19, 21, 37, 63, 80, 81, 100, 101, 103, 104, 107, 115, 116, 117, 135, 137, 143, 145, 152, 158, 159], "surnam": 161, "surpass": [104, 140, 149, 158, 159], "survei": [115, 127, 140], "sustain": [124, 143], "suzgunmirac": [48, 53], "svg": [63, 72, 134], "sweep": 116, "swim": 115, "switch": [22, 26, 108, 125, 130, 135, 143], "sy": [1, 19, 20, 32, 35, 95, 115, 120, 124, 129, 139, 143, 145], "sylphai": [100, 101, 134, 141], "sync": [11, 14, 15, 17, 32, 37, 40, 45, 46, 101, 145], "sync_client": 135, "sync_function_1": 37, "sync_function_2": 37, "sync_tool_1": 37, "sync_tool_2": 37, "syncapicli": 17, "synchron": [15, 37, 120, 135], "syntax": [19, 20, 63, 72, 95, 129, 139], "synthes": [127, 140], "synthet": [63, 80, 82, 127, 136, 140], "system": [8, 15, 17, 35, 40, 41, 46, 63, 71, 74, 76, 79, 104, 108, 115, 116, 124, 127, 130, 132, 135, 136, 138, 139, 142, 144, 149, 158, 159, 160], "system_input": [9, 13, 16], "system_prompt": [32, 104, 136, 149, 158, 159], "system_tim": 124, "sytem": 13, "t": [2, 4, 9, 14, 16, 21, 22, 23, 32, 34, 38, 41, 46, 63, 72, 101, 103, 108, 127, 129, 132, 133, 136, 139, 142, 144], "t0": 142, "t2d": 143, "t_co": [38, 46, 63, 73, 92], "tab": 103, "tabl": [27, 63, 74, 79, 101, 124, 140, 143, 149], "table_nam": 27, "tabnin": 100, "tackl": 115, "tag": [103, 115, 135], "tail": 15, "take": [0, 1, 2, 4, 33, 37, 63, 66, 74, 78, 80, 81, 104, 108, 115, 116, 126, 127, 129, 130, 132, 135, 137, 138, 139, 142, 143, 144, 145, 149, 158, 159], "taken": [135, 145], "targ": 138, "target": [63, 72, 86, 101, 134, 137, 140, 158], "task": [0, 1, 2, 4, 19, 20, 31, 32, 35, 37, 39, 45, 48, 53, 57, 58, 61, 63, 68, 72, 74, 79, 80, 81, 82, 83, 86, 91, 93, 101, 109, 111, 114, 115, 120, 124, 125, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 148, 150, 151, 152, 155, 160, 161], "task_desc": [19, 20, 31, 115, 140], "task_desc_str": [19, 21, 35, 41, 57, 127, 129, 134, 139, 149, 150, 161], "task_desc_templ": 149, "task_instruct": 136, "task_model_config": [63, 80, 82], "task_nam": [48, 52, 53, 63, 80, 82], "task_pipelin": [104, 116, 158, 159], "task_spec": 115, "tau": 161, "tb": [63, 72], "teach": [63, 80, 81, 104, 115, 149, 158, 159], "teacher": [32, 39, 63, 66, 71, 81, 109, 114, 136, 149, 161], "teacher_gener": [104, 158, 159], "teacher_generator_model_config": [104, 158, 159], "teacher_mod": [2, 4, 32, 74, 77, 80, 81, 82, 136], "teacher_model_config": [63, 80, 81, 104, 114, 149, 158, 159, 161], "team": [63, 66, 101, 103, 109, 127], "tech": 28, "technic": [127, 145], "techniqu": [63, 74, 79, 120, 140, 143, 148], "technologi": [124, 127, 143], "tell": [63, 80, 81, 129, 135, 137, 158, 161], "temperatur": [15, 38, 39, 104, 115, 127, 129, 135, 142, 145, 158, 159], "templat": [0, 1, 19, 20, 21, 32, 35, 39, 41, 57, 58, 61, 63, 71, 80, 81, 86, 101, 104, 109, 111, 115, 116, 120, 127, 130, 136, 137, 140, 142, 143, 145, 149, 152, 158, 159, 161], "template_doc": [32, 120], "temporari": 138, "tensor": [17, 32, 50, 92, 116, 120, 123, 127, 130, 133, 138, 152], "tensorboard": 133, "tensorflow": [102, 133], "term": [22, 23, 57, 116, 127, 140, 148, 149], "termin": [15, 101, 129, 142], "test": [11, 13, 14, 15, 17, 32, 34, 48, 49, 50, 53, 63, 68, 80, 81, 82, 92, 95, 101, 102, 103, 107, 108, 109, 115, 127, 135, 140, 141, 143, 149, 154, 161], "test_": 100, "test_compon": 100, "test_data": [104, 158, 159], "test_dataset": [63, 80, 82, 104, 149, 158, 159], "test_input_1": 43, "test_input_2": 43, "test_input_3": 43, "test_input_4": 43, "test_openai_cli": 101, "test_react_ag": 115, "test_retriev": 161, "test_scor": 83, "test_xx_client": 101, "testgener": 86, "testgenerator_generator_cal": 86, "testgenerator_generator_trac": 86, "testset": [63, 80, 82, 104, 158, 159, 161], "text": [2, 4, 9, 12, 15, 16, 22, 23, 25, 28, 34, 36, 38, 41, 43, 44, 46, 57, 63, 67, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 90, 91, 96, 108, 109, 111, 117, 124, 125, 126, 127, 129, 130, 131, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 148, 149, 150, 161], "text_grad": [78, 79, 104, 116, 129, 149, 159, 161], "text_grad_debug_path": [63, 80, 82], "text_kei": [28, 143], "text_loss_with_eval_fn": 74, "text_optim": [80, 82], "text_optimizer_kwarg": [63, 80, 81], "text_optimizer_model_config": [63, 80, 81, 104, 149, 158, 159, 161], "text_optimizers_config_kwarg": [63, 80, 82], "text_splitt": [2, 101, 124, 126, 144], "text_splitter_set": 126, "textanalyt": 95, "textgrad": [67, 74, 75, 76, 77], "textoptim": [63, 71, 74, 79, 80, 81, 82, 130, 149], "textsearch": 143, "textsplitt": [2, 4, 32, 111, 124, 143], "textual": [70, 71, 74, 75, 79, 104, 109, 130, 151, 158, 159], "tfs_z": 15, "tgd": [63, 72], "tgd_optim": [74, 104, 129, 149, 159], "tgd_optimizer_trac": [63, 72], "tgddata": [63, 72, 74, 79], "tgdoptim": [63, 74, 79, 104, 129, 149, 159], "tgdoptimizertrac": [63, 72, 74, 79], "tgdwithevalfnloss": [63, 80, 82], "th": 1, "than": [1, 19, 20, 21, 24, 31, 32, 36, 63, 66, 80, 81, 104, 115, 116, 117, 119, 120, 125, 127, 131, 137, 140, 142, 143, 144, 145, 152, 158, 159], "thank": 46, "thei": [17, 33, 34, 43, 63, 72, 80, 81, 95, 116, 124, 127, 129, 131, 132, 133, 136, 137, 138, 142, 143, 152], "them": [16, 22, 23, 24, 31, 32, 37, 39, 42, 43, 46, 57, 68, 95, 100, 101, 108, 109, 115, 120, 124, 126, 127, 132, 133, 135, 136, 137, 138, 139, 140, 143, 145, 150, 152, 158], "themat": 144, "themselv": [63, 80, 81], "thenlper": [17, 125, 135], "therefor": [104, 127, 135, 142, 158, 159], "thereot": 127, "thi": [0, 1, 2, 4, 6, 8, 9, 11, 12, 14, 15, 16, 17, 21, 22, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 54, 57, 58, 61, 63, 68, 69, 71, 72, 74, 76, 77, 79, 80, 81, 86, 91, 92, 94, 95, 96, 97, 100, 101, 102, 103, 104, 107, 108, 109, 114, 115, 116, 117, 118, 119, 120, 124, 125, 126, 127, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 155, 156, 157, 158, 159, 161], "thing": [40, 63, 74, 79, 104, 115, 123, 131, 135, 137, 138, 140, 158, 159], "think": [63, 74, 79, 102, 104, 108, 115, 116, 136, 158, 159, 161], "third": [16, 83, 96, 104, 135, 143, 159], "those": [92, 104, 132, 135, 136, 138, 140, 158, 159], "though": [21, 117, 127, 135, 137, 139, 143, 144, 149], "thought": [0, 1, 19, 21, 46, 63, 74, 79, 104, 115, 117, 140, 142, 145, 149, 158, 159], "thoughtact": [19, 21], "thread": [63, 80, 81], "three": [32, 39, 68, 70, 101, 102, 104, 108, 115, 125, 126, 127, 129, 130, 131, 132, 134, 136, 137, 140, 145, 158, 159, 161], "threshold": [63, 80, 82], "threshold_score_to_compute_grad_for_error": 39, "through": [9, 37, 39, 46, 68, 70, 103, 108, 124, 126, 127, 129, 134, 135, 140, 141, 142, 143, 150], "thu": [46, 125, 135, 137, 139, 149, 150], "thumbnail": 147, "tiktoken": [2, 4, 44, 144], "time": [37, 39, 63, 73, 74, 79, 101, 104, 115, 126, 127, 131, 135, 139, 140, 142, 143, 145, 148, 149, 154, 158, 159], "time_period": 101, "time_stamp": [83, 87, 88, 104, 134, 158, 159], "timeout": 38, "timestamp": [46, 96], "tini": 133, "tion": 127, "titl": [46, 101, 124, 127, 143, 150], "tive": 140, "tmp": [25, 143], "to_context_str": 72, "to_dict": [7, 9, 14, 15, 16, 22, 23, 31, 32, 39, 41, 42, 63, 72, 73, 74, 79, 93, 98, 104, 117, 120, 139, 143, 145, 158, 159], "to_dict_class": [31, 98], "to_embed": [91, 126], "to_give_ta": [104, 158, 159], "to_json": [31, 46, 117, 145, 152], "to_json_exampl": 31, "to_json_obj": [31, 117], "to_json_signatur": [31, 117, 145, 152], "to_pr": [63, 69], "to_pred_id": [63, 69], "to_prompt_str": 46, "to_provid": [104, 158, 159], "to_schema": [31, 117], "to_schema_str": [31, 117], "to_thread": 37, "to_yaml": [31, 46, 63, 69, 117, 124, 145, 152], "to_yaml_exampl": 31, "to_yaml_obj": [31, 117], "to_yaml_signatur": [31, 63, 69, 117, 152], "toaster": 136, "toasternn": [104, 158, 159], "tobacco": 161, "todai": [22, 23, 76, 133], "todo": [114, 116, 132, 138, 140, 147, 149], "toembed": [2, 3, 91, 124, 126], "toembedderrespons": 126, "togeth": [15, 37, 63, 74, 79, 104, 108, 114, 115, 117, 120, 123, 124, 125, 126, 129, 136, 139, 140, 158, 159, 161], "token": [2, 4, 7, 9, 15, 16, 17, 19, 21, 22, 23, 31, 46, 63, 66, 72, 104, 109, 124, 129, 130, 132, 135, 139, 140, 143, 145, 148, 149, 150, 152, 158, 159], "tokenlogprob": [16, 46], "tokyo": 145, "tol": 38, "tolist": 17, "toml": [100, 101, 103, 141], "tone": [63, 74, 79], "too": [63, 80, 81, 114, 116, 124, 127, 143, 149], "took": 102, "tool": [0, 1, 15, 16, 35, 37, 45, 46, 100, 101, 103, 108, 127, 129, 130, 131, 132, 133, 134, 139, 142, 143, 145], "tool_1": 37, "tool_cal": 145, "tool_choic": 16, "tool_help": 142, "tool_manag": [115, 145], "toolkit": 140, "toolmanag": [45, 115], "toolnam": 142, "tools_str": [35, 129, 134, 139], "top": [15, 21, 22, 23, 24, 25, 26, 27, 28, 29, 32, 39, 42, 101, 102, 104, 117, 120, 127, 131, 135, 137, 140, 142, 143, 158, 159, 161], "top_k": [15, 17, 22, 23, 24, 25, 26, 27, 28, 29, 38, 42, 91, 116, 124, 161], "top_k_docu": 124, "top_n": 11, "top_p": [15, 17, 104, 127, 158, 159], "topic": [57, 127], "topolog": [63, 72], "torch": [17, 73, 95, 107, 116, 120, 133], "torch_dtyp": 17, "torchmetr": [127, 150], "toretriev": 140, "total": [22, 23, 59, 61, 104, 127, 135, 136, 137, 143, 145, 150, 158, 159], "total_docu": 143, "total_step": [63, 80, 81], "total_tim": 83, "total_token": [46, 104, 135, 158, 159], "total_token_count": 13, "tottenham": 127, "toward": [116, 127], "tower": [134, 154], "townsend": 127, "trace": [2, 4, 32, 39, 63, 68, 69, 70, 72, 74, 77, 80, 81, 82, 85, 86, 87, 88, 104, 109, 133, 138, 142, 147, 158, 159], "trace_api_kwarg": 63, "trace_forward_pass": 63, "trace_generator_cal": [86, 93, 134], "trace_generator_error": 134, "trace_generator_st": [86, 134], "trace_graph": [63, 72, 104, 109, 116, 158, 159], "trace_graph_evalfntotextloss_output_id_6ea5da3c": 158, "trace_graph_sum": [104, 158, 159], "trace_graph_sum_root": [104, 158, 159], "trace_id": [63, 72], "trace_optim": [63, 72], "traceback": 154, "tracer": 133, "track": [8, 9, 13, 14, 16, 40, 42, 46, 63, 68, 69, 72, 80, 82, 88, 101, 108, 116, 120, 124, 129, 134, 135, 138, 141, 143], "track_completion_usag": [7, 8, 9, 13, 14, 16, 40], "tradit": [127, 150], "trag": 144, "train": [0, 1, 2, 4, 32, 33, 37, 39, 45, 48, 49, 50, 53, 63, 68, 70, 71, 72, 73, 74, 77, 78, 80, 81, 82, 94, 109, 114, 116, 120, 132, 134, 137, 138, 139, 140, 144, 146, 150, 154], "train_batch_s": [63, 80, 82, 104, 149, 158, 159], "train_data": [104, 158, 159], "train_dataset": [63, 80, 82, 104, 149, 158, 159], "train_diagnos": [154, 161], "train_load": [63, 80, 82], "train_multi_hop_rag": 154, "train_step": [63, 80, 81], "train_teach": [104, 158, 159], "trainabl": [32, 37, 39, 83, 109, 116, 138, 140, 149], "trainable_param": 39, "trainable_prompt_kwarg": 127, "trainer": [72, 81, 83, 109, 114, 127, 130, 131, 136, 140, 154, 156, 157, 161], "trainer_": 130, "trainer_st": [63, 80, 82, 83], "trainerresult": [63, 80, 82, 83, 104, 158, 159], "trainerstepresult": 83, "trainervalidatestat": 83, "trainset": [63, 80, 81, 82, 104, 154, 158, 159, 161], "transact": 127, "transfom": 124, "transform": [2, 3, 17, 22, 23, 33, 34, 46, 63, 74, 76, 95, 107, 108, 111, 116, 124, 125, 126, 127, 130, 133, 135, 136, 140, 143, 144, 154], "transform_cli": 17, "transformed_item": [34, 124], "transformer_cli": 17, "transformer_setup": [34, 124], "transformercli": 135, "transformerembedd": [7, 17, 135], "transformerllm": [7, 17], "transformerrerank": [7, 17], "transformers_cli": [7, 125, 135], "transformerscli": [7, 17, 22, 29, 46, 125, 135, 143], "transla": 127, "translat": [109, 127, 131], "transpar": [31, 108, 117, 120, 131, 138, 140, 148], "travers": [63, 72], "treat": [37, 76, 145], "treatment": 120, "trec": [51, 53], "trec_classif": 149, "trec_data": 31, "trec_data_dict": 38, "trec_data_list": [31, 38], "trecclassifierad": 149, "trecclassifierstructuredoutput": 149, "trecdata": [31, 38, 51, 53, 117, 149], "trecdata2": 117, "trecdatalist": [31, 38], "trecdataset": [50, 53], "trecextendeddata": 149, "tredatalist": 31, "tree": 32, "trend": 101, "tri": 101, "trigger": [103, 135], "trigger_callback": 85, "trim_block": 139, "trinabl": 138, "tripl": [19, 21, 115, 127, 137, 145], "triplet": 127, "trombon": [104, 158, 159], "true": [0, 1, 9, 17, 19, 20, 21, 22, 23, 25, 27, 32, 34, 38, 39, 43, 46, 49, 53, 57, 58, 61, 63, 66, 68, 71, 72, 73, 74, 79, 80, 82, 83, 86, 92, 96, 104, 115, 117, 124, 125, 126, 127, 129, 135, 136, 137, 139, 142, 143, 145, 149, 150, 152, 156, 157, 158, 159, 161], "truli": 129, "trumpet": [104, 158, 159], "trust_remote_cod": 17, "trusti": 115, "truth": [54, 55, 58, 59, 61, 63, 74, 78, 80, 81, 104, 114, 116, 124, 127, 143, 150, 158, 159, 161], "try": [63, 74, 79, 95, 104, 115, 131, 135, 137, 145, 149, 158, 159, 161], "tuesdai": 127, "tune": [63, 74, 79, 138, 140, 148], "tung": 140, "tupl": [32, 38, 54, 56, 57, 58, 59, 61, 63, 72, 80, 81, 82, 83, 95, 96, 114, 127, 149, 158, 161], "turbo": [0, 1, 9, 32, 38, 39, 86, 115, 120, 124, 129, 132, 135, 143, 145, 151], "turf": 127, "turin": 127, "turn": [6, 32, 46, 104, 111, 124, 126, 129, 135, 141, 142, 158, 159], "turn_db": [5, 6], "tutori": [100, 104, 111, 120, 134, 140, 142, 143, 144, 148, 149, 150, 152, 158, 159, 161], "twenti": 161, "twitter": 127, "two": [0, 1, 17, 21, 33, 34, 46, 56, 63, 69, 73, 93, 96, 101, 104, 109, 115, 116, 119, 124, 125, 127, 129, 130, 133, 134, 135, 136, 137, 138, 140, 142, 143, 145, 147, 149, 150, 154, 158, 159, 160, 161], "type": [2, 4, 6, 9, 13, 14, 16, 17, 19, 21, 22, 23, 24, 25, 26, 27, 29, 31, 32, 33, 34, 36, 37, 38, 39, 40, 42, 43, 45, 54, 56, 57, 58, 59, 61, 63, 70, 72, 73, 74, 77, 79, 80, 81, 82, 85, 87, 91, 92, 93, 95, 96, 97, 98, 101, 104, 115, 116, 117, 120, 123, 124, 125, 126, 127, 134, 135, 136, 137, 138, 142, 145, 147, 149, 150, 152, 158, 159, 161], "type_hint": 38, "type_obj": 38, "type_var_map": 38, "typeerror": [2, 4, 31, 46], "typevar": 143, "typic": [108, 117, 120, 127, 134, 135], "u": [9, 34, 100, 101, 102, 104, 117, 124, 126, 137, 139, 140, 143, 145, 158, 159], "u00e2": 127, "u201c": 127, "u20ac": 127, "ultim": 131, "unabl": [127, 142], "unbias": 127, "unbound": 37, "uncontrol": 108, "undefin": [8, 9, 11, 13, 14, 15, 16, 17, 40, 46, 135], "under": [33, 63, 80, 82, 100, 101], "underli": [120, 127, 129], "understand": [9, 15, 16, 17, 19, 20, 40, 57, 63, 74, 79, 100, 101, 108, 116, 124, 127, 130, 135, 137, 140, 142, 143, 144, 145, 148, 158], "unexpect": [127, 154], "uniev": [140, 148], "unifi": [31, 32, 39, 45, 63, 80, 81, 104, 109, 120, 124, 129, 130, 140, 143, 158, 159], "uniform": 144, "union": [17, 22, 23, 25, 32, 38, 43, 46, 104, 115, 143, 149, 158, 159, 161], "uniqu": [32, 46, 63, 74, 78, 80, 82, 88, 104, 108, 111, 120, 123, 131, 136, 138, 142, 147, 158, 159], "unit": [2, 4, 45, 46, 100, 125, 127, 144, 145, 161], "univers": 161, "unknown": [16, 145], "unless": [34, 68], "unlik": [63, 74, 78, 129, 142], "unmodifi": 126, "unnatur": [57, 127], "unnecessari": [63, 74, 79], "unrealist": 127, "unrel": 135, "unsupport": [38, 135, 145], "until": 139, "up": [0, 1, 8, 9, 19, 20, 22, 26, 33, 38, 46, 63, 101, 102, 108, 115, 116, 117, 125, 126, 127, 129, 130, 131, 133, 135, 136, 138, 140, 141, 142, 143, 148, 149, 152, 158], "upcom": 120, "updat": [33, 39, 41, 63, 68, 70, 72, 86, 88, 100, 103, 135, 140, 141, 142, 145, 149], "update_default_backward_pass_setup": 39, "update_dialog_turn": 46, "update_from_to": [63, 69], "update_gradient_memori": [63, 74, 79], "update_prompt_kwarg": 41, "update_valu": [63, 72], "upper": 56, "upstream": 101, "ur": 135, "uri": 15, "url": [9, 12, 16, 27, 129, 143], "us": [0, 1, 2, 3, 4, 6, 8, 9, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 57, 58, 59, 61, 63, 66, 68, 69, 70, 71, 72, 73, 74, 76, 78, 79, 80, 81, 82, 83, 86, 88, 91, 92, 93, 94, 95, 96, 97, 100, 101, 107, 108, 109, 111, 115, 116, 117, 120, 123, 124, 126, 127, 130, 131, 132, 136, 137, 138, 139, 140, 141, 142, 145, 148, 149, 150, 152, 155, 156, 157, 161], "usabl": 101, "usag": [2, 4, 8, 9, 13, 14, 16, 19, 21, 40, 46, 104, 115, 124, 126, 133, 142, 143, 144, 158, 159], "usagemetadata": 13, "usal": [140, 148], "use_cach": [0, 1, 39, 57, 58, 61, 104, 136, 149, 158, 159, 161], "use_cas": [100, 104, 108, 149, 150, 158, 159], "use_llm_as_fallback": [0, 1], "use_loss_eval_fn": [63, 80, 81], "use_pipelin": 17, "use_teach": [32, 136], "use_token": [22, 23, 143], "use_weighted_sampl": [63, 71], "user": [0, 1, 6, 7, 8, 9, 15, 16, 17, 19, 20, 21, 22, 23, 26, 27, 28, 29, 32, 33, 36, 38, 39, 42, 43, 45, 46, 63, 68, 72, 74, 79, 80, 81, 93, 100, 101, 102, 104, 111, 114, 115, 116, 117, 120, 124, 125, 127, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 154, 158, 159], "user_cas": 101, "user_exampl": 137, "user_id": [46, 124], "user_input": 137, "user_queri": [6, 46, 124], "user_query_timestamp": [46, 124], "user_tim": 124, "user_to_pars": 137, "userqueri": [46, 124], "using_logprob": 140, "usual": [63, 74, 78, 134], "util": [2, 4, 7, 46, 63, 73, 80, 81, 82, 92, 95, 96, 101, 104, 107, 115, 120, 123, 125, 127, 129, 130, 133, 142, 143, 144, 158, 159], "uuid": 46, "uuid4": 46, "v": [32, 38, 45, 63, 80, 81, 101, 116, 131], "v1": [12, 16, 103], "v2": [11, 15, 103], "v3": [11, 143], "val": [48, 49, 50, 53, 104, 149, 158, 159, 161], "val_data": [104, 158, 159], "val_dataset": [63, 80, 81, 82, 104, 149, 158, 159], "val_scor": [63, 74, 79, 83], "valid": [19, 21, 31, 38, 43, 63, 80, 81, 82, 103, 104, 109, 114, 115, 130, 137, 145, 149, 158, 159], "validataion": [104, 158, 159], "validate_condit": [63, 80, 81], "validate_data": 38, "validate_stat": 83, "validation_step": [63, 80, 81], "vallinaragad": 161, "valset": [63, 80, 82, 104, 158, 159, 161], "valu": [1, 8, 15, 21, 22, 23, 27, 31, 38, 41, 43, 46, 54, 55, 57, 59, 61, 63, 66, 71, 72, 74, 77, 79, 83, 95, 98, 102, 104, 115, 116, 117, 136, 137, 143, 145, 146, 149, 156, 157, 158, 159], "valuabl": 143, "valueerror": [2, 4, 38, 43, 104, 114, 135, 137, 158, 159, 161], "vanila": 140, "vanilla": [115, 154], "vanillarag": 161, "varaibl": [139, 149], "vari": 132, "variabl": [0, 1, 9, 15, 16, 17, 37, 38, 39, 41, 46, 63, 67, 72, 74, 75, 77, 79, 99, 108, 125, 129, 135, 139, 145], "variable_desc": [63, 69, 74, 78], "variable_nam": [63, 72], "variant": [63, 71, 130], "variat": 129, "varieti": 127, "varietri": 38, "variou": [38, 101, 120, 127, 129, 135, 137, 142, 143, 150, 151], "vast": 129, "ve": [101, 152], "vector": [2, 4, 24, 27, 28, 46, 91, 124, 125, 126, 141, 143, 144], "vector_column": 27, "vector_db": 27, "vector_nam": 28, "vectorizer_set": 126, "veget": 136, "vendor": 108, "venv": 154, "verbatim": 68, "verbos": 117, "veri": [22, 23, 63, 72, 104, 108, 116, 127, 144, 158, 159], "verif": [63, 74, 79, 142], "verifi": [104, 135, 158, 159], "version": [9, 15, 24, 34, 63, 66, 72, 76, 92, 93, 95, 96, 100, 107, 127, 135, 141, 142, 143], "versu": 135, "vertex": 13, "vertic": [127, 134], "via": [15, 21, 36, 37, 39, 40, 45, 63, 66, 67, 71, 75, 76, 86, 111, 115, 117, 120, 125, 126, 127, 129, 130, 131, 133, 135, 136, 140, 145, 148, 161], "video": 143, "view": [127, 137, 140, 141, 145], "violin": [104, 158, 159], "virtual": 100, "visibl": 33, "vision": 16, "visit": [8, 11, 13, 14, 15, 134, 142], "visual": [63, 72, 109, 115, 118, 120, 125, 138, 139, 146, 158], "vote": 127, "vouch": 108, "vx": 103, "w": 127, "w_i": 136, "wa": [31, 46, 116, 127, 132, 140, 148, 152, 161], "wai": [17, 31, 33, 34, 45, 46, 74, 77, 104, 108, 109, 115, 116, 117, 120, 124, 125, 127, 129, 133, 135, 136, 137, 140, 143, 144, 145, 158, 159, 161], "wait": 135, "walk": 150, "wandb": 133, "wang": [127, 140], "want": [0, 1, 11, 19, 21, 31, 36, 37, 39, 46, 63, 72, 80, 81, 86, 100, 101, 104, 108, 115, 117, 125, 127, 129, 131, 133, 135, 137, 138, 139, 143, 145, 149, 152, 158, 159], "ward": 127, "warm": 140, "warn": [39, 96], "washington": 161, "washtenaw": 161, "wast": [124, 143], "watch": [126, 127], "water": [109, 120, 129, 131], "we": [0, 1, 2, 4, 7, 8, 15, 16, 24, 31, 32, 34, 37, 38, 39, 40, 41, 44, 46, 50, 53, 57, 59, 61, 63, 66, 72, 76, 80, 81, 88, 93, 100, 101, 102, 103, 104, 108, 109, 110, 114, 115, 116, 117, 119, 120, 124, 125, 126, 127, 129, 130, 131, 133, 134, 135, 137, 138, 139, 140, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 154, 158, 159, 160, 161], "weaker": [104, 158, 159], "weather": [135, 145, 161], "web": [127, 133, 141], "wednesdai": 127, "week": 127, "weight": [22, 23, 32, 38, 63, 66, 71, 72, 116, 120, 133, 136, 137, 140, 143], "weighted_sampl": [63, 80, 82, 104, 149, 158, 159], "weights_per_class": [63, 73], "weishi": 140, "weizhuchen": 140, "welcom": [62, 101, 102], "well": [32, 34, 57, 100, 104, 115, 117, 119, 124, 127, 129, 131, 138, 139, 140, 142, 143, 144, 148, 149, 152, 158, 159], "went": 129, "were": [57, 95, 115, 127, 161], "wh": 130, "what": [9, 22, 26, 31, 37, 38, 104, 115, 116, 117, 120, 124, 125, 126, 127, 130, 133, 134, 135, 136, 139, 140, 143, 144, 145, 148, 149, 152, 158, 159], "whatev": [104, 158, 159], "when": [3, 8, 15, 16, 22, 23, 24, 31, 32, 33, 34, 36, 37, 41, 46, 54, 61, 63, 66, 68, 72, 74, 79, 80, 81, 82, 95, 101, 103, 104, 108, 115, 116, 117, 124, 125, 126, 127, 132, 133, 134, 135, 136, 139, 140, 142, 143, 144, 145, 147, 149, 150, 152, 154, 156, 157, 158, 159], "whenev": [129, 135, 136], "where": [2, 4, 46, 57, 63, 71, 74, 79, 86, 96, 104, 108, 114, 124, 127, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 143, 144, 145, 147, 149, 151, 158, 159, 160], "wherea": 144, "wherebi": [57, 127], "whether": [0, 1, 15, 22, 23, 34, 38, 42, 57, 58, 61, 63, 72, 83, 109, 125, 127, 129, 137, 143, 144], "which": [0, 1, 2, 4, 11, 14, 15, 17, 22, 23, 24, 26, 31, 34, 36, 37, 38, 40, 46, 57, 63, 68, 70, 71, 72, 73, 80, 81, 92, 96, 104, 108, 116, 117, 120, 124, 125, 127, 129, 130, 132, 133, 134, 135, 136, 137, 139, 140, 142, 143, 144, 145, 148, 149, 150, 154, 158, 159, 161], "while": [15, 33, 38, 63, 66, 74, 79, 95, 101, 102, 104, 117, 124, 129, 130, 131, 135, 136, 138, 141, 143, 144, 158, 159], "white": [96, 129], "who": [17, 19, 21, 42, 127, 132, 143], "whole": [32, 37, 46, 63, 69, 74, 79, 80, 81, 92, 104, 116, 127, 130, 137, 140, 148, 150, 158, 159], "whom": 135, "why": [46, 108, 115, 124, 125, 130, 152, 161], "wide": [111, 117, 127, 131, 140, 143, 148, 149, 161], "width": [63, 72, 134], "wiki": [22, 23, 24, 140, 142, 143], "wikidata": 139, "wikipedia": [22, 23, 139, 140, 142, 143, 161], "wild": 135, "win": 152, "wind": [124, 143], "window": [2, 4, 15, 96, 143, 144], "wip": 101, "wise": 157, "witchcraft": 161, "within": [31, 32, 63, 80, 81, 101, 104, 109, 115, 116, 118, 120, 130, 143, 158, 159], "without": [22, 26, 31, 33, 37, 38, 46, 108, 115, 124, 129, 132, 133, 136, 139, 140, 143, 145, 148, 149, 161], "won": [46, 101, 103, 127, 132, 144], "wontfix": 101, "wood": 161, "word": [2, 4, 22, 23, 44, 57, 63, 72, 74, 79, 91, 104, 115, 124, 126, 127, 132, 135, 140, 143, 158, 159], "work": [2, 4, 15, 24, 32, 34, 37, 38, 63, 71, 74, 79, 81, 92, 103, 104, 109, 115, 116, 120, 123, 124, 126, 127, 129, 130, 134, 136, 137, 139, 140, 143, 149, 152, 158, 159, 161], "worker": [63, 80, 81, 82, 123, 149], "workflow": [100, 103, 130, 142, 154], "workshop": 127, "world": [2, 4, 22, 23, 34, 46, 86, 108, 109, 115, 124, 127, 130, 131, 132, 134, 137, 144, 145], "world2": 34, "world3": 34, "world4": 34, "worldcup": 127, "wors": [63, 66, 74, 79, 134], "worth": [104, 158, 159], "worthi": 140, "would": [96, 104, 120, 126, 127, 134, 139, 140, 142, 143, 148, 158, 159, 160], "wrap": [2, 3, 32, 37, 38, 44, 63, 68, 70, 72, 74, 76, 116, 123, 129, 135, 145], "wrap_and_escap": [63, 72], "wrapper": [8, 9, 11, 12, 13, 14, 15, 16, 86, 145], "write": [17, 38, 93, 100, 101, 108, 120, 124, 127, 135, 139, 145, 161], "write_list_to_jsonl": 93, "written": [93, 104, 158, 159, 161], "wrong": [127, 129], "wrote": 37, "wu": 140, "www": [22, 23, 133, 143], "x": [22, 23, 32, 33, 34, 38, 63, 68, 73, 80, 81, 103, 115, 116, 120, 135, 136, 139, 140, 143, 145, 161], "x0c": [2, 4], "x_i": 136, "xb": 24, "xiaobao": 140, "xiaodong": 140, "xinbei": 140, "xingxuan": 140, "xq": 24, "xu": [127, 140], "xuan": 140, "xx": 145, "xx_note": 101, "y": [38, 54, 60, 61, 63, 74, 76, 78, 80, 81, 103, 104, 114, 115, 127, 140, 145, 149, 158, 159, 161], "y_gt": [54, 60, 61, 63, 74, 78, 80, 81, 104, 114, 149, 158, 159, 161], "y_hat": [63, 74, 76], "y_label": [104, 149, 158, 159, 161], "y_obj": 114, "y_pred": [63, 74, 78, 80, 81, 104, 114, 136, 138, 149, 158, 159, 161], "y_pred_t": 136, "y_t": 140, "yam": 136, "yaml": [19, 20, 21, 31, 38, 43, 45, 46, 101, 117, 120, 137, 145, 149, 150, 152], "yaml_definit": [45, 145], "yaml_dict_str": 137, "yaml_format_instruct": [19, 21], "yaml_list_str": 137, "yaml_nested_dict_str": 137, "yaml_obj": 43, "yaml_output_format": [19, 21], "yaml_output_format_prompt": 137, "yaml_output_format_templ": [19, 21], "yaml_output_pars": 137, "yaml_pars": [19, 21, 43], "yaml_signatur": 117, "yaml_str": [19, 21, 31, 38, 43, 117], "yamloutputpars": [19, 20, 21, 117], "yamlpars": [19, 21, 43], "yang": [127, 140], "ye": [58, 61, 108, 127, 137, 140, 143, 161], "year": [59, 61, 127, 140], "yellow": 96, "yer": 17, "yet": [17, 39, 104, 158, 159], "yield": [22, 23, 32, 92], "yime": 140, "yin": 102, "yizhong": 140, "yml": [38, 137], "you": [1, 2, 3, 4, 8, 9, 11, 14, 15, 17, 19, 20, 21, 22, 23, 24, 26, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 48, 53, 57, 58, 59, 61, 63, 68, 73, 74, 78, 79, 80, 81, 82, 86, 91, 92, 95, 96, 100, 101, 102, 103, 104, 107, 108, 109, 115, 116, 117, 120, 123, 124, 125, 126, 127, 129, 130, 132, 133, 134, 135, 136, 137, 139, 140, 141, 143, 144, 145, 148, 149, 150, 152, 154, 158, 159, 161], "your": [4, 9, 13, 15, 19, 21, 22, 23, 31, 32, 37, 39, 42, 46, 57, 58, 61, 63, 68, 80, 82, 91, 96, 100, 102, 103, 104, 107, 108, 109, 111, 115, 117, 120, 123, 124, 125, 126, 127, 129, 130, 131, 133, 134, 135, 136, 137, 140, 141, 143, 144, 145, 148, 149, 150, 152, 158, 159], "your_api_kei": [9, 91], "your_api_key_if_you_use_anthrop": [100, 107], "your_api_key_if_you_use_coher": [100, 107], "your_api_key_if_you_use_googl": [100, 107], "your_api_key_if_you_use_groq": [100, 107], "your_api_key_if_you_use_hf": [100, 107], "your_api_key_if_you_use_openai": [100, 107], "your_branch_nam": 101, "your_endpoint": 9, "your_forked_repository_url": 101, "your_modul": 9, "your_vers": 9, "youradalcomponentnam": [63, 80, 82], "yourself": [91, 107, 135, 143], "yu": 140, "yune": 140, "yupeng": 127, "z": [103, 140], "zephyr": 17, "zeqiu": 140, "zer": 136, "zero": [22, 23, 104, 136, 140, 143, 148, 149, 158, 159], "zero_grad": [63, 71, 74, 79], "zhao": 140, "zhengbao": 140, "zhiqingsun": 140, "zhu": 127, "zip": [95, 135, 149], "zishan": 127, "zora": 140}, "titles": ["agent", "react", "data_process", "data_components", "text_splitter", "memory", "memory", "model_client", "anthropic_client", "azureai_client", "bedrock_client", "cohere_client", "deepseek_client", "google_client", "groq_client", "ollama_client", "openai_client", "transformers_client", "utils", "output_parsers", "dataclass_parser", "outputs", "retriever", "bm25_retriever", "faiss_retriever", "lancedb_retriver", "llm_retriever", "postgres_retriever", "qdrant_retriever", "reranker_retriever", "Components", "base_data_class", "component", "container", "db", "default_prompt_template", "embedder", "func_tool", "functional", "generator", "model_client", "prompt_builder", "retriever", "string_parser", "tokenizer", "tool_manager", "types", "Core", "big_bench_hard", "hotpot_qa", "trec", "types", "utils", "Datasets", "answer_match_acc", "base", "functional", "g_eval", "llm_as_judge", "retriever_recall", "utils", "Evaluation", "API Reference", "Optimization", "&lt;no title&gt;", "few_shot", "bootstrap_optimizer", "function", "grad_component", "gradient", "loss_component", "optimizer", "parameter", "sampler", "text_grad", "backend_engine_prompt", "llm_text_loss", "ops", "text_loss_with_eval_fn", "tgd_optimizer", "trainer", "adal", "trainer", "types", "Tracing", "callback_manager", "decorators", "generator_call_logger", "generator_state_logger", "Utils", "cache", "config", "data", "file_io", "global_config", "lazy_import", "logger", "registry", "serialization", "setup_env", "Development Essentials", "Contributing Process", "Contributor Guide", "Release Version Control Guide", "Learn AdalFlow in 15 minutes", "Community", "Get Started", "Installation", "Introduction", "Unites Research and Production", "Integrations", "Integrations", "Resources", "Resources", "AdalComponent", "Agent", "Auto Text-Grad", "DataClass", "AdalFlow JSON Viewer", "Class Hierarchy", "Component", "Configurations", "Data Pipeline", "Datasets", "Data (Database/Pipeline)", "Embedder", "Embedder", "LLM Evaluation", "Few-shot Optimizer", "Generator", "Tutorials", "Design Philosophy", "Introduction", "Logger Example", "Tracing", "ModelClient", "Optimizer", "Parser", "Parameter", "Prompt", "RAG Playbook", "RAG with Memory", "ReAct Agent", "Retriever", "Text Splitter", "Function calls", "AdalFlow Trace Graph", "Trainer", "Designing RAG", "Classification Optimization", "Evaluating RAG", "Use Cases", "Introduction to BaseDataClass", "&lt;no title&gt;", "Multi-hop RAG Optimization", "Q&amp;A Computation Graph", "Q&amp;A Few Shot Demo Trace Graph", "Q&amp;A Text Grad Trace Graph", "Question Answering", "Question Answer with LLM as Judge", "RAG End to end optimization", "RAG optimization"], "titleterms": {"": [142, 147], "1": [101, 107, 131, 145], "15": 104, "2": [101, 107, 131, 145], "3": [101, 104, 107, 131, 145, 149, 158, 159], "4": [101, 107], "4o": [104, 158, 159], "5": [101, 104, 149, 158, 159], "7": 101, "A": [155, 156, 157], "As": 116, "For": 127, "In": [115, 129], "NOT": 129, "On": [104, 158, 159], "One": [104, 158, 159], "To": 116, "With": [127, 143], "__output_fields__": 117, "about": 117, "across": 129, "action": [115, 117, 120, 125, 129, 137, 143, 145], "adal": 81, "adalcompon": [63, 104, 114, 116, 149, 158, 159], "adalflow": [104, 107, 118, 127, 146, 149], "adapt": 116, "add": 101, "addit": [124, 135], "agent": [0, 30, 115, 130, 142], "align": 127, "all": [116, 130], "an": [101, 129, 142], "ani": 116, "answer": [158, 159], "answer_match_acc": 54, "anthropic_cli": 8, "api": [62, 107, 115, 117, 120, 124, 125, 127, 129, 133, 135, 137, 139, 143, 145, 149, 161], "applat": 132, "applic": [108, 139], "architectur": 141, "assign": 101, "async": 135, "asynchron": 135, "auto": [116, 138], "awar": 144, "azureai_cli": 9, "backend_engine_prompt": 75, "base": [55, 63, 127, 130, 143, 144], "base_data_class": 31, "basedataclass": 152, "basic": 129, "batchembedd": 125, "bedrock_cli": 10, "benchmark": [101, 104, 127, 135, 149, 158, 159], "best": 129, "big_bench_hard": 48, "bm25_retriev": 23, "bm25retriev": 143, "booleanpars": 137, "boostrap": 136, "bootstrap": [104, 158, 159], "bootstrap_optim": 66, "build": [104, 130, 131, 135, 158, 159], "cach": 90, "call": 145, "callback_manag": 85, "capabl": 127, "case": [136, 151], "chat": [132, 135], "chunk": 144, "class": [63, 117, 119, 130, 139, 143], "classici": 127, "classif": 149, "client": 135, "cloud": 124, "code": [100, 116], "codebas": 101, "cohere_cli": 11, "common": [103, 129], "commun": 105, "comparison": [104, 158, 159], "complet": 132, "complex": 131, "compon": [30, 32, 62, 120, 130], "comput": [147, 155], "config": [91, 129], "configur": [120, 121], "contain": 33, "content": 144, "context": 137, "contribut": 101, "contributor": [102, 127], "control": 103, "copilot": 100, "core": [47, 62], "creat": [101, 129], "credit": 33, "custom": [115, 135, 144], "data": [30, 63, 92, 115, 117, 122, 124, 130, 132, 139, 140, 141, 143], "data_compon": 3, "data_process": 2, "databas": [101, 111, 124, 143], "dataclass": [117, 137], "dataclass_pars": 20, "dataclasspars": 137, "dataset": [53, 62, 104, 117, 123, 127, 158, 159, 161], "db": 34, "debug": [104, 158, 159], "decor": 86, "deep": 142, "deepseek_cli": 12, "default": 139, "default_prompt_templ": 35, "defin": 149, "definit": 144, "demo": [138, 156], "depend": 100, "descent": [104, 158, 159], "describ": 117, "deseri": 120, "design": [33, 115, 117, 120, 129, 131, 133, 137, 139, 140, 143, 145, 148], "detail": [141, 144], "develop": 100, "diagnos": [104, 158, 159, 161], "dialogturn": 124, "diff": 138, "directli": 135, "dive": 142, "do": 132, "document": [100, 124, 140, 143, 144], "doe": 144, "dspy": 149, "embed": [111, 127, 135], "embedd": [36, 125, 126, 135], "embedderoutput": 125, "end": [108, 145, 160], "environ": 107, "error": 129, "essenti": [100, 130], "eval": 127, "evalfunct": [116, 147], "evalu": [61, 62, 104, 127, 130, 150, 158, 159], "exampl": [33, 101, 117, 129, 133, 135, 141, 144], "exist": 101, "experi": 143, "faiss_retriev": 24, "faissretriev": 143, "featur": 144, "few": [63, 104, 128, 136, 156, 158, 159], "few_shot": 65, "file": [120, 124], "file_io": 93, "filter": 143, "first": 148, "fix": 144, "floatpars": 137, "flow": [132, 139], "format": [117, 145], "foundat": 108, "from": [117, 120, 129], "func_tool": 37, "funccompon": 120, "function": [38, 56, 67, 145], "functionexpress": 145, "functiontool": 145, "g_eval": [57, 127], "gener": [39, 116, 129, 138, 140], "generator_call_logg": 87, "generator_state_logg": 88, "generatoroutput": 129, "get": [106, 129], "global_config": 94, "goal": 143, "google_cli": 13, "gpt": [104, 149, 158, 159], "grad": [116, 157], "grad_compon": 68, "gradient": [63, 69, 104, 116, 158, 159], "graph": [146, 147, 155, 156, 157], "groq": 135, "groq_client": 14, "gt": 127, "gt_context": 127, "guid": [102, 103], "hierarchi": 119, "high": [104, 158, 159], "hood": 158, "hop": 154, "hotpot_qa": 49, "hotpotqa": 161, "how": [101, 108, 136, 144], "i": [108, 129, 142], "imag": 129, "implement": [136, 141, 142], "import": 103, "infer": 135, "instal": 107, "instanc": 117, "instead": [132, 143], "integr": [101, 110, 111, 144], "intermedi": 138, "intpars": 137, "introduct": [108, 130, 132, 142, 152], "issu": 101, "jinja2": 139, "json": 118, "jsonoutputpars": 137, "jsonpars": 137, "judg": [127, 159], "kei": 107, "label": 101, "lancedb_retriv": 25, "lancedbretriev": 143, "lazy_import": 95, "learn": 104, "librari": [127, 129], "lightrag": [108, 132, 142], "listpars": 137, "llm": [111, 117, 127, 131, 132, 135, 139, 143, 159], "llm_as_judg": 58, "llm_retriev": 26, "llm_text_loss": 76, "load": [107, 117], "local": [124, 125], "localdb": 143, "log": [130, 133], "logger": [96, 133], "loss": 116, "loss_compon": 70, "low": [104, 158, 159], "manag": 141, "manual": [104, 158, 159], "memori": [5, 6, 30, 141], "method": [104, 158, 159], "metric": 127, "minimum": 129, "minut": 104, "mode": [104, 158, 159], "model": [111, 115, 124, 125, 127, 129, 135], "model_cli": [7, 40, 101, 129], "modelcli": [30, 135], "motiv": 33, "multi": 154, "multichat": 135, "need": [132, 142], "neg": 136, "new": [101, 103], "nlg": 127, "note": 103, "notebook": 101, "observ": 147, "ollama_cli": 15, "op": 77, "openai": [125, 135], "openai_cli": 16, "oper": 116, "optim": [62, 63, 71, 104, 116, 128, 130, 131, 136, 140, 149, 151, 154, 158, 159, 160, 161], "option": [107, 158], "orchestr": 129, "organ": 116, "other": [127, 144], "our": 131, "output": [21, 30, 125, 129, 137, 145, 149], "output_pars": 19, "output_processor": 129, "over": 131, "overview": [47, 53, 61, 63, 84, 89, 101, 103, 104, 140, 141, 144, 158, 159], "packag": 107, "paper": 148, "parallel": 145, "paramet": [72, 138], "pars": 117, "parser": [30, 137], "part": [101, 108], "pattern": 129, "perform": [104, 149, 158, 159], "philosophi": 131, "pipelin": [104, 116, 122, 124, 130, 140, 141, 149, 158, 159], "playbook": [140, 148], "postgres_retriev": 27, "postgresretriev": 143, "pr": 101, "practic": 129, "predict": 138, "prepar": [101, 104, 140, 158, 159, 161], "previou": 132, "principl": 131, "print": 120, "prioriti": 101, "problem": 103, "process": [30, 101, 135], "processor": 125, "product": 109, "project": 133, "prompt": [104, 115, 139, 158, 159], "prompt_build": 41, "protocol": 135, "provid": 111, "pull": 101, "put": [116, 130], "q": [155, 156, 157], "qdrant": 143, "qdrant_retriev": 28, "qualiti": 131, "quantiti": 131, "question": [158, 159], "quick": [101, 141, 145], "rag": [127, 130, 140, 141, 148, 150, 154, 160, 161], "raga": 127, "react": [1, 115, 142], "read": 124, "realm": 140, "reason": 30, "recal": 127, "refer": [62, 115, 117, 120, 124, 125, 127, 129, 133, 135, 137, 139, 140, 143, 145, 148, 149, 150, 158, 159, 161], "registri": 97, "releas": 103, "repo": 101, "request": 101, "rerank": [111, 140, 143], "reranker_retriev": 29, "research": 109, "resourc": [112, 113, 124, 132], "retriev": [22, 30, 42, 101, 116, 127, 140, 143, 161], "retriever_recal": 59, "review": 101, "same": [104, 158, 159], "sampl": 136, "sampler": 73, "scope": [137, 143, 145], "score": [104, 143, 147, 158, 159], "sdk": 135, "self": 140, "sequenti": 120, "serial": [98, 120], "set": [100, 104, 107, 158, 159], "setup": [104, 158, 159], "setup_env": 99, "shot": [63, 104, 128, 136, 156, 158, 159], "show": 117, "simplic": 131, "size": 144, "split": [104, 144, 158, 159], "splitter": 144, "start": [101, 104, 106, 108, 141, 158, 159], "step": [101, 103], "storag": 130, "strategi": [136, 144, 149], "string": [117, 127], "string_pars": 43, "structur": [63, 100, 101, 108, 120, 132, 149], "subclass": 129, "submodul": [0, 2, 5, 7, 19, 22, 65, 74, 80], "switch": 129, "sync": 135, "system": [101, 141], "task": [104, 116, 127, 149, 158, 159], "teacher": [104, 138, 158, 159], "templat": [129, 139], "test": [100, 104, 136, 158, 159], "text": [104, 116, 132, 144, 157, 158, 159], "text_grad": 74, "text_loss_with_eval_fn": 78, "text_splitt": 4, "textsplitt": 144, "textual": [63, 116], "tgd_optim": 79, "threshold": 143, "tip": [100, 144], "togeth": [116, 130, 143], "token": [44, 144], "tool": 115, "tool_manag": 45, "toolmanag": 145, "top_k": 143, "trace": [62, 84, 129, 130, 134, 136, 146, 156, 157], "train": [104, 127, 129, 130, 136, 149, 158, 159, 161], "trainabl": 161, "trainer": [63, 80, 82, 104, 116, 147, 149, 158, 159], "transformers_cli": 17, "trec": 50, "turbo": [104, 149, 158, 159], "tutori": [101, 129, 130], "type": [46, 51, 83, 129, 143, 144], "under": 158, "understand": [129, 131], "unit": 109, "up": [100, 107], "upcom": 144, "us": [104, 125, 129, 133, 135, 143, 144, 151, 158, 159], "usag": [33, 129, 135, 141], "use_cas": 101, "util": [18, 52, 60, 62, 89, 135], "v": [104, 135, 149, 158, 159], "variabl": 107, "vector": 111, "version": 103, "viewer": 118, "vllm": 111, "walkthrough": 145, "we": [132, 136], "weigt": 136, "what": [100, 101, 108, 129, 142], "when": 129, "why": [132, 139, 142], "without": 127, "word": 144, "work": [101, 117, 144], "workflow": 131, "yamloutputpars": 137, "yamlpars": 137, "you": 142, "your": 101}})