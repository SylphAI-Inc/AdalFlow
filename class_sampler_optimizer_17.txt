DatasetDict({
    train: Dataset({
        features: ['text', 'coarse_label', 'fine_label'],
        num_rows: 5452
    })
    test: Dataset({
        features: ['text', 'coarse_label', 'fine_label'],
        num_rows: 500
    })
})
Train example: {'text': 'How did serfdom develop in and then leave Russia ?', 'coarse_label': 2, 'fine_label': 26}
Test example: {'text': 'How far is it from Denver to Aspen ?', 'coarse_label': 5, 'fine_label': 40}
INFO:core.prompt_builder:Prompt has variables: ['classes']
INFO:core.prompt_builder:Prompt has variables: ['example', 'schema']
DEBUG:use_cases.classification.task:output_str: Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

DEBUG:httpx:load_ssl_context verify=True cert=None trust_env=True http2=False
DEBUG:httpx:load_verify_locations cafile='/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/certifi/cacert.pem'
INFO:core.prompt_builder:Prompt has variables: ['task_desc_str', 'examples_str', 'input', 'input_label', 'output_format_str']
data: None, requires_opt: True
Registered parameter examples_str with value Parameter: None
INFO:core.prompt_builder:Prompt has variables: ['output', 'label', 'input', 'description']
module: Prompt(
  template: You are a classifier. Given a Question, you need to classify it into one of the following classes:
  Format: class_index. class_name, class_description
  {% for class in classes %}
  {{loop.index-1}}. {{class.label}}, {{class.desc}}
  {% endfor %}
  , preset_prompt_kwargs: {'classes': [{'label': 'ABBR', 'desc': 'Abbreviation'}, {'label': 'ENTY', 'desc': 'Entity'}, {'label': 'DESC', 'desc': 'Description and abstract concept'}, {'label': 'HUM', 'desc': 'Human being'}, {'label': 'LOC', 'desc': 'Location'}, {'label': 'NUM', 'desc': 'Numeric value'}]}, prompt_variables: ['classes']
)    
module: Generator(
  model_kwargs={'model': 'llama3-8b-8192', 'temperature': 0.0, 'top_p': 1, 'frequency_penalty': 0, 'presence_penalty': 0, 'n': 1}, model_type=ModelType.LLM
  (model_client): GroqAPIClient()
  (system_prompt): Prompt(
    template: {# task desc #}
    {% if task_desc_str %}
    {{task_desc_str}}
    {% endif %}
    {%if output_format_str %}
    <OUTPUT_FORMAT>
    {{output_format_str}}
    </OUTPUT_FORMAT>
    {% endif %}
    {# example #}
    {% if examples_str %}
    <EXAMPLES>
    {#{% for example in examples_str %}#}
    {{examples_str}}
    {#{% endfor %}#}
    </EXAMPLES>
    {% endif %}
    {{input_label}}: {{input}}
    Your output:
    , preset_prompt_kwargs: {'task_desc_str': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n', 'output_format_str': 'Your output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n', 'input_label': 'Question'}, prompt_variables: ['task_desc_str', 'examples_str', 'input', 'input_label', 'output_format_str']
  )
  (output_processors): Sequential(
    (0): YAMLOutputParser(
      data_class_for_yaml=<class 'use_cases.classification.prompt.OutputFormat'>
      (yaml_output_format_prompt): Prompt(
        template: Your output should be formatted as a standard YAML instance with the following schema:
        ```
        {{schema}}
        ```
        {% if example %}
        Here is an example:
        ```
        {{example}}
        ```
        {% endif %}
        
        -Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
        -Follow the YAML formatting conventions with an indent of 2 spaces. 
        -Quote the string values properly.
        , prompt_variables: ['example', 'schema']
      )
      (output_processors): YAMLParser()
    )
    (1): <lambda>Component()
  )
)    
module: GroqAPIClient()    
module: Prompt(
  template: {# task desc #}
  {% if task_desc_str %}
  {{task_desc_str}}
  {% endif %}
  {%if output_format_str %}
  <OUTPUT_FORMAT>
  {{output_format_str}}
  </OUTPUT_FORMAT>
  {% endif %}
  {# example #}
  {% if examples_str %}
  <EXAMPLES>
  {#{% for example in examples_str %}#}
  {{examples_str}}
  {#{% endfor %}#}
  </EXAMPLES>
  {% endif %}
  {{input_label}}: {{input}}
  Your output:
  , preset_prompt_kwargs: {'task_desc_str': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n', 'output_format_str': 'Your output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n', 'input_label': 'Question'}, prompt_variables: ['task_desc_str', 'examples_str', 'input', 'input_label', 'output_format_str']
)    
module: Sequential(
  (0): YAMLOutputParser(
    data_class_for_yaml=<class 'use_cases.classification.prompt.OutputFormat'>
    (yaml_output_format_prompt): Prompt(
      template: Your output should be formatted as a standard YAML instance with the following schema:
      ```
      {{schema}}
      ```
      {% if example %}
      Here is an example:
      ```
      {{example}}
      ```
      {% endif %}
      
      -Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
      -Follow the YAML formatting conventions with an indent of 2 spaces. 
      -Quote the string values properly.
      , prompt_variables: ['example', 'schema']
    )
    (output_processors): YAMLParser()
  )
  (1): <lambda>Component()
)    
module: YAMLOutputParser(
  data_class_for_yaml=<class 'use_cases.classification.prompt.OutputFormat'>
  (yaml_output_format_prompt): Prompt(
    template: Your output should be formatted as a standard YAML instance with the following schema:
    ```
    {{schema}}
    ```
    {% if example %}
    Here is an example:
    ```
    {{example}}
    ```
    {% endif %}
    
    -Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
    -Follow the YAML formatting conventions with an indent of 2 spaces. 
    -Quote the string values properly.
    , prompt_variables: ['example', 'schema']
  )
  (output_processors): YAMLParser()
)    
module: Prompt(
  template: Your output should be formatted as a standard YAML instance with the following schema:
  ```
  {{schema}}
  ```
  {% if example %}
  Here is an example:
  ```
  {{example}}
  ```
  {% endif %}
  
  -Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
  -Follow the YAML formatting conventions with an indent of 2 spaces. 
  -Quote the string values properly.
  , prompt_variables: ['example', 'schema']
)    
module: YAMLParser()    
module: <lambda>Component()    
params: {'generator.examples_str': Parameter: None}
few_shot_optimizer: <optim.optimizer.BootstrapFewShot object at 0x2851a6cd0>
few_shot_state_dict: None
data: {'text': 'What does the abbreviation cwt. ?', 'coarse_label': 0, 'fine_label': 1}
task_input: What does the abbreviation cwt. ?, corse_label: 0
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What does the abbreviation cwt. ?', 'examples_str': 'Question: What is the correct way to abbreviate cc. at the bottom of a business letter ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is a fear of strong light ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a girl to have sex with you ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who developed the first polio vaccine ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What are the top 5 tallest buildings in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How fast can a Corvette go ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is the correct way to abbreviate cc. at the bottom of a business letter ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is a fear of strong light ?
class_name: Entity 
class_index: 1
--------

Question: How do you get a girl to have sex with you ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who developed the first polio vaccine ?
class_name: Human being 
class_index: 3
--------

Question: What are the top 5 tallest buildings in the world ?
class_name: Location 
class_index: 4
--------

Question: How fast can a Corvette go ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What does the abbreviation cwt. ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the correct way to abbreviate cc. at the bottom of a business letter ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is a fear of strong light ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a girl to have sex with you ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who developed the first polio vaccine ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What are the top 5 tallest buildings in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How fast can a Corvette go ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does the abbreviation cwt. ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.connection:connect_tcp.started host='api.groq.com' port=443 local_address=None timeout=5.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x2950eb610>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x2850b7410> server_hostname='api.groq.com' timeout=5.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x2851a7a90>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:29:56 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13326'), (b'x-ratelimit-remaining-tokens', b'29605'), (b'x-ratelimit-reset-requests', b'1h47m20.304s'), (b'x-ratelimit-reset-tokens', b'790ms'), (b'x-request-id', b'req_01hz0w1spkese9zwbvekxg5vwm'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=8w6keN1mX8Na6iWAvqd5yOm3e2NEAmQ_KTkxk.ex.OI-1716942596-1.0.1.1-P621ZQHzGmWzlHYTidKlHpV7HiJayLHndXPJF3iXLoipyg0pV5Yq2qfVHyPMVEUMJ5cMfm5NLjWfshxtfK50ug; path=/; expires=Wed, 29-May-24 00:59:56 GMT; domain=.groq.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b25f779cda642c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the meaning of the abbreviation cwt, which is a common abbreviation for "hundredweight".
class_name: ABBR
class_index: 0
data: {'text': 'What is the abbreviated term used for the National Bureau of Investigation ?', 'coarse_label': 0, 'fine_label': 0}
task_input: What is the abbreviated term used for the National Bureau of Investigation ?, corse_label: 0
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What is the abbreviated term used for the National Bureau of Investigation ?', 'examples_str': 'Question: What is the correct way to abbreviate cc. at the bottom of a business letter ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is a fear of strong light ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a girl to have sex with you ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who developed the first polio vaccine ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What are the top 5 tallest buildings in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How fast can a Corvette go ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is the correct way to abbreviate cc. at the bottom of a business letter ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is a fear of strong light ?
class_name: Entity 
class_index: 1
--------

Question: How do you get a girl to have sex with you ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who developed the first polio vaccine ?
class_name: Human being 
class_index: 3
--------

Question: What are the top 5 tallest buildings in the world ?
class_name: Location 
class_index: 4
--------

Question: How fast can a Corvette go ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What is the abbreviated term used for the National Bureau of Investigation ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the correct way to abbreviate cc. at the bottom of a business letter ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is a fear of strong light ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a girl to have sex with you ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who developed the first polio vaccine ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What are the top 5 tallest buildings in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How fast can a Corvette go ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is the abbreviated term used for the National Bureau of Investigation ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:29:56 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13325'), (b'x-ratelimit-remaining-tokens', b'29230'), (b'x-ratelimit-reset-requests', b'1h47m29.634s'), (b'x-ratelimit-reset-tokens', b'1.539s'), (b'x-request-id', b'req_01hz0w1t22ec684wrjz77g7ktz'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b25f79eebf642c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking for the abbreviated term used for the National Bureau of Investigation, which is typically abbreviated as FBI.
class_name: ABBR
class_index: 0
data: {'text': 'What does NAFTA stand for ?', 'coarse_label': 0, 'fine_label': 1}
task_input: What does NAFTA stand for ?, corse_label: 0
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What does NAFTA stand for ?', 'examples_str': 'Question: What is the correct way to abbreviate cc. at the bottom of a business letter ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is a fear of strong light ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a girl to have sex with you ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who developed the first polio vaccine ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What are the top 5 tallest buildings in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How fast can a Corvette go ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is the correct way to abbreviate cc. at the bottom of a business letter ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is a fear of strong light ?
class_name: Entity 
class_index: 1
--------

Question: How do you get a girl to have sex with you ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who developed the first polio vaccine ?
class_name: Human being 
class_index: 3
--------

Question: What are the top 5 tallest buildings in the world ?
class_name: Location 
class_index: 4
--------

Question: How fast can a Corvette go ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What does NAFTA stand for ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the correct way to abbreviate cc. at the bottom of a business letter ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is a fear of strong light ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a girl to have sex with you ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who developed the first polio vaccine ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What are the top 5 tallest buildings in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How fast can a Corvette go ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does NAFTA stand for ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:29:56 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13324'), (b'x-ratelimit-remaining-tokens', b'28926'), (b'x-ratelimit-reset-requests', b'1h47m35.753s'), (b'x-ratelimit-reset-tokens', b'2.148s'), (b'x-request-id', b'req_01hz0w1t9tef5bteff1wd9jw8y'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b25f7b7fc9642c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the meaning of an abbreviation, which is typically represented by the letters "NAFTA".
class_name: ABBR
class_index: 0
data: {'text': 'What is the abbreviation of the International Olympic Committee ?', 'coarse_label': 0, 'fine_label': 0}
task_input: What is the abbreviation of the International Olympic Committee ?, corse_label: 0
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What is the abbreviation of the International Olympic Committee ?', 'examples_str': 'Question: What is the correct way to abbreviate cc. at the bottom of a business letter ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is a fear of strong light ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a girl to have sex with you ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who developed the first polio vaccine ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What are the top 5 tallest buildings in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How fast can a Corvette go ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is the correct way to abbreviate cc. at the bottom of a business letter ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is a fear of strong light ?
class_name: Entity 
class_index: 1
--------

Question: How do you get a girl to have sex with you ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who developed the first polio vaccine ?
class_name: Human being 
class_index: 3
--------

Question: What are the top 5 tallest buildings in the world ?
class_name: Location 
class_index: 4
--------

Question: How fast can a Corvette go ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What is the abbreviation of the International Olympic Committee ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the correct way to abbreviate cc. at the bottom of a business letter ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is a fear of strong light ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a girl to have sex with you ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who developed the first polio vaccine ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What are the top 5 tallest buildings in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How fast can a Corvette go ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is the abbreviation of the International Olympic Committee ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:29:56 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13323'), (b'x-ratelimit-remaining-tokens', b'28626'), (b'x-ratelimit-reset-requests', b'1h47m41.717999999s'), (b'x-ratelimit-reset-tokens', b'2.748s'), (b'x-request-id', b'req_01hz0w1tjnfz0rd4xnqkatka2w'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b25f7d396a642c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking for the abbreviation of the International Olympic Committee, which is IOC.
class_name: ABBR
class_index: 0
data: {'text': 'What does a woman want ?', 'coarse_label': 1, 'fine_label': 13}
task_input: What does a woman want ?, corse_label: 1
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What does a woman want ?', 'examples_str': 'Question: What is the correct way to abbreviate cc. at the bottom of a business letter ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is a fear of strong light ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a girl to have sex with you ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who developed the first polio vaccine ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What are the top 5 tallest buildings in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How fast can a Corvette go ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is the correct way to abbreviate cc. at the bottom of a business letter ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is a fear of strong light ?
class_name: Entity 
class_index: 1
--------

Question: How do you get a girl to have sex with you ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who developed the first polio vaccine ?
class_name: Human being 
class_index: 3
--------

Question: What are the top 5 tallest buildings in the world ?
class_name: Location 
class_index: 4
--------

Question: How fast can a Corvette go ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What does a woman want ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the correct way to abbreviate cc. at the bottom of a business letter ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is a fear of strong light ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a girl to have sex with you ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who developed the first polio vaccine ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What are the top 5 tallest buildings in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How fast can a Corvette go ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does a woman want ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 00:29:56 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13323'), (b'x-ratelimit-remaining-tokens', b'28714'), (b'x-ratelimit-reset-requests', b'1h47m41.768999999s'), (b'x-ratelimit-reset-tokens', b'2.572s'), (b'x-request-id', b'req_01hz0w1tsxewysmyg1e36mbkyx'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b25f7eaaa5642c-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the correct way to abbreviate cc. at the bottom of a business letter ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is a fear of strong light ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a girl to have sex with you ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who developed the first polio vaccine ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What are the top 5 tallest buildings in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How fast can a Corvette go ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does a woman want ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:29:59 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13322'), (b'x-ratelimit-remaining-tokens', b'29356'), (b'x-ratelimit-reset-requests', b'1h47m45.698s'), (b'x-ratelimit-reset-tokens', b'1.287s'), (b'x-request-id', b'req_01hz0w1wtme52v66cg385eg9cf'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b25f8b9e96642c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is a philosophical concept, often debated and discussed in various contexts, which falls under the category of abstract concepts.
class_name: DESC
class_index: 2
data: {'text': 'In what religion was Isis the nature goddess ?', 'coarse_label': 1, 'fine_label': 16}
task_input: In what religion was Isis the nature goddess ?, corse_label: 1
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'In what religion was Isis the nature goddess ?', 'examples_str': 'Question: What is the correct way to abbreviate cc. at the bottom of a business letter ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is a fear of strong light ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a girl to have sex with you ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who developed the first polio vaccine ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What are the top 5 tallest buildings in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How fast can a Corvette go ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is the correct way to abbreviate cc. at the bottom of a business letter ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is a fear of strong light ?
class_name: Entity 
class_index: 1
--------

Question: How do you get a girl to have sex with you ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who developed the first polio vaccine ?
class_name: Human being 
class_index: 3
--------

Question: What are the top 5 tallest buildings in the world ?
class_name: Location 
class_index: 4
--------

Question: How fast can a Corvette go ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: In what religion was Isis the nature goddess ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the correct way to abbreviate cc. at the bottom of a business letter ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is a fear of strong light ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a girl to have sex with you ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who developed the first polio vaccine ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What are the top 5 tallest buildings in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How fast can a Corvette go ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: In what religion was Isis the nature goddess ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 00:29:59 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13322'), (b'x-ratelimit-remaining-tokens', b'29534'), (b'x-ratelimit-reset-requests', b'1h47m47.567999999s'), (b'x-ratelimit-reset-tokens', b'932ms'), (b'x-request-id', b'req_01hz0w1x85f7fay0a2fdybpbr0'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b25f8e48a9642c-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the correct way to abbreviate cc. at the bottom of a business letter ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is a fear of strong light ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a girl to have sex with you ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who developed the first polio vaccine ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What are the top 5 tallest buildings in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How fast can a Corvette go ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: In what religion was Isis the nature goddess ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:30:01 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13321'), (b'x-ratelimit-remaining-tokens', b'29601'), (b'x-ratelimit-reset-requests', b'1h47m51.511999999s'), (b'x-ratelimit-reset-tokens', b'798ms'), (b'x-request-id', b'req_01hz0w1z8dec69ec8v3bcgjzr4'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b25f9b2b81642c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is about a mythological figure, which is often associated with a specific religion.
class_name: Entity
class_index: 1
data: {'text': "What is `` the great American family cereal '' ?", 'coarse_label': 1, 'fine_label': 9}
task_input: What is `` the great American family cereal '' ?, corse_label: 1
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': "What is `` the great American family cereal '' ?", 'examples_str': 'Question: What is the correct way to abbreviate cc. at the bottom of a business letter ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is a fear of strong light ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a girl to have sex with you ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who developed the first polio vaccine ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What are the top 5 tallest buildings in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How fast can a Corvette go ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is the correct way to abbreviate cc. at the bottom of a business letter ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is a fear of strong light ?
class_name: Entity 
class_index: 1
--------

Question: How do you get a girl to have sex with you ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who developed the first polio vaccine ?
class_name: Human being 
class_index: 3
--------

Question: What are the top 5 tallest buildings in the world ?
class_name: Location 
class_index: 4
--------

Question: How fast can a Corvette go ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What is `` the great American family cereal '' ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the correct way to abbreviate cc. at the bottom of a business letter ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is a fear of strong light ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a girl to have sex with you ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who developed the first polio vaccine ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What are the top 5 tallest buildings in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How fast can a Corvette go ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is `` the great American family cereal '' ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 00:30:01 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13321'), (b'x-ratelimit-remaining-tokens', b'29641'), (b'x-ratelimit-reset-requests', b'1h47m53.600999999s'), (b'x-ratelimit-reset-tokens', b'718ms'), (b'x-request-id', b'req_01hz0w1zmxf9zrchq564pfkasd'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b25f9dade1642c-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the correct way to abbreviate cc. at the bottom of a business letter ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is a fear of strong light ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a girl to have sex with you ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who developed the first polio vaccine ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What are the top 5 tallest buildings in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How fast can a Corvette go ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is `` the great American family cereal '' ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:30:04 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13320'), (b'x-ratelimit-remaining-tokens', b'29601'), (b'x-ratelimit-reset-requests', b'1h47m57.546s'), (b'x-ratelimit-reset-tokens', b'798ms'), (b'x-request-id', b'req_01hz0w21n4epa9xkeaaym9r7tf'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b25faa8929642c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the name of a cereal, which is a specific product, so it's likely an abbreviation.
class_name: ABBR
class_index: 0
data: {'text': "What 's destroyed in Genesis 19 : 24 ?", 'coarse_label': 1, 'fine_label': 13}
task_input: What 's destroyed in Genesis 19 : 24 ?, corse_label: 1
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': "What 's destroyed in Genesis 19 : 24 ?", 'examples_str': 'Question: What is the correct way to abbreviate cc. at the bottom of a business letter ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is a fear of strong light ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a girl to have sex with you ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who developed the first polio vaccine ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What are the top 5 tallest buildings in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How fast can a Corvette go ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is the correct way to abbreviate cc. at the bottom of a business letter ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is a fear of strong light ?
class_name: Entity 
class_index: 1
--------

Question: How do you get a girl to have sex with you ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who developed the first polio vaccine ?
class_name: Human being 
class_index: 3
--------

Question: What are the top 5 tallest buildings in the world ?
class_name: Location 
class_index: 4
--------

Question: How fast can a Corvette go ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What 's destroyed in Genesis 19 : 24 ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the correct way to abbreviate cc. at the bottom of a business letter ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is a fear of strong light ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a girl to have sex with you ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who developed the first polio vaccine ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What are the top 5 tallest buildings in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How fast can a Corvette go ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What 's destroyed in Genesis 19 : 24 ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 00:30:04 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13320'), (b'x-ratelimit-remaining-tokens', b'29602'), (b'x-ratelimit-reset-requests', b'1h47m59.660999999s'), (b'x-ratelimit-reset-tokens', b'795ms'), (b'x-request-id', b'req_01hz0w21zrec6vdnpf6499296f'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b25facab24642c-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the correct way to abbreviate cc. at the bottom of a business letter ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is a fear of strong light ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a girl to have sex with you ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who developed the first polio vaccine ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What are the top 5 tallest buildings in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How fast can a Corvette go ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What 's destroyed in Genesis 19 : 24 ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:30:06 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13319'), (b'x-ratelimit-remaining-tokens', b'29603'), (b'x-ratelimit-reset-requests', b'1h48m3.602s'), (b'x-ratelimit-reset-tokens', b'794ms'), (b'x-request-id', b'req_01hz0w2403es3twmj09m8jqp9z'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b25fb97d75642c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about a specific event or action described in the Bible, which is an abstract concept.
class_name: DESC
class_index: 2
data: {'text': 'What is the executor in a will ?', 'coarse_label': 2, 'fine_label': 24}
task_input: What is the executor in a will ?, corse_label: 2
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What is the executor in a will ?', 'examples_str': 'Question: What is the correct way to abbreviate cc. at the bottom of a business letter ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is a fear of strong light ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a girl to have sex with you ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who developed the first polio vaccine ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What are the top 5 tallest buildings in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How fast can a Corvette go ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is the correct way to abbreviate cc. at the bottom of a business letter ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is a fear of strong light ?
class_name: Entity 
class_index: 1
--------

Question: How do you get a girl to have sex with you ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who developed the first polio vaccine ?
class_name: Human being 
class_index: 3
--------

Question: What are the top 5 tallest buildings in the world ?
class_name: Location 
class_index: 4
--------

Question: How fast can a Corvette go ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What is the executor in a will ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the correct way to abbreviate cc. at the bottom of a business letter ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is a fear of strong light ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a girl to have sex with you ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who developed the first polio vaccine ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What are the top 5 tallest buildings in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How fast can a Corvette go ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is the executor in a will ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 00:30:06 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13319'), (b'x-ratelimit-remaining-tokens', b'29628'), (b'x-ratelimit-reset-requests', b'1h48m5.632s'), (b'x-ratelimit-reset-tokens', b'743ms'), (b'x-request-id', b'req_01hz0w24bmef5sm28z5r2h8ah0'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b25fbbcfa1642c-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the correct way to abbreviate cc. at the bottom of a business letter ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is a fear of strong light ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a girl to have sex with you ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who developed the first polio vaccine ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What are the top 5 tallest buildings in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How fast can a Corvette go ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is the executor in a will ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:30:09 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13318'), (b'x-ratelimit-remaining-tokens', b'29605'), (b'x-ratelimit-reset-requests', b'1h48m9.562s'), (b'x-ratelimit-reset-tokens', b'790ms'), (b'x-request-id', b'req_01hz0w26c9fwdvfmqehgjce01w'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b25fc8bb5d642c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about a specific concept or role in a will, which is a legal document.
class_name: Entity
class_index: 1
data: {'text': 'What is the difference between jazz and blues ?', 'coarse_label': 2, 'fine_label': 25}
task_input: What is the difference between jazz and blues ?, corse_label: 2
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What is the difference between jazz and blues ?', 'examples_str': 'Question: What is the correct way to abbreviate cc. at the bottom of a business letter ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is a fear of strong light ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a girl to have sex with you ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who developed the first polio vaccine ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What are the top 5 tallest buildings in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How fast can a Corvette go ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is the correct way to abbreviate cc. at the bottom of a business letter ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is a fear of strong light ?
class_name: Entity 
class_index: 1
--------

Question: How do you get a girl to have sex with you ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who developed the first polio vaccine ?
class_name: Human being 
class_index: 3
--------

Question: What are the top 5 tallest buildings in the world ?
class_name: Location 
class_index: 4
--------

Question: How fast can a Corvette go ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What is the difference between jazz and blues ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the correct way to abbreviate cc. at the bottom of a business letter ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is a fear of strong light ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a girl to have sex with you ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who developed the first polio vaccine ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What are the top 5 tallest buildings in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How fast can a Corvette go ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is the difference between jazz and blues ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 00:30:09 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13318'), (b'x-ratelimit-remaining-tokens', b'29647'), (b'x-ratelimit-reset-requests', b'1h48m11.610999999s'), (b'x-ratelimit-reset-tokens', b'705ms'), (b'x-request-id', b'req_01hz0w26rfewz86s84n9h41zbt'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b25fcb2dcc642c-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the correct way to abbreviate cc. at the bottom of a business letter ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is a fear of strong light ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a girl to have sex with you ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who developed the first polio vaccine ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What are the top 5 tallest buildings in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How fast can a Corvette go ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is the difference between jazz and blues ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:30:11 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13317'), (b'x-ratelimit-remaining-tokens', b'29601'), (b'x-ratelimit-reset-requests', b'1h48m15.546s'), (b'x-ratelimit-reset-tokens', b'798ms'), (b'x-request-id', b'req_01hz0w28s0fz1rnhr1agm8m49z'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b25fd8198d642c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is about the difference between two musical genres, which is an abstract concept, so it's classified as a description and abstract concept.
class_name: DESC
class_index: 2
data: {'text': 'What are those little blue reflectors in the middle of the road for ?', 'coarse_label': 2, 'fine_label': 27}
task_input: What are those little blue reflectors in the middle of the road for ?, corse_label: 2
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What are those little blue reflectors in the middle of the road for ?', 'examples_str': 'Question: What is the correct way to abbreviate cc. at the bottom of a business letter ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is a fear of strong light ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a girl to have sex with you ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who developed the first polio vaccine ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What are the top 5 tallest buildings in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How fast can a Corvette go ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is the correct way to abbreviate cc. at the bottom of a business letter ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is a fear of strong light ?
class_name: Entity 
class_index: 1
--------

Question: How do you get a girl to have sex with you ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who developed the first polio vaccine ?
class_name: Human being 
class_index: 3
--------

Question: What are the top 5 tallest buildings in the world ?
class_name: Location 
class_index: 4
--------

Question: How fast can a Corvette go ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What are those little blue reflectors in the middle of the road for ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the correct way to abbreviate cc. at the bottom of a business letter ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is a fear of strong light ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a girl to have sex with you ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who developed the first polio vaccine ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What are the top 5 tallest buildings in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How fast can a Corvette go ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What are those little blue reflectors in the middle of the road for ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 00:30:11 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13317'), (b'x-ratelimit-remaining-tokens', b'29645'), (b'x-ratelimit-reset-requests', b'1h48m17.608999999s'), (b'x-ratelimit-reset-tokens', b'709ms'), (b'x-request-id', b'req_01hz0w2958ep0bbjpvwbnc0cdr'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b25fda8c79642c-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the correct way to abbreviate cc. at the bottom of a business letter ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is a fear of strong light ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a girl to have sex with you ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who developed the first polio vaccine ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What are the top 5 tallest buildings in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How fast can a Corvette go ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What are those little blue reflectors in the middle of the road for ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:30:13 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13316'), (b'x-ratelimit-remaining-tokens', b'29596'), (b'x-ratelimit-reset-requests', b'1h48m21.54s'), (b'x-ratelimit-reset-tokens', b'808ms'), (b'x-request-id', b'req_01hz0w2b5xfwxtak9p8cq2gj6r'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b25fe77e0e642c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: These little blue reflectors are a type of road marking, used to indicate the center of the road, and are often used in conjunction with lane markings to help guide drivers.
class_name: Location
class_index: 4
data: {'text': "What does the Georgetown `` Hoya '' mean ?", 'coarse_label': 2, 'fine_label': 24}
task_input: What does the Georgetown `` Hoya '' mean ?, corse_label: 2
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': "What does the Georgetown `` Hoya '' mean ?", 'examples_str': 'Question: What is the correct way to abbreviate cc. at the bottom of a business letter ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is a fear of strong light ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a girl to have sex with you ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who developed the first polio vaccine ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What are the top 5 tallest buildings in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How fast can a Corvette go ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is the correct way to abbreviate cc. at the bottom of a business letter ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is a fear of strong light ?
class_name: Entity 
class_index: 1
--------

Question: How do you get a girl to have sex with you ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who developed the first polio vaccine ?
class_name: Human being 
class_index: 3
--------

Question: What are the top 5 tallest buildings in the world ?
class_name: Location 
class_index: 4
--------

Question: How fast can a Corvette go ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What does the Georgetown `` Hoya '' mean ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the correct way to abbreviate cc. at the bottom of a business letter ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is a fear of strong light ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a girl to have sex with you ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who developed the first polio vaccine ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What are the top 5 tallest buildings in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How fast can a Corvette go ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does the Georgetown `` Hoya '' mean ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 00:30:13 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'325'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13316'), (b'x-ratelimit-remaining-tokens', b'29590'), (b'x-ratelimit-reset-requests', b'1h48m23.719999999s'), (b'x-ratelimit-reset-tokens', b'819ms'), (b'x-request-id', b'req_01hz0w2bepfdns6qtz8xmgwjvj'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b25fe93f80642c-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the correct way to abbreviate cc. at the bottom of a business letter ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is a fear of strong light ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a girl to have sex with you ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who developed the first polio vaccine ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What are the top 5 tallest buildings in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How fast can a Corvette go ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does the Georgetown `` Hoya '' mean ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:30:16 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13315'), (b'x-ratelimit-remaining-tokens', b'29602'), (b'x-ratelimit-reset-requests', b'1h48m27.655s'), (b'x-ratelimit-reset-tokens', b'796ms'), (b'x-request-id', b'req_01hz0w2df7fdza65qz0aqd8aa1'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b25ff62ae7642c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the meaning of a symbol or logo, which is often represented by an abbreviation.
class_name: ABBR
class_index: 0
data: {'text': 'Who does the advertizing for Frito-Lay ?', 'coarse_label': 3, 'fine_label': 29}
task_input: Who does the advertizing for Frito-Lay ?, corse_label: 3
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'Who does the advertizing for Frito-Lay ?', 'examples_str': 'Question: What is the correct way to abbreviate cc. at the bottom of a business letter ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is a fear of strong light ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a girl to have sex with you ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who developed the first polio vaccine ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What are the top 5 tallest buildings in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How fast can a Corvette go ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is the correct way to abbreviate cc. at the bottom of a business letter ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is a fear of strong light ?
class_name: Entity 
class_index: 1
--------

Question: How do you get a girl to have sex with you ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who developed the first polio vaccine ?
class_name: Human being 
class_index: 3
--------

Question: What are the top 5 tallest buildings in the world ?
class_name: Location 
class_index: 4
--------

Question: How fast can a Corvette go ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Who does the advertizing for Frito-Lay ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the correct way to abbreviate cc. at the bottom of a business letter ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is a fear of strong light ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a girl to have sex with you ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who developed the first polio vaccine ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What are the top 5 tallest buildings in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How fast can a Corvette go ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Who does the advertizing for Frito-Lay ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 00:30:16 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13315'), (b'x-ratelimit-remaining-tokens', b'29594'), (b'x-ratelimit-reset-requests', b'1h48m29.768999999s'), (b'x-ratelimit-reset-tokens', b'812ms'), (b'x-request-id', b'req_01hz0w2dpdfr08z6sg2dgy9ete'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b25ff78c57642c-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the correct way to abbreviate cc. at the bottom of a business letter ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is a fear of strong light ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a girl to have sex with you ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who developed the first polio vaccine ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What are the top 5 tallest buildings in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How fast can a Corvette go ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Who does the advertizing for Frito-Lay ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:30:18 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13314'), (b'x-ratelimit-remaining-tokens', b'29603'), (b'x-ratelimit-reset-requests', b'1h48m33.721s'), (b'x-ratelimit-reset-tokens', b'794ms'), (b'x-request-id', b'req_01hz0w2fpee6b9fy6ehpva6vpn'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b260046feb642c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the advertising for a specific company, which is typically handled by a specific department or agency.
class_name: Entity
class_index: 1
data: {'text': 'Who wrote The Godfather ?', 'coarse_label': 3, 'fine_label': 29}
task_input: Who wrote The Godfather ?, corse_label: 3
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'Who wrote The Godfather ?', 'examples_str': 'Question: What is the correct way to abbreviate cc. at the bottom of a business letter ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is a fear of strong light ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a girl to have sex with you ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who developed the first polio vaccine ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What are the top 5 tallest buildings in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How fast can a Corvette go ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is the correct way to abbreviate cc. at the bottom of a business letter ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is a fear of strong light ?
class_name: Entity 
class_index: 1
--------

Question: How do you get a girl to have sex with you ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who developed the first polio vaccine ?
class_name: Human being 
class_index: 3
--------

Question: What are the top 5 tallest buildings in the world ?
class_name: Location 
class_index: 4
--------

Question: How fast can a Corvette go ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Who wrote The Godfather ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the correct way to abbreviate cc. at the bottom of a business letter ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is a fear of strong light ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a girl to have sex with you ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who developed the first polio vaccine ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What are the top 5 tallest buildings in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How fast can a Corvette go ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Who wrote The Godfather ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 00:30:18 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13314'), (b'x-ratelimit-remaining-tokens', b'29635'), (b'x-ratelimit-reset-requests', b'1h48m35.634s'), (b'x-ratelimit-reset-tokens', b'730ms'), (b'x-request-id', b'req_01hz0w2g1wfdzawnge7b6pzj1t'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b26006a97b642c-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the correct way to abbreviate cc. at the bottom of a business letter ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is a fear of strong light ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a girl to have sex with you ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who developed the first polio vaccine ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What are the top 5 tallest buildings in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How fast can a Corvette go ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Who wrote The Godfather ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:30:20 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13313'), (b'x-ratelimit-remaining-tokens', b'29607'), (b'x-ratelimit-reset-requests', b'1h48m39.567999999s'), (b'x-ratelimit-reset-tokens', b'786ms'), (b'x-request-id', b'req_01hz0w2j2efdnsdhsh11884e51'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b260139b48642c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the author of a book, which is a characteristic of a human being.
class_name: HUM
class_index: 3
data: {'text': 'Whom did Friz Freleng add to the Warner Bros. cartoon ranks ?', 'coarse_label': 3, 'fine_label': 29}
task_input: Whom did Friz Freleng add to the Warner Bros. cartoon ranks ?, corse_label: 3
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'Whom did Friz Freleng add to the Warner Bros. cartoon ranks ?', 'examples_str': 'Question: What is the correct way to abbreviate cc. at the bottom of a business letter ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is a fear of strong light ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a girl to have sex with you ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who developed the first polio vaccine ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What are the top 5 tallest buildings in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How fast can a Corvette go ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is the correct way to abbreviate cc. at the bottom of a business letter ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is a fear of strong light ?
class_name: Entity 
class_index: 1
--------

Question: How do you get a girl to have sex with you ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who developed the first polio vaccine ?
class_name: Human being 
class_index: 3
--------

Question: What are the top 5 tallest buildings in the world ?
class_name: Location 
class_index: 4
--------

Question: How fast can a Corvette go ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Whom did Friz Freleng add to the Warner Bros. cartoon ranks ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the correct way to abbreviate cc. at the bottom of a business letter ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is a fear of strong light ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a girl to have sex with you ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who developed the first polio vaccine ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What are the top 5 tallest buildings in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How fast can a Corvette go ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Whom did Friz Freleng add to the Warner Bros. cartoon ranks ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 00:30:21 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13313'), (b'x-ratelimit-remaining-tokens', b'29602'), (b'x-ratelimit-reset-requests', b'1h48m41.711999999s'), (b'x-ratelimit-reset-tokens', b'796ms'), (b'x-request-id', b'req_01hz0w2jbffdzvmxh9c5bcjk05'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b260155d41642c-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the correct way to abbreviate cc. at the bottom of a business letter ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is a fear of strong light ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a girl to have sex with you ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who developed the first polio vaccine ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What are the top 5 tallest buildings in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How fast can a Corvette go ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Whom did Friz Freleng add to the Warner Bros. cartoon ranks ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:30:23 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13312'), (b'x-ratelimit-remaining-tokens', b'29598'), (b'x-ratelimit-reset-requests', b'1h48m45.646s'), (b'x-ratelimit-reset-tokens', b'804ms'), (b'x-request-id', b'req_01hz0w2mc1ewpbf9fryzpc3k38'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b260224f94642c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about a specific person added to the Warner Bros. cartoon ranks, which suggests a human being.
class_name: HUM
class_index: 3
```
data: {'text': 'What comedian hit the TV screen in 1951 with the NBC afternoon show Time for Ernie ?', 'coarse_label': 3, 'fine_label': 29}
task_input: What comedian hit the TV screen in 1951 with the NBC afternoon show Time for Ernie ?, corse_label: 3
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What comedian hit the TV screen in 1951 with the NBC afternoon show Time for Ernie ?', 'examples_str': 'Question: What is the correct way to abbreviate cc. at the bottom of a business letter ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is a fear of strong light ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a girl to have sex with you ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who developed the first polio vaccine ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What are the top 5 tallest buildings in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How fast can a Corvette go ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is the correct way to abbreviate cc. at the bottom of a business letter ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is a fear of strong light ?
class_name: Entity 
class_index: 1
--------

Question: How do you get a girl to have sex with you ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who developed the first polio vaccine ?
class_name: Human being 
class_index: 3
--------

Question: What are the top 5 tallest buildings in the world ?
class_name: Location 
class_index: 4
--------

Question: How fast can a Corvette go ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What comedian hit the TV screen in 1951 with the NBC afternoon show Time for Ernie ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the correct way to abbreviate cc. at the bottom of a business letter ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is a fear of strong light ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a girl to have sex with you ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who developed the first polio vaccine ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What are the top 5 tallest buildings in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How fast can a Corvette go ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What comedian hit the TV screen in 1951 with the NBC afternoon show Time for Ernie ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 00:30:23 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'325'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13312'), (b'x-ratelimit-remaining-tokens', b'29585'), (b'x-ratelimit-reset-requests', b'1h48m47.758999999s'), (b'x-ratelimit-reset-tokens', b'830ms'), (b'x-request-id', b'req_01hz0w2mkkfwev6he6ydctxq72'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b26023c889642c-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the correct way to abbreviate cc. at the bottom of a business letter ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is a fear of strong light ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a girl to have sex with you ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who developed the first polio vaccine ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What are the top 5 tallest buildings in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How fast can a Corvette go ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What comedian hit the TV screen in 1951 with the NBC afternoon show Time for Ernie ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:30:25 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13311'), (b'x-ratelimit-remaining-tokens', b'29592'), (b'x-ratelimit-reset-requests', b'1h48m51.695s'), (b'x-ratelimit-reset-tokens', b'816ms'), (b'x-request-id', b'req_01hz0w2pm3ec798fq6tcz2n3qg'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b26030baaa642c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is about a specific person, Ernie, who appeared on a TV show.
class_name: Human being
class_index: 3
data: {'text': 'What city was John F. Kennedy nominated for president in ?', 'coarse_label': 4, 'fine_label': 32}
task_input: What city was John F. Kennedy nominated for president in ?, corse_label: 4
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What city was John F. Kennedy nominated for president in ?', 'examples_str': 'Question: What is the correct way to abbreviate cc. at the bottom of a business letter ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is a fear of strong light ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a girl to have sex with you ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who developed the first polio vaccine ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What are the top 5 tallest buildings in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How fast can a Corvette go ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is the correct way to abbreviate cc. at the bottom of a business letter ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is a fear of strong light ?
class_name: Entity 
class_index: 1
--------

Question: How do you get a girl to have sex with you ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who developed the first polio vaccine ?
class_name: Human being 
class_index: 3
--------

Question: What are the top 5 tallest buildings in the world ?
class_name: Location 
class_index: 4
--------

Question: How fast can a Corvette go ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What city was John F. Kennedy nominated for president in ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the correct way to abbreviate cc. at the bottom of a business letter ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is a fear of strong light ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a girl to have sex with you ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who developed the first polio vaccine ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What are the top 5 tallest buildings in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How fast can a Corvette go ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What city was John F. Kennedy nominated for president in ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 00:30:25 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13311'), (b'x-ratelimit-remaining-tokens', b'29617'), (b'x-ratelimit-reset-requests', b'1h48m53.654999999s'), (b'x-ratelimit-reset-tokens', b'765ms'), (b'x-request-id', b'req_01hz0w2pyxepbbpxm92pj07akz'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b26032dc2e642c-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the correct way to abbreviate cc. at the bottom of a business letter ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is a fear of strong light ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a girl to have sex with you ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who developed the first polio vaccine ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What are the top 5 tallest buildings in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How fast can a Corvette go ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What city was John F. Kennedy nominated for president in ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:30:28 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13310'), (b'x-ratelimit-remaining-tokens', b'29598'), (b'x-ratelimit-reset-requests', b'1h48m57.59s'), (b'x-ratelimit-reset-tokens', b'804ms'), (b'x-request-id', b'req_01hz0w2rzeex09f3fenz9k7mwx'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b2603fcdbe642c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about a specific event in the life of John F. Kennedy, which is a historical fact.
class_name: Entity
class_index: 1
data: {'text': 'Where are some great educational resources for parents and teachers ?', 'coarse_label': 4, 'fine_label': 35}
task_input: Where are some great educational resources for parents and teachers ?, corse_label: 4
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'Where are some great educational resources for parents and teachers ?', 'examples_str': 'Question: What is the correct way to abbreviate cc. at the bottom of a business letter ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is a fear of strong light ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a girl to have sex with you ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who developed the first polio vaccine ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What are the top 5 tallest buildings in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How fast can a Corvette go ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is the correct way to abbreviate cc. at the bottom of a business letter ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is a fear of strong light ?
class_name: Entity 
class_index: 1
--------

Question: How do you get a girl to have sex with you ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who developed the first polio vaccine ?
class_name: Human being 
class_index: 3
--------

Question: What are the top 5 tallest buildings in the world ?
class_name: Location 
class_index: 4
--------

Question: How fast can a Corvette go ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Where are some great educational resources for parents and teachers ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the correct way to abbreviate cc. at the bottom of a business letter ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is a fear of strong light ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a girl to have sex with you ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who developed the first polio vaccine ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What are the top 5 tallest buildings in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How fast can a Corvette go ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Where are some great educational resources for parents and teachers ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 00:30:28 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13310'), (b'x-ratelimit-remaining-tokens', b'29610'), (b'x-ratelimit-reset-requests', b'1h48m59.721999999s'), (b'x-ratelimit-reset-tokens', b'779ms'), (b'x-request-id', b'req_01hz0w2s85fdp8cr7wyhxqj73x'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b260418f11642c-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the correct way to abbreviate cc. at the bottom of a business letter ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is a fear of strong light ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a girl to have sex with you ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who developed the first polio vaccine ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What are the top 5 tallest buildings in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How fast can a Corvette go ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Where are some great educational resources for parents and teachers ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:30:30 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13309'), (b'x-ratelimit-remaining-tokens', b'29596'), (b'x-ratelimit-reset-requests', b'1h49m3.668s'), (b'x-ratelimit-reset-tokens', b'808ms'), (b'x-request-id', b'req_01hz0w2v8be53sm1g4w36esmaq'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b2604e59c0642c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is asking for educational resources, which are typically provided by locations or organizations, so I'm classifying it as a Location.
class_name: LOC
class_index: 4
data: {'text': 'Where is Burma ?', 'coarse_label': 4, 'fine_label': 35}
task_input: Where is Burma ?, corse_label: 4
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'Where is Burma ?', 'examples_str': 'Question: What is the correct way to abbreviate cc. at the bottom of a business letter ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is a fear of strong light ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a girl to have sex with you ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who developed the first polio vaccine ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What are the top 5 tallest buildings in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How fast can a Corvette go ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is the correct way to abbreviate cc. at the bottom of a business letter ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is a fear of strong light ?
class_name: Entity 
class_index: 1
--------

Question: How do you get a girl to have sex with you ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who developed the first polio vaccine ?
class_name: Human being 
class_index: 3
--------

Question: What are the top 5 tallest buildings in the world ?
class_name: Location 
class_index: 4
--------

Question: How fast can a Corvette go ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Where is Burma ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the correct way to abbreviate cc. at the bottom of a business letter ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is a fear of strong light ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a girl to have sex with you ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who developed the first polio vaccine ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What are the top 5 tallest buildings in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How fast can a Corvette go ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Where is Burma ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 00:30:30 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13309'), (b'x-ratelimit-remaining-tokens', b'29587'), (b'x-ratelimit-reset-requests', b'1h49m5.768999999s'), (b'x-ratelimit-reset-tokens', b'825ms'), (b'x-request-id', b'req_01hz0w2vfkes4t9wg1rvbkw3g6'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b2604fdabc642c-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the correct way to abbreviate cc. at the bottom of a business letter ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is a fear of strong light ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a girl to have sex with you ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who developed the first polio vaccine ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What are the top 5 tallest buildings in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How fast can a Corvette go ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Where is Burma ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:30:32 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13308'), (b'x-ratelimit-remaining-tokens', b'29609'), (b'x-ratelimit-reset-requests', b'1h49m9.718s'), (b'x-ratelimit-reset-tokens', b'782ms'), (b'x-request-id', b'req_01hz0w2xfpep18bsf032409ras'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b2605cac5d642c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking for the location of Burma, which is a country.
class_name: LOC
class_index: 4
data: {'text': "What 's the name of a hotel in Indianapolis ?", 'coarse_label': 4, 'fine_label': 35}
task_input: What 's the name of a hotel in Indianapolis ?, corse_label: 4
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': "What 's the name of a hotel in Indianapolis ?", 'examples_str': 'Question: What is the correct way to abbreviate cc. at the bottom of a business letter ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is a fear of strong light ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a girl to have sex with you ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who developed the first polio vaccine ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What are the top 5 tallest buildings in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How fast can a Corvette go ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is the correct way to abbreviate cc. at the bottom of a business letter ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is a fear of strong light ?
class_name: Entity 
class_index: 1
--------

Question: How do you get a girl to have sex with you ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who developed the first polio vaccine ?
class_name: Human being 
class_index: 3
--------

Question: What are the top 5 tallest buildings in the world ?
class_name: Location 
class_index: 4
--------

Question: How fast can a Corvette go ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What 's the name of a hotel in Indianapolis ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the correct way to abbreviate cc. at the bottom of a business letter ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is a fear of strong light ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a girl to have sex with you ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who developed the first polio vaccine ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What are the top 5 tallest buildings in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How fast can a Corvette go ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What 's the name of a hotel in Indianapolis ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 00:30:32 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13308'), (b'x-ratelimit-remaining-tokens', b'29606'), (b'x-ratelimit-reset-requests', b'1h49m11.724999999s'), (b'x-ratelimit-reset-tokens', b'788ms'), (b'x-request-id', b'req_01hz0w2xraf7gvnj5t1se9t28f'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b2605e5dbe642c-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the correct way to abbreviate cc. at the bottom of a business letter ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is a fear of strong light ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a girl to have sex with you ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who developed the first polio vaccine ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What are the top 5 tallest buildings in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How fast can a Corvette go ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What 's the name of a hotel in Indianapolis ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:30:35 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13307'), (b'x-ratelimit-remaining-tokens', b'29602'), (b'x-ratelimit-reset-requests', b'1h49m15.657s'), (b'x-ratelimit-reset-tokens', b'796ms'), (b'x-request-id', b'req_01hz0w2zrye54akync0hwdhcyb'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b2606b48db642c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking for the name of a specific hotel in Indianapolis, which is a location-based question.
class_name: LOC
class_index: 4
data: {'text': 'How many times was pitcher , Warren Spahn , a 20-game winner in his 21 major league seasons ?', 'coarse_label': 5, 'fine_label': 38}
task_input: How many times was pitcher , Warren Spahn , a 20-game winner in his 21 major league seasons ?, corse_label: 5
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'How many times was pitcher , Warren Spahn , a 20-game winner in his 21 major league seasons ?', 'examples_str': 'Question: What is the correct way to abbreviate cc. at the bottom of a business letter ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is a fear of strong light ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a girl to have sex with you ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who developed the first polio vaccine ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What are the top 5 tallest buildings in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How fast can a Corvette go ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is the correct way to abbreviate cc. at the bottom of a business letter ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is a fear of strong light ?
class_name: Entity 
class_index: 1
--------

Question: How do you get a girl to have sex with you ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who developed the first polio vaccine ?
class_name: Human being 
class_index: 3
--------

Question: What are the top 5 tallest buildings in the world ?
class_name: Location 
class_index: 4
--------

Question: How fast can a Corvette go ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: How many times was pitcher , Warren Spahn , a 20-game winner in his 21 major league seasons ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the correct way to abbreviate cc. at the bottom of a business letter ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is a fear of strong light ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a girl to have sex with you ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who developed the first polio vaccine ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What are the top 5 tallest buildings in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How fast can a Corvette go ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: How many times was pitcher , Warren Spahn , a 20-game winner in his 21 major league seasons ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 00:30:35 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'332'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13307'), (b'x-ratelimit-remaining-tokens', b'29593'), (b'x-ratelimit-reset-requests', b'1h49m17.734s'), (b'x-ratelimit-reset-tokens', b'814ms'), (b'x-request-id', b'req_01hz0w3019fwyta3c71qk9yf8k'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b2606cfa05642c-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the correct way to abbreviate cc. at the bottom of a business letter ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is a fear of strong light ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a girl to have sex with you ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who developed the first polio vaccine ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What are the top 5 tallest buildings in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How fast can a Corvette go ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: How many times was pitcher , Warren Spahn , a 20-game winner in his 21 major league seasons ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:30:37 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13306'), (b'x-ratelimit-remaining-tokens', b'29590'), (b'x-ratelimit-reset-requests', b'1h49m21.674999999s'), (b'x-ratelimit-reset-tokens', b'820ms'), (b'x-request-id', b'req_01hz0w321mesg8ktgmatkghc30'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b26079dbe7642c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the number of times Warren Spahn was a 20-game winner in his major league seasons, which is a numeric value.
class_name: NUM
class_index: 5
data: {'text': 'What is the horsepower of the shuttle boosters ?', 'coarse_label': 5, 'fine_label': 43}
task_input: What is the horsepower of the shuttle boosters ?, corse_label: 5
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What is the horsepower of the shuttle boosters ?', 'examples_str': 'Question: What is the correct way to abbreviate cc. at the bottom of a business letter ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is a fear of strong light ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a girl to have sex with you ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who developed the first polio vaccine ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What are the top 5 tallest buildings in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How fast can a Corvette go ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is the correct way to abbreviate cc. at the bottom of a business letter ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is a fear of strong light ?
class_name: Entity 
class_index: 1
--------

Question: How do you get a girl to have sex with you ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who developed the first polio vaccine ?
class_name: Human being 
class_index: 3
--------

Question: What are the top 5 tallest buildings in the world ?
class_name: Location 
class_index: 4
--------

Question: How fast can a Corvette go ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What is the horsepower of the shuttle boosters ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the correct way to abbreviate cc. at the bottom of a business letter ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is a fear of strong light ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a girl to have sex with you ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who developed the first polio vaccine ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What are the top 5 tallest buildings in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How fast can a Corvette go ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is the horsepower of the shuttle boosters ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 00:30:37 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13306'), (b'x-ratelimit-remaining-tokens', b'29583'), (b'x-ratelimit-reset-requests', b'1h49m23.685s'), (b'x-ratelimit-reset-tokens', b'834ms'), (b'x-request-id', b'req_01hz0w32bffa1rq8hskw4mv3qb'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b2607bcd4e642c-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the correct way to abbreviate cc. at the bottom of a business letter ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is a fear of strong light ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a girl to have sex with you ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who developed the first polio vaccine ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What are the top 5 tallest buildings in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How fast can a Corvette go ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is the horsepower of the shuttle boosters ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:30:39 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13305'), (b'x-ratelimit-remaining-tokens', b'29601'), (b'x-ratelimit-reset-requests', b'1h49m27.623999999s'), (b'x-ratelimit-reset-tokens', b'798ms'), (b'x-request-id', b'req_01hz0w34bwfe0ax3749kz96yvb'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b26088ae7a642c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the horsepower of the shuttle boosters, which is a specific numerical value.
class_name: NUM
class_index: 5
data: {'text': 'How many home runs did Babe Ruth hit in his lifetime ?', 'coarse_label': 5, 'fine_label': 38}
task_input: How many home runs did Babe Ruth hit in his lifetime ?, corse_label: 5
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'How many home runs did Babe Ruth hit in his lifetime ?', 'examples_str': 'Question: What is the correct way to abbreviate cc. at the bottom of a business letter ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is a fear of strong light ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a girl to have sex with you ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who developed the first polio vaccine ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What are the top 5 tallest buildings in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How fast can a Corvette go ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is the correct way to abbreviate cc. at the bottom of a business letter ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is a fear of strong light ?
class_name: Entity 
class_index: 1
--------

Question: How do you get a girl to have sex with you ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who developed the first polio vaccine ?
class_name: Human being 
class_index: 3
--------

Question: What are the top 5 tallest buildings in the world ?
class_name: Location 
class_index: 4
--------

Question: How fast can a Corvette go ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: How many home runs did Babe Ruth hit in his lifetime ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the correct way to abbreviate cc. at the bottom of a business letter ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is a fear of strong light ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a girl to have sex with you ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who developed the first polio vaccine ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What are the top 5 tallest buildings in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How fast can a Corvette go ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: How many home runs did Babe Ruth hit in his lifetime ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 00:30:39 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13305'), (b'x-ratelimit-remaining-tokens', b'29621'), (b'x-ratelimit-reset-requests', b'1h49m29.710999999s'), (b'x-ratelimit-reset-tokens', b'757ms'), (b'x-request-id', b'req_01hz0w34myef7vthht1mn1qvka'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b2608a78bc642c-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the correct way to abbreviate cc. at the bottom of a business letter ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is a fear of strong light ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a girl to have sex with you ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who developed the first polio vaccine ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What are the top 5 tallest buildings in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How fast can a Corvette go ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: How many home runs did Babe Ruth hit in his lifetime ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:30:42 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13304'), (b'x-ratelimit-remaining-tokens', b'29599'), (b'x-ratelimit-reset-requests', b'1h49m33.656s'), (b'x-ratelimit-reset-tokens', b'802ms'), (b'x-request-id', b'req_01hz0w36n6fr19xhghjfy52cdb'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b260975b46642c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about a specific statistic of a famous person, which is a numeric value.
class_name: NUM
class_index: 5
data: {'text': 'How much waste does an average dairy cow produce in a day ?', 'coarse_label': 5, 'fine_label': 38}
task_input: How much waste does an average dairy cow produce in a day ?, corse_label: 5
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'How much waste does an average dairy cow produce in a day ?', 'examples_str': 'Question: What is the correct way to abbreviate cc. at the bottom of a business letter ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is a fear of strong light ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a girl to have sex with you ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who developed the first polio vaccine ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What are the top 5 tallest buildings in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How fast can a Corvette go ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is the correct way to abbreviate cc. at the bottom of a business letter ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is a fear of strong light ?
class_name: Entity 
class_index: 1
--------

Question: How do you get a girl to have sex with you ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who developed the first polio vaccine ?
class_name: Human being 
class_index: 3
--------

Question: What are the top 5 tallest buildings in the world ?
class_name: Location 
class_index: 4
--------

Question: How fast can a Corvette go ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: How much waste does an average dairy cow produce in a day ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the correct way to abbreviate cc. at the bottom of a business letter ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is a fear of strong light ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a girl to have sex with you ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who developed the first polio vaccine ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What are the top 5 tallest buildings in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How fast can a Corvette go ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: How much waste does an average dairy cow produce in a day ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 00:30:42 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13304'), (b'x-ratelimit-remaining-tokens', b'29606'), (b'x-ratelimit-reset-requests', b'1h49m35.557999999s'), (b'x-ratelimit-reset-tokens', b'788ms'), (b'x-request-id', b'req_01hz0w3730f7ha2by9m92jt93w'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b2609a1da9642c-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the correct way to abbreviate cc. at the bottom of a business letter ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is a fear of strong light ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a girl to have sex with you ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who developed the first polio vaccine ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What are the top 5 tallest buildings in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How fast can a Corvette go ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: How much waste does an average dairy cow produce in a day ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:30:44 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13303'), (b'x-ratelimit-remaining-tokens', b'29598'), (b'x-ratelimit-reset-requests', b'1h49m39.501s'), (b'x-ratelimit-reset-tokens', b'804ms'), (b'x-request-id', b'req_01hz0w3939ex0rtkh7jkf23pkq'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b260a6ffd1642c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the amount of waste produced by a dairy cow, which is a measurable quantity, making it a numeric value.
class_name: NUM
class_index: 5
responses: [0, 0, 0, 0, 2, 1, 0, 2, 1, 2, 4, 0, 1, 3, 3, 3, 1, 4, 4, 4, 5, 5, 5, 5], targets: [0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5]
num_invalid: 0
Preds tensor: tensor([[1., 0., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0.],
        [0., 0., 1., 0., 0., 0.],
        [0., 1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0.],
        [0., 0., 1., 0., 0., 0.],
        [0., 1., 0., 0., 0., 0.],
        [0., 0., 1., 0., 0., 0.],
        [0., 0., 0., 0., 1., 0.],
        [1., 0., 0., 0., 0., 0.],
        [0., 1., 0., 0., 0., 0.],
        [0., 0., 0., 1., 0., 0.],
        [0., 0., 0., 1., 0., 0.],
        [0., 0., 0., 1., 0., 0.],
        [0., 1., 0., 0., 0., 0.],
        [0., 0., 0., 0., 1., 0.],
        [0., 0., 0., 0., 1., 0.],
        [0., 0., 0., 0., 1., 0.],
        [0., 0., 0., 0., 0., 1.],
        [0., 0., 0., 0., 0., 1.],
        [0., 0., 0., 0., 0., 1.],
        [0., 0., 0., 0., 0., 1.]])
Targets tensor: tensor([0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5])
Eval Accuracy Start: 0.667, F1: 0.657, score: 1.324
data: {'text': 'What is TMJ ?', 'coarse_label': 0, 'fine_label': 1}
task_input: What is TMJ ?, corse_label: 0
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What is TMJ ?', 'examples_str': 'Question: What is the correct way to abbreviate cc. at the bottom of a business letter ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is a fear of strong light ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a girl to have sex with you ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who developed the first polio vaccine ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What are the top 5 tallest buildings in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How fast can a Corvette go ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is the correct way to abbreviate cc. at the bottom of a business letter ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is a fear of strong light ?
class_name: Entity 
class_index: 1
--------

Question: How do you get a girl to have sex with you ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who developed the first polio vaccine ?
class_name: Human being 
class_index: 3
--------

Question: What are the top 5 tallest buildings in the world ?
class_name: Location 
class_index: 4
--------

Question: How fast can a Corvette go ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What is TMJ ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the correct way to abbreviate cc. at the bottom of a business letter ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is a fear of strong light ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a girl to have sex with you ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who developed the first polio vaccine ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What are the top 5 tallest buildings in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How fast can a Corvette go ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is TMJ ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 00:30:44 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13303'), (b'x-ratelimit-remaining-tokens', b'29638'), (b'x-ratelimit-reset-requests', b'1h49m41.654999999s'), (b'x-ratelimit-reset-tokens', b'724ms'), (b'x-request-id', b'req_01hz0w39e3e54s1wq5jwybqe9e'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b260a91972642c-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the correct way to abbreviate cc. at the bottom of a business letter ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is a fear of strong light ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a girl to have sex with you ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who developed the first polio vaccine ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What are the top 5 tallest buildings in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How fast can a Corvette go ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is TMJ ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:30:47 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13302'), (b'x-ratelimit-remaining-tokens', b'29610'), (b'x-ratelimit-reset-requests', b'1h49m45.593s'), (b'x-ratelimit-reset-tokens', b'780ms'), (b'x-request-id', b'req_01hz0w3behepcs2dvyt21x0n8s'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b260b5fab0642c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about a specific medical condition, which is typically represented by an abbreviation.
class_name: ABBR
class_index: 0
data: {'text': 'What does the technical term ISDN mean ?', 'coarse_label': 0, 'fine_label': 1}
task_input: What does the technical term ISDN mean ?, corse_label: 0
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What does the technical term ISDN mean ?', 'examples_str': 'Question: What is the correct way to abbreviate cc. at the bottom of a business letter ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is a fear of strong light ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a girl to have sex with you ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who developed the first polio vaccine ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What are the top 5 tallest buildings in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How fast can a Corvette go ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is the correct way to abbreviate cc. at the bottom of a business letter ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is a fear of strong light ?
class_name: Entity 
class_index: 1
--------

Question: How do you get a girl to have sex with you ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who developed the first polio vaccine ?
class_name: Human being 
class_index: 3
--------

Question: What are the top 5 tallest buildings in the world ?
class_name: Location 
class_index: 4
--------

Question: How fast can a Corvette go ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What does the technical term ISDN mean ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the correct way to abbreviate cc. at the bottom of a business letter ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is a fear of strong light ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a girl to have sex with you ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who developed the first polio vaccine ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What are the top 5 tallest buildings in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How fast can a Corvette go ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does the technical term ISDN mean ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 00:30:47 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13302'), (b'x-ratelimit-remaining-tokens', b'29605'), (b'x-ratelimit-reset-requests', b'1h49m47.697s'), (b'x-ratelimit-reset-tokens', b'789ms'), (b'x-request-id', b'req_01hz0w3br2fr1s13mh1jgg92rt'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b260b7ebef642c-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the correct way to abbreviate cc. at the bottom of a business letter ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is a fear of strong light ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a girl to have sex with you ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who developed the first polio vaccine ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What are the top 5 tallest buildings in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How fast can a Corvette go ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does the technical term ISDN mean ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:30:49 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13301'), (b'x-ratelimit-remaining-tokens', b'29603'), (b'x-ratelimit-reset-requests', b'1h49m51.633999999s'), (b'x-ratelimit-reset-tokens', b'794ms'), (b'x-request-id', b'req_01hz0w3drge6cvfqbktexjmgfz'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b260c4cdce642c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the meaning of a technical term, which is typically an abbreviation.
class_name: ABBR
class_index: 0
data: {'text': 'What does USPS stand for ?', 'coarse_label': 0, 'fine_label': 1}
task_input: What does USPS stand for ?, corse_label: 0
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What does USPS stand for ?', 'examples_str': 'Question: What is the correct way to abbreviate cc. at the bottom of a business letter ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is a fear of strong light ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a girl to have sex with you ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who developed the first polio vaccine ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What are the top 5 tallest buildings in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How fast can a Corvette go ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is the correct way to abbreviate cc. at the bottom of a business letter ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is a fear of strong light ?
class_name: Entity 
class_index: 1
--------

Question: How do you get a girl to have sex with you ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who developed the first polio vaccine ?
class_name: Human being 
class_index: 3
--------

Question: What are the top 5 tallest buildings in the world ?
class_name: Location 
class_index: 4
--------

Question: How fast can a Corvette go ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What does USPS stand for ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the correct way to abbreviate cc. at the bottom of a business letter ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is a fear of strong light ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a girl to have sex with you ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who developed the first polio vaccine ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What are the top 5 tallest buildings in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How fast can a Corvette go ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does USPS stand for ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 00:30:49 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13301'), (b'x-ratelimit-remaining-tokens', b'29598'), (b'x-ratelimit-reset-requests', b'1h49m53.761999999s'), (b'x-ratelimit-reset-tokens', b'803ms'), (b'x-request-id', b'req_01hz0w3dzzewqvfcemvp4c44nr'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b260c64f2f642c-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the correct way to abbreviate cc. at the bottom of a business letter ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is a fear of strong light ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a girl to have sex with you ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who developed the first polio vaccine ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What are the top 5 tallest buildings in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How fast can a Corvette go ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does USPS stand for ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:30:51 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13300'), (b'x-ratelimit-remaining-tokens', b'29606'), (b'x-ratelimit-reset-requests', b'1h49m57.693999999s'), (b'x-ratelimit-reset-tokens', b'788ms'), (b'x-request-id', b'req_01hz0w3g0kec9a1e7zjzg0wbx5'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b260d339d0642c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the abbreviation of USPS.
class_name: ABBR
class_index: 0
data: {'text': 'What does NASA stand for ?', 'coarse_label': 0, 'fine_label': 1}
task_input: What does NASA stand for ?, corse_label: 0
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What does NASA stand for ?', 'examples_str': 'Question: What is the correct way to abbreviate cc. at the bottom of a business letter ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is a fear of strong light ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a girl to have sex with you ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who developed the first polio vaccine ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What are the top 5 tallest buildings in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How fast can a Corvette go ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is the correct way to abbreviate cc. at the bottom of a business letter ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is a fear of strong light ?
class_name: Entity 
class_index: 1
--------

Question: How do you get a girl to have sex with you ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who developed the first polio vaccine ?
class_name: Human being 
class_index: 3
--------

Question: What are the top 5 tallest buildings in the world ?
class_name: Location 
class_index: 4
--------

Question: How fast can a Corvette go ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What does NASA stand for ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the correct way to abbreviate cc. at the bottom of a business letter ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is a fear of strong light ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a girl to have sex with you ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who developed the first polio vaccine ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What are the top 5 tallest buildings in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How fast can a Corvette go ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does NASA stand for ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 00:30:51 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13300'), (b'x-ratelimit-remaining-tokens', b'29607'), (b'x-ratelimit-reset-requests', b'1h49m59.771999999s'), (b'x-ratelimit-reset-tokens', b'786ms'), (b'x-request-id', b'req_01hz0w3g7rfwg8eqc2gpm5meaq'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b260d4ab0d642c-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the correct way to abbreviate cc. at the bottom of a business letter ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is a fear of strong light ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a girl to have sex with you ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who developed the first polio vaccine ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What are the top 5 tallest buildings in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How fast can a Corvette go ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does NASA stand for ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:30:53 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13299'), (b'x-ratelimit-remaining-tokens', b'29606'), (b'x-ratelimit-reset-requests', b'1h50m3.717s'), (b'x-ratelimit-reset-tokens', b'788ms'), (b'x-request-id', b'req_01hz0w3j7zewqt7e9k9dxh10a8'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b260e17e39642c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the meaning of an abbreviation, which is typically represented by the acronym NASA.
class_name: ABBR
class_index: 0
data: {'text': 'What is the name given to the Tiger at Louisiana State University ?', 'coarse_label': 1, 'fine_label': 2}
task_input: What is the name given to the Tiger at Louisiana State University ?, corse_label: 1
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What is the name given to the Tiger at Louisiana State University ?', 'examples_str': 'Question: What is the correct way to abbreviate cc. at the bottom of a business letter ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is a fear of strong light ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a girl to have sex with you ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who developed the first polio vaccine ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What are the top 5 tallest buildings in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How fast can a Corvette go ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is the correct way to abbreviate cc. at the bottom of a business letter ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is a fear of strong light ?
class_name: Entity 
class_index: 1
--------

Question: How do you get a girl to have sex with you ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who developed the first polio vaccine ?
class_name: Human being 
class_index: 3
--------

Question: What are the top 5 tallest buildings in the world ?
class_name: Location 
class_index: 4
--------

Question: How fast can a Corvette go ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What is the name given to the Tiger at Louisiana State University ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the correct way to abbreviate cc. at the bottom of a business letter ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is a fear of strong light ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a girl to have sex with you ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who developed the first polio vaccine ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What are the top 5 tallest buildings in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How fast can a Corvette go ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is the name given to the Tiger at Louisiana State University ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 00:30:53 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'325'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13299'), (b'x-ratelimit-remaining-tokens', b'29596'), (b'x-ratelimit-reset-requests', b'1h50m5.710999999s'), (b'x-ratelimit-reset-tokens', b'808ms'), (b'x-request-id', b'req_01hz0w3jh1esh8bsvmq05c0ehe'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b260e34fe1642c-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the correct way to abbreviate cc. at the bottom of a business letter ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is a fear of strong light ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a girl to have sex with you ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who developed the first polio vaccine ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What are the top 5 tallest buildings in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How fast can a Corvette go ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is the name given to the Tiger at Louisiana State University ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:30:56 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13298'), (b'x-ratelimit-remaining-tokens', b'29596'), (b'x-ratelimit-reset-requests', b'1h50m9.645s'), (b'x-ratelimit-reset-tokens', b'808ms'), (b'x-request-id', b'req_01hz0w3mhkfwg9ahbjqqheh89v'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b260f02b81642c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the name of a specific entity, which is a characteristic of an entity.
class_name: HUM
class_index: 3
```
data: {'text': 'What is the criterion for being legally blind ?', 'coarse_label': 1, 'fine_label': 13}
task_input: What is the criterion for being legally blind ?, corse_label: 1
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What is the criterion for being legally blind ?', 'examples_str': 'Question: What is the correct way to abbreviate cc. at the bottom of a business letter ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is a fear of strong light ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a girl to have sex with you ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who developed the first polio vaccine ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What are the top 5 tallest buildings in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How fast can a Corvette go ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is the correct way to abbreviate cc. at the bottom of a business letter ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is a fear of strong light ?
class_name: Entity 
class_index: 1
--------

Question: How do you get a girl to have sex with you ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who developed the first polio vaccine ?
class_name: Human being 
class_index: 3
--------

Question: What are the top 5 tallest buildings in the world ?
class_name: Location 
class_index: 4
--------

Question: How fast can a Corvette go ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What is the criterion for being legally blind ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the correct way to abbreviate cc. at the bottom of a business letter ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is a fear of strong light ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a girl to have sex with you ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who developed the first polio vaccine ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What are the top 5 tallest buildings in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How fast can a Corvette go ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is the criterion for being legally blind ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 00:30:56 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13298'), (b'x-ratelimit-remaining-tokens', b'29589'), (b'x-ratelimit-reset-requests', b'1h50m11.761999999s'), (b'x-ratelimit-reset-tokens', b'821ms'), (b'x-request-id', b'req_01hz0w3ms3fdqtaaq9yxgqexxv'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b260f1bce1642c-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the correct way to abbreviate cc. at the bottom of a business letter ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is a fear of strong light ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a girl to have sex with you ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who developed the first polio vaccine ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What are the top 5 tallest buildings in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How fast can a Corvette go ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is the criterion for being legally blind ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:30:58 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13297'), (b'x-ratelimit-remaining-tokens', b'29601'), (b'x-ratelimit-reset-requests', b'1h50m15.692999999s'), (b'x-ratelimit-reset-tokens', b'798ms'), (b'x-request-id', b'req_01hz0w3psqes6b9s4jpcb57370'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b260fe9857642c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about a specific criterion for a medical condition, which is typically described in a medical context.
class_name: Description and abstract concept
class_index: 2
data: {'text': 'What is the major fault line near Kentucky ?', 'coarse_label': 1, 'fine_label': 13}
task_input: What is the major fault line near Kentucky ?, corse_label: 1
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What is the major fault line near Kentucky ?', 'examples_str': 'Question: What is the correct way to abbreviate cc. at the bottom of a business letter ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is a fear of strong light ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a girl to have sex with you ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who developed the first polio vaccine ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What are the top 5 tallest buildings in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How fast can a Corvette go ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is the correct way to abbreviate cc. at the bottom of a business letter ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is a fear of strong light ?
class_name: Entity 
class_index: 1
--------

Question: How do you get a girl to have sex with you ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who developed the first polio vaccine ?
class_name: Human being 
class_index: 3
--------

Question: What are the top 5 tallest buildings in the world ?
class_name: Location 
class_index: 4
--------

Question: How fast can a Corvette go ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What is the major fault line near Kentucky ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the correct way to abbreviate cc. at the bottom of a business letter ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is a fear of strong light ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a girl to have sex with you ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who developed the first polio vaccine ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What are the top 5 tallest buildings in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How fast can a Corvette go ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is the major fault line near Kentucky ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 00:30:58 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13297'), (b'x-ratelimit-remaining-tokens', b'29591'), (b'x-ratelimit-reset-requests', b'1h50m17.745s'), (b'x-ratelimit-reset-tokens', b'817ms'), (b'x-request-id', b'req_01hz0w3q1qesh8tb27m2eqbxsz'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b26100399a642c-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the correct way to abbreviate cc. at the bottom of a business letter ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is a fear of strong light ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a girl to have sex with you ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who developed the first polio vaccine ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What are the top 5 tallest buildings in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How fast can a Corvette go ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is the major fault line near Kentucky ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:31:00 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13296'), (b'x-ratelimit-remaining-tokens', b'29602'), (b'x-ratelimit-reset-requests', b'1h50m21.691999999s'), (b'x-ratelimit-reset-tokens', b'796ms'), (b'x-request-id', b'req_01hz0w3s1wfz4awj5vh33ek3dt'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b2610d1c8a642c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about a geographical feature, which is typically represented by a line on a map.
class_name: Location
class_index: 4
data: {'text': 'What is another name for vitamin B1 ?', 'coarse_label': 1, 'fine_label': 21}
task_input: What is another name for vitamin B1 ?, corse_label: 1
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What is another name for vitamin B1 ?', 'examples_str': 'Question: What is the correct way to abbreviate cc. at the bottom of a business letter ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is a fear of strong light ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a girl to have sex with you ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who developed the first polio vaccine ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What are the top 5 tallest buildings in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How fast can a Corvette go ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is the correct way to abbreviate cc. at the bottom of a business letter ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is a fear of strong light ?
class_name: Entity 
class_index: 1
--------

Question: How do you get a girl to have sex with you ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who developed the first polio vaccine ?
class_name: Human being 
class_index: 3
--------

Question: What are the top 5 tallest buildings in the world ?
class_name: Location 
class_index: 4
--------

Question: How fast can a Corvette go ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What is another name for vitamin B1 ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the correct way to abbreviate cc. at the bottom of a business letter ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is a fear of strong light ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a girl to have sex with you ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who developed the first polio vaccine ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What are the top 5 tallest buildings in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How fast can a Corvette go ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is another name for vitamin B1 ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 00:31:00 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13296'), (b'x-ratelimit-remaining-tokens', b'29597'), (b'x-ratelimit-reset-requests', b'1h50m23.702s'), (b'x-ratelimit-reset-tokens', b'806ms'), (b'x-request-id', b'req_01hz0w3sb6ep2syjtt1a645afn'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b2610eee09642c-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the correct way to abbreviate cc. at the bottom of a business letter ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is a fear of strong light ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a girl to have sex with you ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who developed the first polio vaccine ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What are the top 5 tallest buildings in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How fast can a Corvette go ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is another name for vitamin B1 ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:31:03 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13295'), (b'x-ratelimit-remaining-tokens', b'29604'), (b'x-ratelimit-reset-requests', b'1h50m27.644s'), (b'x-ratelimit-reset-tokens', b'792ms'), (b'x-request-id', b'req_01hz0w3vbgepd93hnw79h7jkjt'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b2611bc8ce642c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking for an alternative name of a vitamin, which is a specific type of information.
class_name: Abbreviation
class_index: 0
data: {'text': 'What are coral reefs ?', 'coarse_label': 2, 'fine_label': 24}
task_input: What are coral reefs ?, corse_label: 2
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What are coral reefs ?', 'examples_str': 'Question: What is the correct way to abbreviate cc. at the bottom of a business letter ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is a fear of strong light ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a girl to have sex with you ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who developed the first polio vaccine ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What are the top 5 tallest buildings in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How fast can a Corvette go ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is the correct way to abbreviate cc. at the bottom of a business letter ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is a fear of strong light ?
class_name: Entity 
class_index: 1
--------

Question: How do you get a girl to have sex with you ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who developed the first polio vaccine ?
class_name: Human being 
class_index: 3
--------

Question: What are the top 5 tallest buildings in the world ?
class_name: Location 
class_index: 4
--------

Question: How fast can a Corvette go ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What are coral reefs ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the correct way to abbreviate cc. at the bottom of a business letter ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is a fear of strong light ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a girl to have sex with you ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who developed the first polio vaccine ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What are the top 5 tallest buildings in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How fast can a Corvette go ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What are coral reefs ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 00:31:03 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13295'), (b'x-ratelimit-remaining-tokens', b'29593'), (b'x-ratelimit-reset-requests', b'1h50m29.766999999s'), (b'x-ratelimit-reset-tokens', b'814ms'), (b'x-request-id', b'req_01hz0w3vjtfx0bee9mwnmwk00f'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b2611d4a0b642c-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the correct way to abbreviate cc. at the bottom of a business letter ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is a fear of strong light ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a girl to have sex with you ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who developed the first polio vaccine ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What are the top 5 tallest buildings in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How fast can a Corvette go ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What are coral reefs ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:31:05 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13294'), (b'x-ratelimit-remaining-tokens', b'29607'), (b'x-ratelimit-reset-requests', b'1h50m33.708s'), (b'x-ratelimit-reset-tokens', b'786ms'), (b'x-request-id', b'req_01hz0w3xk5fr2bmpfegy8vetq2'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b2612a1cc4642c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is asking about a general concept or idea, which is a description and abstract concept.
class_name: DESC
class_index: 2
data: {'text': 'What are Aborigines ?', 'coarse_label': 2, 'fine_label': 24}
task_input: What are Aborigines ?, corse_label: 2
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What are Aborigines ?', 'examples_str': 'Question: What is the correct way to abbreviate cc. at the bottom of a business letter ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is a fear of strong light ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a girl to have sex with you ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who developed the first polio vaccine ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What are the top 5 tallest buildings in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How fast can a Corvette go ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is the correct way to abbreviate cc. at the bottom of a business letter ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is a fear of strong light ?
class_name: Entity 
class_index: 1
--------

Question: How do you get a girl to have sex with you ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who developed the first polio vaccine ?
class_name: Human being 
class_index: 3
--------

Question: What are the top 5 tallest buildings in the world ?
class_name: Location 
class_index: 4
--------

Question: How fast can a Corvette go ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What are Aborigines ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the correct way to abbreviate cc. at the bottom of a business letter ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is a fear of strong light ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a girl to have sex with you ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who developed the first polio vaccine ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What are the top 5 tallest buildings in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How fast can a Corvette go ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What are Aborigines ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 00:31:05 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13294'), (b'x-ratelimit-remaining-tokens', b'29598'), (b'x-ratelimit-reset-requests', b'1h50m35.74s'), (b'x-ratelimit-reset-tokens', b'803ms'), (b'x-request-id', b'req_01hz0w3xvafdr92jcbsvmqacad'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b2612bce42642c-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the correct way to abbreviate cc. at the bottom of a business letter ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is a fear of strong light ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a girl to have sex with you ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who developed the first polio vaccine ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What are the top 5 tallest buildings in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How fast can a Corvette go ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What are Aborigines ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:31:07 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13293'), (b'x-ratelimit-remaining-tokens', b'29608'), (b'x-ratelimit-reset-requests', b'1h50m39.679999999s'), (b'x-ratelimit-reset-tokens', b'784ms'), (b'x-request-id', b'req_01hz0w3zvpex29varwjdfcpvtp'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b2613898bb642c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is asking about a specific group of people, which is typically referred to as an entity.
class_name: Entity
class_index: 1
data: {'text': 'What are capers ?', 'coarse_label': 2, 'fine_label': 24}
task_input: What are capers ?, corse_label: 2
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What are capers ?', 'examples_str': 'Question: What is the correct way to abbreviate cc. at the bottom of a business letter ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is a fear of strong light ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a girl to have sex with you ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who developed the first polio vaccine ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What are the top 5 tallest buildings in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How fast can a Corvette go ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is the correct way to abbreviate cc. at the bottom of a business letter ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is a fear of strong light ?
class_name: Entity 
class_index: 1
--------

Question: How do you get a girl to have sex with you ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who developed the first polio vaccine ?
class_name: Human being 
class_index: 3
--------

Question: What are the top 5 tallest buildings in the world ?
class_name: Location 
class_index: 4
--------

Question: How fast can a Corvette go ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What are capers ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the correct way to abbreviate cc. at the bottom of a business letter ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is a fear of strong light ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a girl to have sex with you ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who developed the first polio vaccine ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What are the top 5 tallest buildings in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How fast can a Corvette go ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What are capers ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 00:31:07 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13293'), (b'x-ratelimit-remaining-tokens', b'29600'), (b'x-ratelimit-reset-requests', b'1h50m41.765999999s'), (b'x-ratelimit-reset-tokens', b'800ms'), (b'x-request-id', b'req_01hz0w4031fe1sdt0akqtq5ygh'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b2613a19e4642c-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the correct way to abbreviate cc. at the bottom of a business letter ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is a fear of strong light ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a girl to have sex with you ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who developed the first polio vaccine ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What are the top 5 tallest buildings in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How fast can a Corvette go ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What are capers ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:31:10 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13292'), (b'x-ratelimit-remaining-tokens', b'29609'), (b'x-ratelimit-reset-requests', b'1h50m45.699s'), (b'x-ratelimit-reset-tokens', b'782ms'), (b'x-request-id', b'req_01hz0w423nfa3btr8edfvsj47z'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b261470c88642c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the definition of capers, which is a type of food.
class_name: Description and abstract concept
class_index: 2
```
data: {'text': 'What is nuclear power ?', 'coarse_label': 2, 'fine_label': 24}
task_input: What is nuclear power ?, corse_label: 2
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What is nuclear power ?', 'examples_str': 'Question: What is the correct way to abbreviate cc. at the bottom of a business letter ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is a fear of strong light ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a girl to have sex with you ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who developed the first polio vaccine ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What are the top 5 tallest buildings in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How fast can a Corvette go ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is the correct way to abbreviate cc. at the bottom of a business letter ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is a fear of strong light ?
class_name: Entity 
class_index: 1
--------

Question: How do you get a girl to have sex with you ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who developed the first polio vaccine ?
class_name: Human being 
class_index: 3
--------

Question: What are the top 5 tallest buildings in the world ?
class_name: Location 
class_index: 4
--------

Question: How fast can a Corvette go ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What is nuclear power ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the correct way to abbreviate cc. at the bottom of a business letter ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is a fear of strong light ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a girl to have sex with you ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who developed the first polio vaccine ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What are the top 5 tallest buildings in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How fast can a Corvette go ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is nuclear power ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 00:31:10 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13292'), (b'x-ratelimit-remaining-tokens', b'29602'), (b'x-ratelimit-reset-requests', b'1h50m47.724999999s'), (b'x-ratelimit-reset-tokens', b'796ms'), (b'x-request-id', b'req_01hz0w42c8eshtg56jaee5qfkr'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b26148be0a642c-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the correct way to abbreviate cc. at the bottom of a business letter ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is a fear of strong light ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a girl to have sex with you ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who developed the first polio vaccine ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What are the top 5 tallest buildings in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How fast can a Corvette go ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is nuclear power ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:31:12 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13291'), (b'x-ratelimit-remaining-tokens', b'29607'), (b'x-ratelimit-reset-requests', b'1h50m51.636999999s'), (b'x-ratelimit-reset-tokens', b'786ms'), (b'x-request-id', b'req_01hz0w44dge6dsm70vf949mkpx'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b26155c8d8642c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is asking about a type of energy production, which is an abstract concept.
class_name: DESC
class_index: 2
```
data: {'text': 'Who was the first African American to win the Nobel Prize in literature ?', 'coarse_label': 3, 'fine_label': 29}
task_input: Who was the first African American to win the Nobel Prize in literature ?, corse_label: 3
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'Who was the first African American to win the Nobel Prize in literature ?', 'examples_str': 'Question: What is the correct way to abbreviate cc. at the bottom of a business letter ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is a fear of strong light ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a girl to have sex with you ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who developed the first polio vaccine ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What are the top 5 tallest buildings in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How fast can a Corvette go ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is the correct way to abbreviate cc. at the bottom of a business letter ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is a fear of strong light ?
class_name: Entity 
class_index: 1
--------

Question: How do you get a girl to have sex with you ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who developed the first polio vaccine ?
class_name: Human being 
class_index: 3
--------

Question: What are the top 5 tallest buildings in the world ?
class_name: Location 
class_index: 4
--------

Question: How fast can a Corvette go ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Who was the first African American to win the Nobel Prize in literature ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the correct way to abbreviate cc. at the bottom of a business letter ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is a fear of strong light ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a girl to have sex with you ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who developed the first polio vaccine ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What are the top 5 tallest buildings in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How fast can a Corvette go ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Who was the first African American to win the Nobel Prize in literature ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 00:31:12 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13291'), (b'x-ratelimit-remaining-tokens', b'29598'), (b'x-ratelimit-reset-requests', b'1h50m53.772999999s'), (b'x-ratelimit-reset-tokens', b'803ms'), (b'x-request-id', b'req_01hz0w44mmex2bpk54tbs4ez6n'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b2615739d2642c-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the correct way to abbreviate cc. at the bottom of a business letter ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is a fear of strong light ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a girl to have sex with you ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who developed the first polio vaccine ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What are the top 5 tallest buildings in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How fast can a Corvette go ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Who was the first African American to win the Nobel Prize in literature ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:31:14 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13290'), (b'x-ratelimit-remaining-tokens', b'29595'), (b'x-ratelimit-reset-requests', b'1h50m57.715s'), (b'x-ratelimit-reset-tokens', b'810ms'), (b'x-request-id', b'req_01hz0w46mye6dvaae02v4756sy'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b261641c42642c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about a specific person who achieved a notable award, which is a characteristic of a human being.
class_name: HUM
class_index: 3
```
data: {'text': 'Who invented the hula hoop ?', 'coarse_label': 3, 'fine_label': 29}
task_input: Who invented the hula hoop ?, corse_label: 3
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'Who invented the hula hoop ?', 'examples_str': 'Question: What is the correct way to abbreviate cc. at the bottom of a business letter ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is a fear of strong light ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a girl to have sex with you ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who developed the first polio vaccine ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What are the top 5 tallest buildings in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How fast can a Corvette go ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is the correct way to abbreviate cc. at the bottom of a business letter ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is a fear of strong light ?
class_name: Entity 
class_index: 1
--------

Question: How do you get a girl to have sex with you ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who developed the first polio vaccine ?
class_name: Human being 
class_index: 3
--------

Question: What are the top 5 tallest buildings in the world ?
class_name: Location 
class_index: 4
--------

Question: How fast can a Corvette go ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Who invented the hula hoop ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the correct way to abbreviate cc. at the bottom of a business letter ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is a fear of strong light ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a girl to have sex with you ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who developed the first polio vaccine ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What are the top 5 tallest buildings in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How fast can a Corvette go ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Who invented the hula hoop ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 00:31:14 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13290'), (b'x-ratelimit-remaining-tokens', b'29585'), (b'x-ratelimit-reset-requests', b'1h50m59.761999999s'), (b'x-ratelimit-reset-tokens', b'829ms'), (b'x-request-id', b'req_01hz0w46wdes79maa1vzb0g9dh'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b261659d66642c-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the correct way to abbreviate cc. at the bottom of a business letter ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is a fear of strong light ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a girl to have sex with you ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who developed the first polio vaccine ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What are the top 5 tallest buildings in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How fast can a Corvette go ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Who invented the hula hoop ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:31:17 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13289'), (b'x-ratelimit-remaining-tokens', b'29606'), (b'x-ratelimit-reset-requests', b'1h51m3.688999999s'), (b'x-ratelimit-reset-tokens', b'788ms'), (b'x-request-id', b'req_01hz0w48x6e56bg8nmj5579st8'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b261728ea6642c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is asking about the inventor of the hula hoop, which is a human being.
class_name: HUM
class_index: 3
```
data: {'text': 'Who invented Trivial Pursuit ?', 'coarse_label': 3, 'fine_label': 29}
task_input: Who invented Trivial Pursuit ?, corse_label: 3
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'Who invented Trivial Pursuit ?', 'examples_str': 'Question: What is the correct way to abbreviate cc. at the bottom of a business letter ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is a fear of strong light ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a girl to have sex with you ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who developed the first polio vaccine ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What are the top 5 tallest buildings in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How fast can a Corvette go ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is the correct way to abbreviate cc. at the bottom of a business letter ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is a fear of strong light ?
class_name: Entity 
class_index: 1
--------

Question: How do you get a girl to have sex with you ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who developed the first polio vaccine ?
class_name: Human being 
class_index: 3
--------

Question: What are the top 5 tallest buildings in the world ?
class_name: Location 
class_index: 4
--------

Question: How fast can a Corvette go ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Who invented Trivial Pursuit ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the correct way to abbreviate cc. at the bottom of a business letter ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is a fear of strong light ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a girl to have sex with you ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who developed the first polio vaccine ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What are the top 5 tallest buildings in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How fast can a Corvette go ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Who invented Trivial Pursuit ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 00:31:17 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13289'), (b'x-ratelimit-remaining-tokens', b'29596'), (b'x-ratelimit-reset-requests', b'1h51m5.771999999s'), (b'x-ratelimit-reset-tokens', b'807ms'), (b'x-request-id', b'req_01hz0w494becavqfy8g6gpk1y6'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b26173ffaf642c-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the correct way to abbreviate cc. at the bottom of a business letter ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is a fear of strong light ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a girl to have sex with you ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who developed the first polio vaccine ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What are the top 5 tallest buildings in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How fast can a Corvette go ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Who invented Trivial Pursuit ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:31:19 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13288'), (b'x-ratelimit-remaining-tokens', b'29605'), (b'x-ratelimit-reset-requests', b'1h51m9.709s'), (b'x-ratelimit-reset-tokens', b'790ms'), (b'x-request-id', b'req_01hz0w4b4sfdrvrxdcj38ra68j'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b26180d9f0642c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the inventor of a specific game, which is a human being.
class_name: HUM
class_index: 3
data: {'text': 'Who killed John F. Kennedy ?', 'coarse_label': 3, 'fine_label': 29}
task_input: Who killed John F. Kennedy ?, corse_label: 3
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'Who killed John F. Kennedy ?', 'examples_str': 'Question: What is the correct way to abbreviate cc. at the bottom of a business letter ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is a fear of strong light ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a girl to have sex with you ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who developed the first polio vaccine ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What are the top 5 tallest buildings in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How fast can a Corvette go ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is the correct way to abbreviate cc. at the bottom of a business letter ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is a fear of strong light ?
class_name: Entity 
class_index: 1
--------

Question: How do you get a girl to have sex with you ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who developed the first polio vaccine ?
class_name: Human being 
class_index: 3
--------

Question: What are the top 5 tallest buildings in the world ?
class_name: Location 
class_index: 4
--------

Question: How fast can a Corvette go ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Who killed John F. Kennedy ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the correct way to abbreviate cc. at the bottom of a business letter ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is a fear of strong light ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a girl to have sex with you ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who developed the first polio vaccine ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What are the top 5 tallest buildings in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How fast can a Corvette go ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Who killed John F. Kennedy ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 00:31:19 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13288'), (b'x-ratelimit-remaining-tokens', b'29602'), (b'x-ratelimit-reset-requests', b'1h51m11.705999999s'), (b'x-ratelimit-reset-tokens', b'795ms'), (b'x-request-id', b'req_01hz0w4be0f7kav8h506ew4vx6'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b26182bb46642c-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the correct way to abbreviate cc. at the bottom of a business letter ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is a fear of strong light ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a girl to have sex with you ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who developed the first polio vaccine ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What are the top 5 tallest buildings in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How fast can a Corvette go ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Who killed John F. Kennedy ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:31:21 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13287'), (b'x-ratelimit-remaining-tokens', b'29606'), (b'x-ratelimit-reset-requests', b'1h51m15.653s'), (b'x-ratelimit-reset-tokens', b'788ms'), (b'x-request-id', b'req_01hz0w4de5ef9rcr1vcgyqnkk9'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b2618f8d0a642c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about a historical event and the identity of the perpetrator, which is typically attributed to a human being.
class_name: HUM
class_index: 3
data: {'text': 'What New York City structure is also known as the Twin Towers ?', 'coarse_label': 4, 'fine_label': 35}
task_input: What New York City structure is also known as the Twin Towers ?, corse_label: 4
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What New York City structure is also known as the Twin Towers ?', 'examples_str': 'Question: What is the correct way to abbreviate cc. at the bottom of a business letter ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is a fear of strong light ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a girl to have sex with you ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who developed the first polio vaccine ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What are the top 5 tallest buildings in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How fast can a Corvette go ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is the correct way to abbreviate cc. at the bottom of a business letter ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is a fear of strong light ?
class_name: Entity 
class_index: 1
--------

Question: How do you get a girl to have sex with you ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who developed the first polio vaccine ?
class_name: Human being 
class_index: 3
--------

Question: What are the top 5 tallest buildings in the world ?
class_name: Location 
class_index: 4
--------

Question: How fast can a Corvette go ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What New York City structure is also known as the Twin Towers ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the correct way to abbreviate cc. at the bottom of a business letter ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is a fear of strong light ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a girl to have sex with you ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who developed the first polio vaccine ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What are the top 5 tallest buildings in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How fast can a Corvette go ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What New York City structure is also known as the Twin Towers ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 00:31:21 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13287'), (b'x-ratelimit-remaining-tokens', b'29590'), (b'x-ratelimit-reset-requests', b'1h51m17.767999999s'), (b'x-ratelimit-reset-tokens', b'819ms'), (b'x-request-id', b'req_01hz0w4dneewsbcv7xxdxs6vkh'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b26190fe5b642c-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the correct way to abbreviate cc. at the bottom of a business letter ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is a fear of strong light ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a girl to have sex with you ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who developed the first polio vaccine ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What are the top 5 tallest buildings in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How fast can a Corvette go ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What New York City structure is also known as the Twin Towers ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:31:24 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13286'), (b'x-ratelimit-remaining-tokens', b'29597'), (b'x-ratelimit-reset-requests', b'1h51m21.703s'), (b'x-ratelimit-reset-tokens', b'806ms'), (b'x-request-id', b'req_01hz0w4fnzfwjbnvd6axg6k8gs'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b2619dd850642c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about a specific location in New York City, which is a well-known landmark.
class_name: LOC
class_index: 4
data: {'text': 'What is the largest city in the world ?', 'coarse_label': 4, 'fine_label': 32}
task_input: What is the largest city in the world ?, corse_label: 4
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What is the largest city in the world ?', 'examples_str': 'Question: What is the correct way to abbreviate cc. at the bottom of a business letter ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is a fear of strong light ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a girl to have sex with you ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who developed the first polio vaccine ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What are the top 5 tallest buildings in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How fast can a Corvette go ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is the correct way to abbreviate cc. at the bottom of a business letter ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is a fear of strong light ?
class_name: Entity 
class_index: 1
--------

Question: How do you get a girl to have sex with you ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who developed the first polio vaccine ?
class_name: Human being 
class_index: 3
--------

Question: What are the top 5 tallest buildings in the world ?
class_name: Location 
class_index: 4
--------

Question: How fast can a Corvette go ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What is the largest city in the world ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the correct way to abbreviate cc. at the bottom of a business letter ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is a fear of strong light ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a girl to have sex with you ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who developed the first polio vaccine ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What are the top 5 tallest buildings in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How fast can a Corvette go ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is the largest city in the world ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 00:31:24 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13286'), (b'x-ratelimit-remaining-tokens', b'29592'), (b'x-ratelimit-reset-requests', b'1h51m23.743s'), (b'x-ratelimit-reset-tokens', b'815ms'), (b'x-request-id', b'req_01hz0w4fy1fe2td59h0hw433et'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b2619f89bf642c-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the correct way to abbreviate cc. at the bottom of a business letter ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is a fear of strong light ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a girl to have sex with you ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who developed the first polio vaccine ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What are the top 5 tallest buildings in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How fast can a Corvette go ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is the largest city in the world ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:31:26 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13285'), (b'x-ratelimit-remaining-tokens', b'29603'), (b'x-ratelimit-reset-requests', b'1h51m27.677999999s'), (b'x-ratelimit-reset-tokens', b'794ms'), (b'x-request-id', b'req_01hz0w4hyjews9mmy0g3gdfw4f'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b261ac6c9a642c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the largest city in the world, which is a geographical location.
class_name: LOC
class_index: 4
```
data: {'text': 'What hemisphere is the Philippines in ?', 'coarse_label': 4, 'fine_label': 35}
task_input: What hemisphere is the Philippines in ?, corse_label: 4
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What hemisphere is the Philippines in ?', 'examples_str': 'Question: What is the correct way to abbreviate cc. at the bottom of a business letter ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is a fear of strong light ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a girl to have sex with you ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who developed the first polio vaccine ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What are the top 5 tallest buildings in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How fast can a Corvette go ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is the correct way to abbreviate cc. at the bottom of a business letter ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is a fear of strong light ?
class_name: Entity 
class_index: 1
--------

Question: How do you get a girl to have sex with you ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who developed the first polio vaccine ?
class_name: Human being 
class_index: 3
--------

Question: What are the top 5 tallest buildings in the world ?
class_name: Location 
class_index: 4
--------

Question: How fast can a Corvette go ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What hemisphere is the Philippines in ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the correct way to abbreviate cc. at the bottom of a business letter ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is a fear of strong light ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a girl to have sex with you ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who developed the first polio vaccine ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What are the top 5 tallest buildings in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How fast can a Corvette go ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What hemisphere is the Philippines in ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 00:31:26 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'325'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13285'), (b'x-ratelimit-remaining-tokens', b'29598'), (b'x-ratelimit-reset-requests', b'1h51m29.720999999s'), (b'x-ratelimit-reset-tokens', b'803ms'), (b'x-request-id', b'req_01hz0w4j7be6e9a61ant800dwr'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b261ae2e36642c-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the correct way to abbreviate cc. at the bottom of a business letter ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is a fear of strong light ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a girl to have sex with you ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who developed the first polio vaccine ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What are the top 5 tallest buildings in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How fast can a Corvette go ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What hemisphere is the Philippines in ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:31:28 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13284'), (b'x-ratelimit-remaining-tokens', b'29603'), (b'x-ratelimit-reset-requests', b'1h51m33.647s'), (b'x-ratelimit-reset-tokens', b'794ms'), (b'x-request-id', b'req_01hz0w4m84epevgmd1mn4dfr3x'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b261bb0801642c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the geographical location of the Philippines, which is typically classified as a location.
class_name: LOC
class_index: 4
data: {'text': 'What French province is cognac produced in ?', 'coarse_label': 4, 'fine_label': 36}
task_input: What French province is cognac produced in ?, corse_label: 4
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What French province is cognac produced in ?', 'examples_str': 'Question: What is the correct way to abbreviate cc. at the bottom of a business letter ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is a fear of strong light ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a girl to have sex with you ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who developed the first polio vaccine ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What are the top 5 tallest buildings in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How fast can a Corvette go ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is the correct way to abbreviate cc. at the bottom of a business letter ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is a fear of strong light ?
class_name: Entity 
class_index: 1
--------

Question: How do you get a girl to have sex with you ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who developed the first polio vaccine ?
class_name: Human being 
class_index: 3
--------

Question: What are the top 5 tallest buildings in the world ?
class_name: Location 
class_index: 4
--------

Question: How fast can a Corvette go ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What French province is cognac produced in ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the correct way to abbreviate cc. at the bottom of a business letter ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is a fear of strong light ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a girl to have sex with you ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who developed the first polio vaccine ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What are the top 5 tallest buildings in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How fast can a Corvette go ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What French province is cognac produced in ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 00:31:28 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13284'), (b'x-ratelimit-remaining-tokens', b'29625'), (b'x-ratelimit-reset-requests', b'1h51m35.688s'), (b'x-ratelimit-reset-tokens', b'750ms'), (b'x-request-id', b'req_01hz0w4mhxfwjbf3hte6raxn2j'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b261bd1981642c-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the correct way to abbreviate cc. at the bottom of a business letter ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is a fear of strong light ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a girl to have sex with you ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who developed the first polio vaccine ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What are the top 5 tallest buildings in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How fast can a Corvette go ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What French province is cognac produced in ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:31:31 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13283'), (b'x-ratelimit-remaining-tokens', b'29602'), (b'x-ratelimit-reset-requests', b'1h51m39.632999999s'), (b'x-ratelimit-reset-tokens', b'796ms'), (b'x-request-id', b'req_01hz0w4pj4fz5rwn6r39casfk7'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b261c9eb24642c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about a specific geographic location where a type of product is produced.
class_name: Location
class_index: 4
data: {'text': 'What is the speed of light ?', 'coarse_label': 5, 'fine_label': 46}
task_input: What is the speed of light ?, corse_label: 5
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What is the speed of light ?', 'examples_str': 'Question: What is the correct way to abbreviate cc. at the bottom of a business letter ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is a fear of strong light ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a girl to have sex with you ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who developed the first polio vaccine ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What are the top 5 tallest buildings in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How fast can a Corvette go ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is the correct way to abbreviate cc. at the bottom of a business letter ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is a fear of strong light ?
class_name: Entity 
class_index: 1
--------

Question: How do you get a girl to have sex with you ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who developed the first polio vaccine ?
class_name: Human being 
class_index: 3
--------

Question: What are the top 5 tallest buildings in the world ?
class_name: Location 
class_index: 4
--------

Question: How fast can a Corvette go ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What is the speed of light ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the correct way to abbreviate cc. at the bottom of a business letter ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is a fear of strong light ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a girl to have sex with you ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who developed the first polio vaccine ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What are the top 5 tallest buildings in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How fast can a Corvette go ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is the speed of light ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 00:31:31 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13283'), (b'x-ratelimit-remaining-tokens', b'29596'), (b'x-ratelimit-reset-requests', b'1h51m41.767999999s'), (b'x-ratelimit-reset-tokens', b'807ms'), (b'x-request-id', b'req_01hz0w4pseep4bdgdjrrz8z3ka'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b261cb6c4d642c-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the correct way to abbreviate cc. at the bottom of a business letter ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is a fear of strong light ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a girl to have sex with you ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who developed the first polio vaccine ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What are the top 5 tallest buildings in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How fast can a Corvette go ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is the speed of light ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:31:33 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13282'), (b'x-ratelimit-remaining-tokens', b'29606'), (b'x-ratelimit-reset-requests', b'1h51m45.717s'), (b'x-ratelimit-reset-tokens', b'788ms'), (b'x-request-id', b'req_01hz0w4rsffz5vzfezhwrf4pfx'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b261d82da0642c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking for a fundamental physical constant, which is a numeric value.
class_name: NUM
class_index: 5
data: {'text': 'How many pounds in a ton ?', 'coarse_label': 5, 'fine_label': 38}
task_input: How many pounds in a ton ?, corse_label: 5
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'How many pounds in a ton ?', 'examples_str': 'Question: What is the correct way to abbreviate cc. at the bottom of a business letter ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is a fear of strong light ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a girl to have sex with you ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who developed the first polio vaccine ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What are the top 5 tallest buildings in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How fast can a Corvette go ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is the correct way to abbreviate cc. at the bottom of a business letter ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is a fear of strong light ?
class_name: Entity 
class_index: 1
--------

Question: How do you get a girl to have sex with you ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who developed the first polio vaccine ?
class_name: Human being 
class_index: 3
--------

Question: What are the top 5 tallest buildings in the world ?
class_name: Location 
class_index: 4
--------

Question: How fast can a Corvette go ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: How many pounds in a ton ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the correct way to abbreviate cc. at the bottom of a business letter ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is a fear of strong light ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a girl to have sex with you ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who developed the first polio vaccine ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What are the top 5 tallest buildings in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How fast can a Corvette go ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: How many pounds in a ton ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 00:31:33 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13282'), (b'x-ratelimit-remaining-tokens', b'29607'), (b'x-ratelimit-reset-requests', b'1h51m47.592s'), (b'x-ratelimit-reset-tokens', b'785ms'), (b'x-request-id', b'req_01hz0w4s69e56rb14xh8065fzz'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b261dacf6f642c-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the correct way to abbreviate cc. at the bottom of a business letter ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is a fear of strong light ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a girl to have sex with you ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who developed the first polio vaccine ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What are the top 5 tallest buildings in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How fast can a Corvette go ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: How many pounds in a ton ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:31:35 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13281'), (b'x-ratelimit-remaining-tokens', b'29606'), (b'x-ratelimit-reset-requests', b'1h51m51.531999999s'), (b'x-ratelimit-reset-tokens', b'788ms'), (b'x-request-id', b'req_01hz0w4v6ne57ak96c8qpn3da0'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b261e79ffb642c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the conversion of units, specifically pounds to tons.
class_name: Numeric value
class_index: 5
data: {'text': 'How often does Old Faithful erupt at Yellowstone National Park ?', 'coarse_label': 5, 'fine_label': 43}
task_input: How often does Old Faithful erupt at Yellowstone National Park ?, corse_label: 5
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'How often does Old Faithful erupt at Yellowstone National Park ?', 'examples_str': 'Question: What is the correct way to abbreviate cc. at the bottom of a business letter ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is a fear of strong light ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a girl to have sex with you ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who developed the first polio vaccine ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What are the top 5 tallest buildings in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How fast can a Corvette go ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is the correct way to abbreviate cc. at the bottom of a business letter ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is a fear of strong light ?
class_name: Entity 
class_index: 1
--------

Question: How do you get a girl to have sex with you ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who developed the first polio vaccine ?
class_name: Human being 
class_index: 3
--------

Question: What are the top 5 tallest buildings in the world ?
class_name: Location 
class_index: 4
--------

Question: How fast can a Corvette go ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: How often does Old Faithful erupt at Yellowstone National Park ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the correct way to abbreviate cc. at the bottom of a business letter ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is a fear of strong light ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a girl to have sex with you ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who developed the first polio vaccine ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What are the top 5 tallest buildings in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How fast can a Corvette go ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: How often does Old Faithful erupt at Yellowstone National Park ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 00:31:35 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13281'), (b'x-ratelimit-remaining-tokens', b'29600'), (b'x-ratelimit-reset-requests', b'1h51m53.776999999s'), (b'x-ratelimit-reset-tokens', b'800ms'), (b'x-request-id', b'req_01hz0w4vdnf7kv875j8nca18qg'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b261e90927642c-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the correct way to abbreviate cc. at the bottom of a business letter ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is a fear of strong light ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a girl to have sex with you ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who developed the first polio vaccine ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What are the top 5 tallest buildings in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How fast can a Corvette go ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: How often does Old Faithful erupt at Yellowstone National Park ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:31:38 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13280'), (b'x-ratelimit-remaining-tokens', b'29597'), (b'x-ratelimit-reset-requests', b'1h51m57.717s'), (b'x-ratelimit-reset-tokens', b'806ms'), (b'x-request-id', b'req_01hz0w4xe1fa4t6rn06m0s0cas'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b261f5eb07642c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the frequency of a natural phenomenon at a specific location, which suggests a numeric value.
class_name: NUM
class_index: 5
data: {'text': 'When did Idaho become a state ?', 'coarse_label': 5, 'fine_label': 39}
task_input: When did Idaho become a state ?, corse_label: 5
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'When did Idaho become a state ?', 'examples_str': 'Question: What is the correct way to abbreviate cc. at the bottom of a business letter ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is a fear of strong light ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a girl to have sex with you ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who developed the first polio vaccine ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What are the top 5 tallest buildings in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How fast can a Corvette go ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is the correct way to abbreviate cc. at the bottom of a business letter ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is a fear of strong light ?
class_name: Entity 
class_index: 1
--------

Question: How do you get a girl to have sex with you ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who developed the first polio vaccine ?
class_name: Human being 
class_index: 3
--------

Question: What are the top 5 tallest buildings in the world ?
class_name: Location 
class_index: 4
--------

Question: How fast can a Corvette go ?
class_name: Numeric value 
class_index: 5
--------
Question: What is AFS ?
class_name: Abbreviation 
class_index: 0
--------

Question: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?
class_name: Entity 
class_index: 1
--------

Question: Why do recipe books recommend starting with cold water when you boil something ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the inventor of silly putty ?
class_name: Human being 
class_index: 3
--------

Question: What mountain range extends from the Gulf of St. Lawrence to Alabama ?
class_name: Location 
class_index: 4
--------

Question: How many millimeters are in a mile ?
class_name: Numeric value 
class_index: 5
--------


</EXAMPLES>
Question: When did Idaho become a state ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the correct way to abbreviate cc. at the bottom of a business letter ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is a fear of strong light ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a girl to have sex with you ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who developed the first polio vaccine ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What are the top 5 tallest buildings in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How fast can a Corvette go ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: When did Idaho become a state ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 00:31:38 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'325'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13280'), (b'x-ratelimit-remaining-tokens', b'29591'), (b'x-ratelimit-reset-requests', b'1h51m59.708999999s'), (b'x-ratelimit-reset-tokens', b'817ms'), (b'x-request-id', b'req_01hz0w4xq5ewt8yc18e04e2k0y'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b261f7bc6f642c-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the correct way to abbreviate cc. at the bottom of a business letter ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is a fear of strong light ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a girl to have sex with you ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who developed the first polio vaccine ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What are the top 5 tallest buildings in the world ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How fast can a Corvette go ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: When did Idaho become a state ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:31:40 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13279'), (b'x-ratelimit-remaining-tokens', b'29605'), (b'x-ratelimit-reset-requests', b'1h52m3.649s'), (b'x-ratelimit-reset-tokens', b'790ms'), (b'x-request-id', b'req_01hz0w4zqhefasd93ypmz3kwqj'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b262049ef0642c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the date when Idaho became a state, which is a historical event.
class_name: Entity
class_index: 1
responses: [0, 0, 0, 0, 3, 2, 4, 0, 2, 1, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 1], targets: [0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5]
num_invalid: 0
Preds tensor: tensor([[1., 0., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0.],
        [0., 0., 0., 1., 0., 0.],
        [0., 0., 1., 0., 0., 0.],
        [0., 0., 0., 0., 1., 0.],
        [1., 0., 0., 0., 0., 0.],
        [0., 0., 1., 0., 0., 0.],
        [0., 1., 0., 0., 0., 0.],
        [0., 0., 1., 0., 0., 0.],
        [0., 0., 1., 0., 0., 0.],
        [0., 0., 0., 1., 0., 0.],
        [0., 0., 0., 1., 0., 0.],
        [0., 0., 0., 1., 0., 0.],
        [0., 0., 0., 1., 0., 0.],
        [0., 0., 0., 0., 1., 0.],
        [0., 0., 0., 0., 1., 0.],
        [0., 0., 0., 0., 1., 0.],
        [0., 0., 0., 0., 1., 0.],
        [0., 0., 0., 0., 0., 1.],
        [0., 0., 0., 0., 0., 1.],
        [0., 0., 0., 0., 0., 1.],
        [0., 1., 0., 0., 0., 0.]])
Targets tensor: tensor([0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5])
Test Accuracy Start: 0.75, F1: 0.712, score: 1.324
step: 0
train_batch: {'text': ['Where can I get a photograph of professor Randolph Quirk ?', "What are some important events of the 1830 's ?", "What comedienne upstaged Dwight D. Eisenhower 's first inauguration by giving birth to her first child ?", "Name Randy Craft 's lawyer .", 'What are the names of the different toes ?', 'What famed London criminal court was once a feudal castle ?', 'What detective lives on Punchbowl Hill and has 11 children ?', 'What is artificial intelligence ?', 'What garment was named for Bradley , Voorhees and Day ?', 'What bay sparkles next to Miami , Florida ?'], 'coarse_label': tensor([4, 1, 3, 3, 1, 4, 3, 2, 1, 4]), 'fine_label': tensor([35,  8, 29, 29,  3, 35, 29, 24, 15, 35])}
before random_replace: [Sample(index=1668, data={'text': 'What is the correct way to abbreviate cc. at the bottom of a business letter ?', 'coarse_label': 0, 'fine_label': 0}), Sample(index=1148, data={'text': 'What is a fear of strong light ?', 'coarse_label': 1, 'fine_label': 7}), Sample(index=2314, data={'text': 'How do you get a girl to have sex with you ?', 'coarse_label': 2, 'fine_label': 26}), Sample(index=1069, data={'text': 'Who developed the first polio vaccine ?', 'coarse_label': 3, 'fine_label': 29}), Sample(index=1948, data={'text': 'What are the top 5 tallest buildings in the world ?', 'coarse_label': 4, 'fine_label': 35}), Sample(index=2123, data={'text': 'How fast can a Corvette go ?', 'coarse_label': 5, 'fine_label': 46})]
after random_replace: [Sample(index=91, data={'text': 'What is AFS ?', 'coarse_label': 0, 'fine_label': 1}), Sample(index=804, data={'text': 'What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?', 'coarse_label': 1, 'fine_label': 5}), Sample(index=2067, data={'text': 'Why do recipe books recommend starting with cold water when you boil something ?', 'coarse_label': 2, 'fine_label': 27}), Sample(index=255, data={'text': 'Who was the inventor of silly putty ?', 'coarse_label': 3, 'fine_label': 29}), Sample(index=10, data={'text': 'What mountain range extends from the Gulf of St. Lawrence to Alabama ?', 'coarse_label': 4, 'fine_label': 34}), Sample(index=424, data={'text': 'How many millimeters are in a mile ?', 'coarse_label': 5, 'fine_label': 38})]
data: {'text': 'What does the abbreviation cwt. ?', 'coarse_label': 0, 'fine_label': 1}
task_input: What does the abbreviation cwt. ?, corse_label: 0
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What does the abbreviation cwt. ?', 'examples_str': 'Question: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why do recipe books recommend starting with cold water when you boil something ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many millimeters are in a mile ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is AFS ?
class_name: Abbreviation 
class_index: 0
--------

Question: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?
class_name: Entity 
class_index: 1
--------

Question: Why do recipe books recommend starting with cold water when you boil something ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the inventor of silly putty ?
class_name: Human being 
class_index: 3
--------

Question: What mountain range extends from the Gulf of St. Lawrence to Alabama ?
class_name: Location 
class_index: 4
--------

Question: How many millimeters are in a mile ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What does the abbreviation cwt. ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why do recipe books recommend starting with cold water when you boil something ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many millimeters are in a mile ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does the abbreviation cwt. ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 00:31:40 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13279'), (b'x-ratelimit-remaining-tokens', b'29645'), (b'x-ratelimit-reset-requests', b'1h52m5.653999999s'), (b'x-ratelimit-reset-tokens', b'710ms'), (b'x-request-id', b'req_01hz0w502cex3r383spygykgwp'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b26206c8d7642c-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why do recipe books recommend starting with cold water when you boil something ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many millimeters are in a mile ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does the abbreviation cwt. ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:31:42 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13278'), (b'x-ratelimit-remaining-tokens', b'29590'), (b'x-ratelimit-reset-requests', b'1h52m9.589s'), (b'x-ratelimit-reset-tokens', b'820ms'), (b'x-request-id', b'req_01hz0w522ye5790yfghqtjjx8p'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b26213bb4b642c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the meaning of the abbreviation "cwt.", which is a common abbreviation for "hundredweight".
class_name: Abbreviation
class_index: 0
data: {'text': 'What is the abbreviated term used for the National Bureau of Investigation ?', 'coarse_label': 0, 'fine_label': 0}
task_input: What is the abbreviated term used for the National Bureau of Investigation ?, corse_label: 0
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What is the abbreviated term used for the National Bureau of Investigation ?', 'examples_str': 'Question: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why do recipe books recommend starting with cold water when you boil something ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many millimeters are in a mile ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is AFS ?
class_name: Abbreviation 
class_index: 0
--------

Question: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?
class_name: Entity 
class_index: 1
--------

Question: Why do recipe books recommend starting with cold water when you boil something ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the inventor of silly putty ?
class_name: Human being 
class_index: 3
--------

Question: What mountain range extends from the Gulf of St. Lawrence to Alabama ?
class_name: Location 
class_index: 4
--------

Question: How many millimeters are in a mile ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What is the abbreviated term used for the National Bureau of Investigation ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why do recipe books recommend starting with cold water when you boil something ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many millimeters are in a mile ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is the abbreviated term used for the National Bureau of Investigation ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 00:31:42 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13278'), (b'x-ratelimit-remaining-tokens', b'29592'), (b'x-ratelimit-reset-requests', b'1h52m11.703s'), (b'x-ratelimit-reset-tokens', b'816ms'), (b'x-request-id', b'req_01hz0w52c7fz690yfy142df3z9'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b262158c94642c-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why do recipe books recommend starting with cold water when you boil something ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many millimeters are in a mile ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is the abbreviated term used for the National Bureau of Investigation ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:31:45 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13277'), (b'x-ratelimit-remaining-tokens', b'29579'), (b'x-ratelimit-reset-requests', b'1h52m15.637999999s'), (b'x-ratelimit-reset-tokens', b'842ms'), (b'x-request-id', b'req_01hz0w54crfdt9s20wttrkpbxy'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b262226e39642c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking for the abbreviated term used for the National Bureau of Investigation, which is typically referred to as the FBI (Federal Bureau of Investigation).
class_name: "ABBR"
class_index: 0
data: {'text': 'What does NAFTA stand for ?', 'coarse_label': 0, 'fine_label': 1}
task_input: What does NAFTA stand for ?, corse_label: 0
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What does NAFTA stand for ?', 'examples_str': 'Question: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why do recipe books recommend starting with cold water when you boil something ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many millimeters are in a mile ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is AFS ?
class_name: Abbreviation 
class_index: 0
--------

Question: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?
class_name: Entity 
class_index: 1
--------

Question: Why do recipe books recommend starting with cold water when you boil something ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the inventor of silly putty ?
class_name: Human being 
class_index: 3
--------

Question: What mountain range extends from the Gulf of St. Lawrence to Alabama ?
class_name: Location 
class_index: 4
--------

Question: How many millimeters are in a mile ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What does NAFTA stand for ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why do recipe books recommend starting with cold water when you boil something ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many millimeters are in a mile ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does NAFTA stand for ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 00:31:45 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13277'), (b'x-ratelimit-remaining-tokens', b'29577'), (b'x-ratelimit-reset-requests', b'1h52m17.705s'), (b'x-ratelimit-reset-tokens', b'846ms'), (b'x-request-id', b'req_01hz0w54p1f7ma1f9zd0tszx8t'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b262244f90642c-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why do recipe books recommend starting with cold water when you boil something ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many millimeters are in a mile ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does NAFTA stand for ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:31:47 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13276'), (b'x-ratelimit-remaining-tokens', b'29592'), (b'x-ratelimit-reset-requests', b'1h52m21.646s'), (b'x-ratelimit-reset-tokens', b'816ms'), (b'x-request-id', b'req_01hz0w56pbewttm88h36kanpxf'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b26231297a642c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking for the abbreviation of a term, which is a common use case for ABBRs.
class_name: ABBR
class_index: 0
```
data: {'text': 'What is the abbreviation of the International Olympic Committee ?', 'coarse_label': 0, 'fine_label': 0}
task_input: What is the abbreviation of the International Olympic Committee ?, corse_label: 0
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What is the abbreviation of the International Olympic Committee ?', 'examples_str': 'Question: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why do recipe books recommend starting with cold water when you boil something ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many millimeters are in a mile ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is AFS ?
class_name: Abbreviation 
class_index: 0
--------

Question: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?
class_name: Entity 
class_index: 1
--------

Question: Why do recipe books recommend starting with cold water when you boil something ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the inventor of silly putty ?
class_name: Human being 
class_index: 3
--------

Question: What mountain range extends from the Gulf of St. Lawrence to Alabama ?
class_name: Location 
class_index: 4
--------

Question: How many millimeters are in a mile ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What is the abbreviation of the International Olympic Committee ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why do recipe books recommend starting with cold water when you boil something ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many millimeters are in a mile ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is the abbreviation of the International Olympic Committee ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 00:31:47 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13276'), (b'x-ratelimit-remaining-tokens', b'29588'), (b'x-ratelimit-reset-requests', b'1h52m23.761999999s'), (b'x-ratelimit-reset-tokens', b'823ms'), (b'x-request-id', b'req_01hz0w56xsfe4abkbx787yqv4j'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b26232aac1642c-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why do recipe books recommend starting with cold water when you boil something ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many millimeters are in a mile ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is the abbreviation of the International Olympic Committee ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:31:49 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13275'), (b'x-ratelimit-remaining-tokens', b'29582'), (b'x-ratelimit-reset-requests', b'1h52m27.701s'), (b'x-ratelimit-reset-tokens', b'836ms'), (b'x-request-id', b'req_01hz0w58y6f7msbkj86f929eda'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b2623f8c4b642c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking for the abbreviation of the International Olympic Committee, which is IOC.
class_name: ABBR
class_index: 0
data: {'text': 'What does a woman want ?', 'coarse_label': 1, 'fine_label': 13}
task_input: What does a woman want ?, corse_label: 1
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What does a woman want ?', 'examples_str': 'Question: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why do recipe books recommend starting with cold water when you boil something ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many millimeters are in a mile ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is AFS ?
class_name: Abbreviation 
class_index: 0
--------

Question: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?
class_name: Entity 
class_index: 1
--------

Question: Why do recipe books recommend starting with cold water when you boil something ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the inventor of silly putty ?
class_name: Human being 
class_index: 3
--------

Question: What mountain range extends from the Gulf of St. Lawrence to Alabama ?
class_name: Location 
class_index: 4
--------

Question: How many millimeters are in a mile ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What does a woman want ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why do recipe books recommend starting with cold water when you boil something ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many millimeters are in a mile ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does a woman want ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 00:31:50 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13275'), (b'x-ratelimit-remaining-tokens', b'29613'), (b'x-ratelimit-reset-requests', b'1h52m29.671999999s'), (b'x-ratelimit-reset-tokens', b'773ms'), (b'x-request-id', b'req_01hz0w598feskv4d9phdz6679d'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b262419df8642c-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why do recipe books recommend starting with cold water when you boil something ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many millimeters are in a mile ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does a woman want ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:31:52 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13274'), (b'x-ratelimit-remaining-tokens', b'29592'), (b'x-ratelimit-reset-requests', b'1h52m33.609s'), (b'x-ratelimit-reset-tokens', b'816ms'), (b'x-request-id', b'req_01hz0w5b8yes9b3qwesf06k0d3'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b2624e7858642c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is a quote from a famous play, and it is a question about what a woman wants, which is a abstract concept.
class_name: Description and abstract concept
class_index: 2
data: {'text': 'In what religion was Isis the nature goddess ?', 'coarse_label': 1, 'fine_label': 16}
task_input: In what religion was Isis the nature goddess ?, corse_label: 1
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'In what religion was Isis the nature goddess ?', 'examples_str': 'Question: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why do recipe books recommend starting with cold water when you boil something ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many millimeters are in a mile ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is AFS ?
class_name: Abbreviation 
class_index: 0
--------

Question: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?
class_name: Entity 
class_index: 1
--------

Question: Why do recipe books recommend starting with cold water when you boil something ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the inventor of silly putty ?
class_name: Human being 
class_index: 3
--------

Question: What mountain range extends from the Gulf of St. Lawrence to Alabama ?
class_name: Location 
class_index: 4
--------

Question: How many millimeters are in a mile ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: In what religion was Isis the nature goddess ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why do recipe books recommend starting with cold water when you boil something ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many millimeters are in a mile ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: In what religion was Isis the nature goddess ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 00:31:52 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13274'), (b'x-ratelimit-remaining-tokens', b'29590'), (b'x-ratelimit-reset-requests', b'1h52m35.715999999s'), (b'x-ratelimit-reset-tokens', b'819ms'), (b'x-request-id', b'req_01hz0w5bhsfa59h4bg7hk89e3q'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b2625039ef642c-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why do recipe books recommend starting with cold water when you boil something ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many millimeters are in a mile ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: In what religion was Isis the nature goddess ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:31:54 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13273'), (b'x-ratelimit-remaining-tokens', b'29587'), (b'x-ratelimit-reset-requests', b'1h52m39.654s'), (b'x-ratelimit-reset-tokens', b'826ms'), (b'x-request-id', b'req_01hz0w5dj8fa5t414z46ckdh6q'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b2625d2d20642c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is about a specific deity in a particular religion, which is a characteristic of an entity.
class_name: Entity
class_index: 1
data: {'text': "What is `` the great American family cereal '' ?", 'coarse_label': 1, 'fine_label': 9}
task_input: What is `` the great American family cereal '' ?, corse_label: 1
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': "What is `` the great American family cereal '' ?", 'examples_str': 'Question: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why do recipe books recommend starting with cold water when you boil something ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many millimeters are in a mile ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is AFS ?
class_name: Abbreviation 
class_index: 0
--------

Question: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?
class_name: Entity 
class_index: 1
--------

Question: Why do recipe books recommend starting with cold water when you boil something ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the inventor of silly putty ?
class_name: Human being 
class_index: 3
--------

Question: What mountain range extends from the Gulf of St. Lawrence to Alabama ?
class_name: Location 
class_index: 4
--------

Question: How many millimeters are in a mile ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What is `` the great American family cereal '' ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why do recipe books recommend starting with cold water when you boil something ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many millimeters are in a mile ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is `` the great American family cereal '' ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 00:31:54 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13273'), (b'x-ratelimit-remaining-tokens', b'29623'), (b'x-ratelimit-reset-requests', b'1h52m41.696s'), (b'x-ratelimit-reset-tokens', b'754ms'), (b'x-request-id', b'req_01hz0w5dvtfx39xvb06k6qpz9c'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b2625f0eb0642c-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why do recipe books recommend starting with cold water when you boil something ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many millimeters are in a mile ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is `` the great American family cereal '' ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:31:57 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13272'), (b'x-ratelimit-remaining-tokens', b'29586'), (b'x-ratelimit-reset-requests', b'1h52m45.628999999s'), (b'x-ratelimit-reset-tokens', b'828ms'), (b'x-request-id', b'req_01hz0w5fwcefcbede187k755sz'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b2626bf9c5642c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is asking about the name of a well-known cereal, which is typically represented by an abbreviation.
class_name: ABBR
class_index: 0
data: {'text': "What 's destroyed in Genesis 19 : 24 ?", 'coarse_label': 1, 'fine_label': 13}
task_input: What 's destroyed in Genesis 19 : 24 ?, corse_label: 1
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': "What 's destroyed in Genesis 19 : 24 ?", 'examples_str': 'Question: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why do recipe books recommend starting with cold water when you boil something ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many millimeters are in a mile ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is AFS ?
class_name: Abbreviation 
class_index: 0
--------

Question: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?
class_name: Entity 
class_index: 1
--------

Question: Why do recipe books recommend starting with cold water when you boil something ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the inventor of silly putty ?
class_name: Human being 
class_index: 3
--------

Question: What mountain range extends from the Gulf of St. Lawrence to Alabama ?
class_name: Location 
class_index: 4
--------

Question: How many millimeters are in a mile ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What 's destroyed in Genesis 19 : 24 ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why do recipe books recommend starting with cold water when you boil something ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many millimeters are in a mile ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What 's destroyed in Genesis 19 : 24 ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 00:31:57 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'325'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13272'), (b'x-ratelimit-remaining-tokens', b'29604'), (b'x-ratelimit-reset-requests', b'1h52m47.728999999s'), (b'x-ratelimit-reset-tokens', b'792ms'), (b'x-request-id', b'req_01hz0w5g4wesmbatkbw1hwkf41'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b2626dab13642c-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why do recipe books recommend starting with cold water when you boil something ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many millimeters are in a mile ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What 's destroyed in Genesis 19 : 24 ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:31:59 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13271'), (b'x-ratelimit-remaining-tokens', b'29589'), (b'x-ratelimit-reset-requests', b'1h52m51.663s'), (b'x-ratelimit-reset-tokens', b'822ms'), (b'x-request-id', b'req_01hz0w5j5eewvsf3p323hgr2fv'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b2627a8d5f642c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about a specific event or action described in the Bible, which is typically referenced using a verse number.
class_name: Entity
class_index: 1
data: {'text': 'What is the executor in a will ?', 'coarse_label': 2, 'fine_label': 24}
task_input: What is the executor in a will ?, corse_label: 2
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What is the executor in a will ?', 'examples_str': 'Question: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why do recipe books recommend starting with cold water when you boil something ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many millimeters are in a mile ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is AFS ?
class_name: Abbreviation 
class_index: 0
--------

Question: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?
class_name: Entity 
class_index: 1
--------

Question: Why do recipe books recommend starting with cold water when you boil something ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the inventor of silly putty ?
class_name: Human being 
class_index: 3
--------

Question: What mountain range extends from the Gulf of St. Lawrence to Alabama ?
class_name: Location 
class_index: 4
--------

Question: How many millimeters are in a mile ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What is the executor in a will ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why do recipe books recommend starting with cold water when you boil something ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many millimeters are in a mile ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is the executor in a will ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 00:31:59 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13271'), (b'x-ratelimit-remaining-tokens', b'29627'), (b'x-ratelimit-reset-requests', b'1h52m53.598s'), (b'x-ratelimit-reset-tokens', b'745ms'), (b'x-request-id', b'req_01hz0w5jj1ep5b1yxa1g8cq7tq'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b2627d1fa5642c-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why do recipe books recommend starting with cold water when you boil something ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many millimeters are in a mile ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is the executor in a will ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:32:01 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13270'), (b'x-ratelimit-remaining-tokens', b'29590'), (b'x-ratelimit-reset-requests', b'1h52m57.529999999s'), (b'x-ratelimit-reset-tokens', b'820ms'), (b'x-request-id', b'req_01hz0w5mjnep5tccr1ybfzmsm6'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b26289fa3c642c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is asking about a specific concept or role in a will, which is a formal legal document.
class_name: Abbreviation
class_index: 0
data: {'text': 'What is the difference between jazz and blues ?', 'coarse_label': 2, 'fine_label': 25}
task_input: What is the difference between jazz and blues ?, corse_label: 2
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What is the difference between jazz and blues ?', 'examples_str': 'Question: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why do recipe books recommend starting with cold water when you boil something ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many millimeters are in a mile ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is AFS ?
class_name: Abbreviation 
class_index: 0
--------

Question: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?
class_name: Entity 
class_index: 1
--------

Question: Why do recipe books recommend starting with cold water when you boil something ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the inventor of silly putty ?
class_name: Human being 
class_index: 3
--------

Question: What mountain range extends from the Gulf of St. Lawrence to Alabama ?
class_name: Location 
class_index: 4
--------

Question: How many millimeters are in a mile ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What is the difference between jazz and blues ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why do recipe books recommend starting with cold water when you boil something ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many millimeters are in a mile ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is the difference between jazz and blues ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 00:32:02 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'325'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13270'), (b'x-ratelimit-remaining-tokens', b'29637'), (b'x-ratelimit-reset-requests', b'1h52m59.619999999s'), (b'x-ratelimit-reset-tokens', b'725ms'), (b'x-request-id', b'req_01hz0w5myjesmb9vgn88p6n7h6'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b2628c6c89642c-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why do recipe books recommend starting with cold water when you boil something ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many millimeters are in a mile ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is the difference between jazz and blues ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:32:04 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13269'), (b'x-ratelimit-remaining-tokens', b'29587'), (b'x-ratelimit-reset-requests', b'1h53m3.55s'), (b'x-ratelimit-reset-tokens', b'826ms'), (b'x-request-id', b'req_01hz0w5pz8fwmtp7jh375ffety'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b262995f10642c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the difference between two musical genres, which is an abstract concept.
class_name: DESC
class_index: 2
data: {'text': 'What are those little blue reflectors in the middle of the road for ?', 'coarse_label': 2, 'fine_label': 27}
task_input: What are those little blue reflectors in the middle of the road for ?, corse_label: 2
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What are those little blue reflectors in the middle of the road for ?', 'examples_str': 'Question: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why do recipe books recommend starting with cold water when you boil something ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many millimeters are in a mile ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is AFS ?
class_name: Abbreviation 
class_index: 0
--------

Question: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?
class_name: Entity 
class_index: 1
--------

Question: Why do recipe books recommend starting with cold water when you boil something ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the inventor of silly putty ?
class_name: Human being 
class_index: 3
--------

Question: What mountain range extends from the Gulf of St. Lawrence to Alabama ?
class_name: Location 
class_index: 4
--------

Question: How many millimeters are in a mile ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What are those little blue reflectors in the middle of the road for ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why do recipe books recommend starting with cold water when you boil something ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many millimeters are in a mile ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What are those little blue reflectors in the middle of the road for ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 00:32:04 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13269'), (b'x-ratelimit-remaining-tokens', b'29599'), (b'x-ratelimit-reset-requests', b'1h53m5.707999999s'), (b'x-ratelimit-reset-tokens', b'801ms'), (b'x-request-id', b'req_01hz0w5q8desmtdk6dxgaaqe9w'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b2629b28b6642c-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why do recipe books recommend starting with cold water when you boil something ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many millimeters are in a mile ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What are those little blue reflectors in the middle of the road for ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:32:06 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13268'), (b'x-ratelimit-remaining-tokens', b'29581'), (b'x-ratelimit-reset-requests', b'1h53m9.65s'), (b'x-ratelimit-reset-tokens', b'838ms'), (b'x-request-id', b'req_01hz0w5s8qes9vsqbwywvwxfr7'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b262a80b09642c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the purpose of small blue reflectors in the middle of the road, which suggests that the answer is a description or explanation of their function, rather than a specific entity, location, or numeric value.
class_name: Description and abstract concept
class_index: 2
data: {'text': "What does the Georgetown `` Hoya '' mean ?", 'coarse_label': 2, 'fine_label': 24}
task_input: What does the Georgetown `` Hoya '' mean ?, corse_label: 2
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': "What does the Georgetown `` Hoya '' mean ?", 'examples_str': 'Question: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why do recipe books recommend starting with cold water when you boil something ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many millimeters are in a mile ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is AFS ?
class_name: Abbreviation 
class_index: 0
--------

Question: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?
class_name: Entity 
class_index: 1
--------

Question: Why do recipe books recommend starting with cold water when you boil something ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the inventor of silly putty ?
class_name: Human being 
class_index: 3
--------

Question: What mountain range extends from the Gulf of St. Lawrence to Alabama ?
class_name: Location 
class_index: 4
--------

Question: How many millimeters are in a mile ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What does the Georgetown `` Hoya '' mean ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why do recipe books recommend starting with cold water when you boil something ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many millimeters are in a mile ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does the Georgetown `` Hoya '' mean ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 00:32:06 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13268'), (b'x-ratelimit-remaining-tokens', b'29556'), (b'x-ratelimit-reset-requests', b'1h53m11.757s'), (b'x-ratelimit-reset-tokens', b'888ms'), (b'x-request-id', b'req_01hz0w5sgbewvv81vc64jpnt65'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b262a99c15642c-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why do recipe books recommend starting with cold water when you boil something ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many millimeters are in a mile ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does the Georgetown `` Hoya '' mean ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:32:09 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13267'), (b'x-ratelimit-remaining-tokens', b'29588'), (b'x-ratelimit-reset-requests', b'1h53m15.703s'), (b'x-ratelimit-reset-tokens', b'824ms'), (b'x-request-id', b'req_01hz0w5vghfz7vjq6jph7f8w08'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b262b66f1d642c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the meaning of a symbol or logo, which is typically represented by an abbreviation.
class_name: ABBR
class_index: 0
data: {'text': 'Who does the advertizing for Frito-Lay ?', 'coarse_label': 3, 'fine_label': 29}
task_input: Who does the advertizing for Frito-Lay ?, corse_label: 3
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'Who does the advertizing for Frito-Lay ?', 'examples_str': 'Question: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why do recipe books recommend starting with cold water when you boil something ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many millimeters are in a mile ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is AFS ?
class_name: Abbreviation 
class_index: 0
--------

Question: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?
class_name: Entity 
class_index: 1
--------

Question: Why do recipe books recommend starting with cold water when you boil something ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the inventor of silly putty ?
class_name: Human being 
class_index: 3
--------

Question: What mountain range extends from the Gulf of St. Lawrence to Alabama ?
class_name: Location 
class_index: 4
--------

Question: How many millimeters are in a mile ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Who does the advertizing for Frito-Lay ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why do recipe books recommend starting with cold water when you boil something ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many millimeters are in a mile ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Who does the advertizing for Frito-Lay ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 00:32:09 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13267'), (b'x-ratelimit-remaining-tokens', b'29588'), (b'x-ratelimit-reset-requests', b'1h53m17.685s'), (b'x-ratelimit-reset-tokens', b'824ms'), (b'x-request-id', b'req_01hz0w5vtdfx3vpwp80qv4954n'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b262b868b4642c-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why do recipe books recommend starting with cold water when you boil something ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many millimeters are in a mile ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Who does the advertizing for Frito-Lay ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:32:11 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13266'), (b'x-ratelimit-remaining-tokens', b'29588'), (b'x-ratelimit-reset-requests', b'1h53m21.617999999s'), (b'x-ratelimit-reset-tokens', b'824ms'), (b'x-request-id', b'req_01hz0w5xv0ep6bef56nqxe6bvs'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b262c54b1e642c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the advertising for a specific company, which is typically handled by a human being or an entity.
class_name: HUM
class_index: 3
data: {'text': 'Who wrote The Godfather ?', 'coarse_label': 3, 'fine_label': 29}
task_input: Who wrote The Godfather ?, corse_label: 3
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'Who wrote The Godfather ?', 'examples_str': 'Question: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why do recipe books recommend starting with cold water when you boil something ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many millimeters are in a mile ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is AFS ?
class_name: Abbreviation 
class_index: 0
--------

Question: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?
class_name: Entity 
class_index: 1
--------

Question: Why do recipe books recommend starting with cold water when you boil something ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the inventor of silly putty ?
class_name: Human being 
class_index: 3
--------

Question: What mountain range extends from the Gulf of St. Lawrence to Alabama ?
class_name: Location 
class_index: 4
--------

Question: How many millimeters are in a mile ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Who wrote The Godfather ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why do recipe books recommend starting with cold water when you boil something ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many millimeters are in a mile ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Who wrote The Godfather ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 00:32:11 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13266'), (b'x-ratelimit-remaining-tokens', b'29625'), (b'x-ratelimit-reset-requests', b'1h53m23.665999999s'), (b'x-ratelimit-reset-tokens', b'749ms'), (b'x-request-id', b'req_01hz0w5y5gesmrmxhz2ms6vgxs'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b262c76d00642c-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why do recipe books recommend starting with cold water when you boil something ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many millimeters are in a mile ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Who wrote The Godfather ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:32:13 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13265'), (b'x-ratelimit-remaining-tokens', b'29592'), (b'x-ratelimit-reset-requests', b'1h53m27.611s'), (b'x-ratelimit-reset-tokens', b'816ms'), (b'x-request-id', b'req_01hz0w605pfr5rmy3crsjmj9hq'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b262d43ead642c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the author of a specific book, which is a characteristic of a human being.
class_name: HUM
class_index: 3
data: {'text': 'Whom did Friz Freleng add to the Warner Bros. cartoon ranks ?', 'coarse_label': 3, 'fine_label': 29}
task_input: Whom did Friz Freleng add to the Warner Bros. cartoon ranks ?, corse_label: 3
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'Whom did Friz Freleng add to the Warner Bros. cartoon ranks ?', 'examples_str': 'Question: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why do recipe books recommend starting with cold water when you boil something ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many millimeters are in a mile ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is AFS ?
class_name: Abbreviation 
class_index: 0
--------

Question: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?
class_name: Entity 
class_index: 1
--------

Question: Why do recipe books recommend starting with cold water when you boil something ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the inventor of silly putty ?
class_name: Human being 
class_index: 3
--------

Question: What mountain range extends from the Gulf of St. Lawrence to Alabama ?
class_name: Location 
class_index: 4
--------

Question: How many millimeters are in a mile ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Whom did Friz Freleng add to the Warner Bros. cartoon ranks ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why do recipe books recommend starting with cold water when you boil something ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many millimeters are in a mile ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Whom did Friz Freleng add to the Warner Bros. cartoon ranks ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 00:32:13 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13265'), (b'x-ratelimit-remaining-tokens', b'29592'), (b'x-ratelimit-reset-requests', b'1h53m29.762999999s'), (b'x-ratelimit-reset-tokens', b'816ms'), (b'x-request-id', b'req_01hz0w60d4fz7t49857q8ttgyh'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b262d5bfdb642c-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why do recipe books recommend starting with cold water when you boil something ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many millimeters are in a mile ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Whom did Friz Freleng add to the Warner Bros. cartoon ranks ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:32:15 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13264'), (b'x-ratelimit-remaining-tokens', b'29583'), (b'x-ratelimit-reset-requests', b'1h53m33.71s'), (b'x-ratelimit-reset-tokens', b'834ms'), (b'x-request-id', b'req_01hz0w62d9fr5re0xhvk91w71e'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b262e289b2642c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is asking about a person who was added to a specific organization, which is a common scenario in the context of human history and biography.
class_name: Human being
class_index: 3
```
data: {'text': 'What comedian hit the TV screen in 1951 with the NBC afternoon show Time for Ernie ?', 'coarse_label': 3, 'fine_label': 29}
task_input: What comedian hit the TV screen in 1951 with the NBC afternoon show Time for Ernie ?, corse_label: 3
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What comedian hit the TV screen in 1951 with the NBC afternoon show Time for Ernie ?', 'examples_str': 'Question: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why do recipe books recommend starting with cold water when you boil something ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many millimeters are in a mile ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is AFS ?
class_name: Abbreviation 
class_index: 0
--------

Question: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?
class_name: Entity 
class_index: 1
--------

Question: Why do recipe books recommend starting with cold water when you boil something ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the inventor of silly putty ?
class_name: Human being 
class_index: 3
--------

Question: What mountain range extends from the Gulf of St. Lawrence to Alabama ?
class_name: Location 
class_index: 4
--------

Question: How many millimeters are in a mile ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What comedian hit the TV screen in 1951 with the NBC afternoon show Time for Ernie ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why do recipe books recommend starting with cold water when you boil something ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many millimeters are in a mile ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What comedian hit the TV screen in 1951 with the NBC afternoon show Time for Ernie ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 00:32:16 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13264'), (b'x-ratelimit-remaining-tokens', b'29570'), (b'x-ratelimit-reset-requests', b'1h53m35.767999999s'), (b'x-ratelimit-reset-tokens', b'859ms'), (b'x-request-id', b'req_01hz0w62mjep692bq3zrfjg49g'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b262e40ad5642c-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why do recipe books recommend starting with cold water when you boil something ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many millimeters are in a mile ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What comedian hit the TV screen in 1951 with the NBC afternoon show Time for Ernie ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:32:18 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13263'), (b'x-ratelimit-remaining-tokens', b'29577'), (b'x-ratelimit-reset-requests', b'1h53m39.71s'), (b'x-ratelimit-reset-tokens', b'846ms'), (b'x-request-id', b'req_01hz0w64mwe6gtxsb633qgy766'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b262f0dcca642c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is about a person, specifically a comedian, who appeared on a TV show.
class_name: Human being
class_index: 3
data: {'text': 'What city was John F. Kennedy nominated for president in ?', 'coarse_label': 4, 'fine_label': 32}
task_input: What city was John F. Kennedy nominated for president in ?, corse_label: 4
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What city was John F. Kennedy nominated for president in ?', 'examples_str': 'Question: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why do recipe books recommend starting with cold water when you boil something ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many millimeters are in a mile ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is AFS ?
class_name: Abbreviation 
class_index: 0
--------

Question: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?
class_name: Entity 
class_index: 1
--------

Question: Why do recipe books recommend starting with cold water when you boil something ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the inventor of silly putty ?
class_name: Human being 
class_index: 3
--------

Question: What mountain range extends from the Gulf of St. Lawrence to Alabama ?
class_name: Location 
class_index: 4
--------

Question: How many millimeters are in a mile ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What city was John F. Kennedy nominated for president in ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why do recipe books recommend starting with cold water when you boil something ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many millimeters are in a mile ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What city was John F. Kennedy nominated for president in ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 00:32:18 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13263'), (b'x-ratelimit-remaining-tokens', b'29613'), (b'x-ratelimit-reset-requests', b'1h53m41.686s'), (b'x-ratelimit-reset-tokens', b'774ms'), (b'x-request-id', b'req_01hz0w64yrfwnahdfqy3qc5w6z'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b262f2de25642c-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why do recipe books recommend starting with cold water when you boil something ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many millimeters are in a mile ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What city was John F. Kennedy nominated for president in ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:32:20 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13262'), (b'x-ratelimit-remaining-tokens', b'29584'), (b'x-ratelimit-reset-requests', b'1h53m45.624999999s'), (b'x-ratelimit-reset-tokens', b'832ms'), (b'x-request-id', b'req_01hz0w66z4esn82x5mn1j61t7t'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b262ffbf66642c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about a specific event in the life of John F. Kennedy, which is a historical event, and the answer is likely a city, which is a location.
class_name: Location
class_index: 4
data: {'text': 'Where are some great educational resources for parents and teachers ?', 'coarse_label': 4, 'fine_label': 35}
task_input: Where are some great educational resources for parents and teachers ?, corse_label: 4
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'Where are some great educational resources for parents and teachers ?', 'examples_str': 'Question: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why do recipe books recommend starting with cold water when you boil something ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many millimeters are in a mile ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is AFS ?
class_name: Abbreviation 
class_index: 0
--------

Question: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?
class_name: Entity 
class_index: 1
--------

Question: Why do recipe books recommend starting with cold water when you boil something ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the inventor of silly putty ?
class_name: Human being 
class_index: 3
--------

Question: What mountain range extends from the Gulf of St. Lawrence to Alabama ?
class_name: Location 
class_index: 4
--------

Question: How many millimeters are in a mile ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Where are some great educational resources for parents and teachers ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why do recipe books recommend starting with cold water when you boil something ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many millimeters are in a mile ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Where are some great educational resources for parents and teachers ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 00:32:20 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'325'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13262'), (b'x-ratelimit-remaining-tokens', b'29573'), (b'x-ratelimit-reset-requests', b'1h53m47.751s'), (b'x-ratelimit-reset-tokens', b'854ms'), (b'x-request-id', b'req_01hz0w676yesa90tnpada3p5m3'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b2630148bb642c-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why do recipe books recommend starting with cold water when you boil something ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many millimeters are in a mile ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Where are some great educational resources for parents and teachers ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:32:23 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13261'), (b'x-ratelimit-remaining-tokens', b'29581'), (b'x-ratelimit-reset-requests', b'1h53m51.657s'), (b'x-ratelimit-reset-tokens', b'838ms'), (b'x-request-id', b'req_01hz0w698cecdv7t9724w5tmxj'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b2630e59fb642c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is asking for a list of educational resources, which are typically categorized under a specific location or category, so I'm classifying it as a Location.
class_name: Location
class_index: 4
data: {'text': 'Where is Burma ?', 'coarse_label': 4, 'fine_label': 35}
task_input: Where is Burma ?, corse_label: 4
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'Where is Burma ?', 'examples_str': 'Question: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why do recipe books recommend starting with cold water when you boil something ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many millimeters are in a mile ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is AFS ?
class_name: Abbreviation 
class_index: 0
--------

Question: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?
class_name: Entity 
class_index: 1
--------

Question: Why do recipe books recommend starting with cold water when you boil something ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the inventor of silly putty ?
class_name: Human being 
class_index: 3
--------

Question: What mountain range extends from the Gulf of St. Lawrence to Alabama ?
class_name: Location 
class_index: 4
--------

Question: How many millimeters are in a mile ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Where is Burma ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why do recipe books recommend starting with cold water when you boil something ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many millimeters are in a mile ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Where is Burma ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 00:32:23 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13261'), (b'x-ratelimit-remaining-tokens', b'29583'), (b'x-ratelimit-reset-requests', b'1h53m53.699s'), (b'x-ratelimit-reset-tokens', b'833ms'), (b'x-request-id', b'req_01hz0w69hte6hanxamdeddexms'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b263104b11642c-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why do recipe books recommend starting with cold water when you boil something ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many millimeters are in a mile ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Where is Burma ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:32:25 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13260'), (b'x-ratelimit-remaining-tokens', b'29594'), (b'x-ratelimit-reset-requests', b'1h53m57.621999999s'), (b'x-ratelimit-reset-tokens', b'812ms'), (b'x-request-id', b'req_01hz0w6bjqe59r2pd6ajpmz9gg'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b2631d2cbf642c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking for the location of a country, which is typically represented by a name or a geographical area.
class_name: Location
class_index: 4
data: {'text': "What 's the name of a hotel in Indianapolis ?", 'coarse_label': 4, 'fine_label': 35}
task_input: What 's the name of a hotel in Indianapolis ?, corse_label: 4
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': "What 's the name of a hotel in Indianapolis ?", 'examples_str': 'Question: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why do recipe books recommend starting with cold water when you boil something ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many millimeters are in a mile ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is AFS ?
class_name: Abbreviation 
class_index: 0
--------

Question: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?
class_name: Entity 
class_index: 1
--------

Question: Why do recipe books recommend starting with cold water when you boil something ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the inventor of silly putty ?
class_name: Human being 
class_index: 3
--------

Question: What mountain range extends from the Gulf of St. Lawrence to Alabama ?
class_name: Location 
class_index: 4
--------

Question: How many millimeters are in a mile ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What 's the name of a hotel in Indianapolis ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why do recipe books recommend starting with cold water when you boil something ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many millimeters are in a mile ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What 's the name of a hotel in Indianapolis ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 00:32:25 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13260'), (b'x-ratelimit-remaining-tokens', b'29601'), (b'x-ratelimit-reset-requests', b'1h53m59.733s'), (b'x-ratelimit-reset-tokens', b'798ms'), (b'x-request-id', b'req_01hz0w6bv3e6hb26bgtb65x3r6'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b2631eee15642c-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why do recipe books recommend starting with cold water when you boil something ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many millimeters are in a mile ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What 's the name of a hotel in Indianapolis ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:32:27 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13259'), (b'x-ratelimit-remaining-tokens', b'29587'), (b'x-ratelimit-reset-requests', b'1h54m3.628999999s'), (b'x-ratelimit-reset-tokens', b'826ms'), (b'x-request-id', b'req_01hz0w6dwvefdvyk4z0pw0gmfq'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b2632bcffc642c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking for the name of a specific hotel in Indianapolis, which is a specific location.
class_name: Location
class_index: 4
data: {'text': 'How many times was pitcher , Warren Spahn , a 20-game winner in his 21 major league seasons ?', 'coarse_label': 5, 'fine_label': 38}
task_input: How many times was pitcher , Warren Spahn , a 20-game winner in his 21 major league seasons ?, corse_label: 5
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'How many times was pitcher , Warren Spahn , a 20-game winner in his 21 major league seasons ?', 'examples_str': 'Question: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why do recipe books recommend starting with cold water when you boil something ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many millimeters are in a mile ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is AFS ?
class_name: Abbreviation 
class_index: 0
--------

Question: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?
class_name: Entity 
class_index: 1
--------

Question: Why do recipe books recommend starting with cold water when you boil something ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the inventor of silly putty ?
class_name: Human being 
class_index: 3
--------

Question: What mountain range extends from the Gulf of St. Lawrence to Alabama ?
class_name: Location 
class_index: 4
--------

Question: How many millimeters are in a mile ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: How many times was pitcher , Warren Spahn , a 20-game winner in his 21 major league seasons ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why do recipe books recommend starting with cold water when you boil something ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many millimeters are in a mile ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: How many times was pitcher , Warren Spahn , a 20-game winner in his 21 major league seasons ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 00:32:27 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13259'), (b'x-ratelimit-remaining-tokens', b'29611'), (b'x-ratelimit-reset-requests', b'1h54m5.734s'), (b'x-ratelimit-reset-tokens', b'777ms'), (b'x-request-id', b'req_01hz0w6e56f88b50hr6k3ba6m0'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b2632db968642c-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why do recipe books recommend starting with cold water when you boil something ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many millimeters are in a mile ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: How many times was pitcher , Warren Spahn , a 20-game winner in his 21 major league seasons ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:32:30 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13258'), (b'x-ratelimit-remaining-tokens', b'29575'), (b'x-ratelimit-reset-requests', b'1h54m9.670999999s'), (b'x-ratelimit-reset-tokens', b'850ms'), (b'x-request-id', b'req_01hz0w6g5nfr692mm4y5sbn54t'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b2633a9a5a642c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the number of times Warren Spahn was a 20-game winner in his 21 major league seasons, which is a numeric value.
class_name: NUM
class_index: 5
data: {'text': 'What is the horsepower of the shuttle boosters ?', 'coarse_label': 5, 'fine_label': 43}
task_input: What is the horsepower of the shuttle boosters ?, corse_label: 5
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What is the horsepower of the shuttle boosters ?', 'examples_str': 'Question: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why do recipe books recommend starting with cold water when you boil something ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many millimeters are in a mile ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is AFS ?
class_name: Abbreviation 
class_index: 0
--------

Question: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?
class_name: Entity 
class_index: 1
--------

Question: Why do recipe books recommend starting with cold water when you boil something ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the inventor of silly putty ?
class_name: Human being 
class_index: 3
--------

Question: What mountain range extends from the Gulf of St. Lawrence to Alabama ?
class_name: Location 
class_index: 4
--------

Question: How many millimeters are in a mile ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What is the horsepower of the shuttle boosters ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why do recipe books recommend starting with cold water when you boil something ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many millimeters are in a mile ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is the horsepower of the shuttle boosters ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 00:32:30 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13258'), (b'x-ratelimit-remaining-tokens', b'29570'), (b'x-ratelimit-reset-requests', b'1h54m11.663999999s'), (b'x-ratelimit-reset-tokens', b'860ms'), (b'x-request-id', b'req_01hz0w6gg5fry863xvg7x2ec96'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b2633cbbde642c-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why do recipe books recommend starting with cold water when you boil something ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many millimeters are in a mile ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is the horsepower of the shuttle boosters ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:32:32 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13257'), (b'x-ratelimit-remaining-tokens', b'29586'), (b'x-ratelimit-reset-requests', b'1h54m15.613s'), (b'x-ratelimit-reset-tokens', b'828ms'), (b'x-request-id', b'req_01hz0w6jg8fr6t1p1gj9mjvbdn'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b263498ccf642c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking for a specific piece of information, which is a numeric value, and it's related to the horsepower of the shuttle boosters.
class_name: Numeric value
class_index: 5
data: {'text': 'How many home runs did Babe Ruth hit in his lifetime ?', 'coarse_label': 5, 'fine_label': 38}
task_input: How many home runs did Babe Ruth hit in his lifetime ?, corse_label: 5
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'How many home runs did Babe Ruth hit in his lifetime ?', 'examples_str': 'Question: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why do recipe books recommend starting with cold water when you boil something ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many millimeters are in a mile ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is AFS ?
class_name: Abbreviation 
class_index: 0
--------

Question: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?
class_name: Entity 
class_index: 1
--------

Question: Why do recipe books recommend starting with cold water when you boil something ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the inventor of silly putty ?
class_name: Human being 
class_index: 3
--------

Question: What mountain range extends from the Gulf of St. Lawrence to Alabama ?
class_name: Location 
class_index: 4
--------

Question: How many millimeters are in a mile ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: How many home runs did Babe Ruth hit in his lifetime ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why do recipe books recommend starting with cold water when you boil something ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many millimeters are in a mile ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: How many home runs did Babe Ruth hit in his lifetime ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 00:32:32 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13257'), (b'x-ratelimit-remaining-tokens', b'29630'), (b'x-ratelimit-reset-requests', b'1h54m17.641s'), (b'x-ratelimit-reset-tokens', b'739ms'), (b'x-request-id', b'req_01hz0w6jvgew6bwxwg977yk5zh'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b2634bce82642c-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why do recipe books recommend starting with cold water when you boil something ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many millimeters are in a mile ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: How many home runs did Babe Ruth hit in his lifetime ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:32:34 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13256'), (b'x-ratelimit-remaining-tokens', b'29585'), (b'x-ratelimit-reset-requests', b'1h54m21.577999999s'), (b'x-ratelimit-reset-tokens', b'830ms'), (b'x-request-id', b'req_01hz0w6mvze6hathnb0stvk38y'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b26358bf40642c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is asking about a specific statistic related to a human being, Babe Ruth, so it's likely to be a numeric value.
class_name: NUM
class_index: 5
data: {'text': 'How much waste does an average dairy cow produce in a day ?', 'coarse_label': 5, 'fine_label': 38}
task_input: How much waste does an average dairy cow produce in a day ?, corse_label: 5
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'How much waste does an average dairy cow produce in a day ?', 'examples_str': 'Question: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why do recipe books recommend starting with cold water when you boil something ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many millimeters are in a mile ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is AFS ?
class_name: Abbreviation 
class_index: 0
--------

Question: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?
class_name: Entity 
class_index: 1
--------

Question: Why do recipe books recommend starting with cold water when you boil something ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the inventor of silly putty ?
class_name: Human being 
class_index: 3
--------

Question: What mountain range extends from the Gulf of St. Lawrence to Alabama ?
class_name: Location 
class_index: 4
--------

Question: How many millimeters are in a mile ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: How much waste does an average dairy cow produce in a day ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why do recipe books recommend starting with cold water when you boil something ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many millimeters are in a mile ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: How much waste does an average dairy cow produce in a day ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 00:32:34 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13256'), (b'x-ratelimit-remaining-tokens', b'29582'), (b'x-ratelimit-reset-requests', b'1h54m23.770999999s'), (b'x-ratelimit-reset-tokens', b'835ms'), (b'x-request-id', b'req_01hz0w6n35fmys39grns9c1xga'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b2635a182a642c-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why do recipe books recommend starting with cold water when you boil something ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many millimeters are in a mile ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: How much waste does an average dairy cow produce in a day ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:32:37 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13255'), (b'x-ratelimit-remaining-tokens', b'29584'), (b'x-ratelimit-reset-requests', b'1h54m27.717s'), (b'x-ratelimit-reset-tokens', b'832ms'), (b'x-request-id', b'req_01hz0w6q3bfr6t4jz3fzdpds4z'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b26366fa6b642c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the amount of waste produced by a dairy cow, which is a measurable quantity, making it a numeric value.
class_name: NUM
class_index: 5
responses: [0, 0, 0, 0, 2, 1, 0, 1, 0, 2, 2, 0, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5], targets: [0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5]
num_invalid: 0
Preds tensor: tensor([[1., 0., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0.],
        [0., 0., 1., 0., 0., 0.],
        [0., 1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0.],
        [0., 1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0.],
        [0., 0., 1., 0., 0., 0.],
        [0., 0., 1., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0.],
        [0., 0., 0., 1., 0., 0.],
        [0., 0., 0., 1., 0., 0.],
        [0., 0., 0., 1., 0., 0.],
        [0., 0., 0., 1., 0., 0.],
        [0., 0., 0., 0., 1., 0.],
        [0., 0., 0., 0., 1., 0.],
        [0., 0., 0., 0., 1., 0.],
        [0., 0., 0., 0., 1., 0.],
        [0., 0., 0., 0., 0., 1.],
        [0., 0., 0., 0., 0., 1.],
        [0., 0., 0., 0., 0., 1.],
        [0., 0., 0., 0., 0., 1.]])
Targets tensor: tensor([0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5])
Eval Accuracy 0 proposed: 0.833, F1: 0.828, score: 1.661
best_score: 1.661
best_parameters: OrderedDict([('generator.examples_str', Parameter: Question: What is AFS ?
class_name: Abbreviation 
class_index: 0
--------

Question: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?
class_name: Entity 
class_index: 1
--------

Question: Why do recipe books recommend starting with cold water when you boil something ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the inventor of silly putty ?
class_name: Human being 
class_index: 3
--------

Question: What mountain range extends from the Gulf of St. Lawrence to Alabama ?
class_name: Location 
class_index: 4
--------

Question: How many millimeters are in a mile ?
class_name: Numeric value 
class_index: 5
--------
)])
step: 1
train_batch: {'text': ['Who else was considered for the role of Luke Skywalker when George Lucas was casting for Star Wars ?', "What onetime member of Ronald Reagan 's cabinet called federal policy toward Indians `` an example of the failure of socialism '' ?", 'What is the most common kind of skin cancer in the U.S. ?', 'What date did man first land on the moon ?', 'Name of the lady the Great Gatsby pines for ?', 'What makes thunder ?', 'What does e=mc2 mean ?', 'What Asian country once thrilled to the sport of cricket fighting ?', 'Stuart Hamblen is considered to be the first singing cowboy of what ?', 'Which of the following celebrities was not born in Philadelphia ?'], 'coarse_label': tensor([3, 3, 1, 5, 3, 2, 2, 4, 1, 3]), 'fine_label': tensor([29, 29,  7, 39, 29, 27, 24, 33,  5, 29])}
before random_replace: [Sample(index=91, data={'text': 'What is AFS ?', 'coarse_label': 0, 'fine_label': 1}), Sample(index=804, data={'text': 'What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?', 'coarse_label': 1, 'fine_label': 5}), Sample(index=2067, data={'text': 'Why do recipe books recommend starting with cold water when you boil something ?', 'coarse_label': 2, 'fine_label': 27}), Sample(index=255, data={'text': 'Who was the inventor of silly putty ?', 'coarse_label': 3, 'fine_label': 29}), Sample(index=10, data={'text': 'What mountain range extends from the Gulf of St. Lawrence to Alabama ?', 'coarse_label': 4, 'fine_label': 34}), Sample(index=424, data={'text': 'How many millimeters are in a mile ?', 'coarse_label': 5, 'fine_label': 38})]
after random_replace: [Sample(index=91, data={'text': 'What is AFS ?', 'coarse_label': 0, 'fine_label': 1}), Sample(index=1573, data={'text': 'What does Salk vaccine prevent ?', 'coarse_label': 1, 'fine_label': 7}), Sample(index=536, data={'text': 'What exactly is radiation ?', 'coarse_label': 2, 'fine_label': 24}), Sample(index=255, data={'text': 'Who was the inventor of silly putty ?', 'coarse_label': 3, 'fine_label': 29}), Sample(index=10, data={'text': 'What mountain range extends from the Gulf of St. Lawrence to Alabama ?', 'coarse_label': 4, 'fine_label': 34}), Sample(index=1088, data={'text': "How many feet long is a baseball pitcher 's rubber ?", 'coarse_label': 5, 'fine_label': 38})]
data: {'text': 'What does the abbreviation cwt. ?', 'coarse_label': 0, 'fine_label': 1}
task_input: What does the abbreviation cwt. ?, corse_label: 0
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What does the abbreviation cwt. ?', 'examples_str': "Question: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does Salk vaccine prevent ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What exactly is radiation ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many feet long is a baseball pitcher 's rubber ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is AFS ?
class_name: Abbreviation 
class_index: 0
--------

Question: What does Salk vaccine prevent ?
class_name: Entity 
class_index: 1
--------

Question: What exactly is radiation ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the inventor of silly putty ?
class_name: Human being 
class_index: 3
--------

Question: What mountain range extends from the Gulf of St. Lawrence to Alabama ?
class_name: Location 
class_index: 4
--------

Question: How many feet long is a baseball pitcher 's rubber ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What does the abbreviation cwt. ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does Salk vaccine prevent ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What exactly is radiation ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many feet long is a baseball pitcher 's rubber ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does the abbreviation cwt. ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 00:32:37 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13255'), (b'x-ratelimit-remaining-tokens', b'29591'), (b'x-ratelimit-reset-requests', b'1h54m29.724999999s'), (b'x-ratelimit-reset-tokens', b'817ms'), (b'x-request-id', b'req_01hz0w6qbzew6rcwj2x3f77mcj'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b26368abdf642c-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does Salk vaccine prevent ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What exactly is radiation ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many feet long is a baseball pitcher 's rubber ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does the abbreviation cwt. ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:32:39 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13254'), (b'x-ratelimit-remaining-tokens', b'29615'), (b'x-ratelimit-reset-requests', b'1h54m33.670999999s'), (b'x-ratelimit-reset-tokens', b'770ms'), (b'x-request-id', b'req_01hz0w6sc4ecf9m2yt03q64rks'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b263758de8642c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the meaning of the abbreviation cwt., which is a common abbreviation for "hundredweight".
class_name: "ABBR"
class_index: 0
data: {'text': 'What is the abbreviated term used for the National Bureau of Investigation ?', 'coarse_label': 0, 'fine_label': 0}
task_input: What is the abbreviated term used for the National Bureau of Investigation ?, corse_label: 0
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What is the abbreviated term used for the National Bureau of Investigation ?', 'examples_str': "Question: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does Salk vaccine prevent ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What exactly is radiation ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many feet long is a baseball pitcher 's rubber ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is AFS ?
class_name: Abbreviation 
class_index: 0
--------

Question: What does Salk vaccine prevent ?
class_name: Entity 
class_index: 1
--------

Question: What exactly is radiation ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the inventor of silly putty ?
class_name: Human being 
class_index: 3
--------

Question: What mountain range extends from the Gulf of St. Lawrence to Alabama ?
class_name: Location 
class_index: 4
--------

Question: How many feet long is a baseball pitcher 's rubber ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What is the abbreviated term used for the National Bureau of Investigation ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does Salk vaccine prevent ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What exactly is radiation ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many feet long is a baseball pitcher 's rubber ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is the abbreviated term used for the National Bureau of Investigation ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 00:32:39 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13254'), (b'x-ratelimit-remaining-tokens', b'29630'), (b'x-ratelimit-reset-requests', b'1h54m35.711999999s'), (b'x-ratelimit-reset-tokens', b'739ms'), (b'x-request-id', b'req_01hz0w6sn6ecfbchygvckk19nj'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b263775f2c642c-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does Salk vaccine prevent ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What exactly is radiation ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many feet long is a baseball pitcher 's rubber ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is the abbreviated term used for the National Bureau of Investigation ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:32:41 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13253'), (b'x-ratelimit-remaining-tokens', b'29604'), (b'x-ratelimit-reset-requests', b'1h54m39.655s'), (b'x-ratelimit-reset-tokens', b'792ms'), (b'x-request-id', b'req_01hz0w6vnfe5abd3drah52z74z'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b263843a69642c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking for the abbreviated term used for the National Bureau of Investigation, which is typically referred to as FBI.
class_name: ABBR
class_index: 0
data: {'text': 'What does NAFTA stand for ?', 'coarse_label': 0, 'fine_label': 1}
task_input: What does NAFTA stand for ?, corse_label: 0
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What does NAFTA stand for ?', 'examples_str': "Question: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does Salk vaccine prevent ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What exactly is radiation ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many feet long is a baseball pitcher 's rubber ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is AFS ?
class_name: Abbreviation 
class_index: 0
--------

Question: What does Salk vaccine prevent ?
class_name: Entity 
class_index: 1
--------

Question: What exactly is radiation ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the inventor of silly putty ?
class_name: Human being 
class_index: 3
--------

Question: What mountain range extends from the Gulf of St. Lawrence to Alabama ?
class_name: Location 
class_index: 4
--------

Question: How many feet long is a baseball pitcher 's rubber ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What does NAFTA stand for ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does Salk vaccine prevent ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What exactly is radiation ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many feet long is a baseball pitcher 's rubber ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does NAFTA stand for ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 00:32:41 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13253'), (b'x-ratelimit-remaining-tokens', b'29617'), (b'x-ratelimit-reset-requests', b'1h54m41.702s'), (b'x-ratelimit-reset-tokens', b'765ms'), (b'x-request-id', b'req_01hz0w6vytfr6ssry8a02dbt6r'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b263861bab642c-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does Salk vaccine prevent ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What exactly is radiation ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many feet long is a baseball pitcher 's rubber ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does NAFTA stand for ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:32:44 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13252'), (b'x-ratelimit-remaining-tokens', b'29616'), (b'x-ratelimit-reset-requests', b'1h54m45.634999999s'), (b'x-ratelimit-reset-tokens', b'768ms'), (b'x-request-id', b'req_01hz0w6xzdecfvxe6jz4t9ev50'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b26392fea8642c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking for the abbreviation of a term, which is a common use case for ABBRs.
class_name: "ABBR"
class_index: 0
```
data: {'text': 'What is the abbreviation of the International Olympic Committee ?', 'coarse_label': 0, 'fine_label': 0}
task_input: What is the abbreviation of the International Olympic Committee ?, corse_label: 0
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What is the abbreviation of the International Olympic Committee ?', 'examples_str': "Question: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does Salk vaccine prevent ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What exactly is radiation ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many feet long is a baseball pitcher 's rubber ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is AFS ?
class_name: Abbreviation 
class_index: 0
--------

Question: What does Salk vaccine prevent ?
class_name: Entity 
class_index: 1
--------

Question: What exactly is radiation ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the inventor of silly putty ?
class_name: Human being 
class_index: 3
--------

Question: What mountain range extends from the Gulf of St. Lawrence to Alabama ?
class_name: Location 
class_index: 4
--------

Question: How many feet long is a baseball pitcher 's rubber ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What is the abbreviation of the International Olympic Committee ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does Salk vaccine prevent ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What exactly is radiation ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many feet long is a baseball pitcher 's rubber ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is the abbreviation of the International Olympic Committee ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 00:32:44 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13252'), (b'x-ratelimit-remaining-tokens', b'29613'), (b'x-ratelimit-reset-requests', b'1h54m47.752s'), (b'x-ratelimit-reset-tokens', b'774ms'), (b'x-request-id', b'req_01hz0w6y76f88sf68bp0n6tyyz'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b263948fc7642c-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does Salk vaccine prevent ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What exactly is radiation ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many feet long is a baseball pitcher 's rubber ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is the abbreviation of the International Olympic Committee ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:32:46 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13251'), (b'x-ratelimit-remaining-tokens', b'29607'), (b'x-ratelimit-reset-requests', b'1h54m51.653s'), (b'x-ratelimit-reset-tokens', b'786ms'), (b'x-request-id', b'req_01hz0w708sf7qrn5vc08wcvgwj'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b263a1ab03642c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking for the abbreviation of the International Olympic Committee, which is IOC.
class_name: "ABBR"
class_index: 0
```
data: {'text': 'What does a woman want ?', 'coarse_label': 1, 'fine_label': 13}
task_input: What does a woman want ?, corse_label: 1
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What does a woman want ?', 'examples_str': "Question: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does Salk vaccine prevent ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What exactly is radiation ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many feet long is a baseball pitcher 's rubber ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is AFS ?
class_name: Abbreviation 
class_index: 0
--------

Question: What does Salk vaccine prevent ?
class_name: Entity 
class_index: 1
--------

Question: What exactly is radiation ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the inventor of silly putty ?
class_name: Human being 
class_index: 3
--------

Question: What mountain range extends from the Gulf of St. Lawrence to Alabama ?
class_name: Location 
class_index: 4
--------

Question: How many feet long is a baseball pitcher 's rubber ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What does a woman want ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does Salk vaccine prevent ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What exactly is radiation ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many feet long is a baseball pitcher 's rubber ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does a woman want ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 00:32:46 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'324'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13251'), (b'x-ratelimit-remaining-tokens', b'29657'), (b'x-ratelimit-reset-requests', b'1h54m53.599999999s'), (b'x-ratelimit-reset-tokens', b'686ms'), (b'x-request-id', b'req_01hz0w70nae6ht5hv823kaz9j0'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b263a42d29642c-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does Salk vaccine prevent ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What exactly is radiation ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many feet long is a baseball pitcher 's rubber ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does a woman want ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:32:49 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13250'), (b'x-ratelimit-remaining-tokens', b'29617'), (b'x-ratelimit-reset-requests', b'1h54m57.546s'), (b'x-ratelimit-reset-tokens', b'766ms'), (b'x-request-id', b'req_01hz0w72nhfdwt42b2yfse3jar'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b263b0f8e9642c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is a quote from a famous play, and it's a philosophical question about human nature.
class_name: "DESC"
class_index: 2
data: {'text': 'In what religion was Isis the nature goddess ?', 'coarse_label': 1, 'fine_label': 16}
task_input: In what religion was Isis the nature goddess ?, corse_label: 1
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'In what religion was Isis the nature goddess ?', 'examples_str': "Question: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does Salk vaccine prevent ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What exactly is radiation ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many feet long is a baseball pitcher 's rubber ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is AFS ?
class_name: Abbreviation 
class_index: 0
--------

Question: What does Salk vaccine prevent ?
class_name: Entity 
class_index: 1
--------

Question: What exactly is radiation ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the inventor of silly putty ?
class_name: Human being 
class_index: 3
--------

Question: What mountain range extends from the Gulf of St. Lawrence to Alabama ?
class_name: Location 
class_index: 4
--------

Question: How many feet long is a baseball pitcher 's rubber ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: In what religion was Isis the nature goddess ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does Salk vaccine prevent ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What exactly is radiation ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many feet long is a baseball pitcher 's rubber ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: In what religion was Isis the nature goddess ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 00:32:49 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13250'), (b'x-ratelimit-remaining-tokens', b'29629'), (b'x-ratelimit-reset-requests', b'1h54m59.733s'), (b'x-ratelimit-reset-tokens', b'741ms'), (b'x-request-id', b'req_01hz0w72xwf89ax35mkdes9kvg'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b263b2aa4e642c-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does Salk vaccine prevent ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What exactly is radiation ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many feet long is a baseball pitcher 's rubber ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: In what religion was Isis the nature goddess ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:32:51 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13249'), (b'x-ratelimit-remaining-tokens', b'29612'), (b'x-ratelimit-reset-requests', b'1h55m3.669999999s'), (b'x-ratelimit-reset-tokens', b'776ms'), (b'x-request-id', b'req_01hz0w74ybecfraap9h1pcgcdy'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b263bf8ba3642c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about a specific deity in a particular religion, which is a characteristic of a human being.
class_name: HUM
class_index: 3
data: {'text': "What is `` the great American family cereal '' ?", 'coarse_label': 1, 'fine_label': 9}
task_input: What is `` the great American family cereal '' ?, corse_label: 1
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': "What is `` the great American family cereal '' ?", 'examples_str': "Question: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does Salk vaccine prevent ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What exactly is radiation ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many feet long is a baseball pitcher 's rubber ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is AFS ?
class_name: Abbreviation 
class_index: 0
--------

Question: What does Salk vaccine prevent ?
class_name: Entity 
class_index: 1
--------

Question: What exactly is radiation ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the inventor of silly putty ?
class_name: Human being 
class_index: 3
--------

Question: What mountain range extends from the Gulf of St. Lawrence to Alabama ?
class_name: Location 
class_index: 4
--------

Question: How many feet long is a baseball pitcher 's rubber ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What is `` the great American family cereal '' ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does Salk vaccine prevent ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What exactly is radiation ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many feet long is a baseball pitcher 's rubber ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is `` the great American family cereal '' ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 00:32:51 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13249'), (b'x-ratelimit-remaining-tokens', b'29653'), (b'x-ratelimit-reset-requests', b'1h55m5.479s'), (b'x-ratelimit-reset-tokens', b'693ms'), (b'x-request-id', b'req_01hz0w75enekfre6g9a1y6xb4w'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b263c2de51642c-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does Salk vaccine prevent ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What exactly is radiation ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many feet long is a baseball pitcher 's rubber ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is `` the great American family cereal '' ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:32:53 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13248'), (b'x-ratelimit-remaining-tokens', b'29611'), (b'x-ratelimit-reset-requests', b'1h55m9.415999999s'), (b'x-ratelimit-reset-tokens', b'778ms'), (b'x-request-id', b'req_01hz0w77f4fa8saz4amerpzed4'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b263cfb839642c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the name of a cereal, which is typically represented by an abbreviation.
class_name: ABBR
class_index: 0
data: {'text': "What 's destroyed in Genesis 19 : 24 ?", 'coarse_label': 1, 'fine_label': 13}
task_input: What 's destroyed in Genesis 19 : 24 ?, corse_label: 1
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': "What 's destroyed in Genesis 19 : 24 ?", 'examples_str': "Question: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does Salk vaccine prevent ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What exactly is radiation ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many feet long is a baseball pitcher 's rubber ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is AFS ?
class_name: Abbreviation 
class_index: 0
--------

Question: What does Salk vaccine prevent ?
class_name: Entity 
class_index: 1
--------

Question: What exactly is radiation ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the inventor of silly putty ?
class_name: Human being 
class_index: 3
--------

Question: What mountain range extends from the Gulf of St. Lawrence to Alabama ?
class_name: Location 
class_index: 4
--------

Question: How many feet long is a baseball pitcher 's rubber ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What 's destroyed in Genesis 19 : 24 ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does Salk vaccine prevent ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What exactly is radiation ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many feet long is a baseball pitcher 's rubber ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What 's destroyed in Genesis 19 : 24 ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 00:32:53 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13248'), (b'x-ratelimit-remaining-tokens', b'29605'), (b'x-ratelimit-reset-requests', b'1h55m11.764999999s'), (b'x-ratelimit-reset-tokens', b'789ms'), (b'x-request-id', b'req_01hz0w77pgfdx8g9rjt8gxv3n2'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b263d1397a642c-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does Salk vaccine prevent ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What exactly is radiation ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many feet long is a baseball pitcher 's rubber ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What 's destroyed in Genesis 19 : 24 ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:32:56 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13247'), (b'x-ratelimit-remaining-tokens', b'29614'), (b'x-ratelimit-reset-requests', b'1h55m15.706s'), (b'x-ratelimit-reset-tokens', b'772ms'), (b'x-request-id', b'req_01hz0w79pvfe7ssz39rkjgsvkc'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b263de1acf642c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about a specific event or action described in the Bible, which is a concrete concept.
class_name: Entity
class_index: 1
data: {'text': 'What is the executor in a will ?', 'coarse_label': 2, 'fine_label': 24}
task_input: What is the executor in a will ?, corse_label: 2
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What is the executor in a will ?', 'examples_str': "Question: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does Salk vaccine prevent ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What exactly is radiation ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many feet long is a baseball pitcher 's rubber ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is AFS ?
class_name: Abbreviation 
class_index: 0
--------

Question: What does Salk vaccine prevent ?
class_name: Entity 
class_index: 1
--------

Question: What exactly is radiation ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the inventor of silly putty ?
class_name: Human being 
class_index: 3
--------

Question: What mountain range extends from the Gulf of St. Lawrence to Alabama ?
class_name: Location 
class_index: 4
--------

Question: How many feet long is a baseball pitcher 's rubber ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What is the executor in a will ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does Salk vaccine prevent ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What exactly is radiation ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many feet long is a baseball pitcher 's rubber ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is the executor in a will ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 00:32:56 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13247'), (b'x-ratelimit-remaining-tokens', b'29603'), (b'x-ratelimit-reset-requests', b'1h55m17.727999999s'), (b'x-ratelimit-reset-tokens', b'794ms'), (b'x-request-id', b'req_01hz0w79zcf7ra708yf9xn0emz'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b263dfcc01642c-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does Salk vaccine prevent ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What exactly is radiation ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many feet long is a baseball pitcher 's rubber ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is the executor in a will ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:32:58 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13246'), (b'x-ratelimit-remaining-tokens', b'29615'), (b'x-ratelimit-reset-requests', b'1h55m21.666s'), (b'x-ratelimit-reset-tokens', b'770ms'), (b'x-request-id', b'req_01hz0w7bztepka9ebz7rns2ygr'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b263ec9e4d642c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about a specific term or concept in a will, which is a formal document.
class_name: Abbreviation
class_index: 0
data: {'text': 'What is the difference between jazz and blues ?', 'coarse_label': 2, 'fine_label': 25}
task_input: What is the difference between jazz and blues ?, corse_label: 2
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What is the difference between jazz and blues ?', 'examples_str': "Question: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does Salk vaccine prevent ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What exactly is radiation ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many feet long is a baseball pitcher 's rubber ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is AFS ?
class_name: Abbreviation 
class_index: 0
--------

Question: What does Salk vaccine prevent ?
class_name: Entity 
class_index: 1
--------

Question: What exactly is radiation ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the inventor of silly putty ?
class_name: Human being 
class_index: 3
--------

Question: What mountain range extends from the Gulf of St. Lawrence to Alabama ?
class_name: Location 
class_index: 4
--------

Question: How many feet long is a baseball pitcher 's rubber ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What is the difference between jazz and blues ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does Salk vaccine prevent ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What exactly is radiation ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many feet long is a baseball pitcher 's rubber ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is the difference between jazz and blues ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 00:32:58 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13246'), (b'x-ratelimit-remaining-tokens', b'29610'), (b'x-ratelimit-reset-requests', b'1h55m23.760999999s'), (b'x-ratelimit-reset-tokens', b'779ms'), (b'x-request-id', b'req_01hz0w7c7aew7r77pgkbhkjvxd'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b263ee2f99642c-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does Salk vaccine prevent ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What exactly is radiation ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many feet long is a baseball pitcher 's rubber ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is the difference between jazz and blues ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:33:00 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13245'), (b'x-ratelimit-remaining-tokens', b'29611'), (b'x-ratelimit-reset-requests', b'1h55m27.635999999s'), (b'x-ratelimit-reset-tokens', b'778ms'), (b'x-request-id', b'req_01hz0w7e9qfdx9ypgv6k1zcw74'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b263fb5a3e642c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is asking about the difference between two musical genres, which is an abstract concept, so it's classified as a Description and abstract concept.
class_name: "DESC"
class_index: 2
data: {'text': 'What are those little blue reflectors in the middle of the road for ?', 'coarse_label': 2, 'fine_label': 27}
task_input: What are those little blue reflectors in the middle of the road for ?, corse_label: 2
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What are those little blue reflectors in the middle of the road for ?', 'examples_str': "Question: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does Salk vaccine prevent ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What exactly is radiation ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many feet long is a baseball pitcher 's rubber ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is AFS ?
class_name: Abbreviation 
class_index: 0
--------

Question: What does Salk vaccine prevent ?
class_name: Entity 
class_index: 1
--------

Question: What exactly is radiation ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the inventor of silly putty ?
class_name: Human being 
class_index: 3
--------

Question: What mountain range extends from the Gulf of St. Lawrence to Alabama ?
class_name: Location 
class_index: 4
--------

Question: How many feet long is a baseball pitcher 's rubber ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What are those little blue reflectors in the middle of the road for ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does Salk vaccine prevent ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What exactly is radiation ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many feet long is a baseball pitcher 's rubber ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What are those little blue reflectors in the middle of the road for ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 00:33:01 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'325'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13245'), (b'x-ratelimit-remaining-tokens', b'29657'), (b'x-ratelimit-reset-requests', b'1h55m29.63s'), (b'x-ratelimit-reset-tokens', b'685ms'), (b'x-request-id', b'req_01hz0w7enaekfr9xx36ya7zvrq'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b263fdcbf7642c-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does Salk vaccine prevent ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What exactly is radiation ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many feet long is a baseball pitcher 's rubber ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What are those little blue reflectors in the middle of the road for ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:33:03 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13244'), (b'x-ratelimit-remaining-tokens', b'29606'), (b'x-ratelimit-reset-requests', b'1h55m33.561s'), (b'x-ratelimit-reset-tokens', b'788ms'), (b'x-request-id', b'req_01hz0w7gnyeffajfhvy3tj7a1s'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b2640aaddf642c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: These little blue reflectors are used to increase visibility and safety on roads, especially at night or in low-light conditions.
class_name: Description and abstract concept
class_index: 2
data: {'text': "What does the Georgetown `` Hoya '' mean ?", 'coarse_label': 2, 'fine_label': 24}
task_input: What does the Georgetown `` Hoya '' mean ?, corse_label: 2
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': "What does the Georgetown `` Hoya '' mean ?", 'examples_str': "Question: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does Salk vaccine prevent ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What exactly is radiation ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many feet long is a baseball pitcher 's rubber ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is AFS ?
class_name: Abbreviation 
class_index: 0
--------

Question: What does Salk vaccine prevent ?
class_name: Entity 
class_index: 1
--------

Question: What exactly is radiation ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the inventor of silly putty ?
class_name: Human being 
class_index: 3
--------

Question: What mountain range extends from the Gulf of St. Lawrence to Alabama ?
class_name: Location 
class_index: 4
--------

Question: How many feet long is a baseball pitcher 's rubber ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What does the Georgetown `` Hoya '' mean ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does Salk vaccine prevent ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What exactly is radiation ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many feet long is a baseball pitcher 's rubber ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does the Georgetown `` Hoya '' mean ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 00:33:03 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13244'), (b'x-ratelimit-remaining-tokens', b'29595'), (b'x-ratelimit-reset-requests', b'1h55m35.763999999s'), (b'x-ratelimit-reset-tokens', b'810ms'), (b'x-request-id', b'req_01hz0w7gxcfn09545ed1czs9t4'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b2640c2ef5642c-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does Salk vaccine prevent ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What exactly is radiation ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many feet long is a baseball pitcher 's rubber ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does the Georgetown `` Hoya '' mean ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:33:05 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13243'), (b'x-ratelimit-remaining-tokens', b'29613'), (b'x-ratelimit-reset-requests', b'1h55m39.711s'), (b'x-ratelimit-reset-tokens', b'774ms'), (b'x-request-id', b'req_01hz0w7jxhepk854svrpa4cg7b'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b26418f9a1642c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the meaning of a symbol or logo, which is typically an abbreviation.
class_name: "ABBR"
class_index: 0
```
data: {'text': 'Who does the advertizing for Frito-Lay ?', 'coarse_label': 3, 'fine_label': 29}
task_input: Who does the advertizing for Frito-Lay ?, corse_label: 3
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'Who does the advertizing for Frito-Lay ?', 'examples_str': "Question: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does Salk vaccine prevent ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What exactly is radiation ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many feet long is a baseball pitcher 's rubber ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is AFS ?
class_name: Abbreviation 
class_index: 0
--------

Question: What does Salk vaccine prevent ?
class_name: Entity 
class_index: 1
--------

Question: What exactly is radiation ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the inventor of silly putty ?
class_name: Human being 
class_index: 3
--------

Question: What mountain range extends from the Gulf of St. Lawrence to Alabama ?
class_name: Location 
class_index: 4
--------

Question: How many feet long is a baseball pitcher 's rubber ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Who does the advertizing for Frito-Lay ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does Salk vaccine prevent ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What exactly is radiation ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many feet long is a baseball pitcher 's rubber ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Who does the advertizing for Frito-Lay ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 00:33:05 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13243'), (b'x-ratelimit-remaining-tokens', b'29610'), (b'x-ratelimit-reset-requests', b'1h55m41.755s'), (b'x-ratelimit-reset-tokens', b'779ms'), (b'x-request-id', b'req_01hz0w7k57fx6b9q6x62hrntjk'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b2641a8ab7642c-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does Salk vaccine prevent ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What exactly is radiation ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many feet long is a baseball pitcher 's rubber ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Who does the advertizing for Frito-Lay ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:33:08 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13242'), (b'x-ratelimit-remaining-tokens', b'29613'), (b'x-ratelimit-reset-requests', b'1h55m45.696s'), (b'x-ratelimit-reset-tokens', b'774ms'), (b'x-request-id', b'req_01hz0w7n5jewyvxgbvdcdg2c7c'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b264276e6c642c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about a company or organization that is responsible for advertising a specific product.
class_name: Human being
class_index: 3
data: {'text': 'Who wrote The Godfather ?', 'coarse_label': 3, 'fine_label': 29}
task_input: Who wrote The Godfather ?, corse_label: 3
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'Who wrote The Godfather ?', 'examples_str': "Question: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does Salk vaccine prevent ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What exactly is radiation ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many feet long is a baseball pitcher 's rubber ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is AFS ?
class_name: Abbreviation 
class_index: 0
--------

Question: What does Salk vaccine prevent ?
class_name: Entity 
class_index: 1
--------

Question: What exactly is radiation ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the inventor of silly putty ?
class_name: Human being 
class_index: 3
--------

Question: What mountain range extends from the Gulf of St. Lawrence to Alabama ?
class_name: Location 
class_index: 4
--------

Question: How many feet long is a baseball pitcher 's rubber ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Who wrote The Godfather ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does Salk vaccine prevent ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What exactly is radiation ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many feet long is a baseball pitcher 's rubber ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Who wrote The Godfather ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 00:33:08 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13242'), (b'x-ratelimit-remaining-tokens', b'29611'), (b'x-ratelimit-reset-requests', b'1h55m47.682s'), (b'x-ratelimit-reset-tokens', b'778ms'), (b'x-request-id', b'req_01hz0w7nfhfe8asvmn1e15mkxq'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b264296820642c-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does Salk vaccine prevent ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What exactly is radiation ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many feet long is a baseball pitcher 's rubber ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Who wrote The Godfather ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:33:10 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13241'), (b'x-ratelimit-remaining-tokens', b'29617'), (b'x-ratelimit-reset-requests', b'1h55m51.623999999s'), (b'x-ratelimit-reset-tokens', b'766ms'), (b'x-request-id', b'req_01hz0w7qfvechb1sbhf9mjf9v1'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b2643649d0642c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question asks about the author of a specific book, which is a characteristic of a human being.
class_name: HUM
class_index: 3
```
data: {'text': 'Whom did Friz Freleng add to the Warner Bros. cartoon ranks ?', 'coarse_label': 3, 'fine_label': 29}
task_input: Whom did Friz Freleng add to the Warner Bros. cartoon ranks ?, corse_label: 3
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'Whom did Friz Freleng add to the Warner Bros. cartoon ranks ?', 'examples_str': "Question: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does Salk vaccine prevent ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What exactly is radiation ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many feet long is a baseball pitcher 's rubber ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is AFS ?
class_name: Abbreviation 
class_index: 0
--------

Question: What does Salk vaccine prevent ?
class_name: Entity 
class_index: 1
--------

Question: What exactly is radiation ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the inventor of silly putty ?
class_name: Human being 
class_index: 3
--------

Question: What mountain range extends from the Gulf of St. Lawrence to Alabama ?
class_name: Location 
class_index: 4
--------

Question: How many feet long is a baseball pitcher 's rubber ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Whom did Friz Freleng add to the Warner Bros. cartoon ranks ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does Salk vaccine prevent ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What exactly is radiation ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many feet long is a baseball pitcher 's rubber ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Whom did Friz Freleng add to the Warner Bros. cartoon ranks ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 00:33:10 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13241'), (b'x-ratelimit-remaining-tokens', b'29674'), (b'x-ratelimit-reset-requests', b'1h55m53.589s'), (b'x-ratelimit-reset-tokens', b'652ms'), (b'x-request-id', b'req_01hz0w7qwpe7ca5hk1tayqv500'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b26438dbd3642c-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does Salk vaccine prevent ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What exactly is radiation ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many feet long is a baseball pitcher 's rubber ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Whom did Friz Freleng add to the Warner Bros. cartoon ranks ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:33:12 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13240'), (b'x-ratelimit-remaining-tokens', b'29608'), (b'x-ratelimit-reset-requests', b'1h55m57.529999999s'), (b'x-ratelimit-reset-tokens', b'784ms'), (b'x-request-id', b'req_01hz0w7sx1exa8gb33wwg24py6'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b26445bdbf642c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is asking about a specific person, which is typically represented by a human being.
class_name: HUM
class_index: 3
data: {'text': 'What comedian hit the TV screen in 1951 with the NBC afternoon show Time for Ernie ?', 'coarse_label': 3, 'fine_label': 29}
task_input: What comedian hit the TV screen in 1951 with the NBC afternoon show Time for Ernie ?, corse_label: 3
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What comedian hit the TV screen in 1951 with the NBC afternoon show Time for Ernie ?', 'examples_str': "Question: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does Salk vaccine prevent ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What exactly is radiation ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many feet long is a baseball pitcher 's rubber ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is AFS ?
class_name: Abbreviation 
class_index: 0
--------

Question: What does Salk vaccine prevent ?
class_name: Entity 
class_index: 1
--------

Question: What exactly is radiation ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the inventor of silly putty ?
class_name: Human being 
class_index: 3
--------

Question: What mountain range extends from the Gulf of St. Lawrence to Alabama ?
class_name: Location 
class_index: 4
--------

Question: How many feet long is a baseball pitcher 's rubber ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What comedian hit the TV screen in 1951 with the NBC afternoon show Time for Ernie ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does Salk vaccine prevent ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What exactly is radiation ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many feet long is a baseball pitcher 's rubber ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What comedian hit the TV screen in 1951 with the NBC afternoon show Time for Ernie ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 00:33:12 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13240'), (b'x-ratelimit-remaining-tokens', b'29602'), (b'x-ratelimit-reset-requests', b'1h55m59.758s'), (b'x-ratelimit-reset-tokens', b'795ms'), (b'x-request-id', b'req_01hz0w7t4me7c9zazt10wsawxg'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b264473f2a642c-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does Salk vaccine prevent ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What exactly is radiation ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many feet long is a baseball pitcher 's rubber ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What comedian hit the TV screen in 1951 with the NBC afternoon show Time for Ernie ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:33:15 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13239'), (b'x-ratelimit-remaining-tokens', b'29602'), (b'x-ratelimit-reset-requests', b'1h56m3.622999999s'), (b'x-ratelimit-reset-tokens', b'796ms'), (b'x-request-id', b'req_01hz0w7w7aeffr1nh3pbm7t3q9'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b26454898c642c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is about a specific person, Ernie, who appeared on a TV show.
class_name: Human being
class_index: 3
data: {'text': 'What city was John F. Kennedy nominated for president in ?', 'coarse_label': 4, 'fine_label': 32}
task_input: What city was John F. Kennedy nominated for president in ?, corse_label: 4
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What city was John F. Kennedy nominated for president in ?', 'examples_str': "Question: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does Salk vaccine prevent ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What exactly is radiation ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many feet long is a baseball pitcher 's rubber ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is AFS ?
class_name: Abbreviation 
class_index: 0
--------

Question: What does Salk vaccine prevent ?
class_name: Entity 
class_index: 1
--------

Question: What exactly is radiation ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the inventor of silly putty ?
class_name: Human being 
class_index: 3
--------

Question: What mountain range extends from the Gulf of St. Lawrence to Alabama ?
class_name: Location 
class_index: 4
--------

Question: How many feet long is a baseball pitcher 's rubber ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What city was John F. Kennedy nominated for president in ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does Salk vaccine prevent ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What exactly is radiation ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many feet long is a baseball pitcher 's rubber ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What city was John F. Kennedy nominated for president in ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 00:33:15 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'325'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13239'), (b'x-ratelimit-remaining-tokens', b'29596'), (b'x-ratelimit-reset-requests', b'1h56m5.751s'), (b'x-ratelimit-reset-tokens', b'807ms'), (b'x-request-id', b'req_01hz0w7wf5fbhvbwgtcj91jm96'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b264562ac2642c-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does Salk vaccine prevent ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What exactly is radiation ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many feet long is a baseball pitcher 's rubber ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What city was John F. Kennedy nominated for president in ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:33:17 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13238'), (b'x-ratelimit-remaining-tokens', b'29609'), (b'x-ratelimit-reset-requests', b'1h56m9.698s'), (b'x-ratelimit-reset-tokens', b'782ms'), (b'x-request-id', b'req_01hz0w7yfafzarjd14kxqn0zy5'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b26462fca4642c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about a specific event in the life of John F. Kennedy, which is a historical event, and the answer is likely a location.
class_name: Location
class_index: 4
data: {'text': 'Where are some great educational resources for parents and teachers ?', 'coarse_label': 4, 'fine_label': 35}
task_input: Where are some great educational resources for parents and teachers ?, corse_label: 4
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'Where are some great educational resources for parents and teachers ?', 'examples_str': "Question: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does Salk vaccine prevent ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What exactly is radiation ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many feet long is a baseball pitcher 's rubber ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is AFS ?
class_name: Abbreviation 
class_index: 0
--------

Question: What does Salk vaccine prevent ?
class_name: Entity 
class_index: 1
--------

Question: What exactly is radiation ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the inventor of silly putty ?
class_name: Human being 
class_index: 3
--------

Question: What mountain range extends from the Gulf of St. Lawrence to Alabama ?
class_name: Location 
class_index: 4
--------

Question: How many feet long is a baseball pitcher 's rubber ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Where are some great educational resources for parents and teachers ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does Salk vaccine prevent ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What exactly is radiation ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many feet long is a baseball pitcher 's rubber ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Where are some great educational resources for parents and teachers ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 00:33:17 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13238'), (b'x-ratelimit-remaining-tokens', b'29596'), (b'x-ratelimit-reset-requests', b'1h56m11.746s'), (b'x-ratelimit-reset-tokens', b'807ms'), (b'x-request-id', b'req_01hz0w7yq9fbhvwyqjxtdaebd2'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b264648e01642c-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does Salk vaccine prevent ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What exactly is radiation ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many feet long is a baseball pitcher 's rubber ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Where are some great educational resources for parents and teachers ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:33:19 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13237'), (b'x-ratelimit-remaining-tokens', b'29606'), (b'x-ratelimit-reset-requests', b'1h56m15.676999999s'), (b'x-ratelimit-reset-tokens', b'788ms'), (b'x-request-id', b'req_01hz0w80qyfe8v3vadmg3y529a'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b264717ee6642c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is asking for a list of educational resources, which are typically provided by a location or an organization.
class_name: Location
class_index: 4
data: {'text': 'Where is Burma ?', 'coarse_label': 4, 'fine_label': 35}
task_input: Where is Burma ?, corse_label: 4
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'Where is Burma ?', 'examples_str': "Question: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does Salk vaccine prevent ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What exactly is radiation ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many feet long is a baseball pitcher 's rubber ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is AFS ?
class_name: Abbreviation 
class_index: 0
--------

Question: What does Salk vaccine prevent ?
class_name: Entity 
class_index: 1
--------

Question: What exactly is radiation ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the inventor of silly putty ?
class_name: Human being 
class_index: 3
--------

Question: What mountain range extends from the Gulf of St. Lawrence to Alabama ?
class_name: Location 
class_index: 4
--------

Question: How many feet long is a baseball pitcher 's rubber ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Where is Burma ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does Salk vaccine prevent ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What exactly is radiation ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many feet long is a baseball pitcher 's rubber ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Where is Burma ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 00:33:19 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13237'), (b'x-ratelimit-remaining-tokens', b'29610'), (b'x-ratelimit-reset-requests', b'1h56m17.753s'), (b'x-ratelimit-reset-tokens', b'780ms'), (b'x-request-id', b'req_01hz0w80zpfbht3ekh0wa5f46v'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b264730fdf642c-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does Salk vaccine prevent ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What exactly is radiation ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many feet long is a baseball pitcher 's rubber ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Where is Burma ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:33:22 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13236'), (b'x-ratelimit-remaining-tokens', b'29619'), (b'x-ratelimit-reset-requests', b'1h56m21.695s'), (b'x-ratelimit-reset-tokens', b'762ms'), (b'x-request-id', b'req_01hz0w82zzepmrx19p2fyjgvj7'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b2647fd9e7642c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking for a geographical location, which is typically represented by a country or region.
class_name: Location
class_index: 4
data: {'text': "What 's the name of a hotel in Indianapolis ?", 'coarse_label': 4, 'fine_label': 35}
task_input: What 's the name of a hotel in Indianapolis ?, corse_label: 4
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': "What 's the name of a hotel in Indianapolis ?", 'examples_str': "Question: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does Salk vaccine prevent ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What exactly is radiation ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many feet long is a baseball pitcher 's rubber ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is AFS ?
class_name: Abbreviation 
class_index: 0
--------

Question: What does Salk vaccine prevent ?
class_name: Entity 
class_index: 1
--------

Question: What exactly is radiation ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the inventor of silly putty ?
class_name: Human being 
class_index: 3
--------

Question: What mountain range extends from the Gulf of St. Lawrence to Alabama ?
class_name: Location 
class_index: 4
--------

Question: How many feet long is a baseball pitcher 's rubber ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What 's the name of a hotel in Indianapolis ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does Salk vaccine prevent ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What exactly is radiation ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many feet long is a baseball pitcher 's rubber ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What 's the name of a hotel in Indianapolis ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 00:33:22 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13236'), (b'x-ratelimit-remaining-tokens', b'29616'), (b'x-ratelimit-reset-requests', b'1h56m23.1s'), (b'x-ratelimit-reset-tokens', b'768ms'), (b'x-request-id', b'req_01hz0w83w5fzb81tpsfgtry9z0'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b264858dd1642c-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does Salk vaccine prevent ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What exactly is radiation ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many feet long is a baseball pitcher 's rubber ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What 's the name of a hotel in Indianapolis ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:33:25 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13235'), (b'x-ratelimit-remaining-tokens', b'29612'), (b'x-ratelimit-reset-requests', b'1h56m27.036999999s'), (b'x-ratelimit-reset-tokens', b'776ms'), (b'x-request-id', b'req_01hz0w85wmefg8m5xe4e4c3qe6'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b264926fdf642c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking for the name of a specific hotel in Indianapolis, which is a specific location.
class_name: Location
class_index: 4
data: {'text': 'How many times was pitcher , Warren Spahn , a 20-game winner in his 21 major league seasons ?', 'coarse_label': 5, 'fine_label': 38}
task_input: How many times was pitcher , Warren Spahn , a 20-game winner in his 21 major league seasons ?, corse_label: 5
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'How many times was pitcher , Warren Spahn , a 20-game winner in his 21 major league seasons ?', 'examples_str': "Question: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does Salk vaccine prevent ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What exactly is radiation ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many feet long is a baseball pitcher 's rubber ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is AFS ?
class_name: Abbreviation 
class_index: 0
--------

Question: What does Salk vaccine prevent ?
class_name: Entity 
class_index: 1
--------

Question: What exactly is radiation ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the inventor of silly putty ?
class_name: Human being 
class_index: 3
--------

Question: What mountain range extends from the Gulf of St. Lawrence to Alabama ?
class_name: Location 
class_index: 4
--------

Question: How many feet long is a baseball pitcher 's rubber ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: How many times was pitcher , Warren Spahn , a 20-game winner in his 21 major league seasons ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does Salk vaccine prevent ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What exactly is radiation ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many feet long is a baseball pitcher 's rubber ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: How many times was pitcher , Warren Spahn , a 20-game winner in his 21 major league seasons ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 00:33:25 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13235'), (b'x-ratelimit-remaining-tokens', b'29608'), (b'x-ratelimit-reset-requests', b'1h56m29.766999999s'), (b'x-ratelimit-reset-tokens', b'783ms'), (b'x-request-id', b'req_01hz0w863yepmv03ar81j3hh2d'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b26493e909642c-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does Salk vaccine prevent ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What exactly is radiation ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many feet long is a baseball pitcher 's rubber ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: How many times was pitcher , Warren Spahn , a 20-game winner in his 21 major league seasons ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:33:27 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13234'), (b'x-ratelimit-remaining-tokens', b'29600'), (b'x-ratelimit-reset-requests', b'1h56m33.706s'), (b'x-ratelimit-reset-tokens', b'800ms'), (b'x-request-id', b'req_01hz0w884bess93hejngearsph'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b264a0cb81642c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the number of times Warren Spahn was a 20-game winner in his 21 major league seasons, which is a numeric value.
class_name: Numeric value
class_index: 5
data: {'text': 'What is the horsepower of the shuttle boosters ?', 'coarse_label': 5, 'fine_label': 43}
task_input: What is the horsepower of the shuttle boosters ?, corse_label: 5
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What is the horsepower of the shuttle boosters ?', 'examples_str': "Question: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does Salk vaccine prevent ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What exactly is radiation ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many feet long is a baseball pitcher 's rubber ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is AFS ?
class_name: Abbreviation 
class_index: 0
--------

Question: What does Salk vaccine prevent ?
class_name: Entity 
class_index: 1
--------

Question: What exactly is radiation ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the inventor of silly putty ?
class_name: Human being 
class_index: 3
--------

Question: What mountain range extends from the Gulf of St. Lawrence to Alabama ?
class_name: Location 
class_index: 4
--------

Question: How many feet long is a baseball pitcher 's rubber ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What is the horsepower of the shuttle boosters ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does Salk vaccine prevent ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What exactly is radiation ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many feet long is a baseball pitcher 's rubber ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is the horsepower of the shuttle boosters ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 00:33:27 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13234'), (b'x-ratelimit-remaining-tokens', b'29586'), (b'x-ratelimit-reset-requests', b'1h56m35.758999999s'), (b'x-ratelimit-reset-tokens', b'828ms'), (b'x-request-id', b'req_01hz0w88bxew98v5j6k8dgpc76'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b264a24c75642c-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does Salk vaccine prevent ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What exactly is radiation ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many feet long is a baseball pitcher 's rubber ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is the horsepower of the shuttle boosters ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:33:29 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13233'), (b'x-ratelimit-remaining-tokens', b'29611'), (b'x-ratelimit-reset-requests', b'1h56m39.696s'), (b'x-ratelimit-reset-tokens', b'778ms'), (b'x-request-id', b'req_01hz0w8accexb9txcjwf0nfrck'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b264af2eab642c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the horsepower of the shuttle boosters, which is a specific piece of information that can be measured.
class_name: Numeric value
class_index: 5
data: {'text': 'How many home runs did Babe Ruth hit in his lifetime ?', 'coarse_label': 5, 'fine_label': 38}
task_input: How many home runs did Babe Ruth hit in his lifetime ?, corse_label: 5
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'How many home runs did Babe Ruth hit in his lifetime ?', 'examples_str': "Question: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does Salk vaccine prevent ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What exactly is radiation ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many feet long is a baseball pitcher 's rubber ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is AFS ?
class_name: Abbreviation 
class_index: 0
--------

Question: What does Salk vaccine prevent ?
class_name: Entity 
class_index: 1
--------

Question: What exactly is radiation ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the inventor of silly putty ?
class_name: Human being 
class_index: 3
--------

Question: What mountain range extends from the Gulf of St. Lawrence to Alabama ?
class_name: Location 
class_index: 4
--------

Question: How many feet long is a baseball pitcher 's rubber ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: How many home runs did Babe Ruth hit in his lifetime ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does Salk vaccine prevent ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What exactly is radiation ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many feet long is a baseball pitcher 's rubber ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: How many home runs did Babe Ruth hit in his lifetime ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 00:33:29 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13233'), (b'x-ratelimit-remaining-tokens', b'29621'), (b'x-ratelimit-reset-requests', b'1h56m41.716999999s'), (b'x-ratelimit-reset-tokens', b'758ms'), (b'x-request-id', b'req_01hz0w8an8e6kvz6wd4yy534pq'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b264b0f806642c-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does Salk vaccine prevent ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What exactly is radiation ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many feet long is a baseball pitcher 's rubber ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: How many home runs did Babe Ruth hit in his lifetime ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:33:32 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13232'), (b'x-ratelimit-remaining-tokens', b'29610'), (b'x-ratelimit-reset-requests', b'1h56m45.633999999s'), (b'x-ratelimit-reset-tokens', b'780ms'), (b'x-request-id', b'req_01hz0w8cpbesdtzpyva5dgknac'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b264bdeb1a642c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is asking about a specific statistic related to a human being, Babe Ruth, so it's likely to be a numeric value.
class_name: NUM
class_index: 5
data: {'text': 'How much waste does an average dairy cow produce in a day ?', 'coarse_label': 5, 'fine_label': 38}
task_input: How much waste does an average dairy cow produce in a day ?, corse_label: 5
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'How much waste does an average dairy cow produce in a day ?', 'examples_str': "Question: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does Salk vaccine prevent ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What exactly is radiation ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many feet long is a baseball pitcher 's rubber ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is AFS ?
class_name: Abbreviation 
class_index: 0
--------

Question: What does Salk vaccine prevent ?
class_name: Entity 
class_index: 1
--------

Question: What exactly is radiation ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the inventor of silly putty ?
class_name: Human being 
class_index: 3
--------

Question: What mountain range extends from the Gulf of St. Lawrence to Alabama ?
class_name: Location 
class_index: 4
--------

Question: How many feet long is a baseball pitcher 's rubber ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: How much waste does an average dairy cow produce in a day ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does Salk vaccine prevent ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What exactly is radiation ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many feet long is a baseball pitcher 's rubber ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: How much waste does an average dairy cow produce in a day ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 00:33:32 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13232'), (b'x-ratelimit-remaining-tokens', b'29600'), (b'x-ratelimit-reset-requests', b'1h56m47.744s'), (b'x-ratelimit-reset-tokens', b'799ms'), (b'x-request-id', b'req_01hz0w8cycepmt7mzc4z30fvp0'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b264bf9c9d642c-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does Salk vaccine prevent ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What exactly is radiation ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many feet long is a baseball pitcher 's rubber ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: How much waste does an average dairy cow produce in a day ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:33:34 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13231'), (b'x-ratelimit-remaining-tokens', b'29608'), (b'x-ratelimit-reset-requests', b'1h56m51.678999999s'), (b'x-ratelimit-reset-tokens', b'784ms'), (b'x-request-id', b'req_01hz0w8eyxe6m82pqvc26ezstq'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b264cc7f7d642c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is asking about the quantity of waste produced by a dairy cow, which is a measurable value.
class_name: Numeric value
class_index: 5
responses: [0, 0, 0, 0, 2, 3, 0, 1, 0, 2, 2, 0, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5], targets: [0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5]
num_invalid: 0
Preds tensor: tensor([[1., 0., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0.],
        [0., 0., 1., 0., 0., 0.],
        [0., 0., 0., 1., 0., 0.],
        [1., 0., 0., 0., 0., 0.],
        [0., 1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0.],
        [0., 0., 1., 0., 0., 0.],
        [0., 0., 1., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0.],
        [0., 0., 0., 1., 0., 0.],
        [0., 0., 0., 1., 0., 0.],
        [0., 0., 0., 1., 0., 0.],
        [0., 0., 0., 1., 0., 0.],
        [0., 0., 0., 0., 1., 0.],
        [0., 0., 0., 0., 1., 0.],
        [0., 0., 0., 0., 1., 0.],
        [0., 0., 0., 0., 1., 0.],
        [0., 0., 0., 0., 0., 1.],
        [0., 0., 0., 0., 0., 1.],
        [0., 0., 0., 0., 0., 1.],
        [0., 0., 0., 0., 0., 1.]])
Targets tensor: tensor([0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5])
Eval Accuracy 1 proposed: 0.792, F1: 0.765, score: 1.557
reset_parameter
data: {'text': 'What is TMJ ?', 'coarse_label': 0, 'fine_label': 1}
task_input: What is TMJ ?, corse_label: 0
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What is TMJ ?', 'examples_str': 'Question: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why do recipe books recommend starting with cold water when you boil something ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many millimeters are in a mile ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is AFS ?
class_name: Abbreviation 
class_index: 0
--------

Question: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?
class_name: Entity 
class_index: 1
--------

Question: Why do recipe books recommend starting with cold water when you boil something ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the inventor of silly putty ?
class_name: Human being 
class_index: 3
--------

Question: What mountain range extends from the Gulf of St. Lawrence to Alabama ?
class_name: Location 
class_index: 4
--------

Question: How many millimeters are in a mile ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What is TMJ ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why do recipe books recommend starting with cold water when you boil something ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many millimeters are in a mile ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is TMJ ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 00:33:34 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13231'), (b'x-ratelimit-remaining-tokens', b'29609'), (b'x-ratelimit-reset-requests', b'1h56m53.762999999s'), (b'x-ratelimit-reset-tokens', b'782ms'), (b'x-request-id', b'req_01hz0w8f6bepavzcb1b6xvph5y'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b264cdf882642c-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why do recipe books recommend starting with cold water when you boil something ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many millimeters are in a mile ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is TMJ ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:33:36 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13230'), (b'x-ratelimit-remaining-tokens', b'29595'), (b'x-ratelimit-reset-requests', b'1h56m57.712s'), (b'x-ratelimit-reset-tokens', b'810ms'), (b'x-request-id', b'req_01hz0w8h6ef7tvtw5a7khxg1c0'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b264dacb64642c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking for the meaning of a abbreviation, which is a common use case for ABBRs.
class_name: ABBR
class_index: 0
data: {'text': 'What does the technical term ISDN mean ?', 'coarse_label': 0, 'fine_label': 1}
task_input: What does the technical term ISDN mean ?, corse_label: 0
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What does the technical term ISDN mean ?', 'examples_str': 'Question: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why do recipe books recommend starting with cold water when you boil something ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many millimeters are in a mile ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is AFS ?
class_name: Abbreviation 
class_index: 0
--------

Question: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?
class_name: Entity 
class_index: 1
--------

Question: Why do recipe books recommend starting with cold water when you boil something ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the inventor of silly putty ?
class_name: Human being 
class_index: 3
--------

Question: What mountain range extends from the Gulf of St. Lawrence to Alabama ?
class_name: Location 
class_index: 4
--------

Question: How many millimeters are in a mile ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What does the technical term ISDN mean ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why do recipe books recommend starting with cold water when you boil something ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many millimeters are in a mile ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does the technical term ISDN mean ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 00:33:36 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13230'), (b'x-ratelimit-remaining-tokens', b'29651'), (b'x-ratelimit-reset-requests', b'1h56m59.628s'), (b'x-ratelimit-reset-tokens', b'697ms'), (b'x-request-id', b'req_01hz0w8hj3efgb97x1saza1xhp'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b264dd1d6a642c-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why do recipe books recommend starting with cold water when you boil something ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many millimeters are in a mile ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does the technical term ISDN mean ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:33:39 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13229'), (b'x-ratelimit-remaining-tokens', b'29588'), (b'x-ratelimit-reset-requests', b'1h57m3.556s'), (b'x-ratelimit-reset-tokens', b'824ms'), (b'x-request-id', b'req_01hz0w8kjvfx7vgb5nhqn4yz48'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b264ea1f22642c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the meaning of a technical term, which is typically an abbreviation.
class_name: ABBR
class_index: 0
data: {'text': 'What does USPS stand for ?', 'coarse_label': 0, 'fine_label': 1}
task_input: What does USPS stand for ?, corse_label: 0
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What does USPS stand for ?', 'examples_str': 'Question: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why do recipe books recommend starting with cold water when you boil something ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many millimeters are in a mile ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is AFS ?
class_name: Abbreviation 
class_index: 0
--------

Question: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?
class_name: Entity 
class_index: 1
--------

Question: Why do recipe books recommend starting with cold water when you boil something ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the inventor of silly putty ?
class_name: Human being 
class_index: 3
--------

Question: What mountain range extends from the Gulf of St. Lawrence to Alabama ?
class_name: Location 
class_index: 4
--------

Question: How many millimeters are in a mile ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What does USPS stand for ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why do recipe books recommend starting with cold water when you boil something ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many millimeters are in a mile ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does USPS stand for ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 00:33:39 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13229'), (b'x-ratelimit-remaining-tokens', b'29593'), (b'x-ratelimit-reset-requests', b'1h57m5.765999999s'), (b'x-ratelimit-reset-tokens', b'814ms'), (b'x-request-id', b'req_01hz0w8kt5essszkmmqtsjwr2e'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b264eb8844642c-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why do recipe books recommend starting with cold water when you boil something ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many millimeters are in a mile ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does USPS stand for ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:33:41 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13228'), (b'x-ratelimit-remaining-tokens', b'29592'), (b'x-ratelimit-reset-requests', b'1h57m9.704s'), (b'x-ratelimit-reset-tokens', b'816ms'), (b'x-request-id', b'req_01hz0w8ntmfr9thndhq42hqems'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b264f86ad0642c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking for the abbreviation of a term, which is a common use case for abbreviations.
class_name: ABBR
class_index: 0
```
data: {'text': 'What does NASA stand for ?', 'coarse_label': 0, 'fine_label': 1}
task_input: What does NASA stand for ?, corse_label: 0
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What does NASA stand for ?', 'examples_str': 'Question: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why do recipe books recommend starting with cold water when you boil something ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many millimeters are in a mile ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is AFS ?
class_name: Abbreviation 
class_index: 0
--------

Question: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?
class_name: Entity 
class_index: 1
--------

Question: Why do recipe books recommend starting with cold water when you boil something ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the inventor of silly putty ?
class_name: Human being 
class_index: 3
--------

Question: What mountain range extends from the Gulf of St. Lawrence to Alabama ?
class_name: Location 
class_index: 4
--------

Question: How many millimeters are in a mile ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What does NASA stand for ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why do recipe books recommend starting with cold water when you boil something ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many millimeters are in a mile ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does NASA stand for ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 00:33:41 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'324'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13228'), (b'x-ratelimit-remaining-tokens', b'29593'), (b'x-ratelimit-reset-requests', b'1h57m11.699s'), (b'x-ratelimit-reset-tokens', b'814ms'), (b'x-request-id', b'req_01hz0w8p41ecjvpvp7qxhyx2m4'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b264fa4c66642c-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why do recipe books recommend starting with cold water when you boil something ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many millimeters are in a mile ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does NASA stand for ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:33:43 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13227'), (b'x-ratelimit-remaining-tokens', b'29592'), (b'x-ratelimit-reset-requests', b'1h57m15.631999999s'), (b'x-ratelimit-reset-tokens', b'816ms'), (b'x-request-id', b'req_01hz0w8r4mfzc938frvyka6rvr'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b265073d97642c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking for the abbreviation of NASA, which is a well-known acronym.
class_name: ABBR
class_index: 0
data: {'text': 'What is the name given to the Tiger at Louisiana State University ?', 'coarse_label': 1, 'fine_label': 2}
task_input: What is the name given to the Tiger at Louisiana State University ?, corse_label: 1
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What is the name given to the Tiger at Louisiana State University ?', 'examples_str': 'Question: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why do recipe books recommend starting with cold water when you boil something ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many millimeters are in a mile ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is AFS ?
class_name: Abbreviation 
class_index: 0
--------

Question: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?
class_name: Entity 
class_index: 1
--------

Question: Why do recipe books recommend starting with cold water when you boil something ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the inventor of silly putty ?
class_name: Human being 
class_index: 3
--------

Question: What mountain range extends from the Gulf of St. Lawrence to Alabama ?
class_name: Location 
class_index: 4
--------

Question: How many millimeters are in a mile ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What is the name given to the Tiger at Louisiana State University ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why do recipe books recommend starting with cold water when you boil something ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many millimeters are in a mile ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is the name given to the Tiger at Louisiana State University ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 00:33:43 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13227'), (b'x-ratelimit-remaining-tokens', b'29597'), (b'x-ratelimit-reset-requests', b'1h57m17.741s'), (b'x-ratelimit-reset-tokens', b'805ms'), (b'x-request-id', b'req_01hz0w8rcqfest1qz7d2tzjh3e'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b26508debe642c-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why do recipe books recommend starting with cold water when you boil something ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many millimeters are in a mile ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is the name given to the Tiger at Louisiana State University ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:33:46 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13226'), (b'x-ratelimit-remaining-tokens', b'29582'), (b'x-ratelimit-reset-requests', b'1h57m21.678999999s'), (b'x-ratelimit-reset-tokens', b'836ms'), (b'x-request-id', b'req_01hz0w8td6ecka050482vq3caw'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b26515b80e642c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking for the name of a specific entity, which is a common name given to a tiger at Louisiana State University.
class_name: Entity
class_index: 1
data: {'text': 'What is the criterion for being legally blind ?', 'coarse_label': 1, 'fine_label': 13}
task_input: What is the criterion for being legally blind ?, corse_label: 1
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What is the criterion for being legally blind ?', 'examples_str': 'Question: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why do recipe books recommend starting with cold water when you boil something ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many millimeters are in a mile ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is AFS ?
class_name: Abbreviation 
class_index: 0
--------

Question: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?
class_name: Entity 
class_index: 1
--------

Question: Why do recipe books recommend starting with cold water when you boil something ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the inventor of silly putty ?
class_name: Human being 
class_index: 3
--------

Question: What mountain range extends from the Gulf of St. Lawrence to Alabama ?
class_name: Location 
class_index: 4
--------

Question: How many millimeters are in a mile ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What is the criterion for being legally blind ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why do recipe books recommend starting with cold water when you boil something ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many millimeters are in a mile ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is the criterion for being legally blind ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 00:33:46 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'325'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13226'), (b'x-ratelimit-remaining-tokens', b'29622'), (b'x-ratelimit-reset-requests', b'1h57m23.65s'), (b'x-ratelimit-reset-tokens', b'755ms'), (b'x-request-id', b'req_01hz0w8tr5ekjvqsstjyxfezrj'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b26517e9d9642c-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why do recipe books recommend starting with cold water when you boil something ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many millimeters are in a mile ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is the criterion for being legally blind ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:33:48 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13225'), (b'x-ratelimit-remaining-tokens', b'29587'), (b'x-ratelimit-reset-requests', b'1h57m27.597s'), (b'x-ratelimit-reset-tokens', b'826ms'), (b'x-request-id', b'req_01hz0w8wraepb82ckp8e0ezsww'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b26524cb5d642c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about a specific criterion, which is a descriptive concept, and it's related to a medical or legal context, which makes it a description and abstract concept.
class_name: DESC
class_index: 2
data: {'text': 'What is the major fault line near Kentucky ?', 'coarse_label': 1, 'fine_label': 13}
task_input: What is the major fault line near Kentucky ?, corse_label: 1
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What is the major fault line near Kentucky ?', 'examples_str': 'Question: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why do recipe books recommend starting with cold water when you boil something ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many millimeters are in a mile ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is AFS ?
class_name: Abbreviation 
class_index: 0
--------

Question: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?
class_name: Entity 
class_index: 1
--------

Question: Why do recipe books recommend starting with cold water when you boil something ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the inventor of silly putty ?
class_name: Human being 
class_index: 3
--------

Question: What mountain range extends from the Gulf of St. Lawrence to Alabama ?
class_name: Location 
class_index: 4
--------

Question: How many millimeters are in a mile ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What is the major fault line near Kentucky ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why do recipe books recommend starting with cold water when you boil something ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many millimeters are in a mile ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is the major fault line near Kentucky ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 00:33:48 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13225'), (b'x-ratelimit-remaining-tokens', b'29581'), (b'x-ratelimit-reset-requests', b'1h57m29.721999999s'), (b'x-ratelimit-reset-tokens', b'837ms'), (b'x-request-id', b'req_01hz0w8x11faat420m57czynwh'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b265267c87642c-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why do recipe books recommend starting with cold water when you boil something ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many millimeters are in a mile ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is the major fault line near Kentucky ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:33:50 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13224'), (b'x-ratelimit-remaining-tokens', b'29587'), (b'x-ratelimit-reset-requests', b'1h57m33.66s'), (b'x-ratelimit-reset-tokens', b'826ms'), (b'x-request-id', b'req_01hz0w8z1fexc97734sr1ysqfz'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b265336e62642c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about a geographical feature, which is typically represented by a location.
class_name: Location
class_index: 4
data: {'text': 'What is another name for vitamin B1 ?', 'coarse_label': 1, 'fine_label': 21}
task_input: What is another name for vitamin B1 ?, corse_label: 1
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What is another name for vitamin B1 ?', 'examples_str': 'Question: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why do recipe books recommend starting with cold water when you boil something ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many millimeters are in a mile ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is AFS ?
class_name: Abbreviation 
class_index: 0
--------

Question: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?
class_name: Entity 
class_index: 1
--------

Question: Why do recipe books recommend starting with cold water when you boil something ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the inventor of silly putty ?
class_name: Human being 
class_index: 3
--------

Question: What mountain range extends from the Gulf of St. Lawrence to Alabama ?
class_name: Location 
class_index: 4
--------

Question: How many millimeters are in a mile ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What is another name for vitamin B1 ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why do recipe books recommend starting with cold water when you boil something ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many millimeters are in a mile ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is another name for vitamin B1 ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 00:33:50 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13224'), (b'x-ratelimit-remaining-tokens', b'29599'), (b'x-ratelimit-reset-requests', b'1h57m35.707999999s'), (b'x-ratelimit-reset-tokens', b'801ms'), (b'x-request-id', b'req_01hz0w8zamexcaedwr6x6qapvn'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b265353fd7642c-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why do recipe books recommend starting with cold water when you boil something ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many millimeters are in a mile ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is another name for vitamin B1 ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:33:53 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13223'), (b'x-ratelimit-remaining-tokens', b'29589'), (b'x-ratelimit-reset-requests', b'1h57m39.641s'), (b'x-ratelimit-reset-tokens', b'822ms'), (b'x-request-id', b'req_01hz0w91b7faav9n5pee2xbpxp'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b265421a91642c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking for an alternative name of a specific substance, which is typically represented by an abbreviation.
class_name: ABBR
class_index: 0
data: {'text': 'What are coral reefs ?', 'coarse_label': 2, 'fine_label': 24}
task_input: What are coral reefs ?, corse_label: 2
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What are coral reefs ?', 'examples_str': 'Question: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why do recipe books recommend starting with cold water when you boil something ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many millimeters are in a mile ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is AFS ?
class_name: Abbreviation 
class_index: 0
--------

Question: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?
class_name: Entity 
class_index: 1
--------

Question: Why do recipe books recommend starting with cold water when you boil something ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the inventor of silly putty ?
class_name: Human being 
class_index: 3
--------

Question: What mountain range extends from the Gulf of St. Lawrence to Alabama ?
class_name: Location 
class_index: 4
--------

Question: How many millimeters are in a mile ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What are coral reefs ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why do recipe books recommend starting with cold water when you boil something ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many millimeters are in a mile ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What are coral reefs ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 00:33:53 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13223'), (b'x-ratelimit-remaining-tokens', b'29601'), (b'x-ratelimit-reset-requests', b'1h57m41.698s'), (b'x-ratelimit-reset-tokens', b'797ms'), (b'x-request-id', b'req_01hz0w91mpex1bpgkv4pez8p2t'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b265440c21642c-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why do recipe books recommend starting with cold water when you boil something ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many millimeters are in a mile ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What are coral reefs ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:33:55 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13222'), (b'x-ratelimit-remaining-tokens', b'29593'), (b'x-ratelimit-reset-requests', b'1h57m45.639999999s'), (b'x-ratelimit-reset-tokens', b'814ms'), (b'x-request-id', b'req_01hz0w93n0e5e9qsn2n2y3sxa5'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b26550eda5642c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is asking about a general topic, and the answer is a description of coral reefs.
class_name: Description and abstract concept
class_index: 2
data: {'text': 'What are Aborigines ?', 'coarse_label': 2, 'fine_label': 24}
task_input: What are Aborigines ?, corse_label: 2
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What are Aborigines ?', 'examples_str': 'Question: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why do recipe books recommend starting with cold water when you boil something ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many millimeters are in a mile ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is AFS ?
class_name: Abbreviation 
class_index: 0
--------

Question: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?
class_name: Entity 
class_index: 1
--------

Question: Why do recipe books recommend starting with cold water when you boil something ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the inventor of silly putty ?
class_name: Human being 
class_index: 3
--------

Question: What mountain range extends from the Gulf of St. Lawrence to Alabama ?
class_name: Location 
class_index: 4
--------

Question: How many millimeters are in a mile ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What are Aborigines ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why do recipe books recommend starting with cold water when you boil something ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many millimeters are in a mile ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What are Aborigines ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 00:33:55 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13222'), (b'x-ratelimit-remaining-tokens', b'29612'), (b'x-ratelimit-reset-requests', b'1h57m47.697s'), (b'x-ratelimit-reset-tokens', b'776ms'), (b'x-request-id', b'req_01hz0w93ygfbg8jj5hervwkzsm'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b26552cf18642c-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why do recipe books recommend starting with cold water when you boil something ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many millimeters are in a mile ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What are Aborigines ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:33:57 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13221'), (b'x-ratelimit-remaining-tokens', b'29593'), (b'x-ratelimit-reset-requests', b'1h57m51.633999999s'), (b'x-ratelimit-reset-tokens', b'814ms'), (b'x-request-id', b'req_01hz0w95yzex196d0xn2xnrg1a'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b2655fa8e1642c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about a group of people, and the term "Aborigines" is often used to refer to indigenous Australians.
class_name: Human being
class_index: 3
data: {'text': 'What are capers ?', 'coarse_label': 2, 'fine_label': 24}
task_input: What are capers ?, corse_label: 2
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What are capers ?', 'examples_str': 'Question: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why do recipe books recommend starting with cold water when you boil something ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many millimeters are in a mile ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is AFS ?
class_name: Abbreviation 
class_index: 0
--------

Question: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?
class_name: Entity 
class_index: 1
--------

Question: Why do recipe books recommend starting with cold water when you boil something ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the inventor of silly putty ?
class_name: Human being 
class_index: 3
--------

Question: What mountain range extends from the Gulf of St. Lawrence to Alabama ?
class_name: Location 
class_index: 4
--------

Question: How many millimeters are in a mile ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What are capers ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why do recipe books recommend starting with cold water when you boil something ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many millimeters are in a mile ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What are capers ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 00:33:58 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'325'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13221'), (b'x-ratelimit-remaining-tokens', b'29592'), (b'x-ratelimit-reset-requests', b'1h57m53.719999999s'), (b'x-ratelimit-reset-tokens', b'815ms'), (b'x-request-id', b'req_01hz0w967rf8d9m3nsp2ts4b5e'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b265616a6d642c-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why do recipe books recommend starting with cold water when you boil something ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many millimeters are in a mile ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What are capers ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:34:00 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13220'), (b'x-ratelimit-remaining-tokens', b'29594'), (b'x-ratelimit-reset-requests', b'1h57m57.656s'), (b'x-ratelimit-reset-tokens', b'812ms'), (b'x-request-id', b'req_01hz0w9887fwtrmw4e0kzxs19x'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b2656e5c16642c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is asking about the meaning of "capers", which is a type of food.
class_name: Abbreviation
class_index: 0
data: {'text': 'What is nuclear power ?', 'coarse_label': 2, 'fine_label': 24}
task_input: What is nuclear power ?, corse_label: 2
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What is nuclear power ?', 'examples_str': 'Question: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why do recipe books recommend starting with cold water when you boil something ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many millimeters are in a mile ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is AFS ?
class_name: Abbreviation 
class_index: 0
--------

Question: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?
class_name: Entity 
class_index: 1
--------

Question: Why do recipe books recommend starting with cold water when you boil something ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the inventor of silly putty ?
class_name: Human being 
class_index: 3
--------

Question: What mountain range extends from the Gulf of St. Lawrence to Alabama ?
class_name: Location 
class_index: 4
--------

Question: How many millimeters are in a mile ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What is nuclear power ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why do recipe books recommend starting with cold water when you boil something ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many millimeters are in a mile ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is nuclear power ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 00:34:00 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'325'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13220'), (b'x-ratelimit-remaining-tokens', b'29598'), (b'x-ratelimit-reset-requests', b'1h57m59.768999999s'), (b'x-ratelimit-reset-tokens', b'804ms'), (b'x-request-id', b'req_01hz0w98ffemtbp9drsvybk7n8'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b2656fcd53642c-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why do recipe books recommend starting with cold water when you boil something ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many millimeters are in a mile ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is nuclear power ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:34:02 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13219'), (b'x-ratelimit-remaining-tokens', b'29593'), (b'x-ratelimit-reset-requests', b'1h58m3.706s'), (b'x-ratelimit-reset-tokens', b'814ms'), (b'x-request-id', b'req_01hz0w9afzfebb8ygmnz246zqf'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b2657caedb642c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is asking about a concept or idea, which is a description and abstract concept.
class_name: DESC
class_index: 2
data: {'text': 'Who was the first African American to win the Nobel Prize in literature ?', 'coarse_label': 3, 'fine_label': 29}
task_input: Who was the first African American to win the Nobel Prize in literature ?, corse_label: 3
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'Who was the first African American to win the Nobel Prize in literature ?', 'examples_str': 'Question: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why do recipe books recommend starting with cold water when you boil something ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many millimeters are in a mile ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is AFS ?
class_name: Abbreviation 
class_index: 0
--------

Question: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?
class_name: Entity 
class_index: 1
--------

Question: Why do recipe books recommend starting with cold water when you boil something ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the inventor of silly putty ?
class_name: Human being 
class_index: 3
--------

Question: What mountain range extends from the Gulf of St. Lawrence to Alabama ?
class_name: Location 
class_index: 4
--------

Question: How many millimeters are in a mile ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Who was the first African American to win the Nobel Prize in literature ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why do recipe books recommend starting with cold water when you boil something ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many millimeters are in a mile ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Who was the first African American to win the Nobel Prize in literature ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 00:34:02 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'332'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13219'), (b'x-ratelimit-remaining-tokens', b'29602'), (b'x-ratelimit-reset-requests', b'1h58m5.731s'), (b'x-ratelimit-reset-tokens', b'796ms'), (b'x-request-id', b'req_01hz0w9ardefgt0crhk3263vke'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b2657e582d642c-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why do recipe books recommend starting with cold water when you boil something ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many millimeters are in a mile ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Who was the first African American to win the Nobel Prize in literature ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:34:04 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13218'), (b'x-ratelimit-remaining-tokens', b'29580'), (b'x-ratelimit-reset-requests', b'1h58m9.675999999s'), (b'x-ratelimit-reset-tokens', b'840ms'), (b'x-request-id', b'req_01hz0w9crkf7wategt6jcwbp94'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b2658b3abb642c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is asking about a specific person who achieved a notable achievement, which is a characteristic of a human being.
class_name: HUM
class_index: 3
data: {'text': 'Who invented the hula hoop ?', 'coarse_label': 3, 'fine_label': 29}
task_input: Who invented the hula hoop ?, corse_label: 3
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'Who invented the hula hoop ?', 'examples_str': 'Question: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why do recipe books recommend starting with cold water when you boil something ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many millimeters are in a mile ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is AFS ?
class_name: Abbreviation 
class_index: 0
--------

Question: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?
class_name: Entity 
class_index: 1
--------

Question: Why do recipe books recommend starting with cold water when you boil something ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the inventor of silly putty ?
class_name: Human being 
class_index: 3
--------

Question: What mountain range extends from the Gulf of St. Lawrence to Alabama ?
class_name: Location 
class_index: 4
--------

Question: How many millimeters are in a mile ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Who invented the hula hoop ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why do recipe books recommend starting with cold water when you boil something ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many millimeters are in a mile ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Who invented the hula hoop ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 00:34:05 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13218'), (b'x-ratelimit-remaining-tokens', b'29612'), (b'x-ratelimit-reset-requests', b'1h58m11.688s'), (b'x-ratelimit-reset-tokens', b'776ms'), (b'x-request-id', b'req_01hz0w9d2cexcscnta5m655kqv'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b2658d1c73642c-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why do recipe books recommend starting with cold water when you boil something ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many millimeters are in a mile ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Who invented the hula hoop ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:34:07 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13217'), (b'x-ratelimit-remaining-tokens', b'29591'), (b'x-ratelimit-reset-requests', b'1h58m15.631999999s'), (b'x-ratelimit-reset-tokens', b'818ms'), (b'x-request-id', b'req_01hz0w9f2me5ev227cppbkmnnn'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b2659a0e8f642c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is asking about the inventor of a specific object, which is a characteristic of a human being.
class_name: HUM
class_index: 3
```
data: {'text': 'Who invented Trivial Pursuit ?', 'coarse_label': 3, 'fine_label': 29}
task_input: Who invented Trivial Pursuit ?, corse_label: 3
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'Who invented Trivial Pursuit ?', 'examples_str': 'Question: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why do recipe books recommend starting with cold water when you boil something ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many millimeters are in a mile ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is AFS ?
class_name: Abbreviation 
class_index: 0
--------

Question: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?
class_name: Entity 
class_index: 1
--------

Question: Why do recipe books recommend starting with cold water when you boil something ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the inventor of silly putty ?
class_name: Human being 
class_index: 3
--------

Question: What mountain range extends from the Gulf of St. Lawrence to Alabama ?
class_name: Location 
class_index: 4
--------

Question: How many millimeters are in a mile ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Who invented Trivial Pursuit ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why do recipe books recommend starting with cold water when you boil something ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many millimeters are in a mile ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Who invented Trivial Pursuit ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 00:34:07 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13217'), (b'x-ratelimit-remaining-tokens', b'29589'), (b'x-ratelimit-reset-requests', b'1h58m17.719999999s'), (b'x-ratelimit-reset-tokens', b'821ms'), (b'x-request-id', b'req_01hz0w9fbbe7f9jn24j0v00h65'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b2659bcfe2642c-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why do recipe books recommend starting with cold water when you boil something ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many millimeters are in a mile ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Who invented Trivial Pursuit ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:34:09 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13216'), (b'x-ratelimit-remaining-tokens', b'29591'), (b'x-ratelimit-reset-requests', b'1h58m21.668s'), (b'x-ratelimit-reset-tokens', b'818ms'), (b'x-request-id', b'req_01hz0w9hbhe6n9csmbwtbg6htz'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b265a89990642c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question asks about the inventor of Trivial Pursuit, which is a game, and the inventor is likely a human being.
class_name: Human being
class_index: 3
data: {'text': 'Who killed John F. Kennedy ?', 'coarse_label': 3, 'fine_label': 29}
task_input: Who killed John F. Kennedy ?, corse_label: 3
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'Who killed John F. Kennedy ?', 'examples_str': 'Question: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why do recipe books recommend starting with cold water when you boil something ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many millimeters are in a mile ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is AFS ?
class_name: Abbreviation 
class_index: 0
--------

Question: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?
class_name: Entity 
class_index: 1
--------

Question: Why do recipe books recommend starting with cold water when you boil something ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the inventor of silly putty ?
class_name: Human being 
class_index: 3
--------

Question: What mountain range extends from the Gulf of St. Lawrence to Alabama ?
class_name: Location 
class_index: 4
--------

Question: How many millimeters are in a mile ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Who killed John F. Kennedy ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why do recipe books recommend starting with cold water when you boil something ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many millimeters are in a mile ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Who killed John F. Kennedy ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 00:34:09 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13216'), (b'x-ratelimit-remaining-tokens', b'29619'), (b'x-ratelimit-reset-requests', b'1h58m23.681s'), (b'x-ratelimit-reset-tokens', b'762ms'), (b'x-request-id', b'req_01hz0w9hngfwv8dhrx2514ax7v'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b265aa8b43642c-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why do recipe books recommend starting with cold water when you boil something ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many millimeters are in a mile ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Who killed John F. Kennedy ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:34:11 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13215'), (b'x-ratelimit-remaining-tokens', b'29591'), (b'x-ratelimit-reset-requests', b'1h58m27.619999999s'), (b'x-ratelimit-reset-tokens', b'818ms'), (b'x-request-id', b'req_01hz0w9knxfrbbmjshk2nsaeym'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b265b77c3a642c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about a historical event and the identity of the perpetrator, which is a classic example of a human being.
class_name: HUM
class_index: 3
data: {'text': 'What New York City structure is also known as the Twin Towers ?', 'coarse_label': 4, 'fine_label': 35}
task_input: What New York City structure is also known as the Twin Towers ?, corse_label: 4
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What New York City structure is also known as the Twin Towers ?', 'examples_str': 'Question: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why do recipe books recommend starting with cold water when you boil something ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many millimeters are in a mile ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is AFS ?
class_name: Abbreviation 
class_index: 0
--------

Question: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?
class_name: Entity 
class_index: 1
--------

Question: Why do recipe books recommend starting with cold water when you boil something ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the inventor of silly putty ?
class_name: Human being 
class_index: 3
--------

Question: What mountain range extends from the Gulf of St. Lawrence to Alabama ?
class_name: Location 
class_index: 4
--------

Question: How many millimeters are in a mile ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What New York City structure is also known as the Twin Towers ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why do recipe books recommend starting with cold water when you boil something ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many millimeters are in a mile ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What New York City structure is also known as the Twin Towers ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 00:34:12 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13215'), (b'x-ratelimit-remaining-tokens', b'29611'), (b'x-ratelimit-reset-requests', b'1h58m29.715999999s'), (b'x-ratelimit-reset-tokens', b'777ms'), (b'x-request-id', b'req_01hz0w9kytfx9sf9pj4pd49fdb'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b265b94d73642c-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why do recipe books recommend starting with cold water when you boil something ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many millimeters are in a mile ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What New York City structure is also known as the Twin Towers ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:34:14 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13214'), (b'x-ratelimit-remaining-tokens', b'29583'), (b'x-ratelimit-reset-requests', b'1h58m33.661s'), (b'x-ratelimit-reset-tokens', b'834ms'), (b'x-request-id', b'req_01hz0w9nz1e6nv1x86bx3y6gpb'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b265c61f27642c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about a specific structure in New York City, which is a location-based question.
class_name: Location
class_index: 4
data: {'text': 'What is the largest city in the world ?', 'coarse_label': 4, 'fine_label': 32}
task_input: What is the largest city in the world ?, corse_label: 4
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What is the largest city in the world ?', 'examples_str': 'Question: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why do recipe books recommend starting with cold water when you boil something ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many millimeters are in a mile ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is AFS ?
class_name: Abbreviation 
class_index: 0
--------

Question: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?
class_name: Entity 
class_index: 1
--------

Question: Why do recipe books recommend starting with cold water when you boil something ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the inventor of silly putty ?
class_name: Human being 
class_index: 3
--------

Question: What mountain range extends from the Gulf of St. Lawrence to Alabama ?
class_name: Location 
class_index: 4
--------

Question: How many millimeters are in a mile ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What is the largest city in the world ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why do recipe books recommend starting with cold water when you boil something ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many millimeters are in a mile ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is the largest city in the world ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 00:34:14 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13214'), (b'x-ratelimit-remaining-tokens', b'29593'), (b'x-ratelimit-reset-requests', b'1h58m35.704s'), (b'x-ratelimit-reset-tokens', b'813ms'), (b'x-request-id', b'req_01hz0w9p8afze9gzmc5kdtks2e'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b265c7e866642c-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why do recipe books recommend starting with cold water when you boil something ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many millimeters are in a mile ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is the largest city in the world ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:34:16 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13213'), (b'x-ratelimit-remaining-tokens', b'29589'), (b'x-ratelimit-reset-requests', b'1h58m39.649s'), (b'x-ratelimit-reset-tokens', b'822ms'), (b'x-request-id', b'req_01hz0w9r8hfn48a45fc12d4sq2'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b265d4cb85642c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking for the largest city in the world, which is a location.
class_name: Location
class_index: 4
data: {'text': 'What hemisphere is the Philippines in ?', 'coarse_label': 4, 'fine_label': 35}
task_input: What hemisphere is the Philippines in ?, corse_label: 4
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What hemisphere is the Philippines in ?', 'examples_str': 'Question: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why do recipe books recommend starting with cold water when you boil something ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many millimeters are in a mile ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is AFS ?
class_name: Abbreviation 
class_index: 0
--------

Question: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?
class_name: Entity 
class_index: 1
--------

Question: Why do recipe books recommend starting with cold water when you boil something ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the inventor of silly putty ?
class_name: Human being 
class_index: 3
--------

Question: What mountain range extends from the Gulf of St. Lawrence to Alabama ?
class_name: Location 
class_index: 4
--------

Question: How many millimeters are in a mile ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What hemisphere is the Philippines in ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why do recipe books recommend starting with cold water when you boil something ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many millimeters are in a mile ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What hemisphere is the Philippines in ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 00:34:16 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13213'), (b'x-ratelimit-remaining-tokens', b'29650'), (b'x-ratelimit-reset-requests', b'1h58m41.597s'), (b'x-ratelimit-reset-tokens', b'699ms'), (b'x-request-id', b'req_01hz0w9rn5fac9e5ne8yf1m0j3'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b265d75d35642c-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why do recipe books recommend starting with cold water when you boil something ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many millimeters are in a mile ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What hemisphere is the Philippines in ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:34:19 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13212'), (b'x-ratelimit-remaining-tokens', b'29589'), (b'x-ratelimit-reset-requests', b'1h58m45.545s'), (b'x-ratelimit-reset-tokens', b'822ms'), (b'x-request-id', b'req_01hz0w9tn9epctdvdk6phwv9xg'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b265e42e7c642c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the geographical location of the Philippines.
class_name: Location
class_index: 4
data: {'text': 'What French province is cognac produced in ?', 'coarse_label': 4, 'fine_label': 36}
task_input: What French province is cognac produced in ?, corse_label: 4
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What French province is cognac produced in ?', 'examples_str': 'Question: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why do recipe books recommend starting with cold water when you boil something ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many millimeters are in a mile ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is AFS ?
class_name: Abbreviation 
class_index: 0
--------

Question: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?
class_name: Entity 
class_index: 1
--------

Question: Why do recipe books recommend starting with cold water when you boil something ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the inventor of silly putty ?
class_name: Human being 
class_index: 3
--------

Question: What mountain range extends from the Gulf of St. Lawrence to Alabama ?
class_name: Location 
class_index: 4
--------

Question: How many millimeters are in a mile ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What French province is cognac produced in ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why do recipe books recommend starting with cold water when you boil something ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many millimeters are in a mile ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What French province is cognac produced in ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 00:34:19 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13212'), (b'x-ratelimit-remaining-tokens', b'29627'), (b'x-ratelimit-reset-requests', b'1h58m47.699s'), (b'x-ratelimit-reset-tokens', b'746ms'), (b'x-request-id', b'req_01hz0w9tyqecmtxfacnhg4dzj9'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b265e60fbb642c-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why do recipe books recommend starting with cold water when you boil something ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many millimeters are in a mile ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What French province is cognac produced in ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:34:21 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13211'), (b'x-ratelimit-remaining-tokens', b'29587'), (b'x-ratelimit-reset-requests', b'1h58m51.642s'), (b'x-ratelimit-reset-tokens', b'826ms'), (b'x-request-id', b'req_01hz0w9wz0fac8fyhdq3x3p9kt'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b265f2e890642c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about a specific geographic location, and cognac is a type of wine produced in a specific region.
class_name: Location
class_index: 4
data: {'text': 'What is the speed of light ?', 'coarse_label': 5, 'fine_label': 46}
task_input: What is the speed of light ?, corse_label: 5
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What is the speed of light ?', 'examples_str': 'Question: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why do recipe books recommend starting with cold water when you boil something ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many millimeters are in a mile ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is AFS ?
class_name: Abbreviation 
class_index: 0
--------

Question: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?
class_name: Entity 
class_index: 1
--------

Question: Why do recipe books recommend starting with cold water when you boil something ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the inventor of silly putty ?
class_name: Human being 
class_index: 3
--------

Question: What mountain range extends from the Gulf of St. Lawrence to Alabama ?
class_name: Location 
class_index: 4
--------

Question: How many millimeters are in a mile ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What is the speed of light ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why do recipe books recommend starting with cold water when you boil something ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many millimeters are in a mile ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is the speed of light ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 00:34:21 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'325'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13211'), (b'x-ratelimit-remaining-tokens', b'29590'), (b'x-ratelimit-reset-requests', b'1h58m53.74s'), (b'x-ratelimit-reset-tokens', b'819ms'), (b'x-request-id', b'req_01hz0w9x75epq9nhf96xentvd8'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b265f479f6642c-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why do recipe books recommend starting with cold water when you boil something ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many millimeters are in a mile ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is the speed of light ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:34:23 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13210'), (b'x-ratelimit-remaining-tokens', b'29591'), (b'x-ratelimit-reset-requests', b'1h58m57.680999999s'), (b'x-ratelimit-reset-tokens', b'818ms'), (b'x-request-id', b'req_01hz0w9z7gewbtaw2p02h46rcs'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b266016b77642c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking for a specific value, which is a fundamental constant in physics.
class_name: Numeric value
class_index: 5
data: {'text': 'How many pounds in a ton ?', 'coarse_label': 5, 'fine_label': 38}
task_input: How many pounds in a ton ?, corse_label: 5
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'How many pounds in a ton ?', 'examples_str': 'Question: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why do recipe books recommend starting with cold water when you boil something ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many millimeters are in a mile ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is AFS ?
class_name: Abbreviation 
class_index: 0
--------

Question: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?
class_name: Entity 
class_index: 1
--------

Question: Why do recipe books recommend starting with cold water when you boil something ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the inventor of silly putty ?
class_name: Human being 
class_index: 3
--------

Question: What mountain range extends from the Gulf of St. Lawrence to Alabama ?
class_name: Location 
class_index: 4
--------

Question: How many millimeters are in a mile ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: How many pounds in a ton ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why do recipe books recommend starting with cold water when you boil something ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many millimeters are in a mile ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: How many pounds in a ton ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 00:34:23 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13210'), (b'x-ratelimit-remaining-tokens', b'29595'), (b'x-ratelimit-reset-requests', b'1h58m59.766999999s'), (b'x-ratelimit-reset-tokens', b'810ms'), (b'x-request-id', b'req_01hz0w9zetfec9sw9vyyaw84k3'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b26602dc8a642c-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why do recipe books recommend starting with cold water when you boil something ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many millimeters are in a mile ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: How many pounds in a ton ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:34:26 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13209'), (b'x-ratelimit-remaining-tokens', b'29592'), (b'x-ratelimit-reset-requests', b'1h59m3.705s'), (b'x-ratelimit-reset-tokens', b'816ms'), (b'x-request-id', b'req_01hz0wa1f8eswas3ag111wy02j'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b2660fbebf642c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking for a conversion between units, which is a numeric value.
class_name: NUM
class_index: 5
data: {'text': 'How often does Old Faithful erupt at Yellowstone National Park ?', 'coarse_label': 5, 'fine_label': 43}
task_input: How often does Old Faithful erupt at Yellowstone National Park ?, corse_label: 5
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'How often does Old Faithful erupt at Yellowstone National Park ?', 'examples_str': 'Question: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why do recipe books recommend starting with cold water when you boil something ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many millimeters are in a mile ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is AFS ?
class_name: Abbreviation 
class_index: 0
--------

Question: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?
class_name: Entity 
class_index: 1
--------

Question: Why do recipe books recommend starting with cold water when you boil something ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the inventor of silly putty ?
class_name: Human being 
class_index: 3
--------

Question: What mountain range extends from the Gulf of St. Lawrence to Alabama ?
class_name: Location 
class_index: 4
--------

Question: How many millimeters are in a mile ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: How often does Old Faithful erupt at Yellowstone National Park ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why do recipe books recommend starting with cold water when you boil something ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many millimeters are in a mile ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: How often does Old Faithful erupt at Yellowstone National Park ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 00:34:26 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'325'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13209'), (b'x-ratelimit-remaining-tokens', b'29598'), (b'x-ratelimit-reset-requests', b'1h59m5.74s'), (b'x-ratelimit-reset-tokens', b'804ms'), (b'x-request-id', b'req_01hz0wa1qdf7x9mhmrm59pm4t4'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b266115fc8642c-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why do recipe books recommend starting with cold water when you boil something ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many millimeters are in a mile ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: How often does Old Faithful erupt at Yellowstone National Park ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:34:28 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13208'), (b'x-ratelimit-remaining-tokens', b'29582'), (b'x-ratelimit-reset-requests', b'1h59m9.686999999s'), (b'x-ratelimit-reset-tokens', b'836ms'), (b'x-request-id', b'req_01hz0wa3qkf8evspdmtwdwk0kd'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b2661e3957642c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the frequency of Old Faithful's eruptions, which is a specific and measurable quantity.
class_name: Numeric value
class_index: 5
data: {'text': 'When did Idaho become a state ?', 'coarse_label': 5, 'fine_label': 39}
task_input: When did Idaho become a state ?, corse_label: 5
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'When did Idaho become a state ?', 'examples_str': 'Question: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why do recipe books recommend starting with cold water when you boil something ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many millimeters are in a mile ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is AFS ?
class_name: Abbreviation 
class_index: 0
--------

Question: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?
class_name: Entity 
class_index: 1
--------

Question: Why do recipe books recommend starting with cold water when you boil something ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the inventor of silly putty ?
class_name: Human being 
class_index: 3
--------

Question: What mountain range extends from the Gulf of St. Lawrence to Alabama ?
class_name: Location 
class_index: 4
--------

Question: How many millimeters are in a mile ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: When did Idaho become a state ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why do recipe books recommend starting with cold water when you boil something ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many millimeters are in a mile ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: When did Idaho become a state ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 00:34:28 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13208'), (b'x-ratelimit-remaining-tokens', b'29630'), (b'x-ratelimit-reset-requests', b'1h59m11.670999999s'), (b'x-ratelimit-reset-tokens', b'739ms'), (b'x-request-id', b'req_01hz0wa41wefjbqn8g8v6j6pty'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b266204adb642c-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is AFS ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What Frederick Forsyth novel chronicles the toppling of an African government by mercenaries ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why do recipe books recommend starting with cold water when you boil something ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the inventor of silly putty ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What mountain range extends from the Gulf of St. Lawrence to Alabama ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many millimeters are in a mile ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: When did Idaho become a state ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:34:31 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'13207'), (b'x-ratelimit-remaining-tokens', b'29591'), (b'x-ratelimit-reset-requests', b'1h59m15.616999999s'), (b'x-ratelimit-reset-tokens', b'818ms'), (b'x-request-id', b'req_01hz0wa622fe2rb06cfhb7hqhm'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b2662d1e5d642c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about a specific event in the past, which is a characteristic of a location.
class_name: Location
class_index: 4
responses: [0, 0, 0, 0, 1, 2, 4, 0, 2, 3, 0, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 4], targets: [0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5]
num_invalid: 0
Preds tensor: tensor([[1., 0., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0.],
        [0., 1., 0., 0., 0., 0.],
        [0., 0., 1., 0., 0., 0.],
        [0., 0., 0., 0., 1., 0.],
        [1., 0., 0., 0., 0., 0.],
        [0., 0., 1., 0., 0., 0.],
        [0., 0., 0., 1., 0., 0.],
        [1., 0., 0., 0., 0., 0.],
        [0., 0., 1., 0., 0., 0.],
        [0., 0., 0., 1., 0., 0.],
        [0., 0., 0., 1., 0., 0.],
        [0., 0., 0., 1., 0., 0.],
        [0., 0., 0., 1., 0., 0.],
        [0., 0., 0., 0., 1., 0.],
        [0., 0., 0., 0., 1., 0.],
        [0., 0., 0., 0., 1., 0.],
        [0., 0., 0., 0., 1., 0.],
        [0., 0., 0., 0., 0., 1.],
        [0., 0., 0., 0., 0., 1.],
        [0., 0., 0., 0., 0., 1.],
        [0., 0., 0., 0., 1., 0.]])
Targets tensor: tensor([0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5])
Test Accuracy: 0.75, F1: 0.72
best_score: 1.661
