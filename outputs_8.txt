DatasetDict({
    train: Dataset({
        features: ['text', 'coarse_label', 'fine_label'],
        num_rows: 5452
    })
    test: Dataset({
        features: ['text', 'coarse_label', 'fine_label'],
        num_rows: 500
    })
})
Train example: {'text': 'How did serfdom develop in and then leave Russia ?', 'coarse_label': 2, 'fine_label': 26}
Test example: {'text': 'How far is it from Denver to Aspen ?', 'coarse_label': 5, 'fine_label': 40}
INFO:core.prompt_builder:Prompt has variables: ['classes']
INFO:core.prompt_builder:Prompt has variables: ['schema', 'example']
DEBUG:use_cases.classification.task:output_str: Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

DEBUG:httpx:load_ssl_context verify=True cert=None trust_env=True http2=False
DEBUG:httpx:load_verify_locations cafile='/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/certifi/cacert.pem'
INFO:core.prompt_builder:Prompt has variables: ['examples_str', 'input', 'output_format_str', 'input_label', 'task_desc_str']
data: None, requires_opt: True
Registered parameter examples_str with value Parameter: None
INFO:core.prompt_builder:Prompt has variables: ['input', 'description', 'label', 'output']
module: Prompt(
  template: You are a classifier. Given a Question, you need to classify it into one of the following classes:
  Format: class_index. class_name, class_description
  {% for class in classes %}
  {{loop.index-1}}. {{class.label}}, {{class.desc}}
  {% endfor %}
  , preset_prompt_kwargs: {'classes': [{'label': 'ABBR', 'desc': 'Abbreviation'}, {'label': 'ENTY', 'desc': 'Entity'}, {'label': 'DESC', 'desc': 'Description and abstract concept'}, {'label': 'HUM', 'desc': 'Human being'}, {'label': 'LOC', 'desc': 'Location'}, {'label': 'NUM', 'desc': 'Numeric value'}]}, prompt_variables: ['classes']
)    
module: Generator(
  model_kwargs={'model': 'llama3-8b-8192', 'temperature': 0.0, 'top_p': 1, 'frequency_penalty': 0, 'presence_penalty': 0, 'n': 1}, model_type=ModelType.LLM
  (model_client): GroqAPIClient()
  (system_prompt): Prompt(
    template: {# task desc #}
    {% if task_desc_str %}
    {{task_desc_str}}
    {% endif %}
    {%if output_format_str %}
    <OUTPUT_FORMAT>
    {{output_format_str}}
    </OUTPUT_FORMAT>
    {% endif %}
    {# example #}
    {% if examples_str %}
    <EXAMPLES>
    {#{% for example in examples_str %}#}
    {{examples_str}}
    {#{% endfor %}#}
    </EXAMPLES>
    {% endif %}
    {{input_label}}: {{input}}
    Your output:
    , preset_prompt_kwargs: {'task_desc_str': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n', 'output_format_str': 'Your output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n', 'input_label': 'Question'}, prompt_variables: ['examples_str', 'input', 'output_format_str', 'input_label', 'task_desc_str']
  )
  (output_processors): Sequential(
    (0): YAMLOutputParser(
      data_class_for_yaml=<class 'use_cases.classification.prompt.OutputFormat'>
      (yaml_output_format_prompt): Prompt(
        template: Your output should be formatted as a standard YAML instance with the following schema:
        ```
        {{schema}}
        ```
        {% if example %}
        Here is an example:
        ```
        {{example}}
        ```
        {% endif %}
        
        -Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
        -Follow the YAML formatting conventions with an indent of 2 spaces. 
        -Quote the string values properly.
        , prompt_variables: ['schema', 'example']
      )
      (output_processors): YAMLParser()
    )
    (1): <lambda>Component()
  )
)    
module: GroqAPIClient()    
module: Prompt(
  template: {# task desc #}
  {% if task_desc_str %}
  {{task_desc_str}}
  {% endif %}
  {%if output_format_str %}
  <OUTPUT_FORMAT>
  {{output_format_str}}
  </OUTPUT_FORMAT>
  {% endif %}
  {# example #}
  {% if examples_str %}
  <EXAMPLES>
  {#{% for example in examples_str %}#}
  {{examples_str}}
  {#{% endfor %}#}
  </EXAMPLES>
  {% endif %}
  {{input_label}}: {{input}}
  Your output:
  , preset_prompt_kwargs: {'task_desc_str': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n', 'output_format_str': 'Your output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n', 'input_label': 'Question'}, prompt_variables: ['examples_str', 'input', 'output_format_str', 'input_label', 'task_desc_str']
)    
module: Sequential(
  (0): YAMLOutputParser(
    data_class_for_yaml=<class 'use_cases.classification.prompt.OutputFormat'>
    (yaml_output_format_prompt): Prompt(
      template: Your output should be formatted as a standard YAML instance with the following schema:
      ```
      {{schema}}
      ```
      {% if example %}
      Here is an example:
      ```
      {{example}}
      ```
      {% endif %}
      
      -Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
      -Follow the YAML formatting conventions with an indent of 2 spaces. 
      -Quote the string values properly.
      , prompt_variables: ['schema', 'example']
    )
    (output_processors): YAMLParser()
  )
  (1): <lambda>Component()
)    
module: YAMLOutputParser(
  data_class_for_yaml=<class 'use_cases.classification.prompt.OutputFormat'>
  (yaml_output_format_prompt): Prompt(
    template: Your output should be formatted as a standard YAML instance with the following schema:
    ```
    {{schema}}
    ```
    {% if example %}
    Here is an example:
    ```
    {{example}}
    ```
    {% endif %}
    
    -Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
    -Follow the YAML formatting conventions with an indent of 2 spaces. 
    -Quote the string values properly.
    , prompt_variables: ['schema', 'example']
  )
  (output_processors): YAMLParser()
)    
module: Prompt(
  template: Your output should be formatted as a standard YAML instance with the following schema:
  ```
  {{schema}}
  ```
  {% if example %}
  Here is an example:
  ```
  {{example}}
  ```
  {% endif %}
  
  -Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
  -Follow the YAML formatting conventions with an indent of 2 spaces. 
  -Quote the string values properly.
  , prompt_variables: ['schema', 'example']
)    
module: YAMLParser()    
module: <lambda>Component()    
params: {'generator.examples_str': Parameter: None}
few_shot_optimizer: <optimizer.optimizer.BootstrapFewShot object at 0x14a3fa790>
few_shot_state_dict: None
step: 0
train_batch: {'text': ["What President once told Gene Autry : `` Please give my regards to your wife Dale '' ?", 'How many children under 18 are victims of some sort of Physical Abuse each year ?', 'What city was President William McKinley shot in ?', 'What color are tennis balls ?', 'What does G.M.T. stand for ?', 'What will happen when sodium is put in water ?', 'What relative of Leo Tolstoy translated War and Peace eight times ?', 'What does Las Vegas mean ?', 'What meter was invented by C.C. Magee in 1935 ?', 'How many times larger than life size is the Statue of Liberty ?'], 'coarse_label': tensor([3, 5, 4, 1, 0, 2, 3, 2, 1, 5]), 'fine_label': tensor([29, 38, 32,  4,  1, 25, 29, 24, 13, 38])}
task_input: What President once told Gene Autry : `` Please give my regards to your wife Dale '' ?, corse_label: 3
types: <class 'str'>, <class 'torch.Tensor'>
prompt_kwargs: {'input': "What President once told Gene Autry : `` Please give my regards to your wife Dale '' ?", 'examples_str': 'Question: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is DTMF ?
class_name: Abbreviation 
class_index: 0
--------

Question: What foods contain vitamin B12 ?
class_name: Entity 
class_index: 1
--------

Question: How do you address a Chinese person ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What famous British actor lost his voice after an operation in 1966 ?
class_name: Human being 
class_index: 3
--------

Question: Where are diamonds mined ?
class_name: Location 
class_index: 4
--------

Question: How many teats does a female goat sport ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What President once told Gene Autry : `` Please give my regards to your wife Dale '' ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What President once told Gene Autry : `` Please give my regards to your wife Dale '' ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.connection:connect_tcp.started host='api.groq.com' port=443 local_address=None timeout=5.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x14cd54890>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x14cff9130> server_hostname='api.groq.com' timeout=5.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x14cef8650>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 04:12:44 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14284'), (b'x-ratelimit-remaining-tokens', b'29995'), (b'x-ratelimit-reset-requests', b'11m31.580999999s'), (b'x-ratelimit-reset-tokens', b'10ms'), (b'x-request-id', b'req_01hyypd1xxey2rqasynqb89t3y'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=xT07ClTVn47OvHvbBrPKdu4qr0S_V_mELZ7GeqXs2gY-1716869564-1.0.1.1-nuAvf5GY8ayscIXULSHGjhPUgfhVriBKYAs05QiaYCeQa5HpmPbOVF8F2ejWHhK_7Ilvj4kcFXmi0h6hrZIy2w; path=/; expires=Tue, 28-May-24 04:42:44 GMT; domain=.groq.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab68791c947ae8-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is about a specific historical event or quote, and the answer is a person, so it's likely to be a human being.
class_name: "HUM"
class_index: 3
```
task_input: How many children under 18 are victims of some sort of Physical Abuse each year ?, corse_label: 5
types: <class 'str'>, <class 'torch.Tensor'>
prompt_kwargs: {'input': 'How many children under 18 are victims of some sort of Physical Abuse each year ?', 'examples_str': 'Question: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is DTMF ?
class_name: Abbreviation 
class_index: 0
--------

Question: What foods contain vitamin B12 ?
class_name: Entity 
class_index: 1
--------

Question: How do you address a Chinese person ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What famous British actor lost his voice after an operation in 1966 ?
class_name: Human being 
class_index: 3
--------

Question: Where are diamonds mined ?
class_name: Location 
class_index: 4
--------

Question: How many teats does a female goat sport ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: How many children under 18 are victims of some sort of Physical Abuse each year ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: How many children under 18 are victims of some sort of Physical Abuse each year ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 04:12:44 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14283'), (b'x-ratelimit-remaining-tokens', b'29607'), (b'x-ratelimit-reset-requests', b'11m41.676999999s'), (b'x-ratelimit-reset-tokens', b'786ms'), (b'x-request-id', b'req_01hyypd281ey3bjfpfwxjqhayh'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab687b1e667ae8-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is asking about a statistical fact, which is a numeric value.
class_name: NUM
class_index: 5
task_input: What city was President William McKinley shot in ?, corse_label: 4
types: <class 'str'>, <class 'torch.Tensor'>
prompt_kwargs: {'input': 'What city was President William McKinley shot in ?', 'examples_str': 'Question: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is DTMF ?
class_name: Abbreviation 
class_index: 0
--------

Question: What foods contain vitamin B12 ?
class_name: Entity 
class_index: 1
--------

Question: How do you address a Chinese person ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What famous British actor lost his voice after an operation in 1966 ?
class_name: Human being 
class_index: 3
--------

Question: Where are diamonds mined ?
class_name: Location 
class_index: 4
--------

Question: How many teats does a female goat sport ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What city was President William McKinley shot in ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What city was President William McKinley shot in ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 04:12:45 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14282'), (b'x-ratelimit-remaining-tokens', b'29335'), (b'x-ratelimit-reset-requests', b'11m47.705s'), (b'x-ratelimit-reset-tokens', b'1.33s'), (b'x-request-id', b'req_01hyypd2h9e08teenwsvn19r2e'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab687ce82a7ae8-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about a specific event in history, and the answer is a city, which is a location.
class_name: "LOC"
class_index: 4
task_input: What color are tennis balls ?, corse_label: 1
types: <class 'str'>, <class 'torch.Tensor'>
prompt_kwargs: {'input': 'What color are tennis balls ?', 'examples_str': 'Question: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is DTMF ?
class_name: Abbreviation 
class_index: 0
--------

Question: What foods contain vitamin B12 ?
class_name: Entity 
class_index: 1
--------

Question: How do you address a Chinese person ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What famous British actor lost his voice after an operation in 1966 ?
class_name: Human being 
class_index: 3
--------

Question: Where are diamonds mined ?
class_name: Location 
class_index: 4
--------

Question: How many teats does a female goat sport ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What color are tennis balls ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What color are tennis balls ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 04:12:45 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14281'), (b'x-ratelimit-remaining-tokens', b'29066'), (b'x-ratelimit-reset-requests', b'11m53.694s'), (b'x-ratelimit-reset-tokens', b'1.868s'), (b'x-request-id', b'req_01hyypd2twexpvpp4wmy8ky97s'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab687ed9e37ae8-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the color of tennis balls, which is a descriptive property.
class_name: DESC
class_index: 2
```
task_input: What does G.M.T. stand for ?, corse_label: 0
types: <class 'str'>, <class 'torch.Tensor'>
prompt_kwargs: {'input': 'What does G.M.T. stand for ?', 'examples_str': 'Question: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is DTMF ?
class_name: Abbreviation 
class_index: 0
--------

Question: What foods contain vitamin B12 ?
class_name: Entity 
class_index: 1
--------

Question: How do you address a Chinese person ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What famous British actor lost his voice after an operation in 1966 ?
class_name: Human being 
class_index: 3
--------

Question: Where are diamonds mined ?
class_name: Location 
class_index: 4
--------

Question: How many teats does a female goat sport ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What does G.M.T. stand for ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does G.M.T. stand for ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 04:12:45 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14280'), (b'x-ratelimit-remaining-tokens', b'28774'), (b'x-ratelimit-reset-requests', b'11m59.756s'), (b'x-ratelimit-reset-tokens', b'2.451s'), (b'x-request-id', b'req_01hyypd32hft3aw7ape4wt9m12'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab68806b797ae8-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the meaning of G.M.T., which is likely an abbreviation.
class_name: ABBR
class_index: 0
task_input: What will happen when sodium is put in water ?, corse_label: 2
types: <class 'str'>, <class 'torch.Tensor'>
prompt_kwargs: {'input': 'What will happen when sodium is put in water ?', 'examples_str': 'Question: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is DTMF ?
class_name: Abbreviation 
class_index: 0
--------

Question: What foods contain vitamin B12 ?
class_name: Entity 
class_index: 1
--------

Question: How do you address a Chinese person ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What famous British actor lost his voice after an operation in 1966 ?
class_name: Human being 
class_index: 3
--------

Question: Where are diamonds mined ?
class_name: Location 
class_index: 4
--------

Question: How many teats does a female goat sport ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What will happen when sodium is put in water ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What will happen when sodium is put in water ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 04:12:46 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14279'), (b'x-ratelimit-remaining-tokens', b'28488'), (b'x-ratelimit-reset-requests', b'12m5.739s'), (b'x-ratelimit-reset-tokens', b'3.023s'), (b'x-request-id', b'req_01hyypd3apf90t4kaw7sja55c8'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab68820d127ae8-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the reaction of sodium in water, which is a chemical reaction, and the expected outcome is a description of the reaction.
class_name: Description and abstract concept
class_index: 2
task_input: What relative of Leo Tolstoy translated War and Peace eight times ?, corse_label: 3
types: <class 'str'>, <class 'torch.Tensor'>
prompt_kwargs: {'input': 'What relative of Leo Tolstoy translated War and Peace eight times ?', 'examples_str': 'Question: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is DTMF ?
class_name: Abbreviation 
class_index: 0
--------

Question: What foods contain vitamin B12 ?
class_name: Entity 
class_index: 1
--------

Question: How do you address a Chinese person ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What famous British actor lost his voice after an operation in 1966 ?
class_name: Human being 
class_index: 3
--------

Question: Where are diamonds mined ?
class_name: Location 
class_index: 4
--------

Question: How many teats does a female goat sport ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What relative of Leo Tolstoy translated War and Peace eight times ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What relative of Leo Tolstoy translated War and Peace eight times ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 04:12:46 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14278'), (b'x-ratelimit-remaining-tokens', b'28213'), (b'x-ratelimit-reset-requests', b'12m11.693s'), (b'x-ratelimit-reset-tokens', b'3.574s'), (b'x-request-id', b'req_01hyypd3mbfzprbvqd8xhnfekn'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab6883fedb7ae8-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is about a specific person who translated a famous book, which is a human-related activity.
class_name: Human being
class_index: 3
task_input: What does Las Vegas mean ?, corse_label: 2
types: <class 'str'>, <class 'torch.Tensor'>
prompt_kwargs: {'input': 'What does Las Vegas mean ?', 'examples_str': 'Question: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is DTMF ?
class_name: Abbreviation 
class_index: 0
--------

Question: What foods contain vitamin B12 ?
class_name: Entity 
class_index: 1
--------

Question: How do you address a Chinese person ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What famous British actor lost his voice after an operation in 1966 ?
class_name: Human being 
class_index: 3
--------

Question: Where are diamonds mined ?
class_name: Location 
class_index: 4
--------

Question: How many teats does a female goat sport ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What does Las Vegas mean ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does Las Vegas mean ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 04:12:46 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14277'), (b'x-ratelimit-remaining-tokens', b'27909'), (b'x-ratelimit-reset-requests', b'12m17.760999999s'), (b'x-ratelimit-reset-tokens', b'4.182s'), (b'x-request-id', b'req_01hyypd3vvecsrbajejwjghe34'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab688578597ae8-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the meaning of a phrase, which is likely an abbreviation.
class_name: ABBR
class_index: 0
```
task_input: What meter was invented by C.C. Magee in 1935 ?, corse_label: 1
types: <class 'str'>, <class 'torch.Tensor'>
prompt_kwargs: {'input': 'What meter was invented by C.C. Magee in 1935 ?', 'examples_str': 'Question: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is DTMF ?
class_name: Abbreviation 
class_index: 0
--------

Question: What foods contain vitamin B12 ?
class_name: Entity 
class_index: 1
--------

Question: How do you address a Chinese person ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What famous British actor lost his voice after an operation in 1966 ?
class_name: Human being 
class_index: 3
--------

Question: Where are diamonds mined ?
class_name: Location 
class_index: 4
--------

Question: How many teats does a female goat sport ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What meter was invented by C.C. Magee in 1935 ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What meter was invented by C.C. Magee in 1935 ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 04:12:46 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14276'), (b'x-ratelimit-remaining-tokens', b'27680'), (b'x-ratelimit-reset-requests', b'12m23.628s'), (b'x-ratelimit-reset-tokens', b'4.64s'), (b'x-request-id', b'req_01hyypd47gfzpvftk5xfnbbkwd'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab6887ca817ae8-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is about the invention of a meter by C.C. Magee, which suggests it is about a specific person and their achievement.
class_name: Human being
class_index: 3
task_input: How many times larger than life size is the Statue of Liberty ?, corse_label: 5
types: <class 'str'>, <class 'torch.Tensor'>
prompt_kwargs: {'input': 'How many times larger than life size is the Statue of Liberty ?', 'examples_str': 'Question: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is DTMF ?
class_name: Abbreviation 
class_index: 0
--------

Question: What foods contain vitamin B12 ?
class_name: Entity 
class_index: 1
--------

Question: How do you address a Chinese person ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What famous British actor lost his voice after an operation in 1966 ?
class_name: Human being 
class_index: 3
--------

Question: Where are diamonds mined ?
class_name: Location 
class_index: 4
--------

Question: How many teats does a female goat sport ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: How many times larger than life size is the Statue of Liberty ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: How many times larger than life size is the Statue of Liberty ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 04:12:47 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14275'), (b'x-ratelimit-remaining-tokens', b'27401'), (b'x-ratelimit-reset-requests', b'12m29.694s'), (b'x-ratelimit-reset-tokens', b'5.198s'), (b'x-request-id', b'req_01hyypd4h3fs3s9b1d9c2anr43'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab6889bc577ae8-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the size of the Statue of Liberty, which is a specific measurement, making it a numeric value.
class_name: NUM
class_index: 5
responses: [3, 5, 4, 2, 0, 2, 3, 0, 3, 5], targets: [3, 5, 4, 1, 0, 2, 3, 2, 1, 5]
num_invalid: 0
Preds tensor: tensor([[0., 0., 0., 1., 0., 0.],
        [0., 0., 0., 0., 0., 1.],
        [0., 0., 0., 0., 1., 0.],
        [0., 0., 1., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0.],
        [0., 0., 1., 0., 0., 0.],
        [0., 0., 0., 1., 0., 0.],
        [1., 0., 0., 0., 0., 0.],
        [0., 0., 0., 1., 0., 0.],
        [0., 0., 0., 0., 0., 1.]])
Targets tensor: tensor([3, 5, 4, 1, 0, 2, 3, 2, 1, 5])
Eval Accuracy 0 0: 0.7, F1: 0.661, score: 1.361
before random_replace: [{'text': 'What is DTMF ?', 'coarse_label': 0, 'fine_label': 1}, {'text': 'What foods contain vitamin B12 ?', 'coarse_label': 1, 'fine_label': 9}, {'text': 'How do you address a Chinese person ?', 'coarse_label': 2, 'fine_label': 26}, {'text': 'What famous British actor lost his voice after an operation in 1966 ?', 'coarse_label': 3, 'fine_label': 29}, {'text': 'Where are diamonds mined ?', 'coarse_label': 4, 'fine_label': 35}, {'text': 'How many teats does a female goat sport ?', 'coarse_label': 5, 'fine_label': 38}]
after random_replace: [{'text': 'What is DTMF ?', 'coarse_label': 0, 'fine_label': 1}, {'text': 'What foods contain vitamin B12 ?', 'coarse_label': 1, 'fine_label': 9}, {'text': 'How does rabies spread ?', 'coarse_label': 2, 'fine_label': 26}, {'text': 'What famous British actor lost his voice after an operation in 1966 ?', 'coarse_label': 3, 'fine_label': 29}, {'text': "What city boasts Penn 's Landing , on the banks of the Delaware river ?", 'coarse_label': 4, 'fine_label': 32}, {'text': 'How many teats does a female goat sport ?', 'coarse_label': 5, 'fine_label': 38}]
task_input: What President once told Gene Autry : `` Please give my regards to your wife Dale '' ?, corse_label: 3
types: <class 'str'>, <class 'torch.Tensor'>
prompt_kwargs: {'input': "What President once told Gene Autry : `` Please give my regards to your wife Dale '' ?", 'examples_str': "Question: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How does rabies spread ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city boasts Penn 's Landing , on the banks of the Delaware river ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is DTMF ?
class_name: Abbreviation 
class_index: 0
--------

Question: What foods contain vitamin B12 ?
class_name: Entity 
class_index: 1
--------

Question: How does rabies spread ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What famous British actor lost his voice after an operation in 1966 ?
class_name: Human being 
class_index: 3
--------

Question: What city boasts Penn 's Landing , on the banks of the Delaware river ?
class_name: Location 
class_index: 4
--------

Question: How many teats does a female goat sport ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What President once told Gene Autry : `` Please give my regards to your wife Dale '' ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How does rabies spread ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city boasts Penn 's Landing , on the banks of the Delaware river ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What President once told Gene Autry : `` Please give my regards to your wife Dale '' ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 04:12:47 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14274'), (b'x-ratelimit-remaining-tokens', b'27195'), (b'x-ratelimit-reset-requests', b'12m35.560999999s'), (b'x-ratelimit-reset-tokens', b'5.61s'), (b'x-request-id', b'req_01hyypd4yveka86nmwz2xgnpj3'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab688c7eff7ae8-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is about a specific historical event or quote, which is likely to be attributed to a human being.
class_name: Human being
class_index: 3
task_input: How many children under 18 are victims of some sort of Physical Abuse each year ?, corse_label: 5
types: <class 'str'>, <class 'torch.Tensor'>
prompt_kwargs: {'input': 'How many children under 18 are victims of some sort of Physical Abuse each year ?', 'examples_str': "Question: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How does rabies spread ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city boasts Penn 's Landing , on the banks of the Delaware river ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is DTMF ?
class_name: Abbreviation 
class_index: 0
--------

Question: What foods contain vitamin B12 ?
class_name: Entity 
class_index: 1
--------

Question: How does rabies spread ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What famous British actor lost his voice after an operation in 1966 ?
class_name: Human being 
class_index: 3
--------

Question: What city boasts Penn 's Landing , on the banks of the Delaware river ?
class_name: Location 
class_index: 4
--------

Question: How many teats does a female goat sport ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: How many children under 18 are victims of some sort of Physical Abuse each year ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How does rabies spread ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city boasts Penn 's Landing , on the banks of the Delaware river ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: How many children under 18 are victims of some sort of Physical Abuse each year ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 04:12:47 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14273'), (b'x-ratelimit-remaining-tokens', b'26893'), (b'x-ratelimit-reset-requests', b'12m41.724999999s'), (b'x-ratelimit-reset-tokens', b'6.213s'), (b'x-request-id', b'req_01hyypd57efv4bexwdcj43cpqw'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab688e28747ae8-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is asking about a statistical fact, which is a numeric value.
class_name: NUM
class_index: 5
task_input: What city was President William McKinley shot in ?, corse_label: 4
types: <class 'str'>, <class 'torch.Tensor'>
prompt_kwargs: {'input': 'What city was President William McKinley shot in ?', 'examples_str': "Question: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How does rabies spread ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city boasts Penn 's Landing , on the banks of the Delaware river ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is DTMF ?
class_name: Abbreviation 
class_index: 0
--------

Question: What foods contain vitamin B12 ?
class_name: Entity 
class_index: 1
--------

Question: How does rabies spread ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What famous British actor lost his voice after an operation in 1966 ?
class_name: Human being 
class_index: 3
--------

Question: What city boasts Penn 's Landing , on the banks of the Delaware river ?
class_name: Location 
class_index: 4
--------

Question: How many teats does a female goat sport ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What city was President William McKinley shot in ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How does rabies spread ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city boasts Penn 's Landing , on the banks of the Delaware river ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What city was President William McKinley shot in ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 04:12:48 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14272'), (b'x-ratelimit-remaining-tokens', b'26583'), (b'x-ratelimit-reset-requests', b'12m47.761999999s'), (b'x-ratelimit-reset-tokens', b'6.833s'), (b'x-request-id', b'req_01hyypd5eyfmpbwr8r3pcht1xp'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab688faa067ae8-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about a specific location where a historical event occurred.
class_name: Location
class_index: 4
task_input: What color are tennis balls ?, corse_label: 1
types: <class 'str'>, <class 'torch.Tensor'>
prompt_kwargs: {'input': 'What color are tennis balls ?', 'examples_str': "Question: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How does rabies spread ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city boasts Penn 's Landing , on the banks of the Delaware river ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is DTMF ?
class_name: Abbreviation 
class_index: 0
--------

Question: What foods contain vitamin B12 ?
class_name: Entity 
class_index: 1
--------

Question: How does rabies spread ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What famous British actor lost his voice after an operation in 1966 ?
class_name: Human being 
class_index: 3
--------

Question: What city boasts Penn 's Landing , on the banks of the Delaware river ?
class_name: Location 
class_index: 4
--------

Question: How many teats does a female goat sport ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What color are tennis balls ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How does rabies spread ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city boasts Penn 's Landing , on the banks of the Delaware river ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What color are tennis balls ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 04:12:48 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14271'), (b'x-ratelimit-remaining-tokens', b'26283'), (b'x-ratelimit-reset-requests', b'12m53.759999999s'), (b'x-ratelimit-reset-tokens', b'7.434s'), (b'x-request-id', b'req_01hyypd5pffzpvetztf6nmbhap'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab68912b7c7ae8-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the color of tennis balls, which is a descriptive property.
class_name: Description and abstract concept
class_index: 2
```
task_input: What does G.M.T. stand for ?, corse_label: 0
types: <class 'str'>, <class 'torch.Tensor'>
prompt_kwargs: {'input': 'What does G.M.T. stand for ?', 'examples_str': "Question: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How does rabies spread ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city boasts Penn 's Landing , on the banks of the Delaware river ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is DTMF ?
class_name: Abbreviation 
class_index: 0
--------

Question: What foods contain vitamin B12 ?
class_name: Entity 
class_index: 1
--------

Question: How does rabies spread ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What famous British actor lost his voice after an operation in 1966 ?
class_name: Human being 
class_index: 3
--------

Question: What city boasts Penn 's Landing , on the banks of the Delaware river ?
class_name: Location 
class_index: 4
--------

Question: How many teats does a female goat sport ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What does G.M.T. stand for ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How does rabies spread ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city boasts Penn 's Landing , on the banks of the Delaware river ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does G.M.T. stand for ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 04:12:48 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14270'), (b'x-ratelimit-remaining-tokens', b'26029'), (b'x-ratelimit-reset-requests', b'12m59.658999999s'), (b'x-ratelimit-reset-tokens', b'7.942s'), (b'x-request-id', b'req_01hyypd616ectb4n3a0znamjzp'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab68935da67ae8-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the meaning of G.M.T., which is likely an abbreviation.
class_name: ABBR
class_index: 0
task_input: What will happen when sodium is put in water ?, corse_label: 2
types: <class 'str'>, <class 'torch.Tensor'>
prompt_kwargs: {'input': 'What will happen when sodium is put in water ?', 'examples_str': "Question: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How does rabies spread ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city boasts Penn 's Landing , on the banks of the Delaware river ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is DTMF ?
class_name: Abbreviation 
class_index: 0
--------

Question: What foods contain vitamin B12 ?
class_name: Entity 
class_index: 1
--------

Question: How does rabies spread ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What famous British actor lost his voice after an operation in 1966 ?
class_name: Human being 
class_index: 3
--------

Question: What city boasts Penn 's Landing , on the banks of the Delaware river ?
class_name: Location 
class_index: 4
--------

Question: How many teats does a female goat sport ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What will happen when sodium is put in water ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How does rabies spread ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city boasts Penn 's Landing , on the banks of the Delaware river ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What will happen when sodium is put in water ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 04:12:49 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14269'), (b'x-ratelimit-remaining-tokens', b'25755'), (b'x-ratelimit-reset-requests', b'13m5.695s'), (b'x-ratelimit-reset-tokens', b'8.49s'), (b'x-request-id', b'req_01hyypd6aqf6wsqcq6sjrkdr5v'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab68953f717ae8-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about a chemical reaction between sodium and water, which is a description of an abstract concept.
class_name: DESC
class_index: 2
task_input: What relative of Leo Tolstoy translated War and Peace eight times ?, corse_label: 3
types: <class 'str'>, <class 'torch.Tensor'>
prompt_kwargs: {'input': 'What relative of Leo Tolstoy translated War and Peace eight times ?', 'examples_str': "Question: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How does rabies spread ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city boasts Penn 's Landing , on the banks of the Delaware river ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is DTMF ?
class_name: Abbreviation 
class_index: 0
--------

Question: What foods contain vitamin B12 ?
class_name: Entity 
class_index: 1
--------

Question: How does rabies spread ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What famous British actor lost his voice after an operation in 1966 ?
class_name: Human being 
class_index: 3
--------

Question: What city boasts Penn 's Landing , on the banks of the Delaware river ?
class_name: Location 
class_index: 4
--------

Question: How many teats does a female goat sport ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What relative of Leo Tolstoy translated War and Peace eight times ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How does rabies spread ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city boasts Penn 's Landing , on the banks of the Delaware river ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What relative of Leo Tolstoy translated War and Peace eight times ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 04:12:50 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14268'), (b'x-ratelimit-remaining-tokens', b'25889'), (b'x-ratelimit-reset-requests', b'13m10.872999999s'), (b'x-ratelimit-reset-tokens', b'8.221s'), (b'x-request-id', b'req_01hyypd7dzft382zwn32xdt4cj'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab689c4e347ae8-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is about a person who translated a famous book, which is a human-related activity.
class_name: HUM
class_index: 3
task_input: What does Las Vegas mean ?, corse_label: 2
types: <class 'str'>, <class 'torch.Tensor'>
prompt_kwargs: {'input': 'What does Las Vegas mean ?', 'examples_str': "Question: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How does rabies spread ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city boasts Penn 's Landing , on the banks of the Delaware river ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is DTMF ?
class_name: Abbreviation 
class_index: 0
--------

Question: What foods contain vitamin B12 ?
class_name: Entity 
class_index: 1
--------

Question: How does rabies spread ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What famous British actor lost his voice after an operation in 1966 ?
class_name: Human being 
class_index: 3
--------

Question: What city boasts Penn 's Landing , on the banks of the Delaware river ?
class_name: Location 
class_index: 4
--------

Question: How many teats does a female goat sport ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What does Las Vegas mean ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How does rabies spread ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city boasts Penn 's Landing , on the banks of the Delaware river ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does Las Vegas mean ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 04:12:50 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14267'), (b'x-ratelimit-remaining-tokens', b'25594'), (b'x-ratelimit-reset-requests', b'13m17.729999999s'), (b'x-ratelimit-reset-tokens', b'8.812s'), (b'x-request-id', b'req_01hyypd7peect8sz1aqqwngqsq'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab689dffc47ae8-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the meaning of a phrase, which is likely an abbreviation.
class_name: ABBR
class_index: 0
```
task_input: What meter was invented by C.C. Magee in 1935 ?, corse_label: 1
types: <class 'str'>, <class 'torch.Tensor'>
prompt_kwargs: {'input': 'What meter was invented by C.C. Magee in 1935 ?', 'examples_str': "Question: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How does rabies spread ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city boasts Penn 's Landing , on the banks of the Delaware river ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is DTMF ?
class_name: Abbreviation 
class_index: 0
--------

Question: What foods contain vitamin B12 ?
class_name: Entity 
class_index: 1
--------

Question: How does rabies spread ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What famous British actor lost his voice after an operation in 1966 ?
class_name: Human being 
class_index: 3
--------

Question: What city boasts Penn 's Landing , on the banks of the Delaware river ?
class_name: Location 
class_index: 4
--------

Question: How many teats does a female goat sport ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What meter was invented by C.C. Magee in 1935 ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How does rabies spread ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city boasts Penn 's Landing , on the banks of the Delaware river ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What meter was invented by C.C. Magee in 1935 ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 04:12:50 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14266'), (b'x-ratelimit-remaining-tokens', b'25338'), (b'x-ratelimit-reset-requests', b'13m23.664999999s'), (b'x-ratelimit-reset-tokens', b'9.324s'), (b'x-request-id', b'req_01hyypd80zfq19p6wcmnrpx85t'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab68a019ca7ae8-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the invention of a meter, which is a physical device, and the inventor is a specific person, so it's likely an entity.
class_name: Entity
class_index: 1
task_input: How many times larger than life size is the Statue of Liberty ?, corse_label: 5
types: <class 'str'>, <class 'torch.Tensor'>
prompt_kwargs: {'input': 'How many times larger than life size is the Statue of Liberty ?', 'examples_str': "Question: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How does rabies spread ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city boasts Penn 's Landing , on the banks of the Delaware river ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is DTMF ?
class_name: Abbreviation 
class_index: 0
--------

Question: What foods contain vitamin B12 ?
class_name: Entity 
class_index: 1
--------

Question: How does rabies spread ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What famous British actor lost his voice after an operation in 1966 ?
class_name: Human being 
class_index: 3
--------

Question: What city boasts Penn 's Landing , on the banks of the Delaware river ?
class_name: Location 
class_index: 4
--------

Question: How many teats does a female goat sport ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: How many times larger than life size is the Statue of Liberty ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How does rabies spread ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city boasts Penn 's Landing , on the banks of the Delaware river ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: How many times larger than life size is the Statue of Liberty ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 04:12:51 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14265'), (b'x-ratelimit-remaining-tokens', b'25052'), (b'x-ratelimit-reset-requests', b'13m29.685s'), (b'x-ratelimit-reset-tokens', b'9.895s'), (b'x-request-id', b'req_01hyypd8avey4swfda33ggzhpd'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab68a20b6e7ae8-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the size of the Statue of Liberty, which is a specific numeric value.
class_name: NUM
class_index: 5
responses: [3, 5, 4, 2, 0, 2, 3, 0, 1, 5], targets: [3, 5, 4, 1, 0, 2, 3, 2, 1, 5]
num_invalid: 0
Preds tensor: tensor([[0., 0., 0., 1., 0., 0.],
        [0., 0., 0., 0., 0., 1.],
        [0., 0., 0., 0., 1., 0.],
        [0., 0., 1., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0.],
        [0., 0., 1., 0., 0., 0.],
        [0., 0., 0., 1., 0., 0.],
        [1., 0., 0., 0., 0., 0.],
        [0., 1., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 1.]])
Targets tensor: tensor([3, 5, 4, 1, 0, 2, 3, 2, 1, 5])
Eval Accuracy 0 1: 0.8, F1: 0.806, score: 1.606
best_score: 1.606
best_parameters: OrderedDict([('generator.examples_str', Parameter: Question: What is DTMF ?
class_name: Abbreviation 
class_index: 0
--------

Question: What foods contain vitamin B12 ?
class_name: Entity 
class_index: 1
--------

Question: How does rabies spread ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What famous British actor lost his voice after an operation in 1966 ?
class_name: Human being 
class_index: 3
--------

Question: What city boasts Penn 's Landing , on the banks of the Delaware river ?
class_name: Location 
class_index: 4
--------

Question: How many teats does a female goat sport ?
class_name: Numeric value 
class_index: 5
--------
)])
step: 1
train_batch: {'text': ['Name the organization that is presided by a Security Council .', 'Why is Jane Goodall famous ?', 'Where is it planned to berth the merchant ship , Lane Victory , which Merchant Marine veterans are converting into a floating museum ?', "What President was meant for , but never placed in , the empty crypt beneath the capital 's rotunda ?", 'How did P.T. Barnum bill the diminutive Charles S. Stratton ?', 'What is white chocolate ?', 'What kind of fish is a coney ?', "What season is the setting for Shakespeare 's Midsummer Night 's Dream ?", 'What sprawling U.S. state boasts the most airports ?', 'What animals can live the longest without food ?'], 'coarse_label': tensor([3, 2, 4, 3, 2, 2, 1, 5, 4, 1]), 'fine_label': tensor([28, 27, 35, 29, 26, 24,  2, 39, 36,  2])}
task_input: Name the organization that is presided by a Security Council ., corse_label: 3
types: <class 'str'>, <class 'torch.Tensor'>
prompt_kwargs: {'input': 'Name the organization that is presided by a Security Council .', 'examples_str': "Question: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How does rabies spread ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city boasts Penn 's Landing , on the banks of the Delaware river ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is DTMF ?
class_name: Abbreviation 
class_index: 0
--------

Question: What foods contain vitamin B12 ?
class_name: Entity 
class_index: 1
--------

Question: How does rabies spread ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What famous British actor lost his voice after an operation in 1966 ?
class_name: Human being 
class_index: 3
--------

Question: What city boasts Penn 's Landing , on the banks of the Delaware river ?
class_name: Location 
class_index: 4
--------

Question: How many teats does a female goat sport ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Name the organization that is presided by a Security Council .
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How does rabies spread ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city boasts Penn 's Landing , on the banks of the Delaware river ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Name the organization that is presided by a Security Council .\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 04:12:51 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14264'), (b'x-ratelimit-remaining-tokens', b'24793'), (b'x-ratelimit-reset-requests', b'13m35.658999999s'), (b'x-ratelimit-reset-tokens', b'10.414s'), (b'x-request-id', b'req_01hyypd8nhemhace203syrrvw3'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab68a43e207ae8-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking for the name of an organization, which is a specific entity.
class_name: Entity
class_index: 1
task_input: Why is Jane Goodall famous ?, corse_label: 2
types: <class 'str'>, <class 'torch.Tensor'>
prompt_kwargs: {'input': 'Why is Jane Goodall famous ?', 'examples_str': "Question: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How does rabies spread ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city boasts Penn 's Landing , on the banks of the Delaware river ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is DTMF ?
class_name: Abbreviation 
class_index: 0
--------

Question: What foods contain vitamin B12 ?
class_name: Entity 
class_index: 1
--------

Question: How does rabies spread ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What famous British actor lost his voice after an operation in 1966 ?
class_name: Human being 
class_index: 3
--------

Question: What city boasts Penn 's Landing , on the banks of the Delaware river ?
class_name: Location 
class_index: 4
--------

Question: How many teats does a female goat sport ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Why is Jane Goodall famous ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How does rabies spread ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city boasts Penn 's Landing , on the banks of the Delaware river ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Why is Jane Goodall famous ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 04:12:51 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14263'), (b'x-ratelimit-remaining-tokens', b'24504'), (b'x-ratelimit-reset-requests', b'13m41.724999999s'), (b'x-ratelimit-reset-tokens', b'10.992s'), (b'x-request-id', b'req_01hyypd8y4empa3r6t05s6xeft'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab68a5ef987ae8-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: Jane Goodall is a renowned primatologist and conservationist, making her a famous human being.
class_name: Human being
class_index: 3
task_input: Where is it planned to berth the merchant ship , Lane Victory , which Merchant Marine veterans are converting into a floating museum ?, corse_label: 4
types: <class 'str'>, <class 'torch.Tensor'>
prompt_kwargs: {'input': 'Where is it planned to berth the merchant ship , Lane Victory , which Merchant Marine veterans are converting into a floating museum ?', 'examples_str': "Question: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How does rabies spread ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city boasts Penn 's Landing , on the banks of the Delaware river ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is DTMF ?
class_name: Abbreviation 
class_index: 0
--------

Question: What foods contain vitamin B12 ?
class_name: Entity 
class_index: 1
--------

Question: How does rabies spread ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What famous British actor lost his voice after an operation in 1966 ?
class_name: Human being 
class_index: 3
--------

Question: What city boasts Penn 's Landing , on the banks of the Delaware river ?
class_name: Location 
class_index: 4
--------

Question: How many teats does a female goat sport ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Where is it planned to berth the merchant ship , Lane Victory , which Merchant Marine veterans are converting into a floating museum ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How does rabies spread ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city boasts Penn 's Landing , on the banks of the Delaware river ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Where is it planned to berth the merchant ship , Lane Victory , which Merchant Marine veterans are converting into a floating museum ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 04:12:52 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14262'), (b'x-ratelimit-remaining-tokens', b'24232'), (b'x-ratelimit-reset-requests', b'13m47.695s'), (b'x-ratelimit-reset-tokens', b'11.536s'), (b'x-request-id', b'req_01hyypd97pfs3vhp9gq64vdnhn'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab68a7d9407ae8-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the location of a specific ship, which is a tangible object.
class_name: Location
class_index: 4
task_input: What President was meant for , but never placed in , the empty crypt beneath the capital 's rotunda ?, corse_label: 3
types: <class 'str'>, <class 'torch.Tensor'>
prompt_kwargs: {'input': "What President was meant for , but never placed in , the empty crypt beneath the capital 's rotunda ?", 'examples_str': "Question: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How does rabies spread ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city boasts Penn 's Landing , on the banks of the Delaware river ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is DTMF ?
class_name: Abbreviation 
class_index: 0
--------

Question: What foods contain vitamin B12 ?
class_name: Entity 
class_index: 1
--------

Question: How does rabies spread ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What famous British actor lost his voice after an operation in 1966 ?
class_name: Human being 
class_index: 3
--------

Question: What city boasts Penn 's Landing , on the banks of the Delaware river ?
class_name: Location 
class_index: 4
--------

Question: How many teats does a female goat sport ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What President was meant for , but never placed in , the empty crypt beneath the capital 's rotunda ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How does rabies spread ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city boasts Penn 's Landing , on the banks of the Delaware river ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What President was meant for , but never placed in , the empty crypt beneath the capital 's rotunda ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 04:12:52 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14261'), (b'x-ratelimit-remaining-tokens', b'23996'), (b'x-ratelimit-reset-requests', b'13m53.593s'), (b'x-ratelimit-reset-tokens', b'12.007s'), (b'x-request-id', b'req_01hyypd9mefq1tmpt9c46rxdw2'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab68aa6bef7ae8-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about a historical figure, specifically a President, which is a human being.
class_name: HUM
class_index: 3
task_input: How did P.T. Barnum bill the diminutive Charles S. Stratton ?, corse_label: 2
types: <class 'str'>, <class 'torch.Tensor'>
prompt_kwargs: {'input': 'How did P.T. Barnum bill the diminutive Charles S. Stratton ?', 'examples_str': "Question: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How does rabies spread ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city boasts Penn 's Landing , on the banks of the Delaware river ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is DTMF ?
class_name: Abbreviation 
class_index: 0
--------

Question: What foods contain vitamin B12 ?
class_name: Entity 
class_index: 1
--------

Question: How does rabies spread ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What famous British actor lost his voice after an operation in 1966 ?
class_name: Human being 
class_index: 3
--------

Question: What city boasts Penn 's Landing , on the banks of the Delaware river ?
class_name: Location 
class_index: 4
--------

Question: How many teats does a female goat sport ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: How did P.T. Barnum bill the diminutive Charles S. Stratton ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How does rabies spread ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city boasts Penn 's Landing , on the banks of the Delaware river ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: How did P.T. Barnum bill the diminutive Charles S. Stratton ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 04:12:52 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14260'), (b'x-ratelimit-remaining-tokens', b'23686'), (b'x-ratelimit-reset-requests', b'13m59.742s'), (b'x-ratelimit-reset-tokens', b'12.627s'), (b'x-request-id', b'req_01hyypd9whempa3aakr2hv1mjm'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab68ac0df97ae8-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is about P.T. Barnum and Charles S. Stratton, who is a human being, and the question is asking about a specific event or action, which is a description and abstract concept.
class_name: DESC
class_index: 2
task_input: What is white chocolate ?, corse_label: 2
types: <class 'str'>, <class 'torch.Tensor'>
prompt_kwargs: {'input': 'What is white chocolate ?', 'examples_str': "Question: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How does rabies spread ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city boasts Penn 's Landing , on the banks of the Delaware river ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is DTMF ?
class_name: Abbreviation 
class_index: 0
--------

Question: What foods contain vitamin B12 ?
class_name: Entity 
class_index: 1
--------

Question: How does rabies spread ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What famous British actor lost his voice after an operation in 1966 ?
class_name: Human being 
class_index: 3
--------

Question: What city boasts Penn 's Landing , on the banks of the Delaware river ?
class_name: Location 
class_index: 4
--------

Question: How many teats does a female goat sport ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What is white chocolate ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How does rabies spread ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city boasts Penn 's Landing , on the banks of the Delaware river ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is white chocolate ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 04:12:52 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14259'), (b'x-ratelimit-remaining-tokens', b'23363'), (b'x-ratelimit-reset-requests', b'14m5.734s'), (b'x-ratelimit-reset-tokens', b'13.273s'), (b'x-request-id', b'req_01hyypda4vfanbfanhkj424epr'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab68adaf887ae8-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is asking about the definition of white chocolate, which is a type of food.
class_name: "ABBR"
class_index: 0
```
task_input: What kind of fish is a coney ?, corse_label: 1
types: <class 'str'>, <class 'torch.Tensor'>
prompt_kwargs: {'input': 'What kind of fish is a coney ?', 'examples_str': "Question: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How does rabies spread ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city boasts Penn 's Landing , on the banks of the Delaware river ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is DTMF ?
class_name: Abbreviation 
class_index: 0
--------

Question: What foods contain vitamin B12 ?
class_name: Entity 
class_index: 1
--------

Question: How does rabies spread ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What famous British actor lost his voice after an operation in 1966 ?
class_name: Human being 
class_index: 3
--------

Question: What city boasts Penn 's Landing , on the banks of the Delaware river ?
class_name: Location 
class_index: 4
--------

Question: How many teats does a female goat sport ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What kind of fish is a coney ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How does rabies spread ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city boasts Penn 's Landing , on the banks of the Delaware river ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What kind of fish is a coney ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 04:12:53 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14258'), (b'x-ratelimit-remaining-tokens', b'23086'), (b'x-ratelimit-reset-requests', b'14m11.705s'), (b'x-ratelimit-reset-tokens', b'13.827s'), (b'x-request-id', b'req_01hyypdae3fn3vmxs2gp2vjnhy'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab68af89457ae8-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the type of fish, which is a specific species, so it's likely an abbreviation.
class_name: ABBR
class_index: 0
task_input: What season is the setting for Shakespeare 's Midsummer Night 's Dream ?, corse_label: 5
types: <class 'str'>, <class 'torch.Tensor'>
prompt_kwargs: {'input': "What season is the setting for Shakespeare 's Midsummer Night 's Dream ?", 'examples_str': "Question: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How does rabies spread ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city boasts Penn 's Landing , on the banks of the Delaware river ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is DTMF ?
class_name: Abbreviation 
class_index: 0
--------

Question: What foods contain vitamin B12 ?
class_name: Entity 
class_index: 1
--------

Question: How does rabies spread ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What famous British actor lost his voice after an operation in 1966 ?
class_name: Human being 
class_index: 3
--------

Question: What city boasts Penn 's Landing , on the banks of the Delaware river ?
class_name: Location 
class_index: 4
--------

Question: How many teats does a female goat sport ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What season is the setting for Shakespeare 's Midsummer Night 's Dream ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How does rabies spread ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city boasts Penn 's Landing , on the banks of the Delaware river ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What season is the setting for Shakespeare 's Midsummer Night 's Dream ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 04:12:53 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14257'), (b'x-ratelimit-remaining-tokens', b'22775'), (b'x-ratelimit-reset-requests', b'14m17.761999999s'), (b'x-ratelimit-reset-tokens', b'14.45s'), (b'x-request-id', b'req_01hyypdanjfcytg695t2ymk0ry'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab68b0fa737ae8-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the setting of a play, which is a descriptive concept.
class_name: DESC
class_index: 2
```
task_input: What sprawling U.S. state boasts the most airports ?, corse_label: 4
types: <class 'str'>, <class 'torch.Tensor'>
prompt_kwargs: {'input': 'What sprawling U.S. state boasts the most airports ?', 'examples_str': "Question: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How does rabies spread ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city boasts Penn 's Landing , on the banks of the Delaware river ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is DTMF ?
class_name: Abbreviation 
class_index: 0
--------

Question: What foods contain vitamin B12 ?
class_name: Entity 
class_index: 1
--------

Question: How does rabies spread ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What famous British actor lost his voice after an operation in 1966 ?
class_name: Human being 
class_index: 3
--------

Question: What city boasts Penn 's Landing , on the banks of the Delaware river ?
class_name: Location 
class_index: 4
--------

Question: How many teats does a female goat sport ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What sprawling U.S. state boasts the most airports ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How does rabies spread ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city boasts Penn 's Landing , on the banks of the Delaware river ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What sprawling U.S. state boasts the most airports ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 04:12:53 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14256'), (b'x-ratelimit-remaining-tokens', b'22485'), (b'x-ratelimit-reset-requests', b'14m23.714999999s'), (b'x-ratelimit-reset-tokens', b'15.03s'), (b'x-request-id', b'req_01hyypdayfey3aprmwwygdtaeq'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab68b2bbd77ae8-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is asking about a geographic location, specifically a U.S. state with the most airports.
class_name: Location
class_index: 4
task_input: What animals can live the longest without food ?, corse_label: 1
types: <class 'str'>, <class 'torch.Tensor'>
prompt_kwargs: {'input': 'What animals can live the longest without food ?', 'examples_str': "Question: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How does rabies spread ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city boasts Penn 's Landing , on the banks of the Delaware river ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is DTMF ?
class_name: Abbreviation 
class_index: 0
--------

Question: What foods contain vitamin B12 ?
class_name: Entity 
class_index: 1
--------

Question: How does rabies spread ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What famous British actor lost his voice after an operation in 1966 ?
class_name: Human being 
class_index: 3
--------

Question: What city boasts Penn 's Landing , on the banks of the Delaware river ?
class_name: Location 
class_index: 4
--------

Question: How many teats does a female goat sport ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What animals can live the longest without food ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How does rabies spread ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city boasts Penn 's Landing , on the banks of the Delaware river ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What animals can live the longest without food ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 04:12:53 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'332'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14256'), (b'x-ratelimit-remaining-tokens', b'22259'), (b'x-ratelimit-reset-requests', b'14m23.606999999s'), (b'x-ratelimit-reset-tokens', b'15.481s'), (b'x-request-id', b'req_01hyypdbatf42b9xehgpgjs6bw'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab68b54e057ae8-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How does rabies spread ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city boasts Penn 's Landing , on the banks of the Delaware river ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What animals can live the longest without food ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 04:12:56 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14255'), (b'x-ratelimit-remaining-tokens', b'23291'), (b'x-ratelimit-reset-requests', b'14m27.532999999s'), (b'x-ratelimit-reset-tokens', b'13.417s'), (b'x-request-id', b'req_01hyypddbkfzq9trs4padwrm6n'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab68c23af57ae8-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is asking about the longevity of animals without food, which is a descriptive concept.
class_name: Description and abstract concept
class_index: 2
responses: [1, 3, 4, 3, 2, 0, 0, 2, 4, 2], targets: [3, 2, 4, 3, 2, 2, 1, 5, 4, 1]
num_invalid: 0
Preds tensor: tensor([[0., 1., 0., 0., 0., 0.],
        [0., 0., 0., 1., 0., 0.],
        [0., 0., 0., 0., 1., 0.],
        [0., 0., 0., 1., 0., 0.],
        [0., 0., 1., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0.],
        [0., 0., 1., 0., 0., 0.],
        [0., 0., 0., 0., 1., 0.],
        [0., 0., 1., 0., 0., 0.]])
Targets tensor: tensor([3, 2, 4, 3, 2, 2, 1, 5, 4, 1])
Eval Accuracy 1 0: 0.4, F1: 0.306, score: 0.706
before random_replace: [{'text': 'What is DTMF ?', 'coarse_label': 0, 'fine_label': 1}, {'text': 'What foods contain vitamin B12 ?', 'coarse_label': 1, 'fine_label': 9}, {'text': 'How do you address a Chinese person ?', 'coarse_label': 2, 'fine_label': 26}, {'text': 'What famous British actor lost his voice after an operation in 1966 ?', 'coarse_label': 3, 'fine_label': 29}, {'text': 'Where are diamonds mined ?', 'coarse_label': 4, 'fine_label': 35}, {'text': 'How many teats does a female goat sport ?', 'coarse_label': 5, 'fine_label': 38}]
after random_replace: [{'text': "What does the `` blue ribbon '' stand for ?", 'coarse_label': 0, 'fine_label': 1}, {'text': 'What foods contain vitamin B12 ?', 'coarse_label': 1, 'fine_label': 9}, {'text': 'How do you address a Chinese person ?', 'coarse_label': 2, 'fine_label': 26}, {'text': 'Whose biography by Maurice Zolotow is titled Shooting Star ?', 'coarse_label': 3, 'fine_label': 29}, {'text': 'Where are diamonds mined ?', 'coarse_label': 4, 'fine_label': 35}, {'text': 'How many teats does a female goat sport ?', 'coarse_label': 5, 'fine_label': 38}]
task_input: Name the organization that is presided by a Security Council ., corse_label: 3
types: <class 'str'>, <class 'torch.Tensor'>
prompt_kwargs: {'input': 'Name the organization that is presided by a Security Council .', 'examples_str': "Question: What does the `` blue ribbon '' stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Whose biography by Maurice Zolotow is titled Shooting Star ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does the `` blue ribbon '' stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What foods contain vitamin B12 ?
class_name: Entity 
class_index: 1
--------

Question: How do you address a Chinese person ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Whose biography by Maurice Zolotow is titled Shooting Star ?
class_name: Human being 
class_index: 3
--------

Question: Where are diamonds mined ?
class_name: Location 
class_index: 4
--------

Question: How many teats does a female goat sport ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Name the organization that is presided by a Security Council .
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the `` blue ribbon '' stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Whose biography by Maurice Zolotow is titled Shooting Star ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Name the organization that is presided by a Security Council .\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 04:12:56 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14255'), (b'x-ratelimit-remaining-tokens', b'23061'), (b'x-ratelimit-reset-requests', b'14m29.615999999s'), (b'x-ratelimit-reset-tokens', b'13.878s'), (b'x-request-id', b'req_01hyypddqmfs3vsvhkarhzkds6'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab68c49d2f7ae8-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the `` blue ribbon '' stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Whose biography by Maurice Zolotow is titled Shooting Star ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Name the organization that is presided by a Security Council .\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 04:12:58 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14254'), (b'x-ratelimit-remaining-tokens', b'24087'), (b'x-ratelimit-reset-requests', b'14m33.553s'), (b'x-ratelimit-reset-tokens', b'11.825s'), (b'x-request-id', b'req_01hyypdfr3f919mbas8vdae9hk'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab68d1790a7ae8-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the organization that is presided by a Security Council, which suggests that the organization is a specific entity with a defined structure and leadership.
class_name: Entity
class_index: 1
task_input: Why is Jane Goodall famous ?, corse_label: 2
types: <class 'str'>, <class 'torch.Tensor'>
prompt_kwargs: {'input': 'Why is Jane Goodall famous ?', 'examples_str': "Question: What does the `` blue ribbon '' stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Whose biography by Maurice Zolotow is titled Shooting Star ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does the `` blue ribbon '' stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What foods contain vitamin B12 ?
class_name: Entity 
class_index: 1
--------

Question: How do you address a Chinese person ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Whose biography by Maurice Zolotow is titled Shooting Star ?
class_name: Human being 
class_index: 3
--------

Question: Where are diamonds mined ?
class_name: Location 
class_index: 4
--------

Question: How many teats does a female goat sport ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Why is Jane Goodall famous ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the `` blue ribbon '' stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Whose biography by Maurice Zolotow is titled Shooting Star ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Why is Jane Goodall famous ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 04:12:58 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14254'), (b'x-ratelimit-remaining-tokens', b'23808'), (b'x-ratelimit-reset-requests', b'14m35.699s'), (b'x-ratelimit-reset-tokens', b'12.383s'), (b'x-request-id', b'req_01hyypdg1hexqag4j8p8yxs52t'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab68d36aa77ae8-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the `` blue ribbon '' stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Whose biography by Maurice Zolotow is titled Shooting Star ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Why is Jane Goodall famous ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 04:13:01 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14253'), (b'x-ratelimit-remaining-tokens', b'24838'), (b'x-ratelimit-reset-requests', b'14m39.628999999s'), (b'x-ratelimit-reset-tokens', b'10.323s'), (b'x-request-id', b'req_01hyypdj27e7r8zvsf4ne6q36t'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab68e05d367ae8-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: Jane Goodall is a renowned primatologist and conservationist, making her famous for her groundbreaking research on chimpanzees.
class_name: Human being
class_index: 3
task_input: Where is it planned to berth the merchant ship , Lane Victory , which Merchant Marine veterans are converting into a floating museum ?, corse_label: 4
types: <class 'str'>, <class 'torch.Tensor'>
prompt_kwargs: {'input': 'Where is it planned to berth the merchant ship , Lane Victory , which Merchant Marine veterans are converting into a floating museum ?', 'examples_str': "Question: What does the `` blue ribbon '' stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Whose biography by Maurice Zolotow is titled Shooting Star ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does the `` blue ribbon '' stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What foods contain vitamin B12 ?
class_name: Entity 
class_index: 1
--------

Question: How do you address a Chinese person ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Whose biography by Maurice Zolotow is titled Shooting Star ?
class_name: Human being 
class_index: 3
--------

Question: Where are diamonds mined ?
class_name: Location 
class_index: 4
--------

Question: How many teats does a female goat sport ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Where is it planned to berth the merchant ship , Lane Victory , which Merchant Marine veterans are converting into a floating museum ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the `` blue ribbon '' stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Whose biography by Maurice Zolotow is titled Shooting Star ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Where is it planned to berth the merchant ship , Lane Victory , which Merchant Marine veterans are converting into a floating museum ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 04:13:01 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14253'), (b'x-ratelimit-remaining-tokens', b'24538'), (b'x-ratelimit-reset-requests', b'14m41.762999999s'), (b'x-ratelimit-reset-tokens', b'10.924s'), (b'x-request-id', b'req_01hyypdj9nfs3tsxq3msh9v31y'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab68e1de877ae8-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the `` blue ribbon '' stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Whose biography by Maurice Zolotow is titled Shooting Star ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Where is it planned to berth the merchant ship , Lane Victory , which Merchant Marine veterans are converting into a floating museum ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 04:13:03 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14252'), (b'x-ratelimit-remaining-tokens', b'25565'), (b'x-ratelimit-reset-requests', b'14m45.698s'), (b'x-ratelimit-reset-tokens', b'8.869s'), (b'x-request-id', b'req_01hyypdma5ed6t9qzbsy4er50a'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab68eea8bb7ae8-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the location of a specific merchant ship, which is a tangible object.
class_name: Location
class_index: 4
task_input: What President was meant for , but never placed in , the empty crypt beneath the capital 's rotunda ?, corse_label: 3
types: <class 'str'>, <class 'torch.Tensor'>
prompt_kwargs: {'input': "What President was meant for , but never placed in , the empty crypt beneath the capital 's rotunda ?", 'examples_str': "Question: What does the `` blue ribbon '' stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Whose biography by Maurice Zolotow is titled Shooting Star ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does the `` blue ribbon '' stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What foods contain vitamin B12 ?
class_name: Entity 
class_index: 1
--------

Question: How do you address a Chinese person ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Whose biography by Maurice Zolotow is titled Shooting Star ?
class_name: Human being 
class_index: 3
--------

Question: Where are diamonds mined ?
class_name: Location 
class_index: 4
--------

Question: How many teats does a female goat sport ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What President was meant for , but never placed in , the empty crypt beneath the capital 's rotunda ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the `` blue ribbon '' stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Whose biography by Maurice Zolotow is titled Shooting Star ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What President was meant for , but never placed in , the empty crypt beneath the capital 's rotunda ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 04:13:03 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'332'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14252'), (b'x-ratelimit-remaining-tokens', b'25275'), (b'x-ratelimit-reset-requests', b'14m47.722999999s'), (b'x-ratelimit-reset-tokens', b'9.449s'), (b'x-request-id', b'req_01hyypdmjwempv404cfzghx57t'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab68f07a387ae8-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the `` blue ribbon '' stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Whose biography by Maurice Zolotow is titled Shooting Star ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What President was meant for , but never placed in , the empty crypt beneath the capital 's rotunda ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 04:13:05 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14251'), (b'x-ratelimit-remaining-tokens', b'26301'), (b'x-ratelimit-reset-requests', b'14m51.662s'), (b'x-ratelimit-reset-tokens', b'7.397s'), (b'x-request-id', b'req_01hyypdpk9fmq87nf6jgmg88px'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab68fd5c2f7ae8-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is asking about a historical figure, specifically a President, and is looking for information about their life and actions.
class_name: Human being
class_index: 3
task_input: How did P.T. Barnum bill the diminutive Charles S. Stratton ?, corse_label: 2
types: <class 'str'>, <class 'torch.Tensor'>
prompt_kwargs: {'input': 'How did P.T. Barnum bill the diminutive Charles S. Stratton ?', 'examples_str': "Question: What does the `` blue ribbon '' stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Whose biography by Maurice Zolotow is titled Shooting Star ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does the `` blue ribbon '' stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What foods contain vitamin B12 ?
class_name: Entity 
class_index: 1
--------

Question: How do you address a Chinese person ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Whose biography by Maurice Zolotow is titled Shooting Star ?
class_name: Human being 
class_index: 3
--------

Question: Where are diamonds mined ?
class_name: Location 
class_index: 4
--------

Question: How many teats does a female goat sport ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: How did P.T. Barnum bill the diminutive Charles S. Stratton ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the `` blue ribbon '' stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Whose biography by Maurice Zolotow is titled Shooting Star ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: How did P.T. Barnum bill the diminutive Charles S. Stratton ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 04:13:05 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14251'), (b'x-ratelimit-remaining-tokens', b'25989'), (b'x-ratelimit-reset-requests', b'14m53.758999999s'), (b'x-ratelimit-reset-tokens', b'8.022s'), (b'x-request-id', b'req_01hyypdptved6vwfs5974rmwqj'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab68feddde7ae8-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the `` blue ribbon '' stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Whose biography by Maurice Zolotow is titled Shooting Star ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: How did P.T. Barnum bill the diminutive Charles S. Stratton ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 04:13:08 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14250'), (b'x-ratelimit-remaining-tokens', b'27013'), (b'x-ratelimit-reset-requests', b'14m57.701s'), (b'x-ratelimit-reset-tokens', b'5.974s'), (b'x-request-id', b'req_01hyypdrv5fzqshgea6vw48kyb'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab690bb87e7ae8-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is about a specific historical figure, Charles S. Stratton, and his relationship with P.T. Barnum, which suggests a human being.
class_name: HUM
class_index: 3
task_input: What is white chocolate ?, corse_label: 2
types: <class 'str'>, <class 'torch.Tensor'>
prompt_kwargs: {'input': 'What is white chocolate ?', 'examples_str': "Question: What does the `` blue ribbon '' stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Whose biography by Maurice Zolotow is titled Shooting Star ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does the `` blue ribbon '' stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What foods contain vitamin B12 ?
class_name: Entity 
class_index: 1
--------

Question: How do you address a Chinese person ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Whose biography by Maurice Zolotow is titled Shooting Star ?
class_name: Human being 
class_index: 3
--------

Question: Where are diamonds mined ?
class_name: Location 
class_index: 4
--------

Question: How many teats does a female goat sport ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What is white chocolate ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the `` blue ribbon '' stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Whose biography by Maurice Zolotow is titled Shooting Star ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is white chocolate ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 04:13:08 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14250'), (b'x-ratelimit-remaining-tokens', b'26725'), (b'x-ratelimit-reset-requests', b'14m59.705s'), (b'x-ratelimit-reset-tokens', b'6.549s'), (b'x-request-id', b'req_01hyypds4demq9323jedpc8hnc'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab690d9a487ae8-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the `` blue ribbon '' stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Whose biography by Maurice Zolotow is titled Shooting Star ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is white chocolate ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 04:13:10 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14249'), (b'x-ratelimit-remaining-tokens', b'27746'), (b'x-ratelimit-reset-requests', b'15m3.653s'), (b'x-ratelimit-reset-tokens', b'4.507s'), (b'x-request-id', b'req_01hyypdv4hey5bev6ghwrq0gbc'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab691a6c8e7ae8-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is asking about the definition or characteristics of white chocolate, which is a type of food or product.
class_name: Description and abstract concept
class_index: 2
```
task_input: What kind of fish is a coney ?, corse_label: 1
types: <class 'str'>, <class 'torch.Tensor'>
prompt_kwargs: {'input': 'What kind of fish is a coney ?', 'examples_str': "Question: What does the `` blue ribbon '' stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Whose biography by Maurice Zolotow is titled Shooting Star ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does the `` blue ribbon '' stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What foods contain vitamin B12 ?
class_name: Entity 
class_index: 1
--------

Question: How do you address a Chinese person ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Whose biography by Maurice Zolotow is titled Shooting Star ?
class_name: Human being 
class_index: 3
--------

Question: Where are diamonds mined ?
class_name: Location 
class_index: 4
--------

Question: How many teats does a female goat sport ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What kind of fish is a coney ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the `` blue ribbon '' stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Whose biography by Maurice Zolotow is titled Shooting Star ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What kind of fish is a coney ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 04:13:10 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14249'), (b'x-ratelimit-remaining-tokens', b'27480'), (b'x-ratelimit-reset-requests', b'15m5.697s'), (b'x-ratelimit-reset-tokens', b'5.039s'), (b'x-request-id', b'req_01hyypdve1ed79kpwtthb86dm2'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab691c4e0d7ae8-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the `` blue ribbon '' stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Whose biography by Maurice Zolotow is titled Shooting Star ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What kind of fish is a coney ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 04:13:12 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14248'), (b'x-ratelimit-remaining-tokens', b'28504'), (b'x-ratelimit-reset-requests', b'15m9.639999999s'), (b'x-ratelimit-reset-tokens', b'2.991s'), (b'x-request-id', b'req_01hyypdxebexgtt1d8fdxha1qw'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab692929067ae8-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is asking about the classification of a type of fish, which is a specific entity.
class_name: Entity
class_index: 1
task_input: What season is the setting for Shakespeare 's Midsummer Night 's Dream ?, corse_label: 5
types: <class 'str'>, <class 'torch.Tensor'>
prompt_kwargs: {'input': "What season is the setting for Shakespeare 's Midsummer Night 's Dream ?", 'examples_str': "Question: What does the `` blue ribbon '' stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Whose biography by Maurice Zolotow is titled Shooting Star ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does the `` blue ribbon '' stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What foods contain vitamin B12 ?
class_name: Entity 
class_index: 1
--------

Question: How do you address a Chinese person ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Whose biography by Maurice Zolotow is titled Shooting Star ?
class_name: Human being 
class_index: 3
--------

Question: Where are diamonds mined ?
class_name: Location 
class_index: 4
--------

Question: How many teats does a female goat sport ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What season is the setting for Shakespeare 's Midsummer Night 's Dream ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the `` blue ribbon '' stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Whose biography by Maurice Zolotow is titled Shooting Star ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What season is the setting for Shakespeare 's Midsummer Night 's Dream ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 04:13:12 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14248'), (b'x-ratelimit-remaining-tokens', b'28288'), (b'x-ratelimit-reset-requests', b'15m11.602999999s'), (b'x-ratelimit-reset-tokens', b'3.423s'), (b'x-request-id', b'req_01hyypdxtred7asdf0h5ttmpn8'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab692baaec7ae8-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the `` blue ribbon '' stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Whose biography by Maurice Zolotow is titled Shooting Star ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What season is the setting for Shakespeare 's Midsummer Night 's Dream ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 04:13:15 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14247'), (b'x-ratelimit-remaining-tokens', b'29315'), (b'x-ratelimit-reset-requests', b'15m15.541s'), (b'x-ratelimit-reset-tokens', b'1.37s'), (b'x-request-id', b'req_01hyypdzv7ey5rf51bzf8md10n'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab69388d667ae8-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the setting of a play, which is a abstract concept.
class_name: Description and abstract concept
class_index: 2
```
task_input: What sprawling U.S. state boasts the most airports ?, corse_label: 4
types: <class 'str'>, <class 'torch.Tensor'>
prompt_kwargs: {'input': 'What sprawling U.S. state boasts the most airports ?', 'examples_str': "Question: What does the `` blue ribbon '' stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Whose biography by Maurice Zolotow is titled Shooting Star ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does the `` blue ribbon '' stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What foods contain vitamin B12 ?
class_name: Entity 
class_index: 1
--------

Question: How do you address a Chinese person ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Whose biography by Maurice Zolotow is titled Shooting Star ?
class_name: Human being 
class_index: 3
--------

Question: Where are diamonds mined ?
class_name: Location 
class_index: 4
--------

Question: How many teats does a female goat sport ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What sprawling U.S. state boasts the most airports ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the `` blue ribbon '' stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Whose biography by Maurice Zolotow is titled Shooting Star ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What sprawling U.S. state boasts the most airports ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 04:13:15 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'325'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14247'), (b'x-ratelimit-remaining-tokens', b'29036'), (b'x-ratelimit-reset-requests', b'15m17.708999999s'), (b'x-ratelimit-reset-tokens', b'1.927s'), (b'x-request-id', b'req_01hyype04bfs4vp9n7eg0t326k'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab693a5eee7ae8-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the `` blue ribbon '' stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Whose biography by Maurice Zolotow is titled Shooting Star ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What sprawling U.S. state boasts the most airports ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 04:13:17 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14246'), (b'x-ratelimit-remaining-tokens', b'29995'), (b'x-ratelimit-reset-requests', b'15m21.647s'), (b'x-ratelimit-reset-tokens', b'10ms'), (b'x-request-id', b'req_01hyype24sfqb9yr0nkm45hnva'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab694738a47ae8-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is asking about a geographic location, specifically a U.S. state with the most airports.
class_name: Location
class_index: 4
task_input: What animals can live the longest without food ?, corse_label: 1
types: <class 'str'>, <class 'torch.Tensor'>
prompt_kwargs: {'input': 'What animals can live the longest without food ?', 'examples_str': "Question: What does the `` blue ribbon '' stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Whose biography by Maurice Zolotow is titled Shooting Star ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does the `` blue ribbon '' stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What foods contain vitamin B12 ?
class_name: Entity 
class_index: 1
--------

Question: How do you address a Chinese person ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Whose biography by Maurice Zolotow is titled Shooting Star ?
class_name: Human being 
class_index: 3
--------

Question: Where are diamonds mined ?
class_name: Location 
class_index: 4
--------

Question: How many teats does a female goat sport ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What animals can live the longest without food ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the `` blue ribbon '' stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Whose biography by Maurice Zolotow is titled Shooting Star ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What animals can live the longest without food ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 04:13:17 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14246'), (b'x-ratelimit-remaining-tokens', b'29603'), (b'x-ratelimit-reset-requests', b'15m23.746s'), (b'x-ratelimit-reset-tokens', b'794ms'), (b'x-request-id', b'req_01hyype2crfq3vxdq07ypjtm3x'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab6948d9d87ae8-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the `` blue ribbon '' stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Whose biography by Maurice Zolotow is titled Shooting Star ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What animals can live the longest without food ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 04:13:19 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14245'), (b'x-ratelimit-remaining-tokens', b'29995'), (b'x-ratelimit-reset-requests', b'15m27.683999999s'), (b'x-ratelimit-reset-tokens', b'10ms'), (b'x-request-id', b'req_01hyype4d6exh925y0ectssde3'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab6955bc327ae8-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is asking about the longevity of certain animals without food, which suggests a specific set of animals that can survive for a certain period without eating.
class_name: Numeric value
class_index: 5
responses: [1, 3, 4, 3, 3, 2, 1, 2, 4, 5], targets: [3, 2, 4, 3, 2, 2, 1, 5, 4, 1]
num_invalid: 0
Preds tensor: tensor([[0., 1., 0., 0., 0., 0.],
        [0., 0., 0., 1., 0., 0.],
        [0., 0., 0., 0., 1., 0.],
        [0., 0., 0., 1., 0., 0.],
        [0., 0., 0., 1., 0., 0.],
        [0., 0., 1., 0., 0., 0.],
        [0., 1., 0., 0., 0., 0.],
        [0., 0., 1., 0., 0., 0.],
        [0., 0., 0., 0., 1., 0.],
        [0., 0., 0., 0., 0., 1.]])
Targets tensor: tensor([3, 2, 4, 3, 2, 2, 1, 5, 4, 1])
Eval Accuracy 1 1: 0.5, F1: 0.46, score: 0.96
best_score: 0.96
best_parameters: OrderedDict([('generator.examples_str', Parameter: Question: What does the `` blue ribbon '' stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What foods contain vitamin B12 ?
class_name: Entity 
class_index: 1
--------

Question: How do you address a Chinese person ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Whose biography by Maurice Zolotow is titled Shooting Star ?
class_name: Human being 
class_index: 3
--------

Question: Where are diamonds mined ?
class_name: Location 
class_index: 4
--------

Question: How many teats does a female goat sport ?
class_name: Numeric value 
class_index: 5
--------
)])
step: 2
train_batch: {'text': ['Who is the mathematician that won the Noble Prize for Literature in 1950 ?', 'How much caffeine is in a 16 oz cup of coffee ?', 'What U.S. state comes last in an alphabetical list ?', 'What disease did August von Wassermann develop a specific test for in 196 ?', "What is Michael Jackson 's middle name ?", 'How many shots can a stock M16 hold ?', 'Where did the name Daniel originate ?', "How can I get someone 's email address ?", "What `` melts in your mouth , not in your hands '' .", 'Who discovered electricity ?'], 'coarse_label': tensor([3, 5, 4, 1, 3, 5, 4, 2, 1, 3]), 'fine_label': tensor([29, 38, 36,  7, 29, 38, 35, 26,  9, 29])}
task_input: Who is the mathematician that won the Noble Prize for Literature in 1950 ?, corse_label: 3
types: <class 'str'>, <class 'torch.Tensor'>
prompt_kwargs: {'input': 'Who is the mathematician that won the Noble Prize for Literature in 1950 ?', 'examples_str': "Question: What does the `` blue ribbon '' stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Whose biography by Maurice Zolotow is titled Shooting Star ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does the `` blue ribbon '' stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What foods contain vitamin B12 ?
class_name: Entity 
class_index: 1
--------

Question: How do you address a Chinese person ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Whose biography by Maurice Zolotow is titled Shooting Star ?
class_name: Human being 
class_index: 3
--------

Question: Where are diamonds mined ?
class_name: Location 
class_index: 4
--------

Question: How many teats does a female goat sport ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Who is the mathematician that won the Noble Prize for Literature in 1950 ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the `` blue ribbon '' stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Whose biography by Maurice Zolotow is titled Shooting Star ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Who is the mathematician that won the Noble Prize for Literature in 1950 ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 04:13:20 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14245'), (b'x-ratelimit-remaining-tokens', b'29632'), (b'x-ratelimit-reset-requests', b'15m29.653999999s'), (b'x-ratelimit-reset-tokens', b'736ms'), (b'x-request-id', b'req_01hyype4r1e0abydh1sxysk4z9'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab6957edd97ae8-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the `` blue ribbon '' stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Whose biography by Maurice Zolotow is titled Shooting Star ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Who is the mathematician that won the Noble Prize for Literature in 1950 ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 04:13:22 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14244'), (b'x-ratelimit-remaining-tokens', b'29995'), (b'x-ratelimit-reset-requests', b'15m33.569999999s'), (b'x-ratelimit-reset-tokens', b'10ms'), (b'x-request-id', b'req_01hyype6s6ekbr916syzt0fcvk'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab6964e8377ae8-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about a specific mathematician who won a Nobel Prize, which is an unusual combination of fields, making it unlikely to be a common entity.
class_name: Human being
class_index: 3
task_input: How much caffeine is in a 16 oz cup of coffee ?, corse_label: 5
types: <class 'str'>, <class 'torch.Tensor'>
prompt_kwargs: {'input': 'How much caffeine is in a 16 oz cup of coffee ?', 'examples_str': "Question: What does the `` blue ribbon '' stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Whose biography by Maurice Zolotow is titled Shooting Star ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does the `` blue ribbon '' stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What foods contain vitamin B12 ?
class_name: Entity 
class_index: 1
--------

Question: How do you address a Chinese person ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Whose biography by Maurice Zolotow is titled Shooting Star ?
class_name: Human being 
class_index: 3
--------

Question: Where are diamonds mined ?
class_name: Location 
class_index: 4
--------

Question: How many teats does a female goat sport ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: How much caffeine is in a 16 oz cup of coffee ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the `` blue ribbon '' stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Whose biography by Maurice Zolotow is titled Shooting Star ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: How much caffeine is in a 16 oz cup of coffee ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 04:13:22 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14244'), (b'x-ratelimit-remaining-tokens', b'29592'), (b'x-ratelimit-reset-requests', b'15m35.711999999s'), (b'x-ratelimit-reset-tokens', b'816ms'), (b'x-request-id', b'req_01hyype726f43rygq7vgqp7kw4'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab6966b9af7ae8-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the `` blue ribbon '' stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Whose biography by Maurice Zolotow is titled Shooting Star ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: How much caffeine is in a 16 oz cup of coffee ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 04:13:24 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14243'), (b'x-ratelimit-remaining-tokens', b'29995'), (b'x-ratelimit-reset-requests', b'15m39.648s'), (b'x-ratelimit-reset-tokens', b'10ms'), (b'x-request-id', b'req_01hyype92pfq4bah1e3b1fd8dm'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab6973ace97ae8-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is asking about the amount of caffeine in a specific quantity of coffee, which is a measurable value.
class_name: Numeric value
class_index: 5
```
task_input: What U.S. state comes last in an alphabetical list ?, corse_label: 4
types: <class 'str'>, <class 'torch.Tensor'>
prompt_kwargs: {'input': 'What U.S. state comes last in an alphabetical list ?', 'examples_str': "Question: What does the `` blue ribbon '' stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Whose biography by Maurice Zolotow is titled Shooting Star ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does the `` blue ribbon '' stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What foods contain vitamin B12 ?
class_name: Entity 
class_index: 1
--------

Question: How do you address a Chinese person ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Whose biography by Maurice Zolotow is titled Shooting Star ?
class_name: Human being 
class_index: 3
--------

Question: Where are diamonds mined ?
class_name: Location 
class_index: 4
--------

Question: How many teats does a female goat sport ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What U.S. state comes last in an alphabetical list ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the `` blue ribbon '' stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Whose biography by Maurice Zolotow is titled Shooting Star ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What U.S. state comes last in an alphabetical list ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 04:13:24 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14243'), (b'x-ratelimit-remaining-tokens', b'29639'), (b'x-ratelimit-reset-requests', b'15m41.642s'), (b'x-ratelimit-reset-tokens', b'722ms'), (b'x-request-id', b'req_01hyype9dxe27aw8g6fb51kq98'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab6975ded07ae8-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the `` blue ribbon '' stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Whose biography by Maurice Zolotow is titled Shooting Star ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What U.S. state comes last in an alphabetical list ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 04:13:27 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14242'), (b'x-ratelimit-remaining-tokens', b'29995'), (b'x-ratelimit-reset-requests', b'15m45.580999999s'), (b'x-ratelimit-reset-tokens', b'10ms'), (b'x-request-id', b'req_01hyypebeaemk9q8469d7mhr5a'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab6982ca3b7ae8-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is asking about a specific U.S. state, which is a geographic location.
class_name: Location
class_index: 4
task_input: What disease did August von Wassermann develop a specific test for in 196 ?, corse_label: 1
types: <class 'str'>, <class 'torch.Tensor'>
prompt_kwargs: {'input': 'What disease did August von Wassermann develop a specific test for in 196 ?', 'examples_str': "Question: What does the `` blue ribbon '' stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Whose biography by Maurice Zolotow is titled Shooting Star ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does the `` blue ribbon '' stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What foods contain vitamin B12 ?
class_name: Entity 
class_index: 1
--------

Question: How do you address a Chinese person ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Whose biography by Maurice Zolotow is titled Shooting Star ?
class_name: Human being 
class_index: 3
--------

Question: Where are diamonds mined ?
class_name: Location 
class_index: 4
--------

Question: How many teats does a female goat sport ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What disease did August von Wassermann develop a specific test for in 196 ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the `` blue ribbon '' stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Whose biography by Maurice Zolotow is titled Shooting Star ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What disease did August von Wassermann develop a specific test for in 196 ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 04:13:27 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14242'), (b'x-ratelimit-remaining-tokens', b'29604'), (b'x-ratelimit-reset-requests', b'15m47.769999999s'), (b'x-ratelimit-reset-tokens', b'792ms'), (b'x-request-id', b'req_01hyypebnhe27t4678p7xqp42m'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab69843bcb7ae8-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the `` blue ribbon '' stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Whose biography by Maurice Zolotow is titled Shooting Star ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What disease did August von Wassermann develop a specific test for in 196 ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 04:13:29 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14241'), (b'x-ratelimit-remaining-tokens', b'29995'), (b'x-ratelimit-reset-requests', b'15m51.707s'), (b'x-ratelimit-reset-tokens', b'10ms'), (b'x-request-id', b'req_01hyypedp0e7srr333nkpn63m0'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab6991181c7ae8-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: August von Wassermann developed a specific test for syphilis in 1906, not 196, which is a notable medical achievement.
class_name: Entity
class_index: 1
task_input: What is Michael Jackson 's middle name ?, corse_label: 3
types: <class 'str'>, <class 'torch.Tensor'>
prompt_kwargs: {'input': "What is Michael Jackson 's middle name ?", 'examples_str': "Question: What does the `` blue ribbon '' stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Whose biography by Maurice Zolotow is titled Shooting Star ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does the `` blue ribbon '' stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What foods contain vitamin B12 ?
class_name: Entity 
class_index: 1
--------

Question: How do you address a Chinese person ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Whose biography by Maurice Zolotow is titled Shooting Star ?
class_name: Human being 
class_index: 3
--------

Question: Where are diamonds mined ?
class_name: Location 
class_index: 4
--------

Question: How many teats does a female goat sport ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What is Michael Jackson 's middle name ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the `` blue ribbon '' stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Whose biography by Maurice Zolotow is titled Shooting Star ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is Michael Jackson 's middle name ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 04:13:29 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14241'), (b'x-ratelimit-remaining-tokens', b'29621'), (b'x-ratelimit-reset-requests', b'15m53.645s'), (b'x-ratelimit-reset-tokens', b'757ms'), (b'x-request-id', b'req_01hyypee14fhcaa1c2y8ze7ahr'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab69934ab87ae8-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the `` blue ribbon '' stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Whose biography by Maurice Zolotow is titled Shooting Star ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is Michael Jackson 's middle name ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 04:13:31 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14240'), (b'x-ratelimit-remaining-tokens', b'29995'), (b'x-ratelimit-reset-requests', b'15m57.583999999s'), (b'x-ratelimit-reset-tokens', b'10ms'), (b'x-request-id', b'req_01hyypeg1hed889sz2r41ffmxs'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab69a03f357ae8-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about a specific person's middle name, which is a characteristic often associated with a human being.
class_name: Human being
class_index: 3
```
task_input: How many shots can a stock M16 hold ?, corse_label: 5
types: <class 'str'>, <class 'torch.Tensor'>
prompt_kwargs: {'input': 'How many shots can a stock M16 hold ?', 'examples_str': "Question: What does the `` blue ribbon '' stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Whose biography by Maurice Zolotow is titled Shooting Star ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does the `` blue ribbon '' stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What foods contain vitamin B12 ?
class_name: Entity 
class_index: 1
--------

Question: How do you address a Chinese person ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Whose biography by Maurice Zolotow is titled Shooting Star ?
class_name: Human being 
class_index: 3
--------

Question: Where are diamonds mined ?
class_name: Location 
class_index: 4
--------

Question: How many teats does a female goat sport ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: How many shots can a stock M16 hold ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the `` blue ribbon '' stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Whose biography by Maurice Zolotow is titled Shooting Star ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: How many shots can a stock M16 hold ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 04:13:31 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14240'), (b'x-ratelimit-remaining-tokens', b'29614'), (b'x-ratelimit-reset-requests', b'15m59.707999999s'), (b'x-ratelimit-reset-tokens', b'772ms'), (b'x-request-id', b'req_01hyypegapf4494xabxdv9kt4h'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab69a209237ae8-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the `` blue ribbon '' stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Whose biography by Maurice Zolotow is titled Shooting Star ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: How many shots can a stock M16 hold ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 04:13:34 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14239'), (b'x-ratelimit-remaining-tokens', b'29995'), (b'x-ratelimit-reset-requests', b'16m3.639999999s'), (b'x-ratelimit-reset-tokens', b'10ms'), (b'x-request-id', b'req_01hyypejbafq4vep2dwpm4vcar'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab69aefcbb7ae8-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is asking about the capacity of a specific firearm, which is a numeric value.
class_name: NUM
class_index: 5
task_input: Where did the name Daniel originate ?, corse_label: 4
types: <class 'str'>, <class 'torch.Tensor'>
prompt_kwargs: {'input': 'Where did the name Daniel originate ?', 'examples_str': "Question: What does the `` blue ribbon '' stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Whose biography by Maurice Zolotow is titled Shooting Star ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does the `` blue ribbon '' stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What foods contain vitamin B12 ?
class_name: Entity 
class_index: 1
--------

Question: How do you address a Chinese person ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Whose biography by Maurice Zolotow is titled Shooting Star ?
class_name: Human being 
class_index: 3
--------

Question: Where are diamonds mined ?
class_name: Location 
class_index: 4
--------

Question: How many teats does a female goat sport ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Where did the name Daniel originate ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the `` blue ribbon '' stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Whose biography by Maurice Zolotow is titled Shooting Star ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Where did the name Daniel originate ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 04:13:34 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14239'), (b'x-ratelimit-remaining-tokens', b'29612'), (b'x-ratelimit-reset-requests', b'16m5.758999999s'), (b'x-ratelimit-reset-tokens', b'776ms'), (b'x-request-id', b'req_01hyypejjwf44990j2v6xr13v1'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab69b07dbc7ae8-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the `` blue ribbon '' stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Whose biography by Maurice Zolotow is titled Shooting Star ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Where did the name Daniel originate ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 04:13:36 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14238'), (b'x-ratelimit-remaining-tokens', b'29995'), (b'x-ratelimit-reset-requests', b'16m9.691999999s'), (b'x-ratelimit-reset-tokens', b'10ms'), (b'x-request-id', b'req_01hyypemkff93tgpa6dhw0j54x'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab69bd6ffc7ae8-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the origin of a name, which is a descriptive concept.
class_name: DESC
class_index: 2
```
task_input: How can I get someone 's email address ?, corse_label: 2
types: <class 'str'>, <class 'torch.Tensor'>
prompt_kwargs: {'input': "How can I get someone 's email address ?", 'examples_str': "Question: What does the `` blue ribbon '' stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Whose biography by Maurice Zolotow is titled Shooting Star ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does the `` blue ribbon '' stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What foods contain vitamin B12 ?
class_name: Entity 
class_index: 1
--------

Question: How do you address a Chinese person ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Whose biography by Maurice Zolotow is titled Shooting Star ?
class_name: Human being 
class_index: 3
--------

Question: Where are diamonds mined ?
class_name: Location 
class_index: 4
--------

Question: How many teats does a female goat sport ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: How can I get someone 's email address ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the `` blue ribbon '' stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Whose biography by Maurice Zolotow is titled Shooting Star ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: How can I get someone 's email address ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 04:13:36 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14238'), (b'x-ratelimit-remaining-tokens', b'29662'), (b'x-ratelimit-reset-requests', b'16m11.623999999s'), (b'x-ratelimit-reset-tokens', b'675ms'), (b'x-request-id', b'req_01hyypemy1ft5scmdspcvxh03x'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab69bf89677ae8-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the `` blue ribbon '' stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Whose biography by Maurice Zolotow is titled Shooting Star ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: How can I get someone 's email address ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 04:13:38 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14237'), (b'x-ratelimit-remaining-tokens', b'29995'), (b'x-ratelimit-reset-requests', b'16m15.556s'), (b'x-ratelimit-reset-tokens', b'10ms'), (b'x-request-id', b'req_01hyypepzwfmrvbmaxc0q6q9qx'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab69ccac707ae8-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about obtaining someone's email address, which is a specific piece of information that can be obtained through various means, such as asking the person directly or finding it through public directories.
class_name: Entity
class_index: 1
```
task_input: What `` melts in your mouth , not in your hands '' ., corse_label: 1
types: <class 'str'>, <class 'torch.Tensor'>
prompt_kwargs: {'input': "What `` melts in your mouth , not in your hands '' .", 'examples_str': "Question: What does the `` blue ribbon '' stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Whose biography by Maurice Zolotow is titled Shooting Star ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does the `` blue ribbon '' stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What foods contain vitamin B12 ?
class_name: Entity 
class_index: 1
--------

Question: How do you address a Chinese person ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Whose biography by Maurice Zolotow is titled Shooting Star ?
class_name: Human being 
class_index: 3
--------

Question: Where are diamonds mined ?
class_name: Location 
class_index: 4
--------

Question: How many teats does a female goat sport ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What `` melts in your mouth , not in your hands '' .
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the `` blue ribbon '' stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Whose biography by Maurice Zolotow is titled Shooting Star ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What `` melts in your mouth , not in your hands '' .\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 04:13:39 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14237'), (b'x-ratelimit-remaining-tokens', b'29615'), (b'x-ratelimit-reset-requests', b'16m17.648s'), (b'x-ratelimit-reset-tokens', b'770ms'), (b'x-request-id', b'req_01hyypeqawfhct4xkpb4gpb2rz'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab69ceee6a7ae8-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the `` blue ribbon '' stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Whose biography by Maurice Zolotow is titled Shooting Star ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What `` melts in your mouth , not in your hands '' .\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 04:13:41 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14236'), (b'x-ratelimit-remaining-tokens', b'29995'), (b'x-ratelimit-reset-requests', b'16m21.593s'), (b'x-ratelimit-reset-tokens', b'10ms'), (b'x-request-id', b'req_01hyypesb4exs8xw6be298n0hw'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab69dbb9ac7ae8-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This phrase is a famous slogan, and it's a phrase that describes a characteristic of a specific type of candy.
class_name: Description and abstract concept
class_index: 2
task_input: Who discovered electricity ?, corse_label: 3
types: <class 'str'>, <class 'torch.Tensor'>
prompt_kwargs: {'input': 'Who discovered electricity ?', 'examples_str': "Question: What does the `` blue ribbon '' stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Whose biography by Maurice Zolotow is titled Shooting Star ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does the `` blue ribbon '' stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What foods contain vitamin B12 ?
class_name: Entity 
class_index: 1
--------

Question: How do you address a Chinese person ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Whose biography by Maurice Zolotow is titled Shooting Star ?
class_name: Human being 
class_index: 3
--------

Question: Where are diamonds mined ?
class_name: Location 
class_index: 4
--------

Question: How many teats does a female goat sport ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Who discovered electricity ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the `` blue ribbon '' stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Whose biography by Maurice Zolotow is titled Shooting Star ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Who discovered electricity ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 04:13:41 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14236'), (b'x-ratelimit-remaining-tokens', b'29613'), (b'x-ratelimit-reset-requests', b'16m23.698s'), (b'x-ratelimit-reset-tokens', b'774ms'), (b'x-request-id', b'req_01hyypesmkfn69d6q7sd5bywgb'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab69dd9b107ae8-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the `` blue ribbon '' stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Whose biography by Maurice Zolotow is titled Shooting Star ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Who discovered electricity ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 04:13:43 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14235'), (b'x-ratelimit-remaining-tokens', b'29995'), (b'x-ratelimit-reset-requests', b'16m27.627999999s'), (b'x-ratelimit-reset-tokens', b'10ms'), (b'x-request-id', b'req_01hyypevn9f93td3a7qqpfzsxp'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab69ea8d4a7ae8-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is asking about a historical figure who made a significant discovery, which is a characteristic of a human being.
class_name: HUM
class_index: 3
responses: [3, 5, 4, 1, 3, 5, 2, 1, 2, 3], targets: [3, 5, 4, 1, 3, 5, 4, 2, 1, 3]
num_invalid: 0
Preds tensor: tensor([[0., 0., 0., 1., 0., 0.],
        [0., 0., 0., 0., 0., 1.],
        [0., 0., 0., 0., 1., 0.],
        [0., 1., 0., 0., 0., 0.],
        [0., 0., 0., 1., 0., 0.],
        [0., 0., 0., 0., 0., 1.],
        [0., 0., 1., 0., 0., 0.],
        [0., 1., 0., 0., 0., 0.],
        [0., 0., 1., 0., 0., 0.],
        [0., 0., 0., 1., 0., 0.]])
Targets tensor: tensor([3, 5, 4, 1, 3, 5, 4, 2, 1, 3])
Eval Accuracy 2 0: 0.7, F1: 0.633, score: 1.333
before random_replace: [{'text': 'What is DTMF ?', 'coarse_label': 0, 'fine_label': 1}, {'text': 'What foods contain vitamin B12 ?', 'coarse_label': 1, 'fine_label': 9}, {'text': 'How do you address a Chinese person ?', 'coarse_label': 2, 'fine_label': 26}, {'text': 'What famous British actor lost his voice after an operation in 1966 ?', 'coarse_label': 3, 'fine_label': 29}, {'text': 'Where are diamonds mined ?', 'coarse_label': 4, 'fine_label': 35}, {'text': 'How many teats does a female goat sport ?', 'coarse_label': 5, 'fine_label': 38}]
after random_replace: [{'text': 'What is DTMF ?', 'coarse_label': 0, 'fine_label': 1}, {'text': 'What foods contain vitamin B12 ?', 'coarse_label': 1, 'fine_label': 9}, {'text': 'How do you address a Chinese person ?', 'coarse_label': 2, 'fine_label': 26}, {'text': "Who 's the twin brother of the Greek goddess Artemis ?", 'coarse_label': 3, 'fine_label': 29}, {'text': 'Where are diamonds mined ?', 'coarse_label': 4, 'fine_label': 35}, {'text': 'When did swimming become commonplace ?', 'coarse_label': 5, 'fine_label': 39}]
task_input: Who is the mathematician that won the Noble Prize for Literature in 1950 ?, corse_label: 3
types: <class 'str'>, <class 'torch.Tensor'>
prompt_kwargs: {'input': 'Who is the mathematician that won the Noble Prize for Literature in 1950 ?', 'examples_str': "Question: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who 's the twin brother of the Greek goddess Artemis ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When did swimming become commonplace ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is DTMF ?
class_name: Abbreviation 
class_index: 0
--------

Question: What foods contain vitamin B12 ?
class_name: Entity 
class_index: 1
--------

Question: How do you address a Chinese person ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who 's the twin brother of the Greek goddess Artemis ?
class_name: Human being 
class_index: 3
--------

Question: Where are diamonds mined ?
class_name: Location 
class_index: 4
--------

Question: When did swimming become commonplace ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Who is the mathematician that won the Noble Prize for Literature in 1950 ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who 's the twin brother of the Greek goddess Artemis ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When did swimming become commonplace ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Who is the mathematician that won the Noble Prize for Literature in 1950 ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 04:13:44 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14235'), (b'x-ratelimit-remaining-tokens', b'29778'), (b'x-ratelimit-reset-requests', b'16m29.212s'), (b'x-ratelimit-reset-tokens', b'444ms'), (b'x-request-id', b'req_01hyypewdyf6zvd2xb36dgrrsg'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab69ef78d77ae8-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who 's the twin brother of the Greek goddess Artemis ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When did swimming become commonplace ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Who is the mathematician that won the Noble Prize for Literature in 1950 ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 04:13:46 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14234'), (b'x-ratelimit-remaining-tokens', b'29995'), (b'x-ratelimit-reset-requests', b'16m33.095999999s'), (b'x-ratelimit-reset-tokens', b'10ms'), (b'x-request-id', b'req_01hyypeyg2fq5b1610s2gyc9s6'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab69fcab6b7ae8-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about a specific mathematician who won a Nobel Prize, but the prize is for Literature, which is unusual. This suggests that the question is about a notable figure, which is a human being.
class_name: HUM
class_index: 3
task_input: How much caffeine is in a 16 oz cup of coffee ?, corse_label: 5
types: <class 'str'>, <class 'torch.Tensor'>
prompt_kwargs: {'input': 'How much caffeine is in a 16 oz cup of coffee ?', 'examples_str': "Question: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who 's the twin brother of the Greek goddess Artemis ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When did swimming become commonplace ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is DTMF ?
class_name: Abbreviation 
class_index: 0
--------

Question: What foods contain vitamin B12 ?
class_name: Entity 
class_index: 1
--------

Question: How do you address a Chinese person ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who 's the twin brother of the Greek goddess Artemis ?
class_name: Human being 
class_index: 3
--------

Question: Where are diamonds mined ?
class_name: Location 
class_index: 4
--------

Question: When did swimming become commonplace ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: How much caffeine is in a 16 oz cup of coffee ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who 's the twin brother of the Greek goddess Artemis ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When did swimming become commonplace ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: How much caffeine is in a 16 oz cup of coffee ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 04:13:46 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14234'), (b'x-ratelimit-remaining-tokens', b'29597'), (b'x-ratelimit-reset-requests', b'16m35.662999999s'), (b'x-ratelimit-reset-tokens', b'806ms'), (b'x-request-id', b'req_01hyypeytmexjtx74qxn1f85vm'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab69fedd017ae8-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who 's the twin brother of the Greek goddess Artemis ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When did swimming become commonplace ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: How much caffeine is in a 16 oz cup of coffee ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 04:13:50 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14233'), (b'x-ratelimit-remaining-tokens', b'29995'), (b'x-ratelimit-reset-requests', b'16m39.602s'), (b'x-ratelimit-reset-tokens', b'10ms'), (b'x-request-id', b'req_01hyypf0v1exjtf34nbxbgt5ey'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab6a0bb82a7ae8-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is asking about the amount of caffeine in a specific quantity of coffee, which is a numeric value.
class_name: NUM
class_index: 5
task_input: What U.S. state comes last in an alphabetical list ?, corse_label: 4
types: <class 'str'>, <class 'torch.Tensor'>
prompt_kwargs: {'input': 'What U.S. state comes last in an alphabetical list ?', 'examples_str': "Question: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who 's the twin brother of the Greek goddess Artemis ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When did swimming become commonplace ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is DTMF ?
class_name: Abbreviation 
class_index: 0
--------

Question: What foods contain vitamin B12 ?
class_name: Entity 
class_index: 1
--------

Question: How do you address a Chinese person ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who 's the twin brother of the Greek goddess Artemis ?
class_name: Human being 
class_index: 3
--------

Question: Where are diamonds mined ?
class_name: Location 
class_index: 4
--------

Question: When did swimming become commonplace ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What U.S. state comes last in an alphabetical list ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who 's the twin brother of the Greek goddess Artemis ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When did swimming become commonplace ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What U.S. state comes last in an alphabetical list ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 04:13:50 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'325'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'1'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14233'), (b'x-ratelimit-remaining-tokens', b'29611'), (b'x-ratelimit-reset-requests', b'16m40.703999999s'), (b'x-ratelimit-reset-tokens', b'777ms'), (b'x-request-id', b'req_01hyypf23je7tvhw13dbp3kmgq'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab6a13cec67ae8-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 1.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who 's the twin brother of the Greek goddess Artemis ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When did swimming become commonplace ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What U.S. state comes last in an alphabetical list ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 04:13:51 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14232'), (b'x-ratelimit-remaining-tokens', b'29995'), (b'x-ratelimit-reset-requests', b'16m45.641999999s'), (b'x-ratelimit-reset-tokens', b'10ms'), (b'x-request-id', b'req_01hyypf34remm8vafwmvdycfns'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab6a1a7bc27ae8-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is about a specific piece of information, which is typically represented by an abbreviation.
class_name: ABBR
class_index: 0
```
task_input: What disease did August von Wassermann develop a specific test for in 196 ?, corse_label: 1
types: <class 'str'>, <class 'torch.Tensor'>
prompt_kwargs: {'input': 'What disease did August von Wassermann develop a specific test for in 196 ?', 'examples_str': "Question: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who 's the twin brother of the Greek goddess Artemis ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When did swimming become commonplace ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is DTMF ?
class_name: Abbreviation 
class_index: 0
--------

Question: What foods contain vitamin B12 ?
class_name: Entity 
class_index: 1
--------

Question: How do you address a Chinese person ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who 's the twin brother of the Greek goddess Artemis ?
class_name: Human being 
class_index: 3
--------

Question: Where are diamonds mined ?
class_name: Location 
class_index: 4
--------

Question: When did swimming become commonplace ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What disease did August von Wassermann develop a specific test for in 196 ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who 's the twin brother of the Greek goddess Artemis ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When did swimming become commonplace ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What disease did August von Wassermann develop a specific test for in 196 ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 04:13:51 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14232'), (b'x-ratelimit-remaining-tokens', b'29616'), (b'x-ratelimit-reset-requests', b'16m47.705s'), (b'x-ratelimit-reset-tokens', b'768ms'), (b'x-request-id', b'req_01hyypf3e0exsrzg6k5g2npb4m'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab6a1c4d167ae8-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who 's the twin brother of the Greek goddess Artemis ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When did swimming become commonplace ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What disease did August von Wassermann develop a specific test for in 196 ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 04:13:53 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14231'), (b'x-ratelimit-remaining-tokens', b'29995'), (b'x-ratelimit-reset-requests', b'16m51.637999999s'), (b'x-ratelimit-reset-tokens', b'10ms'), (b'x-request-id', b'req_01hyypf5ekf45bspx1v6kz1d4c'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab6a293fd37ae8-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is about a specific test developed by August von Wassermann, which suggests it's related to a historical event or a scientific concept.
class_name: Description and abstract concept
class_index: 2
task_input: What is Michael Jackson 's middle name ?, corse_label: 3
types: <class 'str'>, <class 'torch.Tensor'>
prompt_kwargs: {'input': "What is Michael Jackson 's middle name ?", 'examples_str': "Question: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who 's the twin brother of the Greek goddess Artemis ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When did swimming become commonplace ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is DTMF ?
class_name: Abbreviation 
class_index: 0
--------

Question: What foods contain vitamin B12 ?
class_name: Entity 
class_index: 1
--------

Question: How do you address a Chinese person ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who 's the twin brother of the Greek goddess Artemis ?
class_name: Human being 
class_index: 3
--------

Question: Where are diamonds mined ?
class_name: Location 
class_index: 4
--------

Question: When did swimming become commonplace ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What is Michael Jackson 's middle name ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who 's the twin brother of the Greek goddess Artemis ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When did swimming become commonplace ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is Michael Jackson 's middle name ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 04:13:53 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14231'), (b'x-ratelimit-remaining-tokens', b'29598'), (b'x-ratelimit-reset-requests', b'16m53.755s'), (b'x-ratelimit-reset-tokens', b'804ms'), (b'x-request-id', b'req_01hyypf5p9fhdsf4n7pnd114jj'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab6a2ab8d37ae8-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who 's the twin brother of the Greek goddess Artemis ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When did swimming become commonplace ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is Michael Jackson 's middle name ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 04:13:56 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14230'), (b'x-ratelimit-remaining-tokens', b'29995'), (b'x-ratelimit-reset-requests', b'16m57.695999999s'), (b'x-ratelimit-reset-tokens', b'10ms'), (b'x-request-id', b'req_01hyypf7pne7v8jc9951bsbtca'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab6a379b027ae8-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the middle name of a specific person, which is a characteristic of a human being.
class_name: HUM
class_index: 3
task_input: How many shots can a stock M16 hold ?, corse_label: 5
types: <class 'str'>, <class 'torch.Tensor'>
prompt_kwargs: {'input': 'How many shots can a stock M16 hold ?', 'examples_str': "Question: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who 's the twin brother of the Greek goddess Artemis ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When did swimming become commonplace ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is DTMF ?
class_name: Abbreviation 
class_index: 0
--------

Question: What foods contain vitamin B12 ?
class_name: Entity 
class_index: 1
--------

Question: How do you address a Chinese person ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who 's the twin brother of the Greek goddess Artemis ?
class_name: Human being 
class_index: 3
--------

Question: Where are diamonds mined ?
class_name: Location 
class_index: 4
--------

Question: When did swimming become commonplace ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: How many shots can a stock M16 hold ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who 's the twin brother of the Greek goddess Artemis ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When did swimming become commonplace ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: How many shots can a stock M16 hold ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 04:13:56 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14230'), (b'x-ratelimit-remaining-tokens', b'29646'), (b'x-ratelimit-reset-requests', b'16m59.666999999s'), (b'x-ratelimit-reset-tokens', b'708ms'), (b'x-request-id', b'req_01hyypf812f70ap56f2m93ythj'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab6a39bcb47ae8-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who 's the twin brother of the Greek goddess Artemis ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When did swimming become commonplace ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: How many shots can a stock M16 hold ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 04:13:58 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14229'), (b'x-ratelimit-remaining-tokens', b'29995'), (b'x-ratelimit-reset-requests', b'17m3.608s'), (b'x-ratelimit-reset-tokens', b'10ms'), (b'x-request-id', b'req_01hyypfa1df70b01f88y83z0dp'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab6a468e1d7ae8-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is asking about the capacity of a specific firearm, which is a numeric value.
class_name: NUM
class_index: 5
task_input: Where did the name Daniel originate ?, corse_label: 4
types: <class 'str'>, <class 'torch.Tensor'>
prompt_kwargs: {'input': 'Where did the name Daniel originate ?', 'examples_str': "Question: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who 's the twin brother of the Greek goddess Artemis ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When did swimming become commonplace ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is DTMF ?
class_name: Abbreviation 
class_index: 0
--------

Question: What foods contain vitamin B12 ?
class_name: Entity 
class_index: 1
--------

Question: How do you address a Chinese person ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who 's the twin brother of the Greek goddess Artemis ?
class_name: Human being 
class_index: 3
--------

Question: Where are diamonds mined ?
class_name: Location 
class_index: 4
--------

Question: When did swimming become commonplace ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Where did the name Daniel originate ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who 's the twin brother of the Greek goddess Artemis ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When did swimming become commonplace ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Where did the name Daniel originate ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 04:13:58 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14229'), (b'x-ratelimit-remaining-tokens', b'29648'), (b'x-ratelimit-reset-requests', b'17m5.702s'), (b'x-ratelimit-reset-tokens', b'704ms'), (b'x-request-id', b'req_01hyypfaarext81ck8cxzk36c8'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab6a487f737ae8-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who 's the twin brother of the Greek goddess Artemis ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When did swimming become commonplace ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Where did the name Daniel originate ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 04:14:00 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14228'), (b'x-ratelimit-remaining-tokens', b'29995'), (b'x-ratelimit-reset-requests', b'17m9.641999999s'), (b'x-ratelimit-reset-tokens', b'10ms'), (b'x-request-id', b'req_01hyypfcb4ext88cem2m0eqmxs'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab6a555b2f7ae8-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the origin of a name, which is a specific piece of information, so it's likely an abbreviation.
class_name: ABBR
class_index: 0
task_input: How can I get someone 's email address ?, corse_label: 2
types: <class 'str'>, <class 'torch.Tensor'>
prompt_kwargs: {'input': "How can I get someone 's email address ?", 'examples_str': "Question: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who 's the twin brother of the Greek goddess Artemis ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When did swimming become commonplace ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is DTMF ?
class_name: Abbreviation 
class_index: 0
--------

Question: What foods contain vitamin B12 ?
class_name: Entity 
class_index: 1
--------

Question: How do you address a Chinese person ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who 's the twin brother of the Greek goddess Artemis ?
class_name: Human being 
class_index: 3
--------

Question: Where are diamonds mined ?
class_name: Location 
class_index: 4
--------

Question: When did swimming become commonplace ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: How can I get someone 's email address ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who 's the twin brother of the Greek goddess Artemis ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When did swimming become commonplace ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: How can I get someone 's email address ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 04:14:00 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14228'), (b'x-ratelimit-remaining-tokens', b'29652'), (b'x-ratelimit-reset-requests', b'17m11.598999999s'), (b'x-ratelimit-reset-tokens', b'696ms'), (b'x-request-id', b'req_01hyypfcqpfarv9n7vce6wxbda'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab6a57dd327ae8-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who 's the twin brother of the Greek goddess Artemis ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When did swimming become commonplace ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: How can I get someone 's email address ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 04:14:03 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14227'), (b'x-ratelimit-remaining-tokens', b'29995'), (b'x-ratelimit-reset-requests', b'17m15.533999999s'), (b'x-ratelimit-reset-tokens', b'10ms'), (b'x-request-id', b'req_01hyypfer7f94rnv2gmqwjhk2a'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab6a64b8157ae8-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about obtaining someone's email address, which is a common practice in communication.
class_name: Entity
class_index: 1
task_input: What `` melts in your mouth , not in your hands '' ., corse_label: 1
types: <class 'str'>, <class 'torch.Tensor'>
prompt_kwargs: {'input': "What `` melts in your mouth , not in your hands '' .", 'examples_str': "Question: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who 's the twin brother of the Greek goddess Artemis ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When did swimming become commonplace ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is DTMF ?
class_name: Abbreviation 
class_index: 0
--------

Question: What foods contain vitamin B12 ?
class_name: Entity 
class_index: 1
--------

Question: How do you address a Chinese person ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who 's the twin brother of the Greek goddess Artemis ?
class_name: Human being 
class_index: 3
--------

Question: Where are diamonds mined ?
class_name: Location 
class_index: 4
--------

Question: When did swimming become commonplace ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What `` melts in your mouth , not in your hands '' .
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who 's the twin brother of the Greek goddess Artemis ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When did swimming become commonplace ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What `` melts in your mouth , not in your hands '' .\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 04:14:03 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14227'), (b'x-ratelimit-remaining-tokens', b'29627'), (b'x-ratelimit-reset-requests', b'17m17.706999999s'), (b'x-ratelimit-reset-tokens', b'746ms'), (b'x-request-id', b'req_01hyypff1demms38n8454zt38k'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab6a6699907ae8-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who 's the twin brother of the Greek goddess Artemis ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When did swimming become commonplace ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What `` melts in your mouth , not in your hands '' .\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 04:14:05 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14226'), (b'x-ratelimit-remaining-tokens', b'29995'), (b'x-ratelimit-reset-requests', b'17m21.643s'), (b'x-ratelimit-reset-tokens', b'10ms'), (b'x-request-id', b'req_01hyypfh1xf8mv98rm9r1mrwe2'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab6a737b2d7ae8-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This is a famous phrase from a well-known candy brand, and it's a description of the candy's texture.
class_name: "DESC"
class_index: "2"
task_input: Who discovered electricity ?, corse_label: 3
types: <class 'str'>, <class 'torch.Tensor'>
prompt_kwargs: {'input': 'Who discovered electricity ?', 'examples_str': "Question: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who 's the twin brother of the Greek goddess Artemis ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When did swimming become commonplace ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is DTMF ?
class_name: Abbreviation 
class_index: 0
--------

Question: What foods contain vitamin B12 ?
class_name: Entity 
class_index: 1
--------

Question: How do you address a Chinese person ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who 's the twin brother of the Greek goddess Artemis ?
class_name: Human being 
class_index: 3
--------

Question: Where are diamonds mined ?
class_name: Location 
class_index: 4
--------

Question: When did swimming become commonplace ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Who discovered electricity ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who 's the twin brother of the Greek goddess Artemis ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When did swimming become commonplace ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Who discovered electricity ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 04:14:05 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14226'), (b'x-ratelimit-remaining-tokens', b'29609'), (b'x-ratelimit-reset-requests', b'17m23.754s'), (b'x-ratelimit-reset-tokens', b'782ms'), (b'x-request-id', b'req_01hyypfh9nf95bypany8mn7cw2'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab6a750c617ae8-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who 's the twin brother of the Greek goddess Artemis ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When did swimming become commonplace ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Who discovered electricity ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 04:14:07 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14225'), (b'x-ratelimit-remaining-tokens', b'29995'), (b'x-ratelimit-reset-requests', b'17m27.690999999s'), (b'x-ratelimit-reset-tokens', b'10ms'), (b'x-request-id', b'req_01hyypfka3emy8qvr2pfgrs17g'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab6a81ee937ae8-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is asking about a historical figure who made a significant discovery, which is a characteristic of a human being.
class_name: HUM
class_index: 3
responses: [3, 5, 0, 2, 3, 5, 0, 1, 2, 3], targets: [3, 5, 4, 1, 3, 5, 4, 2, 1, 3]
num_invalid: 0
Preds tensor: tensor([[0., 0., 0., 1., 0., 0.],
        [0., 0., 0., 0., 0., 1.],
        [1., 0., 0., 0., 0., 0.],
        [0., 0., 1., 0., 0., 0.],
        [0., 0., 0., 1., 0., 0.],
        [0., 0., 0., 0., 0., 1.],
        [1., 0., 0., 0., 0., 0.],
        [0., 1., 0., 0., 0., 0.],
        [0., 0., 1., 0., 0., 0.],
        [0., 0., 0., 1., 0., 0.]])
Targets tensor: tensor([3, 5, 4, 1, 3, 5, 4, 2, 1, 3])
Eval Accuracy 2 1: 0.5, F1: 0.333, score: 0.833
step: 3
train_batch: {'text': ['What Hermann Hesse book gave its name to a rock group ?', "What television network flogged its sports programming on Inga Nielsen 's body in 197 ?", 'Who held the endurance record for women pilots in 1929 ?', "Of children between the ages of two and eleven , what percentage watch `` The Simpsons '' ?", "What `` magic '' does Mandrake employ ?", 'Where is the Orange Bowl ?', "What is `` the airline built for professional travelers '' ?", 'What is the date of Bastille Day ?', 'What invention does the principle of conservation of energy make impossible ?', 'What are boxcars ?'], 'coarse_label': tensor([1, 3, 3, 5, 1, 4, 3, 5, 1, 2]), 'fine_label': tensor([ 5, 28, 29, 45, 13, 35, 28, 39, 20, 24])}
task_input: What Hermann Hesse book gave its name to a rock group ?, corse_label: 1
types: <class 'str'>, <class 'torch.Tensor'>
prompt_kwargs: {'input': 'What Hermann Hesse book gave its name to a rock group ?', 'examples_str': 'Question: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is DTMF ?
class_name: Abbreviation 
class_index: 0
--------

Question: What foods contain vitamin B12 ?
class_name: Entity 
class_index: 1
--------

Question: How do you address a Chinese person ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What famous British actor lost his voice after an operation in 1966 ?
class_name: Human being 
class_index: 3
--------

Question: Where are diamonds mined ?
class_name: Location 
class_index: 4
--------

Question: How many teats does a female goat sport ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What Hermann Hesse book gave its name to a rock group ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What Hermann Hesse book gave its name to a rock group ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 04:14:07 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14225'), (b'x-ratelimit-remaining-tokens', b'29624'), (b'x-ratelimit-reset-requests', b'17m29.721999999s'), (b'x-ratelimit-reset-tokens', b'752ms'), (b'x-request-id', b'req_01hyypfkjtemnbtcqk8925sjtw'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab6a83affc7ae8-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What Hermann Hesse book gave its name to a rock group ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 04:14:10 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14224'), (b'x-ratelimit-remaining-tokens', b'29995'), (b'x-ratelimit-reset-requests', b'17m33.655s'), (b'x-ratelimit-reset-tokens', b'10ms'), (b'x-request-id', b'req_01hyypfnkeet1b157nvpmk9q5w'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab6a908b027ae8-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is about a book by Hermann Hesse, which is a literary work, and the question is asking about the title of the book that inspired a rock group.
class_name: Description and abstract concept
class_index: 2
```
task_input: What television network flogged its sports programming on Inga Nielsen 's body in 197 ?, corse_label: 3
types: <class 'str'>, <class 'torch.Tensor'>
prompt_kwargs: {'input': "What television network flogged its sports programming on Inga Nielsen 's body in 197 ?", 'examples_str': 'Question: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is DTMF ?
class_name: Abbreviation 
class_index: 0
--------

Question: What foods contain vitamin B12 ?
class_name: Entity 
class_index: 1
--------

Question: How do you address a Chinese person ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What famous British actor lost his voice after an operation in 1966 ?
class_name: Human being 
class_index: 3
--------

Question: Where are diamonds mined ?
class_name: Location 
class_index: 4
--------

Question: How many teats does a female goat sport ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What television network flogged its sports programming on Inga Nielsen 's body in 197 ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What television network flogged its sports programming on Inga Nielsen 's body in 197 ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 04:14:10 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14224'), (b'x-ratelimit-remaining-tokens', b'29589'), (b'x-ratelimit-reset-requests', b'17m35.738s'), (b'x-ratelimit-reset-tokens', b'822ms'), (b'x-request-id', b'req_01hyypfnvne29rkcb0627pvzpg'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab6a923c607ae8-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What television network flogged its sports programming on Inga Nielsen 's body in 197 ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 04:14:12 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14223'), (b'x-ratelimit-remaining-tokens', b'29995'), (b'x-ratelimit-reset-requests', b'17m39.625999999s'), (b'x-ratelimit-reset-tokens', b'10ms'), (b'x-request-id', b'req_01hyypfqxnet1r6bfq2xtd9ydh'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab6a9f2e867ae8-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is about a specific event involving a television network and a person, which suggests it's a unique event or a story.
class_name: Description and abstract concept
class_index: 2
task_input: Who held the endurance record for women pilots in 1929 ?, corse_label: 3
types: <class 'str'>, <class 'torch.Tensor'>
prompt_kwargs: {'input': 'Who held the endurance record for women pilots in 1929 ?', 'examples_str': 'Question: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is DTMF ?
class_name: Abbreviation 
class_index: 0
--------

Question: What foods contain vitamin B12 ?
class_name: Entity 
class_index: 1
--------

Question: How do you address a Chinese person ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What famous British actor lost his voice after an operation in 1966 ?
class_name: Human being 
class_index: 3
--------

Question: Where are diamonds mined ?
class_name: Location 
class_index: 4
--------

Question: How many teats does a female goat sport ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Who held the endurance record for women pilots in 1929 ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Who held the endurance record for women pilots in 1929 ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 04:14:12 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14223'), (b'x-ratelimit-remaining-tokens', b'29617'), (b'x-ratelimit-reset-requests', b'17m41.675999999s'), (b'x-ratelimit-reset-tokens', b'766ms'), (b'x-request-id', b'req_01hyypfr7tfas92bntqstg1d28'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab6aa178a07ae8-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Who held the endurance record for women pilots in 1929 ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 04:14:15 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14222'), (b'x-ratelimit-remaining-tokens', b'29995'), (b'x-ratelimit-reset-requests', b'17m45.618999999s'), (b'x-ratelimit-reset-tokens', b'10ms'), (b'x-request-id', b'req_01hyypft84emnt8cb6frpxxtkx'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab6aae5aaa7ae8-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about a specific person who held a record, which is a characteristic of a human being.
class_name: HUM
class_index: 3
```
task_input: Of children between the ages of two and eleven , what percentage watch `` The Simpsons '' ?, corse_label: 5
types: <class 'str'>, <class 'torch.Tensor'>
prompt_kwargs: {'input': "Of children between the ages of two and eleven , what percentage watch `` The Simpsons '' ?", 'examples_str': 'Question: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is DTMF ?
class_name: Abbreviation 
class_index: 0
--------

Question: What foods contain vitamin B12 ?
class_name: Entity 
class_index: 1
--------

Question: How do you address a Chinese person ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What famous British actor lost his voice after an operation in 1966 ?
class_name: Human being 
class_index: 3
--------

Question: Where are diamonds mined ?
class_name: Location 
class_index: 4
--------

Question: How many teats does a female goat sport ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Of children between the ages of two and eleven , what percentage watch `` The Simpsons '' ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Of children between the ages of two and eleven , what percentage watch `` The Simpsons '' ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 04:14:15 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14222'), (b'x-ratelimit-remaining-tokens', b'29632'), (b'x-ratelimit-reset-requests', b'17m47.611999999s'), (b'x-ratelimit-reset-tokens', b'735ms'), (b'x-request-id', b'req_01hyypftm9f71bry6v879kqgv3'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab6ab0cca47ae8-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Of children between the ages of two and eleven , what percentage watch `` The Simpsons '' ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 04:14:17 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14221'), (b'x-ratelimit-remaining-tokens', b'29995'), (b'x-ratelimit-reset-requests', b'17m51.554s'), (b'x-ratelimit-reset-tokens', b'10ms'), (b'x-request-id', b'req_01hyypfwmkf8nahhh854z6j9bm'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab6abd9f377ae8-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is about the percentage of children watching a TV show, which is a numeric value.
class_name: NUM
class_index: 5
task_input: What `` magic '' does Mandrake employ ?, corse_label: 1
types: <class 'str'>, <class 'torch.Tensor'>
prompt_kwargs: {'input': "What `` magic '' does Mandrake employ ?", 'examples_str': 'Question: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is DTMF ?
class_name: Abbreviation 
class_index: 0
--------

Question: What foods contain vitamin B12 ?
class_name: Entity 
class_index: 1
--------

Question: How do you address a Chinese person ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What famous British actor lost his voice after an operation in 1966 ?
class_name: Human being 
class_index: 3
--------

Question: Where are diamonds mined ?
class_name: Location 
class_index: 4
--------

Question: How many teats does a female goat sport ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What `` magic '' does Mandrake employ ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What `` magic '' does Mandrake employ ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 04:14:17 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14221'), (b'x-ratelimit-remaining-tokens', b'29599'), (b'x-ratelimit-reset-requests', b'17m53.741s'), (b'x-ratelimit-reset-tokens', b'801ms'), (b'x-request-id', b'req_01hyypfwwpfn7r1ep77yn4s6zm'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab6abf38847ae8-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What `` magic '' does Mandrake employ ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 04:14:19 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14220'), (b'x-ratelimit-remaining-tokens', b'29995'), (b'x-ratelimit-reset-requests', b'17m57.688999999s'), (b'x-ratelimit-reset-tokens', b'10ms'), (b'x-request-id', b'req_01hyypfywtfas80tv9jp59cgkg'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab6acc0c127ae8-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about a fictional concept, "magic", which is often associated with fantasy and fantasy creatures like Mandrake.
class_name: Description and abstract concept
class_index: 2
task_input: Where is the Orange Bowl ?, corse_label: 4
types: <class 'str'>, <class 'torch.Tensor'>
prompt_kwargs: {'input': 'Where is the Orange Bowl ?', 'examples_str': 'Question: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is DTMF ?
class_name: Abbreviation 
class_index: 0
--------

Question: What foods contain vitamin B12 ?
class_name: Entity 
class_index: 1
--------

Question: How do you address a Chinese person ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What famous British actor lost his voice after an operation in 1966 ?
class_name: Human being 
class_index: 3
--------

Question: Where are diamonds mined ?
class_name: Location 
class_index: 4
--------

Question: How many teats does a female goat sport ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Where is the Orange Bowl ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Where is the Orange Bowl ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 04:14:19 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14220'), (b'x-ratelimit-remaining-tokens', b'29651'), (b'x-ratelimit-reset-requests', b'17m59.651999999s'), (b'x-ratelimit-reset-tokens', b'698ms'), (b'x-request-id', b'req_01hyypfz7qfhernejbvnma2pny'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab6ace3df37ae8-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Where is the Orange Bowl ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 04:14:22 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14219'), (b'x-ratelimit-remaining-tokens', b'29995'), (b'x-ratelimit-reset-requests', b'18m3.59s'), (b'x-ratelimit-reset-tokens', b'10ms'), (b'x-request-id', b'req_01hyypg185ef79yqnqxnvne9bp'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab6adb28fe7ae8-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking for the location of the Orange Bowl, which is a specific stadium.
class_name: Location
class_index: 4
task_input: What is `` the airline built for professional travelers '' ?, corse_label: 3
types: <class 'str'>, <class 'torch.Tensor'>
prompt_kwargs: {'input': "What is `` the airline built for professional travelers '' ?", 'examples_str': 'Question: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is DTMF ?
class_name: Abbreviation 
class_index: 0
--------

Question: What foods contain vitamin B12 ?
class_name: Entity 
class_index: 1
--------

Question: How do you address a Chinese person ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What famous British actor lost his voice after an operation in 1966 ?
class_name: Human being 
class_index: 3
--------

Question: Where are diamonds mined ?
class_name: Location 
class_index: 4
--------

Question: How many teats does a female goat sport ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What is `` the airline built for professional travelers '' ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is `` the airline built for professional travelers '' ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 04:14:22 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14219'), (b'x-ratelimit-remaining-tokens', b'29615'), (b'x-ratelimit-reset-requests', b'18m5.732s'), (b'x-ratelimit-reset-tokens', b'769ms'), (b'x-request-id', b'req_01hyypg1gje7w94kfcqgqjj0xc'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab6adcca6d7ae8-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is `` the airline built for professional travelers '' ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 04:14:24 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14218'), (b'x-ratelimit-remaining-tokens', b'29995'), (b'x-ratelimit-reset-requests', b'18m9.672999999s'), (b'x-ratelimit-reset-tokens', b'10ms'), (b'x-request-id', b'req_01hyypg3gxef7b317yzj2fwzby'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab6ae9ad1b7ae8-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is asking about the name of an airline, which is an abbreviation.
class_name: ABBR
class_index: 0
```
task_input: What is the date of Bastille Day ?, corse_label: 5
types: <class 'str'>, <class 'torch.Tensor'>
prompt_kwargs: {'input': 'What is the date of Bastille Day ?', 'examples_str': 'Question: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is DTMF ?
class_name: Abbreviation 
class_index: 0
--------

Question: What foods contain vitamin B12 ?
class_name: Entity 
class_index: 1
--------

Question: How do you address a Chinese person ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What famous British actor lost his voice after an operation in 1966 ?
class_name: Human being 
class_index: 3
--------

Question: Where are diamonds mined ?
class_name: Location 
class_index: 4
--------

Question: How many teats does a female goat sport ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What is the date of Bastille Day ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is the date of Bastille Day ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 04:14:24 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14218'), (b'x-ratelimit-remaining-tokens', b'29611'), (b'x-ratelimit-reset-requests', b'18m11.733s'), (b'x-ratelimit-reset-tokens', b'778ms'), (b'x-request-id', b'req_01hyypg3s9e2aa324z641rngvn'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab6aeb5e637ae8-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is the date of Bastille Day ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 04:14:26 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14217'), (b'x-ratelimit-remaining-tokens', b'29995'), (b'x-ratelimit-reset-requests', b'18m15.672999999s'), (b'x-ratelimit-reset-tokens', b'10ms'), (b'x-request-id', b'req_01hyypg5snf96bdxegcwp048v5'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab6af83a4b7ae8-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking for a specific date, which is a numeric value.
class_name: NUM
class_index: 5
task_input: What invention does the principle of conservation of energy make impossible ?, corse_label: 1
types: <class 'str'>, <class 'torch.Tensor'>
prompt_kwargs: {'input': 'What invention does the principle of conservation of energy make impossible ?', 'examples_str': 'Question: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is DTMF ?
class_name: Abbreviation 
class_index: 0
--------

Question: What foods contain vitamin B12 ?
class_name: Entity 
class_index: 1
--------

Question: How do you address a Chinese person ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What famous British actor lost his voice after an operation in 1966 ?
class_name: Human being 
class_index: 3
--------

Question: Where are diamonds mined ?
class_name: Location 
class_index: 4
--------

Question: How many teats does a female goat sport ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What invention does the principle of conservation of energy make impossible ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What invention does the principle of conservation of energy make impossible ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 04:14:26 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14217'), (b'x-ratelimit-remaining-tokens', b'29653'), (b'x-ratelimit-reset-requests', b'18m17.662999999s'), (b'x-ratelimit-reset-tokens', b'693ms'), (b'x-request-id', b'req_01hyypg647fztt8w548nkwejw0'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab6afa5bdc7ae8-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What invention does the principle of conservation of energy make impossible ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 04:14:29 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14216'), (b'x-ratelimit-remaining-tokens', b'29995'), (b'x-ratelimit-reset-requests', b'18m21.608s'), (b'x-ratelimit-reset-tokens', b'10ms'), (b'x-request-id', b'req_01hyypg84ee7wrc7qhd075d4hz'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab6b072e267ae8-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the principle of conservation of energy, which is a scientific concept, and the question is asking about its application or limitation, which is an abstract concept.
class_name: Description and abstract concept
class_index: 2
task_input: What are boxcars ?, corse_label: 2
types: <class 'str'>, <class 'torch.Tensor'>
prompt_kwargs: {'input': 'What are boxcars ?', 'examples_str': 'Question: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is DTMF ?
class_name: Abbreviation 
class_index: 0
--------

Question: What foods contain vitamin B12 ?
class_name: Entity 
class_index: 1
--------

Question: How do you address a Chinese person ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What famous British actor lost his voice after an operation in 1966 ?
class_name: Human being 
class_index: 3
--------

Question: Where are diamonds mined ?
class_name: Location 
class_index: 4
--------

Question: How many teats does a female goat sport ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What are boxcars ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What are boxcars ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 04:14:29 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14216'), (b'x-ratelimit-remaining-tokens', b'29614'), (b'x-ratelimit-reset-requests', b'18m23.699s'), (b'x-ratelimit-reset-tokens', b'771ms'), (b'x-request-id', b'req_01hyypg8dwemp8py2f6gnhvq2d'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab6b091fe37ae8-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What are boxcars ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 04:14:31 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14215'), (b'x-ratelimit-remaining-tokens', b'29995'), (b'x-ratelimit-reset-requests', b'18m27.638999999s'), (b'x-ratelimit-reset-tokens', b'10ms'), (b'x-request-id', b'req_01hyypgae7et2t8r9h7cpscrjb'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab6b15eab07ae8-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is about a type of railroad car, which is a specific concept.
class_name: ABBR
class_index: 0
```
responses: [2, 2, 3, 5, 2, 4, 0, 5, 2, 0], targets: [1, 3, 3, 5, 1, 4, 3, 5, 1, 2]
num_invalid: 0
Preds tensor: tensor([[0., 0., 1., 0., 0., 0.],
        [0., 0., 1., 0., 0., 0.],
        [0., 0., 0., 1., 0., 0.],
        [0., 0., 0., 0., 0., 1.],
        [0., 0., 1., 0., 0., 0.],
        [0., 0., 0., 0., 1., 0.],
        [1., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 1.],
        [0., 0., 1., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0.]])
Targets tensor: tensor([1, 3, 3, 5, 1, 4, 3, 5, 1, 2])
Eval Accuracy 3 0: 0.4, F1: 0.417, score: 0.817
before random_replace: [{'text': 'What is DTMF ?', 'coarse_label': 0, 'fine_label': 1}, {'text': 'What foods contain vitamin B12 ?', 'coarse_label': 1, 'fine_label': 9}, {'text': 'How do you address a Chinese person ?', 'coarse_label': 2, 'fine_label': 26}, {'text': 'What famous British actor lost his voice after an operation in 1966 ?', 'coarse_label': 3, 'fine_label': 29}, {'text': 'Where are diamonds mined ?', 'coarse_label': 4, 'fine_label': 35}, {'text': 'How many teats does a female goat sport ?', 'coarse_label': 5, 'fine_label': 38}]
after random_replace: [{'text': 'What is DTMF ?', 'coarse_label': 0, 'fine_label': 1}, {'text': 'What foods contain vitamin B12 ?', 'coarse_label': 1, 'fine_label': 9}, {'text': 'How do you address a Chinese person ?', 'coarse_label': 2, 'fine_label': 26}, {'text': 'What famous British actor lost his voice after an operation in 1966 ?', 'coarse_label': 3, 'fine_label': 29}, {'text': 'Name the largest country in South America .', 'coarse_label': 4, 'fine_label': 33}, {'text': 'How long does it take for your blood to make one complete trip through the body ?', 'coarse_label': 5, 'fine_label': 44}]
task_input: What Hermann Hesse book gave its name to a rock group ?, corse_label: 1
types: <class 'str'>, <class 'torch.Tensor'>
prompt_kwargs: {'input': 'What Hermann Hesse book gave its name to a rock group ?', 'examples_str': 'Question: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Name the largest country in South America .\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How long does it take for your blood to make one complete trip through the body ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is DTMF ?
class_name: Abbreviation 
class_index: 0
--------

Question: What foods contain vitamin B12 ?
class_name: Entity 
class_index: 1
--------

Question: How do you address a Chinese person ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What famous British actor lost his voice after an operation in 1966 ?
class_name: Human being 
class_index: 3
--------

Question: Name the largest country in South America .
class_name: Location 
class_index: 4
--------

Question: How long does it take for your blood to make one complete trip through the body ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What Hermann Hesse book gave its name to a rock group ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Name the largest country in South America .\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How long does it take for your blood to make one complete trip through the body ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What Hermann Hesse book gave its name to a rock group ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 04:14:31 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14215'), (b'x-ratelimit-remaining-tokens', b'29619'), (b'x-ratelimit-reset-requests', b'18m29.755s'), (b'x-ratelimit-reset-tokens', b'761ms'), (b'x-request-id', b'req_01hyypganxfztt7nsw62mvc43w'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab6b177bf87ae8-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Name the largest country in South America .\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How long does it take for your blood to make one complete trip through the body ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What Hermann Hesse book gave its name to a rock group ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 04:14:33 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14214'), (b'x-ratelimit-remaining-tokens', b'29995'), (b'x-ratelimit-reset-requests', b'18m33.696s'), (b'x-ratelimit-reset-tokens', b'10ms'), (b'x-request-id', b'req_01hyypgcp8ef7syarp4196qafb'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab6b245e397ae8-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is about a book title, which is likely to be an abbreviation.
class_name: ABBR
class_index: 0
task_input: What television network flogged its sports programming on Inga Nielsen 's body in 197 ?, corse_label: 3
types: <class 'str'>, <class 'torch.Tensor'>
prompt_kwargs: {'input': "What television network flogged its sports programming on Inga Nielsen 's body in 197 ?", 'examples_str': 'Question: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Name the largest country in South America .\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How long does it take for your blood to make one complete trip through the body ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is DTMF ?
class_name: Abbreviation 
class_index: 0
--------

Question: What foods contain vitamin B12 ?
class_name: Entity 
class_index: 1
--------

Question: How do you address a Chinese person ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What famous British actor lost his voice after an operation in 1966 ?
class_name: Human being 
class_index: 3
--------

Question: Name the largest country in South America .
class_name: Location 
class_index: 4
--------

Question: How long does it take for your blood to make one complete trip through the body ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What television network flogged its sports programming on Inga Nielsen 's body in 197 ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Name the largest country in South America .\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How long does it take for your blood to make one complete trip through the body ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What television network flogged its sports programming on Inga Nielsen 's body in 197 ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 04:14:34 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14214'), (b'x-ratelimit-remaining-tokens', b'29649'), (b'x-ratelimit-reset-requests', b'18m35.655999999s'), (b'x-ratelimit-reset-tokens', b'701ms'), (b'x-request-id', b'req_01hyypgd11fs8awvxq5jb6a9ww'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab6b26887a7ae8-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Name the largest country in South America .\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How long does it take for your blood to make one complete trip through the body ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What television network flogged its sports programming on Inga Nielsen 's body in 197 ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 04:14:36 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14213'), (b'x-ratelimit-remaining-tokens', b'29995'), (b'x-ratelimit-reset-requests', b'18m39.601s'), (b'x-ratelimit-reset-tokens', b'10ms'), (b'x-request-id', b'req_01hyypgf18fn8twprb960gk5q1'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab6b335b047ae8-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is about a specific event involving a television network and a person, which suggests it's a factual description.
class_name: Description and abstract concept
class_index: 2
```
task_input: Who held the endurance record for women pilots in 1929 ?, corse_label: 3
types: <class 'str'>, <class 'torch.Tensor'>
prompt_kwargs: {'input': 'Who held the endurance record for women pilots in 1929 ?', 'examples_str': 'Question: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Name the largest country in South America .\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How long does it take for your blood to make one complete trip through the body ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is DTMF ?
class_name: Abbreviation 
class_index: 0
--------

Question: What foods contain vitamin B12 ?
class_name: Entity 
class_index: 1
--------

Question: How do you address a Chinese person ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What famous British actor lost his voice after an operation in 1966 ?
class_name: Human being 
class_index: 3
--------

Question: Name the largest country in South America .
class_name: Location 
class_index: 4
--------

Question: How long does it take for your blood to make one complete trip through the body ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Who held the endurance record for women pilots in 1929 ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Name the largest country in South America .\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How long does it take for your blood to make one complete trip through the body ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Who held the endurance record for women pilots in 1929 ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 04:14:36 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'325'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14213'), (b'x-ratelimit-remaining-tokens', b'29582'), (b'x-ratelimit-reset-requests', b'18m41.749s'), (b'x-ratelimit-reset-tokens', b'835ms'), (b'x-request-id', b'req_01hyypgf93f72bhyde3bjqw568'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab6b34ec387ae8-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Name the largest country in South America .\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How long does it take for your blood to make one complete trip through the body ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Who held the endurance record for women pilots in 1929 ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 04:14:38 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14212'), (b'x-ratelimit-remaining-tokens', b'29995'), (b'x-ratelimit-reset-requests', b'18m45.677999999s'), (b'x-ratelimit-reset-tokens', b'10ms'), (b'x-request-id', b'req_01hyypgh9temztr2pqp8jwqfpd'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab6b41d8247ae8-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about a specific person who held a record, which is a characteristic of a human being.
class_name: HUM
class_index: 3
task_input: Of children between the ages of two and eleven , what percentage watch `` The Simpsons '' ?, corse_label: 5
types: <class 'str'>, <class 'torch.Tensor'>
prompt_kwargs: {'input': "Of children between the ages of two and eleven , what percentage watch `` The Simpsons '' ?", 'examples_str': 'Question: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Name the largest country in South America .\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How long does it take for your blood to make one complete trip through the body ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is DTMF ?
class_name: Abbreviation 
class_index: 0
--------

Question: What foods contain vitamin B12 ?
class_name: Entity 
class_index: 1
--------

Question: How do you address a Chinese person ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What famous British actor lost his voice after an operation in 1966 ?
class_name: Human being 
class_index: 3
--------

Question: Name the largest country in South America .
class_name: Location 
class_index: 4
--------

Question: How long does it take for your blood to make one complete trip through the body ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Of children between the ages of two and eleven , what percentage watch `` The Simpsons '' ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Name the largest country in South America .\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How long does it take for your blood to make one complete trip through the body ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Of children between the ages of two and eleven , what percentage watch `` The Simpsons '' ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 04:14:38 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14212'), (b'x-ratelimit-remaining-tokens', b'29593'), (b'x-ratelimit-reset-requests', b'18m47.755s'), (b'x-ratelimit-reset-tokens', b'814ms'), (b'x-request-id', b'req_01hyypghhhempvk6fdrttwdqkw'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab6b4369727ae8-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Name the largest country in South America .\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How long does it take for your blood to make one complete trip through the body ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Of children between the ages of two and eleven , what percentage watch `` The Simpsons '' ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 04:14:40 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14211'), (b'x-ratelimit-remaining-tokens', b'29995'), (b'x-ratelimit-reset-requests', b'18m51.702s'), (b'x-ratelimit-reset-tokens', b'10ms'), (b'x-request-id', b'req_01hyypgkhpey88tre0e6sa5dx1'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab6b503c257ae8-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is about the percentage of children watching a TV show, which is a numeric value.
class_name: NUM
class_index: 5
task_input: What `` magic '' does Mandrake employ ?, corse_label: 1
types: <class 'str'>, <class 'torch.Tensor'>
prompt_kwargs: {'input': "What `` magic '' does Mandrake employ ?", 'examples_str': 'Question: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Name the largest country in South America .\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How long does it take for your blood to make one complete trip through the body ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is DTMF ?
class_name: Abbreviation 
class_index: 0
--------

Question: What foods contain vitamin B12 ?
class_name: Entity 
class_index: 1
--------

Question: How do you address a Chinese person ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What famous British actor lost his voice after an operation in 1966 ?
class_name: Human being 
class_index: 3
--------

Question: Name the largest country in South America .
class_name: Location 
class_index: 4
--------

Question: How long does it take for your blood to make one complete trip through the body ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What `` magic '' does Mandrake employ ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Name the largest country in South America .\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How long does it take for your blood to make one complete trip through the body ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What `` magic '' does Mandrake employ ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 04:14:41 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14211'), (b'x-ratelimit-remaining-tokens', b'29602'), (b'x-ratelimit-reset-requests', b'18m53.707999999s'), (b'x-ratelimit-reset-tokens', b'795ms'), (b'x-request-id', b'req_01hyypgkttfs8tcsz0zp23656x'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab6b520da27ae8-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Name the largest country in South America .\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How long does it take for your blood to make one complete trip through the body ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What `` magic '' does Mandrake employ ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 04:14:43 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14210'), (b'x-ratelimit-remaining-tokens', b'29995'), (b'x-ratelimit-reset-requests', b'18m57.646s'), (b'x-ratelimit-reset-tokens', b'10ms'), (b'x-request-id', b'req_01hyypgnv8ef89jemj4atk2skb'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab6b5ef8e97ae8-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is about a fictional concept, "magic", which is often associated with fantasy and fantasy creatures like Mandrake.
class_name: Description and abstract concept
class_index: 2
task_input: Where is the Orange Bowl ?, corse_label: 4
types: <class 'str'>, <class 'torch.Tensor'>
prompt_kwargs: {'input': 'Where is the Orange Bowl ?', 'examples_str': 'Question: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Name the largest country in South America .\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How long does it take for your blood to make one complete trip through the body ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is DTMF ?
class_name: Abbreviation 
class_index: 0
--------

Question: What foods contain vitamin B12 ?
class_name: Entity 
class_index: 1
--------

Question: How do you address a Chinese person ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What famous British actor lost his voice after an operation in 1966 ?
class_name: Human being 
class_index: 3
--------

Question: Name the largest country in South America .
class_name: Location 
class_index: 4
--------

Question: How long does it take for your blood to make one complete trip through the body ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Where is the Orange Bowl ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Name the largest country in South America .\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How long does it take for your blood to make one complete trip through the body ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Where is the Orange Bowl ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 04:14:43 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14210'), (b'x-ratelimit-remaining-tokens', b'29610'), (b'x-ratelimit-reset-requests', b'18m59.713999999s'), (b'x-ratelimit-reset-tokens', b'780ms'), (b'x-request-id', b'req_01hyypgp47fmvsg8qr3c5z44zh'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab6b60ba777ae8-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Name the largest country in South America .\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How long does it take for your blood to make one complete trip through the body ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Where is the Orange Bowl ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 04:14:45 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14209'), (b'x-ratelimit-remaining-tokens', b'29995'), (b'x-ratelimit-reset-requests', b'19m3.652s'), (b'x-ratelimit-reset-tokens', b'10ms'), (b'x-request-id', b'req_01hyypgr4nfxntvg2cgz3w07av'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab6b6dae5b7ae8-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking for the location of the Orange Bowl, which is a specific stadium.
class_name: Location
class_index: 4
```
task_input: What is `` the airline built for professional travelers '' ?, corse_label: 3
types: <class 'str'>, <class 'torch.Tensor'>
prompt_kwargs: {'input': "What is `` the airline built for professional travelers '' ?", 'examples_str': 'Question: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Name the largest country in South America .\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How long does it take for your blood to make one complete trip through the body ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is DTMF ?
class_name: Abbreviation 
class_index: 0
--------

Question: What foods contain vitamin B12 ?
class_name: Entity 
class_index: 1
--------

Question: How do you address a Chinese person ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What famous British actor lost his voice after an operation in 1966 ?
class_name: Human being 
class_index: 3
--------

Question: Name the largest country in South America .
class_name: Location 
class_index: 4
--------

Question: How long does it take for your blood to make one complete trip through the body ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What is `` the airline built for professional travelers '' ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Name the largest country in South America .\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How long does it take for your blood to make one complete trip through the body ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is `` the airline built for professional travelers '' ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 04:14:45 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14209'), (b'x-ratelimit-remaining-tokens', b'29638'), (b'x-ratelimit-reset-requests', b'19m5.604999999s'), (b'x-ratelimit-reset-tokens', b'723ms'), (b'x-request-id', b'req_01hyypgrh1eya9n5v6rnychy2w'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab6b7018987ae8-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Name the largest country in South America .\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How long does it take for your blood to make one complete trip through the body ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is `` the airline built for professional travelers '' ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 04:14:48 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14208'), (b'x-ratelimit-remaining-tokens', b'29995'), (b'x-ratelimit-reset-requests', b'19m9.537s'), (b'x-ratelimit-reset-tokens', b'10ms'), (b'x-request-id', b'req_01hyypgthneyabb4sngc562457'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab6b7cfb437ae8-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the airline built for professional travelers, which is a specific company, so it's likely an abbreviation.
class_name: ABBR
class_index: 0
```
task_input: What is the date of Bastille Day ?, corse_label: 5
types: <class 'str'>, <class 'torch.Tensor'>
prompt_kwargs: {'input': 'What is the date of Bastille Day ?', 'examples_str': 'Question: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Name the largest country in South America .\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How long does it take for your blood to make one complete trip through the body ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is DTMF ?
class_name: Abbreviation 
class_index: 0
--------

Question: What foods contain vitamin B12 ?
class_name: Entity 
class_index: 1
--------

Question: How do you address a Chinese person ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What famous British actor lost his voice after an operation in 1966 ?
class_name: Human being 
class_index: 3
--------

Question: Name the largest country in South America .
class_name: Location 
class_index: 4
--------

Question: How long does it take for your blood to make one complete trip through the body ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What is the date of Bastille Day ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Name the largest country in South America .\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How long does it take for your blood to make one complete trip through the body ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is the date of Bastille Day ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 04:14:48 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14208'), (b'x-ratelimit-remaining-tokens', b'29596'), (b'x-ratelimit-reset-requests', b'19m11.681s'), (b'x-ratelimit-reset-tokens', b'808ms'), (b'x-request-id', b'req_01hyypgtvnedd93pv5x6bcyhzh'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab6b7efd287ae8-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Name the largest country in South America .\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How long does it take for your blood to make one complete trip through the body ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is the date of Bastille Day ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 04:14:50 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14207'), (b'x-ratelimit-remaining-tokens', b'29995'), (b'x-ratelimit-reset-requests', b'19m15.629999999s'), (b'x-ratelimit-reset-tokens', b'10ms'), (b'x-request-id', b'req_01hyypgwvrfn9aqsh3abkhyndz'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab6b8bd8a57ae8-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking for a specific date, which is a numeric value.
class_name: NUM
class_index: 5
task_input: What invention does the principle of conservation of energy make impossible ?, corse_label: 1
types: <class 'str'>, <class 'torch.Tensor'>
prompt_kwargs: {'input': 'What invention does the principle of conservation of energy make impossible ?', 'examples_str': 'Question: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Name the largest country in South America .\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How long does it take for your blood to make one complete trip through the body ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is DTMF ?
class_name: Abbreviation 
class_index: 0
--------

Question: What foods contain vitamin B12 ?
class_name: Entity 
class_index: 1
--------

Question: How do you address a Chinese person ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What famous British actor lost his voice after an operation in 1966 ?
class_name: Human being 
class_index: 3
--------

Question: Name the largest country in South America .
class_name: Location 
class_index: 4
--------

Question: How long does it take for your blood to make one complete trip through the body ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What invention does the principle of conservation of energy make impossible ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Name the largest country in South America .\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How long does it take for your blood to make one complete trip through the body ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What invention does the principle of conservation of energy make impossible ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 04:14:50 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'325'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14207'), (b'x-ratelimit-remaining-tokens', b'29653'), (b'x-ratelimit-reset-requests', b'19m17.619999999s'), (b'x-ratelimit-reset-tokens', b'693ms'), (b'x-request-id', b'req_01hyypgx7nfmvr98mgbwg169tp'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab6b8e3aa17ae8-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Name the largest country in South America .\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How long does it take for your blood to make one complete trip through the body ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What invention does the principle of conservation of energy make impossible ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 04:14:52 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14206'), (b'x-ratelimit-remaining-tokens', b'29995'), (b'x-ratelimit-reset-requests', b'19m21.557s'), (b'x-ratelimit-reset-tokens', b'10ms'), (b'x-request-id', b'req_01hyypgz85f8qbfk37rpk0kt9d'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab6b9b2d027ae8-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the principle of conservation of energy and its relation to an invention, which is an abstract concept.
class_name: Description and abstract concept
class_index: 2
task_input: What are boxcars ?, corse_label: 2
types: <class 'str'>, <class 'torch.Tensor'>
prompt_kwargs: {'input': 'What are boxcars ?', 'examples_str': 'Question: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Name the largest country in South America .\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How long does it take for your blood to make one complete trip through the body ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is DTMF ?
class_name: Abbreviation 
class_index: 0
--------

Question: What foods contain vitamin B12 ?
class_name: Entity 
class_index: 1
--------

Question: How do you address a Chinese person ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What famous British actor lost his voice after an operation in 1966 ?
class_name: Human being 
class_index: 3
--------

Question: Name the largest country in South America .
class_name: Location 
class_index: 4
--------

Question: How long does it take for your blood to make one complete trip through the body ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What are boxcars ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Name the largest country in South America .\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How long does it take for your blood to make one complete trip through the body ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What are boxcars ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 04:14:53 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14206'), (b'x-ratelimit-remaining-tokens', b'29659'), (b'x-ratelimit-reset-requests', b'19m23.608999999s'), (b'x-ratelimit-reset-tokens', b'681ms'), (b'x-request-id', b'req_01hyypgzmcfava43astfw4kgj0'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab6b9d9f067ae8-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Name the largest country in South America .\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How long does it take for your blood to make one complete trip through the body ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What are boxcars ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 04:14:55 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14205'), (b'x-ratelimit-remaining-tokens', b'29995'), (b'x-ratelimit-reset-requests', b'19m27.511999999s'), (b'x-ratelimit-reset-tokens', b'10ms'), (b'x-request-id', b'req_01hyyph1nwfb49qn9shky3djr2'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab6baabba87ae8-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is asking about a specific term or concept, which is typically represented by an abbreviation.
class_name: ABBR
class_index: 0
```
responses: [0, 2, 3, 5, 2, 4, 0, 5, 2, 0], targets: [1, 3, 3, 5, 1, 4, 3, 5, 1, 2]
num_invalid: 0
Preds tensor: tensor([[1., 0., 0., 0., 0., 0.],
        [0., 0., 1., 0., 0., 0.],
        [0., 0., 0., 1., 0., 0.],
        [0., 0., 0., 0., 0., 1.],
        [0., 0., 1., 0., 0., 0.],
        [0., 0., 0., 0., 1., 0.],
        [1., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 1.],
        [0., 0., 1., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0.]])
Targets tensor: tensor([1, 3, 3, 5, 1, 4, 3, 5, 1, 2])
Eval Accuracy 3 1: 0.4, F1: 0.417, score: 0.817
data: {'text': 'How far is it from Denver to Aspen ?', 'coarse_label': 5, 'fine_label': 40}
task_input: How far is it from Denver to Aspen ?, corse_label: 5
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'How far is it from Denver to Aspen ?', 'examples_str': 'Question: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is DTMF ?
class_name: Abbreviation 
class_index: 0
--------

Question: What foods contain vitamin B12 ?
class_name: Entity 
class_index: 1
--------

Question: How do you address a Chinese person ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What famous British actor lost his voice after an operation in 1966 ?
class_name: Human being 
class_index: 3
--------

Question: Where are diamonds mined ?
class_name: Location 
class_index: 4
--------

Question: How many teats does a female goat sport ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: How far is it from Denver to Aspen ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: How far is it from Denver to Aspen ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 04:14:55 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14205'), (b'x-ratelimit-remaining-tokens', b'29614'), (b'x-ratelimit-reset-requests', b'19m29.738s'), (b'x-ratelimit-reset-tokens', b'772ms'), (b'x-request-id', b'req_01hyyph1y3f4xvpmsgt8h0f6dq'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab6bac5d187ae8-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: How far is it from Denver to Aspen ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 04:14:57 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14204'), (b'x-ratelimit-remaining-tokens', b'29995'), (b'x-ratelimit-reset-requests', b'19m33.674999999s'), (b'x-ratelimit-reset-tokens', b'10ms'), (b'x-request-id', b'req_01hyyph3yjfxpa48z171m018jr'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab6bb92fa37ae8-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the distance between two cities, which is a measurable value.
class_name: Numeric value
class_index: 5
data: {'text': 'What county is Modesto , California in ?', 'coarse_label': 4, 'fine_label': 32}
task_input: What county is Modesto , California in ?, corse_label: 4
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What county is Modesto , California in ?', 'examples_str': 'Question: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is DTMF ?
class_name: Abbreviation 
class_index: 0
--------

Question: What foods contain vitamin B12 ?
class_name: Entity 
class_index: 1
--------

Question: How do you address a Chinese person ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What famous British actor lost his voice after an operation in 1966 ?
class_name: Human being 
class_index: 3
--------

Question: Where are diamonds mined ?
class_name: Location 
class_index: 4
--------

Question: How many teats does a female goat sport ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What county is Modesto , California in ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What county is Modesto , California in ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 04:14:57 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14204'), (b'x-ratelimit-remaining-tokens', b'29614'), (b'x-ratelimit-reset-requests', b'19m35.763999999s'), (b'x-ratelimit-reset-tokens', b'771ms'), (b'x-request-id', b'req_01hyyph45ye7xs8wqtng7jrpa9'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab6bbaa90b7ae8-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What county is Modesto , California in ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 04:14:59 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14203'), (b'x-ratelimit-remaining-tokens', b'29995'), (b'x-ratelimit-reset-requests', b'19m39.704s'), (b'x-ratelimit-reset-tokens', b'10ms'), (b'x-request-id', b'req_01hyyph66afxpswktzx4xjp670'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab6bc78cdc7ae8-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the location of Modesto, California, which is a specific geographic location.
class_name: Location
class_index: 4
data: {'text': 'Who was Galileo ?', 'coarse_label': 3, 'fine_label': 31}
task_input: Who was Galileo ?, corse_label: 3
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'Who was Galileo ?', 'examples_str': 'Question: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is DTMF ?
class_name: Abbreviation 
class_index: 0
--------

Question: What foods contain vitamin B12 ?
class_name: Entity 
class_index: 1
--------

Question: How do you address a Chinese person ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What famous British actor lost his voice after an operation in 1966 ?
class_name: Human being 
class_index: 3
--------

Question: Where are diamonds mined ?
class_name: Location 
class_index: 4
--------

Question: How many teats does a female goat sport ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Who was Galileo ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Who was Galileo ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 04:15:00 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14203'), (b'x-ratelimit-remaining-tokens', b'29632'), (b'x-ratelimit-reset-requests', b'19m41.708999999s'), (b'x-ratelimit-reset-tokens', b'736ms'), (b'x-request-id', b'req_01hyyph6fefcya3bxh9bm2d73w'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab6bc96ea87ae8-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Who was Galileo ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 04:15:02 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14202'), (b'x-ratelimit-remaining-tokens', b'29995'), (b'x-ratelimit-reset-requests', b'19m45.646s'), (b'x-ratelimit-reset-tokens', b'10ms'), (b'x-request-id', b'req_01hyyph8fxf8rbfnbtczrc1ppq'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab6bd64b777ae8-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is asking about a historical figure, Galileo, which is a human being.
class_name: HUM
class_index: 3
```
data: {'text': 'What is an atom ?', 'coarse_label': 2, 'fine_label': 24}
task_input: What is an atom ?, corse_label: 2
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What is an atom ?', 'examples_str': 'Question: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is DTMF ?
class_name: Abbreviation 
class_index: 0
--------

Question: What foods contain vitamin B12 ?
class_name: Entity 
class_index: 1
--------

Question: How do you address a Chinese person ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What famous British actor lost his voice after an operation in 1966 ?
class_name: Human being 
class_index: 3
--------

Question: Where are diamonds mined ?
class_name: Location 
class_index: 4
--------

Question: How many teats does a female goat sport ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What is an atom ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is an atom ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 04:15:02 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14202'), (b'x-ratelimit-remaining-tokens', b'29656'), (b'x-ratelimit-reset-requests', b'19m47.646s'), (b'x-ratelimit-reset-tokens', b'688ms'), (b'x-request-id', b'req_01hyyph8tzf4y8pqh3pnbzx027'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab6bd87dcf7ae8-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is an atom ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 04:15:04 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14201'), (b'x-ratelimit-remaining-tokens', b'29995'), (b'x-ratelimit-reset-requests', b'19m51.586999999s'), (b'x-ratelimit-reset-tokens', b'10ms'), (b'x-request-id', b'req_01hyyphavafsaa5yc6the8aegb'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab6be55a717ae8-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is asking about the definition of an atom, which is a fundamental concept in physics.
class_name: Description and abstract concept
class_index: 2
data: {'text': 'When did Hawaii become a state ?', 'coarse_label': 5, 'fine_label': 39}
task_input: When did Hawaii become a state ?, corse_label: 5
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'When did Hawaii become a state ?', 'examples_str': 'Question: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is DTMF ?
class_name: Abbreviation 
class_index: 0
--------

Question: What foods contain vitamin B12 ?
class_name: Entity 
class_index: 1
--------

Question: How do you address a Chinese person ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What famous British actor lost his voice after an operation in 1966 ?
class_name: Human being 
class_index: 3
--------

Question: Where are diamonds mined ?
class_name: Location 
class_index: 4
--------

Question: How many teats does a female goat sport ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: When did Hawaii become a state ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: When did Hawaii become a state ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 04:15:04 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14201'), (b'x-ratelimit-remaining-tokens', b'29678'), (b'x-ratelimit-reset-requests', b'19m53.575s'), (b'x-ratelimit-reset-tokens', b'644ms'), (b'x-request-id', b'req_01hyyphb8mfhhafd09xq26rd6w'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab6be7ecf87ae8-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: When did Hawaii become a state ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 04:15:07 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14200'), (b'x-ratelimit-remaining-tokens', b'29995'), (b'x-ratelimit-reset-requests', b'19m57.508999999s'), (b'x-ratelimit-reset-tokens', b'10ms'), (b'x-request-id', b'req_01hyyphd95fb4tqvsf8vebfna1'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab6bf4e8b67ae8-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about a historical event, specifically the date when Hawaii became a state.
class_name: Description and abstract concept
class_index: 2
data: {'text': 'How tall is the Sears Building ?', 'coarse_label': 5, 'fine_label': 40}
task_input: How tall is the Sears Building ?, corse_label: 5
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'How tall is the Sears Building ?', 'examples_str': 'Question: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is DTMF ?
class_name: Abbreviation 
class_index: 0
--------

Question: What foods contain vitamin B12 ?
class_name: Entity 
class_index: 1
--------

Question: How do you address a Chinese person ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What famous British actor lost his voice after an operation in 1966 ?
class_name: Human being 
class_index: 3
--------

Question: Where are diamonds mined ?
class_name: Location 
class_index: 4
--------

Question: How many teats does a female goat sport ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: How tall is the Sears Building ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: How tall is the Sears Building ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 04:15:07 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14200'), (b'x-ratelimit-remaining-tokens', b'29613'), (b'x-ratelimit-reset-requests', b'19m59.728999999s'), (b'x-ratelimit-reset-tokens', b'774ms'), (b'x-request-id', b'req_01hyyphdhpfavte4vjwwhff2nz'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab6bf6aaa17ae8-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: How tall is the Sears Building ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 04:15:09 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14199'), (b'x-ratelimit-remaining-tokens', b'29995'), (b'x-ratelimit-reset-requests', b'20m3.668s'), (b'x-ratelimit-reset-tokens', b'10ms'), (b'x-request-id', b'req_01hyyphfj3fq9sn88t0wp68ycs'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab6c038e617ae8-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking for a specific measurement, which is typically a numeric value.
class_name: NUM
class_index: 5
data: {'text': 'George Bush purchased a small interest in which baseball team ?', 'coarse_label': 3, 'fine_label': 28}
task_input: George Bush purchased a small interest in which baseball team ?, corse_label: 3
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'George Bush purchased a small interest in which baseball team ?', 'examples_str': 'Question: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is DTMF ?
class_name: Abbreviation 
class_index: 0
--------

Question: What foods contain vitamin B12 ?
class_name: Entity 
class_index: 1
--------

Question: How do you address a Chinese person ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What famous British actor lost his voice after an operation in 1966 ?
class_name: Human being 
class_index: 3
--------

Question: Where are diamonds mined ?
class_name: Location 
class_index: 4
--------

Question: How many teats does a female goat sport ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: George Bush purchased a small interest in which baseball team ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: George Bush purchased a small interest in which baseball team ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 04:15:09 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14199'), (b'x-ratelimit-remaining-tokens', b'29672'), (b'x-ratelimit-reset-requests', b'20m5.618999999s'), (b'x-ratelimit-reset-tokens', b'655ms'), (b'x-request-id', b'req_01hyyphfy2fmwrpszrqkcxjazq'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab6c05e8527ae8-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: George Bush purchased a small interest in which baseball team ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 04:15:12 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14198'), (b'x-ratelimit-remaining-tokens', b'29995'), (b'x-ratelimit-reset-requests', b'20m9.56s'), (b'x-ratelimit-reset-tokens', b'10ms'), (b'x-request-id', b'req_01hyyphhydfzw9mgzq26bxj4w7'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab6c12c9f77ae8-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about a specific baseball team, which is a specific entity.
class_name: Entity
class_index: 1
data: {'text': "What is Australia 's national flower ?", 'coarse_label': 1, 'fine_label': 14}
task_input: What is Australia 's national flower ?, corse_label: 1
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': "What is Australia 's national flower ?", 'examples_str': 'Question: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is DTMF ?
class_name: Abbreviation 
class_index: 0
--------

Question: What foods contain vitamin B12 ?
class_name: Entity 
class_index: 1
--------

Question: How do you address a Chinese person ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What famous British actor lost his voice after an operation in 1966 ?
class_name: Human being 
class_index: 3
--------

Question: Where are diamonds mined ?
class_name: Location 
class_index: 4
--------

Question: How many teats does a female goat sport ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What is Australia 's national flower ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is Australia 's national flower ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 04:15:12 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14198'), (b'x-ratelimit-remaining-tokens', b'29625'), (b'x-ratelimit-reset-requests', b'20m11.705s'), (b'x-ratelimit-reset-tokens', b'750ms'), (b'x-request-id', b'req_01hyyphj7mf49aseqf2mxzfbjt'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab6c149b457ae8-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is Australia 's national flower ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 04:15:14 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14197'), (b'x-ratelimit-remaining-tokens', b'29995'), (b'x-ratelimit-reset-requests', b'20m15.638999999s'), (b'x-ratelimit-reset-tokens', b'10ms'), (b'x-request-id', b'req_01hyyphm86fxq8qqdeajjdkeff'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab6c218d3e7ae8-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the national flower of Australia, which is a specific piece of information.
class_name: Description and abstract concept
class_index: 2
data: {'text': 'Why does the moon turn orange ?', 'coarse_label': 2, 'fine_label': 27}
task_input: Why does the moon turn orange ?, corse_label: 2
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'Why does the moon turn orange ?', 'examples_str': 'Question: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is DTMF ?
class_name: Abbreviation 
class_index: 0
--------

Question: What foods contain vitamin B12 ?
class_name: Entity 
class_index: 1
--------

Question: How do you address a Chinese person ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What famous British actor lost his voice after an operation in 1966 ?
class_name: Human being 
class_index: 3
--------

Question: Where are diamonds mined ?
class_name: Location 
class_index: 4
--------

Question: How many teats does a female goat sport ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Why does the moon turn orange ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Why does the moon turn orange ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 04:15:14 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'325'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14197'), (b'x-ratelimit-remaining-tokens', b'29636'), (b'x-ratelimit-reset-requests', b'20m17.708999999s'), (b'x-ratelimit-reset-tokens', b'728ms'), (b'x-request-id', b'req_01hyyphmhafqaarmj8nf5q34xj'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab6c235ed67ae8-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Why does the moon turn orange ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 04:15:17 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14196'), (b'x-ratelimit-remaining-tokens', b'29995'), (b'x-ratelimit-reset-requests', b'20m21.647s'), (b'x-ratelimit-reset-tokens', b'10ms'), (b'x-request-id', b'req_01hyyphphrfb59sc8hks7djymn'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab6c3039b57ae8-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the moon's color, which is a descriptive concept, and the moon is not a human being, location, or numeric value.
class_name: Description and abstract concept
class_index: 2
data: {'text': 'What is autism ?', 'coarse_label': 2, 'fine_label': 24}
task_input: What is autism ?, corse_label: 2
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What is autism ?', 'examples_str': 'Question: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is DTMF ?
class_name: Abbreviation 
class_index: 0
--------

Question: What foods contain vitamin B12 ?
class_name: Entity 
class_index: 1
--------

Question: How do you address a Chinese person ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What famous British actor lost his voice after an operation in 1966 ?
class_name: Human being 
class_index: 3
--------

Question: Where are diamonds mined ?
class_name: Location 
class_index: 4
--------

Question: How many teats does a female goat sport ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What is autism ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is autism ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 04:15:17 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14196'), (b'x-ratelimit-remaining-tokens', b'29597'), (b'x-ratelimit-reset-requests', b'20m23.454999999s'), (b'x-ratelimit-reset-tokens', b'805ms'), (b'x-request-id', b'req_01hyyphq2tfwgtcpgmysgwdv26'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab6c33ac4e7ae8-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is autism ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 04:15:19 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14195'), (b'x-ratelimit-remaining-tokens', b'29995'), (b'x-ratelimit-reset-requests', b'20m27.382s'), (b'x-ratelimit-reset-tokens', b'10ms'), (b'x-request-id', b'req_01hyyphs3kfxqr47qg85qr5w3c'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab6c409ecf7ae8-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is about a medical condition, which is typically described in a descriptive and abstract manner.
class_name: DESC
class_index: 2
data: {'text': 'What city had a world fair in 1900 ?', 'coarse_label': 4, 'fine_label': 32}
task_input: What city had a world fair in 1900 ?, corse_label: 4
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What city had a world fair in 1900 ?', 'examples_str': 'Question: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is DTMF ?
class_name: Abbreviation 
class_index: 0
--------

Question: What foods contain vitamin B12 ?
class_name: Entity 
class_index: 1
--------

Question: How do you address a Chinese person ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What famous British actor lost his voice after an operation in 1966 ?
class_name: Human being 
class_index: 3
--------

Question: Where are diamonds mined ?
class_name: Location 
class_index: 4
--------

Question: How many teats does a female goat sport ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What city had a world fair in 1900 ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What city had a world fair in 1900 ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 04:15:19 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14195'), (b'x-ratelimit-remaining-tokens', b'29649'), (b'x-ratelimit-reset-requests', b'20m29.662999999s'), (b'x-ratelimit-reset-tokens', b'701ms'), (b'x-request-id', b'req_01hyyphse5exp8786b0shrsy54'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab6c42b8497ae8-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What city had a world fair in 1900 ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 04:15:21 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14194'), (b'x-ratelimit-remaining-tokens', b'29995'), (b'x-ratelimit-reset-requests', b'20m33.599s'), (b'x-ratelimit-reset-tokens', b'10ms'), (b'x-request-id', b'req_01hyyphvenfb5vpnned8kcp5r2'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab6c4fab087ae8-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is asking about a specific event in the past, which is likely to be related to a location.
class_name: Location
class_index: 4
data: {'text': "What person 's head is on a dime ?", 'coarse_label': 3, 'fine_label': 29}
task_input: What person 's head is on a dime ?, corse_label: 3
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': "What person 's head is on a dime ?", 'examples_str': 'Question: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is DTMF ?
class_name: Abbreviation 
class_index: 0
--------

Question: What foods contain vitamin B12 ?
class_name: Entity 
class_index: 1
--------

Question: How do you address a Chinese person ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What famous British actor lost his voice after an operation in 1966 ?
class_name: Human being 
class_index: 3
--------

Question: Where are diamonds mined ?
class_name: Location 
class_index: 4
--------

Question: How many teats does a female goat sport ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What person 's head is on a dime ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What person 's head is on a dime ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 04:15:21 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14194'), (b'x-ratelimit-remaining-tokens', b'29631'), (b'x-ratelimit-reset-requests', b'20m35.711999999s'), (b'x-ratelimit-reset-tokens', b'737ms'), (b'x-request-id', b'req_01hyyphvqpexy8yt4rw8n2t7db'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab6c517c7b7ae8-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What person 's head is on a dime ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 04:15:24 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14193'), (b'x-ratelimit-remaining-tokens', b'29995'), (b'x-ratelimit-reset-requests', b'20m39.654s'), (b'x-ratelimit-reset-tokens', b'10ms'), (b'x-request-id', b'req_01hyyphxr1efa9caexejn67v9p'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab6c5e4e587ae8-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about a person's head being on a dime, which is a common idiomatic expression.
class_name: Human being
class_index: 3
data: {'text': 'What is the average weight of a Yellow Labrador ?', 'coarse_label': 5, 'fine_label': 49}
task_input: What is the average weight of a Yellow Labrador ?, corse_label: 5
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What is the average weight of a Yellow Labrador ?', 'examples_str': 'Question: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is DTMF ?
class_name: Abbreviation 
class_index: 0
--------

Question: What foods contain vitamin B12 ?
class_name: Entity 
class_index: 1
--------

Question: How do you address a Chinese person ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What famous British actor lost his voice after an operation in 1966 ?
class_name: Human being 
class_index: 3
--------

Question: Where are diamonds mined ?
class_name: Location 
class_index: 4
--------

Question: How many teats does a female goat sport ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What is the average weight of a Yellow Labrador ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is the average weight of a Yellow Labrador ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 04:15:24 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'325'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14193'), (b'x-ratelimit-remaining-tokens', b'29606'), (b'x-ratelimit-reset-requests', b'20m41.739s'), (b'x-ratelimit-reset-tokens', b'787ms'), (b'x-request-id', b'req_01hyyphy05fawsvm37q82sk9g8'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab6c5fefb17ae8-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is the average weight of a Yellow Labrador ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 04:15:26 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14192'), (b'x-ratelimit-remaining-tokens', b'29995'), (b'x-ratelimit-reset-requests', b'20m45.677999999s'), (b'x-ratelimit-reset-tokens', b'10ms'), (b'x-request-id', b'req_01hyypj00ken2886kewkn7swxj'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab6c6cdb017ae8-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking for a specific numerical value, which is the average weight of a Yellow Labrador.
class_name: Numeric value
class_index: 5
```
data: {'text': 'Who was the first man to fly across the Pacific Ocean ?', 'coarse_label': 3, 'fine_label': 29}
task_input: Who was the first man to fly across the Pacific Ocean ?, corse_label: 3
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'Who was the first man to fly across the Pacific Ocean ?', 'examples_str': 'Question: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is DTMF ?
class_name: Abbreviation 
class_index: 0
--------

Question: What foods contain vitamin B12 ?
class_name: Entity 
class_index: 1
--------

Question: How do you address a Chinese person ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What famous British actor lost his voice after an operation in 1966 ?
class_name: Human being 
class_index: 3
--------

Question: Where are diamonds mined ?
class_name: Location 
class_index: 4
--------

Question: How many teats does a female goat sport ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Who was the first man to fly across the Pacific Ocean ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Who was the first man to fly across the Pacific Ocean ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 04:15:26 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14192'), (b'x-ratelimit-remaining-tokens', b'29604'), (b'x-ratelimit-reset-requests', b'20m47.733s'), (b'x-ratelimit-reset-tokens', b'791ms'), (b'x-request-id', b'req_01hyypj090f4aazkhpe9e6z625'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab6c6e7c727ae8-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Who was the first man to fly across the Pacific Ocean ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 04:15:28 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14191'), (b'x-ratelimit-remaining-tokens', b'29995'), (b'x-ratelimit-reset-requests', b'20m51.675999999s'), (b'x-ratelimit-reset-tokens', b'10ms'), (b'x-request-id', b'req_01hyypj297emsb2mdbya36e6q8'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab6c7b5fa47ae8-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is about a historical event and a person, which is a characteristic of a human being.
class_name: HUM
class_index: 3
data: {'text': 'When did Idaho become a state ?', 'coarse_label': 5, 'fine_label': 39}
task_input: When did Idaho become a state ?, corse_label: 5
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'When did Idaho become a state ?', 'examples_str': 'Question: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is DTMF ?
class_name: Abbreviation 
class_index: 0
--------

Question: What foods contain vitamin B12 ?
class_name: Entity 
class_index: 1
--------

Question: How do you address a Chinese person ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What famous British actor lost his voice after an operation in 1966 ?
class_name: Human being 
class_index: 3
--------

Question: Where are diamonds mined ?
class_name: Location 
class_index: 4
--------

Question: How many teats does a female goat sport ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: When did Idaho become a state ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: When did Idaho become a state ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 04:15:28 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14191'), (b'x-ratelimit-remaining-tokens', b'29647'), (b'x-ratelimit-reset-requests', b'20m53.644s'), (b'x-ratelimit-reset-tokens', b'705ms'), (b'x-request-id', b'req_01hyypj2mcfwhb8x7gzkqeet1h'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab6c7d89577ae8-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: When did Idaho become a state ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 04:15:31 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14190'), (b'x-ratelimit-remaining-tokens', b'29995'), (b'x-ratelimit-reset-requests', b'20m57.584999999s'), (b'x-ratelimit-reset-tokens', b'10ms'), (b'x-request-id', b'req_01hyypj4mqen2a97chfgy4s1r1'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab6c8a7b307ae8-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about a specific event in the past, which is related to a geographic location.
class_name: "DESC"
class_index: "2"
data: {'text': 'What is the life expectancy for crickets ?', 'coarse_label': 5, 'fine_label': 43}
task_input: What is the life expectancy for crickets ?, corse_label: 5
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What is the life expectancy for crickets ?', 'examples_str': 'Question: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is DTMF ?
class_name: Abbreviation 
class_index: 0
--------

Question: What foods contain vitamin B12 ?
class_name: Entity 
class_index: 1
--------

Question: How do you address a Chinese person ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What famous British actor lost his voice after an operation in 1966 ?
class_name: Human being 
class_index: 3
--------

Question: Where are diamonds mined ?
class_name: Location 
class_index: 4
--------

Question: How many teats does a female goat sport ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What is the life expectancy for crickets ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is the life expectancy for crickets ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 04:15:31 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14190'), (b'x-ratelimit-remaining-tokens', b'29607'), (b'x-ratelimit-reset-requests', b'20m59.768999999s'), (b'x-ratelimit-reset-tokens', b'786ms'), (b'x-request-id', b'req_01hyypj4vzfvca971v1rq71gw2'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab6c8bec2c7ae8-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is the life expectancy for crickets ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 04:15:33 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14189'), (b'x-ratelimit-remaining-tokens', b'29995'), (b'x-ratelimit-reset-requests', b'21m3.709s'), (b'x-ratelimit-reset-tokens', b'10ms'), (b'x-request-id', b'req_01hyypj6wbf8svn5rb595rf0f3'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab6c98ceae7ae8-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the life expectancy of crickets, which is a specific fact or statistic, and is typically represented as a numeric value.
class_name: NUM
class_index: 5
data: {'text': 'What metal has the highest melting point ?', 'coarse_label': 1, 'fine_label': 18}
task_input: What metal has the highest melting point ?, corse_label: 1
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What metal has the highest melting point ?', 'examples_str': 'Question: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is DTMF ?
class_name: Abbreviation 
class_index: 0
--------

Question: What foods contain vitamin B12 ?
class_name: Entity 
class_index: 1
--------

Question: How do you address a Chinese person ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What famous British actor lost his voice after an operation in 1966 ?
class_name: Human being 
class_index: 3
--------

Question: Where are diamonds mined ?
class_name: Location 
class_index: 4
--------

Question: How many teats does a female goat sport ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What metal has the highest melting point ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What metal has the highest melting point ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 04:15:33 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14189'), (b'x-ratelimit-remaining-tokens', b'29612'), (b'x-ratelimit-reset-requests', b'21m5.733s'), (b'x-ratelimit-reset-tokens', b'776ms'), (b'x-request-id', b'req_01hyypj74qfd09jden4bj2yarf'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab6c9a7fe37ae8-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What metal has the highest melting point ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 04:15:35 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14188'), (b'x-ratelimit-remaining-tokens', b'29995'), (b'x-ratelimit-reset-requests', b'21m9.671999999s'), (b'x-ratelimit-reset-tokens', b'10ms'), (b'x-request-id', b'req_01hyypj954fxr95z8gdw3ysnjt'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab6ca75acf7ae8-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is asking about a physical property of a metal, which is a numeric value.
class_name: NUM
class_index: 5
data: {'text': 'Who developed the vaccination against polio ?', 'coarse_label': 3, 'fine_label': 29}
task_input: Who developed the vaccination against polio ?, corse_label: 3
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'Who developed the vaccination against polio ?', 'examples_str': 'Question: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is DTMF ?
class_name: Abbreviation 
class_index: 0
--------

Question: What foods contain vitamin B12 ?
class_name: Entity 
class_index: 1
--------

Question: How do you address a Chinese person ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What famous British actor lost his voice after an operation in 1966 ?
class_name: Human being 
class_index: 3
--------

Question: Where are diamonds mined ?
class_name: Location 
class_index: 4
--------

Question: How many teats does a female goat sport ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Who developed the vaccination against polio ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Who developed the vaccination against polio ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 04:15:35 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14188'), (b'x-ratelimit-remaining-tokens', b'29613'), (b'x-ratelimit-reset-requests', b'21m11.766999999s'), (b'x-ratelimit-reset-tokens', b'773ms'), (b'x-request-id', b'req_01hyypj9cee2dbababnyzb4vxy'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab6ca8cbf97ae8-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Who developed the vaccination against polio ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 04:15:38 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14187'), (b'x-ratelimit-remaining-tokens', b'29995'), (b'x-ratelimit-reset-requests', b'21m15.701s'), (b'x-ratelimit-reset-tokens', b'10ms'), (b'x-request-id', b'req_01hyypjbd0et5sjpqxddmraf7a'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab6cb5bfca7ae8-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the developer of a vaccination, which is a specific piece of information about a person.
class_name: Human being
class_index: 3
```
data: {'text': 'What is epilepsy ?', 'coarse_label': 2, 'fine_label': 24}
task_input: What is epilepsy ?, corse_label: 2
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What is epilepsy ?', 'examples_str': 'Question: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is DTMF ?
class_name: Abbreviation 
class_index: 0
--------

Question: What foods contain vitamin B12 ?
class_name: Entity 
class_index: 1
--------

Question: How do you address a Chinese person ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What famous British actor lost his voice after an operation in 1966 ?
class_name: Human being 
class_index: 3
--------

Question: Where are diamonds mined ?
class_name: Location 
class_index: 4
--------

Question: How many teats does a female goat sport ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What is epilepsy ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is epilepsy ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 04:15:38 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14187'), (b'x-ratelimit-remaining-tokens', b'29607'), (b'x-ratelimit-reset-requests', b'21m17.703s'), (b'x-ratelimit-reset-tokens', b'786ms'), (b'x-request-id', b'req_01hyypjbpafnbtmjv3bkad45cy'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab6cb7992b7ae8-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is epilepsy ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 04:15:40 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14186'), (b'x-ratelimit-remaining-tokens', b'29995'), (b'x-ratelimit-reset-requests', b'21m21.639999999s'), (b'x-ratelimit-reset-tokens', b'10ms'), (b'x-request-id', b'req_01hyypjdpseyb8k56qd84vwkqp'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab6cc47c667ae8-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is asking about a medical condition, which is a description and abstract concept.
class_name: DESC
class_index: 2
data: {'text': 'What year did the Titanic sink ?', 'coarse_label': 5, 'fine_label': 39}
task_input: What year did the Titanic sink ?, corse_label: 5
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What year did the Titanic sink ?', 'examples_str': 'Question: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is DTMF ?
class_name: Abbreviation 
class_index: 0
--------

Question: What foods contain vitamin B12 ?
class_name: Entity 
class_index: 1
--------

Question: How do you address a Chinese person ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What famous British actor lost his voice after an operation in 1966 ?
class_name: Human being 
class_index: 3
--------

Question: Where are diamonds mined ?
class_name: Location 
class_index: 4
--------

Question: How many teats does a female goat sport ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What year did the Titanic sink ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What year did the Titanic sink ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 04:15:40 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14186'), (b'x-ratelimit-remaining-tokens', b'29636'), (b'x-ratelimit-reset-requests', b'21m23.696s'), (b'x-ratelimit-reset-tokens', b'728ms'), (b'x-request-id', b'req_01hyypje0aeyb8njwf99440wb1'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab6cc65de27ae8-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is DTMF ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What foods contain vitamin B12 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you address a Chinese person ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What famous British actor lost his voice after an operation in 1966 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where are diamonds mined ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many teats does a female goat sport ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What year did the Titanic sink ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 04:15:42 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14185'), (b'x-ratelimit-remaining-tokens', b'29995'), (b'x-ratelimit-reset-requests', b'21m27.644s'), (b'x-ratelimit-reset-tokens', b'10ms'), (b'x-request-id', b'req_01hyypjg0efzxtsz4nf31yprm6'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab6cd329527ae8-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking for a specific year, which is a numeric value.
class_name: NUM
class_index: 5
responses: [5, 4, 3, 2, 2, 5, 1, 2, 2, 2, 4, 3, 5, 3, 2, 5, 5, 3, 2, 5], targets: [5, 4, 3, 2, 5, 5, 3, 1, 2, 2, 4, 3, 5, 3, 5, 5, 1, 3, 2, 5]
num_invalid: 0
Preds tensor: tensor([[0., 0., 0., 0., 0., 1.],
        [0., 0., 0., 0., 1., 0.],
        [0., 0., 0., 1., 0., 0.],
        [0., 0., 1., 0., 0., 0.],
        [0., 0., 1., 0., 0., 0.],
        [0., 0., 0., 0., 0., 1.],
        [0., 1., 0., 0., 0., 0.],
        [0., 0., 1., 0., 0., 0.],
        [0., 0., 1., 0., 0., 0.],
        [0., 0., 1., 0., 0., 0.],
        [0., 0., 0., 0., 1., 0.],
        [0., 0., 0., 1., 0., 0.],
        [0., 0., 0., 0., 0., 1.],
        [0., 0., 0., 1., 0., 0.],
        [0., 0., 1., 0., 0., 0.],
        [0., 0., 0., 0., 0., 1.],
        [0., 0., 0., 0., 0., 1.],
        [0., 0., 0., 1., 0., 0.],
        [0., 0., 1., 0., 0., 0.],
        [0., 0., 0., 0., 0., 1.]])
Targets tensor: tensor([5, 4, 3, 2, 5, 5, 3, 1, 2, 2, 4, 3, 5, 3, 5, 5, 1, 3, 2, 5])
Eval Accuracy: 0.75, F1: 0.677
