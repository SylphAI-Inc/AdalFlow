DatasetDict({
    train: Dataset({
        features: ['text', 'coarse_label', 'fine_label'],
        num_rows: 5452
    })
    test: Dataset({
        features: ['text', 'coarse_label', 'fine_label'],
        num_rows: 500
    })
})
Train example: {'text': 'How did serfdom develop in and then leave Russia ?', 'coarse_label': 2, 'fine_label': 26}
Test example: {'text': 'How far is it from Denver to Aspen ?', 'coarse_label': 5, 'fine_label': 40}
INFO:core.prompt_builder:Prompt has variables: ['classes']
INFO:core.prompt_builder:Prompt has variables: ['schema', 'example']
DEBUG:use_cases.classification.task:output_str: Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

DEBUG:httpx:load_ssl_context verify=True cert=None trust_env=True http2=False
DEBUG:httpx:load_verify_locations cafile='/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/certifi/cacert.pem'
INFO:core.prompt_builder:Prompt has variables: ['output_format_str', 'task_desc_str', 'examples_str', 'input', 'input_label']
data: None, requires_opt: True
Registered parameter examples_str with value Parameter: None
INFO:core.prompt_builder:Prompt has variables: ['output', 'label', 'input', 'description']
module: Prompt(
  template: You are a classifier. Given a Question, you need to classify it into one of the following classes:
  Format: class_index. class_name, class_description
  {% for class in classes %}
  {{loop.index-1}}. {{class.label}}, {{class.desc}}
  {% endfor %}
  , preset_prompt_kwargs: {'classes': [{'label': 'ABBR', 'desc': 'Abbreviation'}, {'label': 'ENTY', 'desc': 'Entity'}, {'label': 'DESC', 'desc': 'Description and abstract concept'}, {'label': 'HUM', 'desc': 'Human being'}, {'label': 'LOC', 'desc': 'Location'}, {'label': 'NUM', 'desc': 'Numeric value'}]}, prompt_variables: ['classes']
)    
module: Generator(
  model_kwargs={'model': 'llama3-8b-8192', 'temperature': 0.0, 'top_p': 1, 'frequency_penalty': 0, 'presence_penalty': 0, 'n': 1}, model_type=ModelType.LLM
  (model_client): GroqAPIClient()
  (system_prompt): Prompt(
    template: {# task desc #}
    {% if task_desc_str %}
    {{task_desc_str}}
    {% endif %}
    {%if output_format_str %}
    <OUTPUT_FORMAT>
    {{output_format_str}}
    </OUTPUT_FORMAT>
    {% endif %}
    {# example #}
    {% if examples_str %}
    <EXAMPLES>
    {#{% for example in examples_str %}#}
    {{examples_str}}
    {#{% endfor %}#}
    </EXAMPLES>
    {% endif %}
    {{input_label}}: {{input}}
    Your output:
    , preset_prompt_kwargs: {'task_desc_str': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n', 'output_format_str': 'Your output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n', 'input_label': 'Question'}, prompt_variables: ['output_format_str', 'task_desc_str', 'examples_str', 'input', 'input_label']
  )
  (output_processors): Sequential(
    (0): YAMLOutputParser(
      data_class_for_yaml=<class 'use_cases.classification.prompt.OutputFormat'>
      (yaml_output_format_prompt): Prompt(
        template: Your output should be formatted as a standard YAML instance with the following schema:
        ```
        {{schema}}
        ```
        {% if example %}
        Here is an example:
        ```
        {{example}}
        ```
        {% endif %}
        
        -Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
        -Follow the YAML formatting conventions with an indent of 2 spaces. 
        -Quote the string values properly.
        , prompt_variables: ['schema', 'example']
      )
      (output_processors): YAMLParser()
    )
    (1): <lambda>Component()
  )
)    
module: GroqAPIClient()    
module: Prompt(
  template: {# task desc #}
  {% if task_desc_str %}
  {{task_desc_str}}
  {% endif %}
  {%if output_format_str %}
  <OUTPUT_FORMAT>
  {{output_format_str}}
  </OUTPUT_FORMAT>
  {% endif %}
  {# example #}
  {% if examples_str %}
  <EXAMPLES>
  {#{% for example in examples_str %}#}
  {{examples_str}}
  {#{% endfor %}#}
  </EXAMPLES>
  {% endif %}
  {{input_label}}: {{input}}
  Your output:
  , preset_prompt_kwargs: {'task_desc_str': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n', 'output_format_str': 'Your output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n', 'input_label': 'Question'}, prompt_variables: ['output_format_str', 'task_desc_str', 'examples_str', 'input', 'input_label']
)    
module: Sequential(
  (0): YAMLOutputParser(
    data_class_for_yaml=<class 'use_cases.classification.prompt.OutputFormat'>
    (yaml_output_format_prompt): Prompt(
      template: Your output should be formatted as a standard YAML instance with the following schema:
      ```
      {{schema}}
      ```
      {% if example %}
      Here is an example:
      ```
      {{example}}
      ```
      {% endif %}
      
      -Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
      -Follow the YAML formatting conventions with an indent of 2 spaces. 
      -Quote the string values properly.
      , prompt_variables: ['schema', 'example']
    )
    (output_processors): YAMLParser()
  )
  (1): <lambda>Component()
)    
module: YAMLOutputParser(
  data_class_for_yaml=<class 'use_cases.classification.prompt.OutputFormat'>
  (yaml_output_format_prompt): Prompt(
    template: Your output should be formatted as a standard YAML instance with the following schema:
    ```
    {{schema}}
    ```
    {% if example %}
    Here is an example:
    ```
    {{example}}
    ```
    {% endif %}
    
    -Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
    -Follow the YAML formatting conventions with an indent of 2 spaces. 
    -Quote the string values properly.
    , prompt_variables: ['schema', 'example']
  )
  (output_processors): YAMLParser()
)    
module: Prompt(
  template: Your output should be formatted as a standard YAML instance with the following schema:
  ```
  {{schema}}
  ```
  {% if example %}
  Here is an example:
  ```
  {{example}}
  ```
  {% endif %}
  
  -Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
  -Follow the YAML formatting conventions with an indent of 2 spaces. 
  -Quote the string values properly.
  , prompt_variables: ['schema', 'example']
)    
module: YAMLParser()    
module: <lambda>Component()    
params: {'generator.examples_str': Parameter: None}
few_shot_optimizer: <optim.optimizer.BootstrapFewShot object at 0x144f02210>
few_shot_state_dict: None
data: {'text': 'What does pH stand for ?', 'coarse_label': 0, 'fine_label': 1}
task_input: What does pH stand for ?, corse_label: 0
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What does pH stand for ?', 'examples_str': 'Question: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the difference between a board of directors and an advisory board ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does the channel ESPN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is the name of Jamiroquai new album ?
class_name: Entity 
class_index: 1
--------

Question: What is the difference between a board of directors and an advisory board ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the first host of Person to Person ?
class_name: Human being 
class_index: 3
--------

Question: What country has the port of Haifa ?
class_name: Location 
class_index: 4
--------

Question: How many American soldiers remain unaccounted from the Vietnam war ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What does pH stand for ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the difference between a board of directors and an advisory board ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does pH stand for ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.connection:connect_tcp.started host='api.groq.com' port=443 local_address=None timeout=5.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x162a33e90>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x162b03260> server_hostname='api.groq.com' timeout=5.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x1608f5410>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 22:55:42 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14399'), (b'x-ratelimit-remaining-tokens', b'29599'), (b'x-ratelimit-reset-requests', b'6s'), (b'x-ratelimit-reset-tokens', b'802ms'), (b'x-request-id', b'req_01hz0pn8wyej9a5nn9t8av7c5t'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=dRi03UveGow5clR.IOYUnPhqGRdiNLnM2T4sIO1QCg8-1716936942-1.0.1.1-FCXYjoDvZLUNbm28ONIG_u5BWRiHeU3dt5UdBbY1yEDGwcOAz1qfyMS.M1OCDLwu4TnqF16euQN262Ijc4G4FQ; path=/; expires=Tue, 28-May-24 23:25:42 GMT; domain=.groq.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d5727d9c968f-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the abbreviation of a term, which is a common characteristic of an abbreviation.
class_name: ABBR
class_index: 0
data: {'text': 'What is RCD ?', 'coarse_label': 0, 'fine_label': 1}
task_input: What is RCD ?, corse_label: 0
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What is RCD ?', 'examples_str': 'Question: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the difference between a board of directors and an advisory board ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does the channel ESPN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is the name of Jamiroquai new album ?
class_name: Entity 
class_index: 1
--------

Question: What is the difference between a board of directors and an advisory board ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the first host of Person to Person ?
class_name: Human being 
class_index: 3
--------

Question: What country has the port of Haifa ?
class_name: Location 
class_index: 4
--------

Question: How many American soldiers remain unaccounted from the Vietnam war ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What is RCD ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the difference between a board of directors and an advisory board ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is RCD ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 22:55:43 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14398'), (b'x-ratelimit-remaining-tokens', b'29219'), (b'x-ratelimit-reset-requests', b'11.730999999s'), (b'x-ratelimit-reset-tokens', b'1.562s'), (b'x-request-id', b'req_01hz0pn95nef18kqmb21pq926m'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d5743eb3968f-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the meaning of an abbreviation, which is typically represented by a few letters.
class_name: ABBR
class_index: 0
data: {'text': 'What does IQ stand for ?', 'coarse_label': 0, 'fine_label': 1}
task_input: What does IQ stand for ?, corse_label: 0
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What does IQ stand for ?', 'examples_str': 'Question: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the difference between a board of directors and an advisory board ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does the channel ESPN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is the name of Jamiroquai new album ?
class_name: Entity 
class_index: 1
--------

Question: What is the difference between a board of directors and an advisory board ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the first host of Person to Person ?
class_name: Human being 
class_index: 3
--------

Question: What country has the port of Haifa ?
class_name: Location 
class_index: 4
--------

Question: How many American soldiers remain unaccounted from the Vietnam war ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What does IQ stand for ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the difference between a board of directors and an advisory board ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does IQ stand for ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 22:55:43 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14397'), (b'x-ratelimit-remaining-tokens', b'29092'), (b'x-ratelimit-reset-requests', b'17.387999999s'), (b'x-ratelimit-reset-tokens', b'1.815s'), (b'x-request-id', b'req_01hz0pn9rte2bvjmga8mk1s9qq'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d5780957968f-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking for the abbreviation of IQ, which is a well-known abbreviation in the field of psychology.
class_name: ABBR
class_index: 0
data: {'text': "What does the `` blue ribbon '' stand for ?", 'coarse_label': 0, 'fine_label': 1}
task_input: What does the `` blue ribbon '' stand for ?, corse_label: 0
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': "What does the `` blue ribbon '' stand for ?", 'examples_str': 'Question: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the difference between a board of directors and an advisory board ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does the channel ESPN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is the name of Jamiroquai new album ?
class_name: Entity 
class_index: 1
--------

Question: What is the difference between a board of directors and an advisory board ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the first host of Person to Person ?
class_name: Human being 
class_index: 3
--------

Question: What country has the port of Haifa ?
class_name: Location 
class_index: 4
--------

Question: How many American soldiers remain unaccounted from the Vietnam war ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What does the `` blue ribbon '' stand for ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the difference between a board of directors and an advisory board ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does the `` blue ribbon '' stand for ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 22:55:43 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14396'), (b'x-ratelimit-remaining-tokens', b'28807'), (b'x-ratelimit-reset-requests', b'23.693s'), (b'x-ratelimit-reset-tokens', b'2.385s'), (b'x-request-id', b'req_01hz0pna2dfmrbrrfj7bxqpds8'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d579facc968f-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the meaning of a specific phrase, which is typically an abbreviation.
class_name: ABBR
class_index: 0
data: {'text': 'What English word contains the most letters ?', 'coarse_label': 1, 'fine_label': 23}
task_input: What English word contains the most letters ?, corse_label: 1
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What English word contains the most letters ?', 'examples_str': 'Question: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the difference between a board of directors and an advisory board ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does the channel ESPN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is the name of Jamiroquai new album ?
class_name: Entity 
class_index: 1
--------

Question: What is the difference between a board of directors and an advisory board ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the first host of Person to Person ?
class_name: Human being 
class_index: 3
--------

Question: What country has the port of Haifa ?
class_name: Location 
class_index: 4
--------

Question: How many American soldiers remain unaccounted from the Vietnam war ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What English word contains the most letters ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the difference between a board of directors and an advisory board ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What English word contains the most letters ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 22:55:44 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14395'), (b'x-ratelimit-remaining-tokens', b'28527'), (b'x-ratelimit-reset-requests', b'29.696s'), (b'x-ratelimit-reset-tokens', b'2.946s'), (b'x-request-id', b'req_01hz0pnabzet59a2k1tja7q9p1'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d57bec1b968f-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is asking about a specific word, which is likely to be a unique entity with a specific property (number of letters).
class_name: Entity
class_index: 1
data: {'text': "What color flies closest to the staff on Belgium 's flag ?", 'coarse_label': 1, 'fine_label': 4}
task_input: What color flies closest to the staff on Belgium 's flag ?, corse_label: 1
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': "What color flies closest to the staff on Belgium 's flag ?", 'examples_str': 'Question: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the difference between a board of directors and an advisory board ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does the channel ESPN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is the name of Jamiroquai new album ?
class_name: Entity 
class_index: 1
--------

Question: What is the difference between a board of directors and an advisory board ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the first host of Person to Person ?
class_name: Human being 
class_index: 3
--------

Question: What country has the port of Haifa ?
class_name: Location 
class_index: 4
--------

Question: How many American soldiers remain unaccounted from the Vietnam war ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What color flies closest to the staff on Belgium 's flag ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the difference between a board of directors and an advisory board ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What color flies closest to the staff on Belgium 's flag ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 22:55:44 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14394'), (b'x-ratelimit-remaining-tokens', b'28201'), (b'x-ratelimit-reset-requests', b'35.772999999s'), (b'x-ratelimit-reset-tokens', b'3.598s'), (b'x-request-id', b'req_01hz0pnak3f97ae39b5sj9xg2d'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d57d4cf4968f-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the color of an object on a flag, which is a specific detail.
class_name: Description and abstract concept
class_index: 2
data: {'text': "Name the disposable razor that `` costs about 19 cents . ''", 'coarse_label': 1, 'fine_label': 15}
task_input: Name the disposable razor that `` costs about 19 cents . '', corse_label: 1
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': "Name the disposable razor that `` costs about 19 cents . ''", 'examples_str': 'Question: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the difference between a board of directors and an advisory board ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does the channel ESPN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is the name of Jamiroquai new album ?
class_name: Entity 
class_index: 1
--------

Question: What is the difference between a board of directors and an advisory board ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the first host of Person to Person ?
class_name: Human being 
class_index: 3
--------

Question: What country has the port of Haifa ?
class_name: Location 
class_index: 4
--------

Question: How many American soldiers remain unaccounted from the Vietnam war ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Name the disposable razor that `` costs about 19 cents . ''
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the difference between a board of directors and an advisory board ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Name the disposable razor that `` costs about 19 cents . ''\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 22:55:44 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14393'), (b'x-ratelimit-remaining-tokens', b'27888'), (b'x-ratelimit-reset-requests', b'41.745s'), (b'x-ratelimit-reset-tokens', b'4.223s'), (b'x-request-id', b'req_01hz0pnav3e2br5fyj7n23cp4y'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d57eee2c968f-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking for the name of a disposable razor, which is a specific product, and the price is given in numeric value.
class_name: Entity
class_index: 1
data: {'text': "What 's the Southern dish made of pigs ' small intestines ?", 'coarse_label': 1, 'fine_label': 9}
task_input: What 's the Southern dish made of pigs ' small intestines ?, corse_label: 1
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': "What 's the Southern dish made of pigs ' small intestines ?", 'examples_str': 'Question: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the difference between a board of directors and an advisory board ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does the channel ESPN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is the name of Jamiroquai new album ?
class_name: Entity 
class_index: 1
--------

Question: What is the difference between a board of directors and an advisory board ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the first host of Person to Person ?
class_name: Human being 
class_index: 3
--------

Question: What country has the port of Haifa ?
class_name: Location 
class_index: 4
--------

Question: How many American soldiers remain unaccounted from the Vietnam war ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What 's the Southern dish made of pigs ' small intestines ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the difference between a board of directors and an advisory board ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What 's the Southern dish made of pigs ' small intestines ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 22:55:45 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14392'), (b'x-ratelimit-remaining-tokens', b'27613'), (b'x-ratelimit-reset-requests', b'47.665999999s'), (b'x-ratelimit-reset-tokens', b'4.773s'), (b'x-request-id', b'req_01hz0pnb5jeyes7sknf7maak9y'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d5810fc8968f-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about a specific type of food, which is a common topic of discussion.
class_name: Description and abstract concept
class_index: 2
data: {'text': 'What makes hamburgers taste like steakburgers ?', 'coarse_label': 2, 'fine_label': 27}
task_input: What makes hamburgers taste like steakburgers ?, corse_label: 2
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What makes hamburgers taste like steakburgers ?', 'examples_str': 'Question: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the difference between a board of directors and an advisory board ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does the channel ESPN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is the name of Jamiroquai new album ?
class_name: Entity 
class_index: 1
--------

Question: What is the difference between a board of directors and an advisory board ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the first host of Person to Person ?
class_name: Human being 
class_index: 3
--------

Question: What country has the port of Haifa ?
class_name: Location 
class_index: 4
--------

Question: How many American soldiers remain unaccounted from the Vietnam war ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What makes hamburgers taste like steakburgers ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the difference between a board of directors and an advisory board ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What makes hamburgers taste like steakburgers ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 22:55:45 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14391'), (b'x-ratelimit-remaining-tokens', b'27485'), (b'x-ratelimit-reset-requests', b'53.383999999s'), (b'x-ratelimit-reset-tokens', b'5.029s'), (b'x-request-id', b'req_01hz0pnbrver4bzaysnsabfyhc'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d584da7f968f-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is about the taste difference between hamburgers and steakburgers, which is a descriptive concept.
class_name: Description and abstract concept
class_index: 2
data: {'text': 'How is digital audio used ?', 'coarse_label': 2, 'fine_label': 26}
task_input: How is digital audio used ?, corse_label: 2
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'How is digital audio used ?', 'examples_str': 'Question: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the difference between a board of directors and an advisory board ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does the channel ESPN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is the name of Jamiroquai new album ?
class_name: Entity 
class_index: 1
--------

Question: What is the difference between a board of directors and an advisory board ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the first host of Person to Person ?
class_name: Human being 
class_index: 3
--------

Question: What country has the port of Haifa ?
class_name: Location 
class_index: 4
--------

Question: How many American soldiers remain unaccounted from the Vietnam war ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: How is digital audio used ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the difference between a board of directors and an advisory board ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: How is digital audio used ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 22:55:45 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14390'), (b'x-ratelimit-remaining-tokens', b'27167'), (b'x-ratelimit-reset-requests', b'59.772999999s'), (b'x-ratelimit-reset-tokens', b'5.666s'), (b'x-request-id', b'req_01hz0pnbzzej9bcpk5sqtbj4bj'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d5864b9c968f-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is asking about the usage of digital audio, which is a concept or description, so it falls under the category of Description and abstract concept.
class_name: DESC
class_index: 2
data: {'text': "What does the Georgetown `` Hoya '' mean ?", 'coarse_label': 2, 'fine_label': 24}
task_input: What does the Georgetown `` Hoya '' mean ?, corse_label: 2
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': "What does the Georgetown `` Hoya '' mean ?", 'examples_str': 'Question: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the difference between a board of directors and an advisory board ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does the channel ESPN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is the name of Jamiroquai new album ?
class_name: Entity 
class_index: 1
--------

Question: What is the difference between a board of directors and an advisory board ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the first host of Person to Person ?
class_name: Human being 
class_index: 3
--------

Question: What country has the port of Haifa ?
class_name: Location 
class_index: 4
--------

Question: How many American soldiers remain unaccounted from the Vietnam war ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What does the Georgetown `` Hoya '' mean ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the difference between a board of directors and an advisory board ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does the Georgetown `` Hoya '' mean ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 22:55:46 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14389'), (b'x-ratelimit-remaining-tokens', b'26864'), (b'x-ratelimit-reset-requests', b'1m5.719999999s'), (b'x-ratelimit-reset-tokens', b'6.271s'), (b'x-request-id', b'req_01hz0pnc8pebysw2ex0gsb0mbg'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d5880ceb968f-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the meaning of the term "Hoya", which is a symbol of Georgetown University.
class_name: Abbreviation
class_index: 0
data: {'text': 'What is a hormone ?', 'coarse_label': 2, 'fine_label': 24}
task_input: What is a hormone ?, corse_label: 2
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What is a hormone ?', 'examples_str': 'Question: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the difference between a board of directors and an advisory board ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does the channel ESPN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is the name of Jamiroquai new album ?
class_name: Entity 
class_index: 1
--------

Question: What is the difference between a board of directors and an advisory board ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the first host of Person to Person ?
class_name: Human being 
class_index: 3
--------

Question: What country has the port of Haifa ?
class_name: Location 
class_index: 4
--------

Question: How many American soldiers remain unaccounted from the Vietnam war ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What is a hormone ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the difference between a board of directors and an advisory board ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is a hormone ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 22:55:46 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14388'), (b'x-ratelimit-remaining-tokens', b'26550'), (b'x-ratelimit-reset-requests', b'1m11.764999999s'), (b'x-ratelimit-reset-tokens', b'6.899s'), (b'x-request-id', b'req_01hz0pncg3et5b1cbz5yyyhz56'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d5898ddc968f-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is asking about a general concept or definition, which is a characteristic of a description and abstract concept.
class_name: DESC
class_index: 2
data: {'text': "What kind of people took part in Shays ' Rebellion in Massachusetts in 1787 ?", 'coarse_label': 3, 'fine_label': 28}
task_input: What kind of people took part in Shays ' Rebellion in Massachusetts in 1787 ?, corse_label: 3
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': "What kind of people took part in Shays ' Rebellion in Massachusetts in 1787 ?", 'examples_str': 'Question: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the difference between a board of directors and an advisory board ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does the channel ESPN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is the name of Jamiroquai new album ?
class_name: Entity 
class_index: 1
--------

Question: What is the difference between a board of directors and an advisory board ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the first host of Person to Person ?
class_name: Human being 
class_index: 3
--------

Question: What country has the port of Haifa ?
class_name: Location 
class_index: 4
--------

Question: How many American soldiers remain unaccounted from the Vietnam war ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What kind of people took part in Shays ' Rebellion in Massachusetts in 1787 ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the difference between a board of directors and an advisory board ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What kind of people took part in Shays ' Rebellion in Massachusetts in 1787 ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 22:55:46 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14387'), (b'x-ratelimit-remaining-tokens', b'26244'), (b'x-ratelimit-reset-requests', b'1m17.724999999s'), (b'x-ratelimit-reset-tokens', b'7.512s'), (b'x-request-id', b'req_01hz0pncrqe2bv1v0w0q76wk5n'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d58b3f15968f-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the type of people who took part in Shays' Rebellion, which is a historical event.
class_name: Human being
class_index: 3
data: {'text': "Name the designer of the shoe that spawned millions of plastic imitations , known as ` jellies ' .", 'coarse_label': 3, 'fine_label': 29}
task_input: Name the designer of the shoe that spawned millions of plastic imitations , known as ` jellies ' ., corse_label: 3
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': "Name the designer of the shoe that spawned millions of plastic imitations , known as ` jellies ' .", 'examples_str': 'Question: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the difference between a board of directors and an advisory board ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does the channel ESPN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is the name of Jamiroquai new album ?
class_name: Entity 
class_index: 1
--------

Question: What is the difference between a board of directors and an advisory board ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the first host of Person to Person ?
class_name: Human being 
class_index: 3
--------

Question: What country has the port of Haifa ?
class_name: Location 
class_index: 4
--------

Question: How many American soldiers remain unaccounted from the Vietnam war ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Name the designer of the shoe that spawned millions of plastic imitations , known as ` jellies ' .
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the difference between a board of directors and an advisory board ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Name the designer of the shoe that spawned millions of plastic imitations , known as ` jellies ' .\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 22:55:46 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14386'), (b'x-ratelimit-remaining-tokens', b'25909'), (b'x-ratelimit-reset-requests', b'1m23.766999999s'), (b'x-ratelimit-reset-tokens', b'8.182s'), (b'x-request-id', b'req_01hz0pnd01f97rf02kq4873a4v'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d58cb84f968f-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking for the designer of a specific shoe, which is a specific entity.
class_name: Entity
class_index: 1
data: {'text': 'Who is Prince Naseem Hamed ?', 'coarse_label': 3, 'fine_label': 31}
task_input: Who is Prince Naseem Hamed ?, corse_label: 3
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'Who is Prince Naseem Hamed ?', 'examples_str': 'Question: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the difference between a board of directors and an advisory board ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does the channel ESPN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is the name of Jamiroquai new album ?
class_name: Entity 
class_index: 1
--------

Question: What is the difference between a board of directors and an advisory board ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the first host of Person to Person ?
class_name: Human being 
class_index: 3
--------

Question: What country has the port of Haifa ?
class_name: Location 
class_index: 4
--------

Question: How many American soldiers remain unaccounted from the Vietnam war ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Who is Prince Naseem Hamed ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the difference between a board of directors and an advisory board ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Who is Prince Naseem Hamed ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 22:55:47 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14385'), (b'x-ratelimit-remaining-tokens', b'25624'), (b'x-ratelimit-reset-requests', b'1m29.718999999s'), (b'x-ratelimit-reset-tokens', b'8.751s'), (b'x-request-id', b'req_01hz0pnd8vfwmt312dj4geap9g'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d58e797b968f-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about a specific person, Prince Naseem Hamed, which is a type of human being.
class_name: HUM
class_index: 3
data: {'text': "Who sings Angel Eyes from the 80 's ?", 'coarse_label': 3, 'fine_label': 29}
task_input: Who sings Angel Eyes from the 80 's ?, corse_label: 3
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': "Who sings Angel Eyes from the 80 's ?", 'examples_str': 'Question: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the difference between a board of directors and an advisory board ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does the channel ESPN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is the name of Jamiroquai new album ?
class_name: Entity 
class_index: 1
--------

Question: What is the difference between a board of directors and an advisory board ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the first host of Person to Person ?
class_name: Human being 
class_index: 3
--------

Question: What country has the port of Haifa ?
class_name: Location 
class_index: 4
--------

Question: How many American soldiers remain unaccounted from the Vietnam war ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Who sings Angel Eyes from the 80 's ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the difference between a board of directors and an advisory board ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Who sings Angel Eyes from the 80 's ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 22:55:47 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14384'), (b'x-ratelimit-remaining-tokens', b'25316'), (b'x-ratelimit-reset-requests', b'1m35.738s'), (b'x-ratelimit-reset-tokens', b'9.367s'), (b'x-request-id', b'req_01hz0pndh2et5844axvf873drz'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d5901a9a968f-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the artist who sings a specific song from the 80's, which suggests a human being.
class_name: HUM
class_index: 3
data: {'text': "What is New England 's highest mountain ?", 'coarse_label': 4, 'fine_label': 34}
task_input: What is New England 's highest mountain ?, corse_label: 4
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': "What is New England 's highest mountain ?", 'examples_str': 'Question: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the difference between a board of directors and an advisory board ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does the channel ESPN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is the name of Jamiroquai new album ?
class_name: Entity 
class_index: 1
--------

Question: What is the difference between a board of directors and an advisory board ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the first host of Person to Person ?
class_name: Human being 
class_index: 3
--------

Question: What country has the port of Haifa ?
class_name: Location 
class_index: 4
--------

Question: How many American soldiers remain unaccounted from the Vietnam war ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What is New England 's highest mountain ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the difference between a board of directors and an advisory board ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is New England 's highest mountain ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 22:55:47 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14383'), (b'x-ratelimit-remaining-tokens', b'24999'), (b'x-ratelimit-reset-requests', b'1m41.755s'), (b'x-ratelimit-reset-tokens', b'10.002s'), (b'x-request-id', b'req_01hz0pndrrebyv3tvgbjj8x3t9'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d591abe4968f-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about a geographical feature, which is typically represented by a location.
class_name: Location
class_index: 4
data: {'text': 'Where is Inoco based ?', 'coarse_label': 4, 'fine_label': 35}
task_input: Where is Inoco based ?, corse_label: 4
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'Where is Inoco based ?', 'examples_str': 'Question: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the difference between a board of directors and an advisory board ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does the channel ESPN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is the name of Jamiroquai new album ?
class_name: Entity 
class_index: 1
--------

Question: What is the difference between a board of directors and an advisory board ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the first host of Person to Person ?
class_name: Human being 
class_index: 3
--------

Question: What country has the port of Haifa ?
class_name: Location 
class_index: 4
--------

Question: How many American soldiers remain unaccounted from the Vietnam war ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Where is Inoco based ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the difference between a board of directors and an advisory board ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Where is Inoco based ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 22:55:47 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14382'), (b'x-ratelimit-remaining-tokens', b'24712'), (b'x-ratelimit-reset-requests', b'1m47.725999999s'), (b'x-ratelimit-reset-tokens', b'10.576s'), (b'x-request-id', b'req_01hz0pne1bfwmtyw8yf0613q9w'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d5935d64968f-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking for the location of a company, which is typically represented by its headquarters.
class_name: Location
class_index: 4
data: {'text': 'Where is the location of the Orange Bowl ?', 'coarse_label': 4, 'fine_label': 35}
task_input: Where is the location of the Orange Bowl ?, corse_label: 4
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'Where is the location of the Orange Bowl ?', 'examples_str': 'Question: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the difference between a board of directors and an advisory board ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does the channel ESPN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is the name of Jamiroquai new album ?
class_name: Entity 
class_index: 1
--------

Question: What is the difference between a board of directors and an advisory board ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the first host of Person to Person ?
class_name: Human being 
class_index: 3
--------

Question: What country has the port of Haifa ?
class_name: Location 
class_index: 4
--------

Question: How many American soldiers remain unaccounted from the Vietnam war ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Where is the location of the Orange Bowl ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the difference between a board of directors and an advisory board ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Where is the location of the Orange Bowl ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 22:55:48 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14381'), (b'x-ratelimit-remaining-tokens', b'24398'), (b'x-ratelimit-reset-requests', b'1m53.761999999s'), (b'x-ratelimit-reset-tokens', b'11.204s'), (b'x-request-id', b'req_01hz0pne8sfy3vvq96dccg1bpx'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d594de7c968f-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking for the location of the Orange Bowl, which is a specific stadium.
class_name: Location
class_index: 4
data: {'text': 'What ocean surrounds the Madeira Islands ?', 'coarse_label': 4, 'fine_label': 35}
task_input: What ocean surrounds the Madeira Islands ?, corse_label: 4
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What ocean surrounds the Madeira Islands ?', 'examples_str': 'Question: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the difference between a board of directors and an advisory board ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does the channel ESPN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is the name of Jamiroquai new album ?
class_name: Entity 
class_index: 1
--------

Question: What is the difference between a board of directors and an advisory board ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the first host of Person to Person ?
class_name: Human being 
class_index: 3
--------

Question: What country has the port of Haifa ?
class_name: Location 
class_index: 4
--------

Question: How many American soldiers remain unaccounted from the Vietnam war ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What ocean surrounds the Madeira Islands ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the difference between a board of directors and an advisory board ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What ocean surrounds the Madeira Islands ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 22:55:48 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14380'), (b'x-ratelimit-remaining-tokens', b'24090'), (b'x-ratelimit-reset-requests', b'1m59.757s'), (b'x-ratelimit-reset-tokens', b'11.82s'), (b'x-request-id', b'req_01hz0pnegefy3vvv4srwzntkyt'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d5966fb3968f-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the geographical location of the Madeira Islands, which is a specific place.
class_name: Location
class_index: 4
data: {'text': 'When is Bastille Day ?', 'coarse_label': 5, 'fine_label': 39}
task_input: When is Bastille Day ?, corse_label: 5
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'When is Bastille Day ?', 'examples_str': 'Question: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the difference between a board of directors and an advisory board ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does the channel ESPN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is the name of Jamiroquai new album ?
class_name: Entity 
class_index: 1
--------

Question: What is the difference between a board of directors and an advisory board ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the first host of Person to Person ?
class_name: Human being 
class_index: 3
--------

Question: What country has the port of Haifa ?
class_name: Location 
class_index: 4
--------

Question: How many American soldiers remain unaccounted from the Vietnam war ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: When is Bastille Day ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the difference between a board of directors and an advisory board ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: When is Bastille Day ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 22:55:48 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14379'), (b'x-ratelimit-remaining-tokens', b'23801'), (b'x-ratelimit-reset-requests', b'2m5.724999999s'), (b'x-ratelimit-reset-tokens', b'12.397s'), (b'x-request-id', b'req_01hz0pnes2e8bsg94ja56gj6f1'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d5981969968f-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is asking about a specific date or event, which is typically represented by a numeric value.
class_name: NUM
class_index: 5
data: {'text': 'How many home runs did Babe Ruth hit in his lifetime ?', 'coarse_label': 5, 'fine_label': 38}
task_input: How many home runs did Babe Ruth hit in his lifetime ?, corse_label: 5
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'How many home runs did Babe Ruth hit in his lifetime ?', 'examples_str': 'Question: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the difference between a board of directors and an advisory board ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does the channel ESPN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is the name of Jamiroquai new album ?
class_name: Entity 
class_index: 1
--------

Question: What is the difference between a board of directors and an advisory board ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the first host of Person to Person ?
class_name: Human being 
class_index: 3
--------

Question: What country has the port of Haifa ?
class_name: Location 
class_index: 4
--------

Question: How many American soldiers remain unaccounted from the Vietnam war ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: How many home runs did Babe Ruth hit in his lifetime ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the difference between a board of directors and an advisory board ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: How many home runs did Babe Ruth hit in his lifetime ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 22:55:48 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14378'), (b'x-ratelimit-remaining-tokens', b'23498'), (b'x-ratelimit-reset-requests', b'2m11.733s'), (b'x-ratelimit-reset-tokens', b'13.004s'), (b'x-request-id', b'req_01hz0pnf1dfsv9sts1xx4ga50z'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d599caa4968f-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking for a specific numerical value, the number of home runs Babe Ruth hit in his lifetime.
class_name: Numeric value
class_index: 5
data: {'text': 'When was General Manuel Noriega ousted as the leader of Panama and turned over to U.S. authorities ?', 'coarse_label': 5, 'fine_label': 39}
task_input: When was General Manuel Noriega ousted as the leader of Panama and turned over to U.S. authorities ?, corse_label: 5
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'When was General Manuel Noriega ousted as the leader of Panama and turned over to U.S. authorities ?', 'examples_str': 'Question: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the difference between a board of directors and an advisory board ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does the channel ESPN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is the name of Jamiroquai new album ?
class_name: Entity 
class_index: 1
--------

Question: What is the difference between a board of directors and an advisory board ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the first host of Person to Person ?
class_name: Human being 
class_index: 3
--------

Question: What country has the port of Haifa ?
class_name: Location 
class_index: 4
--------

Question: How many American soldiers remain unaccounted from the Vietnam war ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: When was General Manuel Noriega ousted as the leader of Panama and turned over to U.S. authorities ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the difference between a board of directors and an advisory board ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: When was General Manuel Noriega ousted as the leader of Panama and turned over to U.S. authorities ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 22:55:49 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14377'), (b'x-ratelimit-remaining-tokens', b'23170'), (b'x-ratelimit-reset-requests', b'2m17.756s'), (b'x-ratelimit-reset-tokens', b'13.659s'), (b'x-request-id', b'req_01hz0pnf93ebyvfhr9xxh0n4q9'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d59b4bc3968f-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about a historical event and a person, which is a common combination in news articles and historical records.
class_name: Entity
class_index: 1
data: {'text': 'What is the population of the largest Chilean city', 'coarse_label': 5, 'fine_label': 38}
task_input: What is the population of the largest Chilean city, corse_label: 5
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What is the population of the largest Chilean city', 'examples_str': 'Question: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the difference between a board of directors and an advisory board ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does the channel ESPN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is the name of Jamiroquai new album ?
class_name: Entity 
class_index: 1
--------

Question: What is the difference between a board of directors and an advisory board ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the first host of Person to Person ?
class_name: Human being 
class_index: 3
--------

Question: What country has the port of Haifa ?
class_name: Location 
class_index: 4
--------

Question: How many American soldiers remain unaccounted from the Vietnam war ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What is the population of the largest Chilean city
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the difference between a board of directors and an advisory board ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is the population of the largest Chilean city\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 22:55:49 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14376'), (b'x-ratelimit-remaining-tokens', b'22854'), (b'x-ratelimit-reset-requests', b'2m23.760999999s'), (b'x-ratelimit-reset-tokens', b'14.291s'), (b'x-request-id', b'req_01hz0pnfgke8bv6p6b8eprf68w'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d59cdcfd968f-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking for the population of a city, which is a numeric value.
class_name: NUM
class_index: 5
responses: [0, 0, 0, 0, 1, 2, 1, 2, 2, 2, 0, 2, 3, 1, 3, 3, 4, 4, 4, 4, 5, 5, 1, 5], targets: [0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5]
num_invalid: 0
Preds tensor: tensor([[1., 0., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0.],
        [0., 1., 0., 0., 0., 0.],
        [0., 0., 1., 0., 0., 0.],
        [0., 1., 0., 0., 0., 0.],
        [0., 0., 1., 0., 0., 0.],
        [0., 0., 1., 0., 0., 0.],
        [0., 0., 1., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0.],
        [0., 0., 1., 0., 0., 0.],
        [0., 0., 0., 1., 0., 0.],
        [0., 1., 0., 0., 0., 0.],
        [0., 0., 0., 1., 0., 0.],
        [0., 0., 0., 1., 0., 0.],
        [0., 0., 0., 0., 1., 0.],
        [0., 0., 0., 0., 1., 0.],
        [0., 0., 0., 0., 1., 0.],
        [0., 0., 0., 0., 1., 0.],
        [0., 0., 0., 0., 0., 1.],
        [0., 0., 0., 0., 0., 1.],
        [0., 1., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 1.]])
Targets tensor: tensor([0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5])
Eval Accuracy Start: 0.792, F1: 0.795, score: 1.5870000000000002
data: {'text': 'How far is it from Denver to Aspen ?', 'coarse_label': 5, 'fine_label': 40}
task_input: How far is it from Denver to Aspen ?, corse_label: 5
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'How far is it from Denver to Aspen ?', 'examples_str': 'Question: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the difference between a board of directors and an advisory board ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does the channel ESPN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is the name of Jamiroquai new album ?
class_name: Entity 
class_index: 1
--------

Question: What is the difference between a board of directors and an advisory board ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the first host of Person to Person ?
class_name: Human being 
class_index: 3
--------

Question: What country has the port of Haifa ?
class_name: Location 
class_index: 4
--------

Question: How many American soldiers remain unaccounted from the Vietnam war ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: How far is it from Denver to Aspen ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the difference between a board of directors and an advisory board ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: How far is it from Denver to Aspen ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 22:55:49 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14375'), (b'x-ratelimit-remaining-tokens', b'22575'), (b'x-ratelimit-reset-requests', b'2m29.704s'), (b'x-ratelimit-reset-tokens', b'14.85s'), (b'x-request-id', b'req_01hz0pnfswfy3t89pjqanrtb8b'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d59eaed5968f-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking for a distance between two cities, which is a measurable value.
class_name: Numeric value
class_index: 5
data: {'text': 'What county is Modesto , California in ?', 'coarse_label': 4, 'fine_label': 32}
task_input: What county is Modesto , California in ?, corse_label: 4
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What county is Modesto , California in ?', 'examples_str': 'Question: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the difference between a board of directors and an advisory board ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does the channel ESPN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is the name of Jamiroquai new album ?
class_name: Entity 
class_index: 1
--------

Question: What is the difference between a board of directors and an advisory board ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the first host of Person to Person ?
class_name: Human being 
class_index: 3
--------

Question: What country has the port of Haifa ?
class_name: Location 
class_index: 4
--------

Question: How many American soldiers remain unaccounted from the Vietnam war ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What county is Modesto , California in ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the difference between a board of directors and an advisory board ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What county is Modesto , California in ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 22:55:50 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14374'), (b'x-ratelimit-remaining-tokens', b'22257'), (b'x-ratelimit-reset-requests', b'2m35.775999999s'), (b'x-ratelimit-reset-tokens', b'15.486s'), (b'x-request-id', b'req_01hz0png0xfm99jdvccap8cja7'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d5a0187b968f-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the location of Modesto, California, which is a specific geographic location.
class_name: Location
class_index: 4
data: {'text': 'Who was Galileo ?', 'coarse_label': 3, 'fine_label': 31}
task_input: Who was Galileo ?, corse_label: 3
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'Who was Galileo ?', 'examples_str': 'Question: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the difference between a board of directors and an advisory board ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does the channel ESPN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is the name of Jamiroquai new album ?
class_name: Entity 
class_index: 1
--------

Question: What is the difference between a board of directors and an advisory board ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the first host of Person to Person ?
class_name: Human being 
class_index: 3
--------

Question: What country has the port of Haifa ?
class_name: Location 
class_index: 4
--------

Question: How many American soldiers remain unaccounted from the Vietnam war ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Who was Galileo ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the difference between a board of directors and an advisory board ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Who was Galileo ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 22:55:50 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14373'), (b'x-ratelimit-remaining-tokens', b'21970'), (b'x-ratelimit-reset-requests', b'2m41.720999999s'), (b'x-ratelimit-reset-tokens', b'16.059s'), (b'x-request-id', b'req_01hz0png9meb2r63mpnape6y7q'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d5a1d9e2968f-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is asking about a historical figure, Galileo, which is a human being.
class_name: HUM
class_index: 3
data: {'text': 'What is an atom ?', 'coarse_label': 2, 'fine_label': 24}
task_input: What is an atom ?, corse_label: 2
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What is an atom ?', 'examples_str': 'Question: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the difference between a board of directors and an advisory board ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does the channel ESPN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is the name of Jamiroquai new album ?
class_name: Entity 
class_index: 1
--------

Question: What is the difference between a board of directors and an advisory board ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the first host of Person to Person ?
class_name: Human being 
class_index: 3
--------

Question: What country has the port of Haifa ?
class_name: Location 
class_index: 4
--------

Question: How many American soldiers remain unaccounted from the Vietnam war ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What is an atom ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the difference between a board of directors and an advisory board ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is an atom ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 22:55:51 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14372'), (b'x-ratelimit-remaining-tokens', b'21678'), (b'x-ratelimit-reset-requests', b'2m47.731999999s'), (b'x-ratelimit-reset-tokens', b'16.643999999s'), (b'x-request-id', b'req_01hz0pngj2ef1a7cras5cq8ps1'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d5a38b04968f-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is asking for a definition or explanation of an atom, which is an abstract concept.
class_name: Description and abstract concept
class_index: 2
data: {'text': 'When did Hawaii become a state ?', 'coarse_label': 5, 'fine_label': 39}
task_input: When did Hawaii become a state ?, corse_label: 5
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'When did Hawaii become a state ?', 'examples_str': 'Question: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the difference between a board of directors and an advisory board ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does the channel ESPN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is the name of Jamiroquai new album ?
class_name: Entity 
class_index: 1
--------

Question: What is the difference between a board of directors and an advisory board ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the first host of Person to Person ?
class_name: Human being 
class_index: 3
--------

Question: What country has the port of Haifa ?
class_name: Location 
class_index: 4
--------

Question: How many American soldiers remain unaccounted from the Vietnam war ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: When did Hawaii become a state ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the difference between a board of directors and an advisory board ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: When did Hawaii become a state ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 22:55:51 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14371'), (b'x-ratelimit-remaining-tokens', b'21817'), (b'x-ratelimit-reset-requests', b'2m52.854999999s'), (b'x-ratelimit-reset-tokens', b'16.366s'), (b'x-request-id', b'req_01hz0pnhntfdr9n4rezs2xccys'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d5aaa879968f-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about a specific event in history, which is a factual information.
class_name: Description and abstract concept
class_index: 2
data: {'text': 'How tall is the Sears Building ?', 'coarse_label': 5, 'fine_label': 40}
task_input: How tall is the Sears Building ?, corse_label: 5
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'How tall is the Sears Building ?', 'examples_str': 'Question: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the difference between a board of directors and an advisory board ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does the channel ESPN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is the name of Jamiroquai new album ?
class_name: Entity 
class_index: 1
--------

Question: What is the difference between a board of directors and an advisory board ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the first host of Person to Person ?
class_name: Human being 
class_index: 3
--------

Question: What country has the port of Haifa ?
class_name: Location 
class_index: 4
--------

Question: How many American soldiers remain unaccounted from the Vietnam war ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: How tall is the Sears Building ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the difference between a board of directors and an advisory board ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: How tall is the Sears Building ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 22:55:52 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14370'), (b'x-ratelimit-remaining-tokens', b'21538'), (b'x-ratelimit-reset-requests', b'2m59.698s'), (b'x-ratelimit-reset-tokens', b'16.924s'), (b'x-request-id', b'req_01hz0pnhzaf97txd3z3m14v2pd'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d5ac89ca968f-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question asks about the height of a specific building, which is a measurable value.
class_name: NUM
class_index: 5
data: {'text': 'George Bush purchased a small interest in which baseball team ?', 'coarse_label': 3, 'fine_label': 28}
task_input: George Bush purchased a small interest in which baseball team ?, corse_label: 3
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'George Bush purchased a small interest in which baseball team ?', 'examples_str': 'Question: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the difference between a board of directors and an advisory board ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does the channel ESPN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is the name of Jamiroquai new album ?
class_name: Entity 
class_index: 1
--------

Question: What is the difference between a board of directors and an advisory board ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the first host of Person to Person ?
class_name: Human being 
class_index: 3
--------

Question: What country has the port of Haifa ?
class_name: Location 
class_index: 4
--------

Question: How many American soldiers remain unaccounted from the Vietnam war ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: George Bush purchased a small interest in which baseball team ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the difference between a board of directors and an advisory board ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: George Bush purchased a small interest in which baseball team ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 22:55:52 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14370'), (b'x-ratelimit-remaining-tokens', b'21718'), (b'x-ratelimit-reset-requests', b'2m59.592s'), (b'x-ratelimit-reset-tokens', b'16.564s'), (b'x-request-id', b'req_01hz0pnjc3ej9v44q1t0m3sz76'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d5af1b53968f-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the difference between a board of directors and an advisory board ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: George Bush purchased a small interest in which baseball team ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 22:55:54 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14369'), (b'x-ratelimit-remaining-tokens', b'22342'), (b'x-ratelimit-reset-requests', b'3m3.519999999s'), (b'x-ratelimit-reset-tokens', b'15.315s'), (b'x-request-id', b'req_01hz0pnmcvej9t2s06haafnjgj'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d5bc1d0e968f-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about a specific baseball team, which is likely to be a named entity.
class_name: Entity
class_index: 1
data: {'text': "What is Australia 's national flower ?", 'coarse_label': 1, 'fine_label': 14}
task_input: What is Australia 's national flower ?, corse_label: 1
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': "What is Australia 's national flower ?", 'examples_str': 'Question: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the difference between a board of directors and an advisory board ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does the channel ESPN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is the name of Jamiroquai new album ?
class_name: Entity 
class_index: 1
--------

Question: What is the difference between a board of directors and an advisory board ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the first host of Person to Person ?
class_name: Human being 
class_index: 3
--------

Question: What country has the port of Haifa ?
class_name: Location 
class_index: 4
--------

Question: How many American soldiers remain unaccounted from the Vietnam war ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What is Australia 's national flower ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the difference between a board of directors and an advisory board ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is Australia 's national flower ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 22:55:54 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14369'), (b'x-ratelimit-remaining-tokens', b'22440'), (b'x-ratelimit-reset-requests', b'3m5.761999999s'), (b'x-ratelimit-reset-tokens', b'15.119s'), (b'x-request-id', b'req_01hz0pnmmafm9r6smvtzwp2v7r'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d5bd8e2f968f-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the difference between a board of directors and an advisory board ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is Australia 's national flower ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 22:55:56 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14368'), (b'x-ratelimit-remaining-tokens', b'23063'), (b'x-ratelimit-reset-requests', b'3m9.707s'), (b'x-ratelimit-reset-tokens', b'13.873s'), (b'x-request-id', b'req_01hz0pnpmhfwmvchenfqp6px6e'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d5ca6894968f-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the national flower of Australia, which is a specific piece of information that can be looked up.
class_name: Description and abstract concept
class_index: 2
data: {'text': 'Why does the moon turn orange ?', 'coarse_label': 2, 'fine_label': 27}
task_input: Why does the moon turn orange ?, corse_label: 2
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'Why does the moon turn orange ?', 'examples_str': 'Question: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the difference between a board of directors and an advisory board ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does the channel ESPN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is the name of Jamiroquai new album ?
class_name: Entity 
class_index: 1
--------

Question: What is the difference between a board of directors and an advisory board ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the first host of Person to Person ?
class_name: Human being 
class_index: 3
--------

Question: What country has the port of Haifa ?
class_name: Location 
class_index: 4
--------

Question: How many American soldiers remain unaccounted from the Vietnam war ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Why does the moon turn orange ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the difference between a board of directors and an advisory board ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Why does the moon turn orange ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 22:55:56 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14368'), (b'x-ratelimit-remaining-tokens', b'23202'), (b'x-ratelimit-reset-requests', b'3m11.654999999s'), (b'x-ratelimit-reset-tokens', b'13.595s'), (b'x-request-id', b'req_01hz0pnpzbeb3994n7s14s4d7k'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d5cc9a94968f-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the difference between a board of directors and an advisory board ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Why does the moon turn orange ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 22:55:59 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14367'), (b'x-ratelimit-remaining-tokens', b'23829'), (b'x-ratelimit-reset-requests', b'3m15.596s'), (b'x-ratelimit-reset-tokens', b'12.342s'), (b'x-request-id', b'req_01hz0pnrzpfmrsadts9s6ttq9s'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d5d97c6c968f-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the moon's color change, which is a natural phenomenon, and the answer is likely related to atmospheric conditions.
class_name: Description and abstract concept
class_index: 2
data: {'text': 'What is autism ?', 'coarse_label': 2, 'fine_label': 24}
task_input: What is autism ?, corse_label: 2
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What is autism ?', 'examples_str': 'Question: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the difference between a board of directors and an advisory board ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does the channel ESPN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is the name of Jamiroquai new album ?
class_name: Entity 
class_index: 1
--------

Question: What is the difference between a board of directors and an advisory board ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the first host of Person to Person ?
class_name: Human being 
class_index: 3
--------

Question: What country has the port of Haifa ?
class_name: Location 
class_index: 4
--------

Question: How many American soldiers remain unaccounted from the Vietnam war ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What is autism ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the difference between a board of directors and an advisory board ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is autism ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 22:55:59 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14367'), (b'x-ratelimit-remaining-tokens', b'23940'), (b'x-ratelimit-reset-requests', b'3m17.704s'), (b'x-ratelimit-reset-tokens', b'12.119s'), (b'x-request-id', b'req_01hz0pns8zf98bv3zjz6cy055f'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d5db3dc8968f-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the difference between a board of directors and an advisory board ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is autism ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 22:56:01 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14366'), (b'x-ratelimit-remaining-tokens', b'24572'), (b'x-ratelimit-reset-requests', b'3m21.641999999s'), (b'x-ratelimit-reset-tokens', b'10.855s'), (b'x-request-id', b'req_01hz0pnv9df98bfpjw1jbjrxrz'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d5e82ebb968f-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is asking about a medical condition, which is typically described in a conceptual or abstract way, making it a description and abstract concept.
class_name: DESC
class_index: 2
data: {'text': 'What city had a world fair in 1900 ?', 'coarse_label': 4, 'fine_label': 32}
task_input: What city had a world fair in 1900 ?, corse_label: 4
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What city had a world fair in 1900 ?', 'examples_str': 'Question: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the difference between a board of directors and an advisory board ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does the channel ESPN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is the name of Jamiroquai new album ?
class_name: Entity 
class_index: 1
--------

Question: What is the difference between a board of directors and an advisory board ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the first host of Person to Person ?
class_name: Human being 
class_index: 3
--------

Question: What country has the port of Haifa ?
class_name: Location 
class_index: 4
--------

Question: How many American soldiers remain unaccounted from the Vietnam war ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What city had a world fair in 1900 ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the difference between a board of directors and an advisory board ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What city had a world fair in 1900 ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 22:56:01 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14366'), (b'x-ratelimit-remaining-tokens', b'24679'), (b'x-ratelimit-reset-requests', b'3m23.714999999s'), (b'x-ratelimit-reset-tokens', b'10.641s'), (b'x-request-id', b'req_01hz0pnvjbeyf9bczjd2cy1ev9'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d5e9ffdc968f-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the difference between a board of directors and an advisory board ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What city had a world fair in 1900 ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 22:56:03 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14365'), (b'x-ratelimit-remaining-tokens', b'25304'), (b'x-ratelimit-reset-requests', b'3m27.657s'), (b'x-ratelimit-reset-tokens', b'9.391s'), (b'x-request-id', b'req_01hz0pnxjnfwnavwp8syrmwhc5'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d5f6d928968f-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about a specific event in the past, which is likely to be related to a specific location.
class_name: Location
class_index: 4
data: {'text': "What person 's head is on a dime ?", 'coarse_label': 3, 'fine_label': 29}
task_input: What person 's head is on a dime ?, corse_label: 3
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': "What person 's head is on a dime ?", 'examples_str': 'Question: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the difference between a board of directors and an advisory board ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does the channel ESPN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is the name of Jamiroquai new album ?
class_name: Entity 
class_index: 1
--------

Question: What is the difference between a board of directors and an advisory board ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the first host of Person to Person ?
class_name: Human being 
class_index: 3
--------

Question: What country has the port of Haifa ?
class_name: Location 
class_index: 4
--------

Question: How many American soldiers remain unaccounted from the Vietnam war ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What person 's head is on a dime ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the difference between a board of directors and an advisory board ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What person 's head is on a dime ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 22:56:03 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14365'), (b'x-ratelimit-remaining-tokens', b'25407'), (b'x-ratelimit-reset-requests', b'3m29.727999999s'), (b'x-ratelimit-reset-tokens', b'9.185s'), (b'x-request-id', b'req_01hz0pnxv6e8c9gznqnf704r8e'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d5f88a71968f-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the difference between a board of directors and an advisory board ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What person 's head is on a dime ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 22:56:06 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14364'), (b'x-ratelimit-remaining-tokens', b'26030'), (b'x-ratelimit-reset-requests', b'3m33.675999999s'), (b'x-ratelimit-reset-tokens', b'7.939s'), (b'x-request-id', b'req_01hz0pnzvafsvsvhkszs01cfwy'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d6055c0c968f-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about a person's head being on a dime, which is a common idiomatic expression referring to the profile of Abraham Lincoln on the United States one-cent coin.
class_name: Human being
class_index: 3
data: {'text': 'What is the average weight of a Yellow Labrador ?', 'coarse_label': 5, 'fine_label': 49}
task_input: What is the average weight of a Yellow Labrador ?, corse_label: 5
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What is the average weight of a Yellow Labrador ?', 'examples_str': 'Question: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the difference between a board of directors and an advisory board ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does the channel ESPN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is the name of Jamiroquai new album ?
class_name: Entity 
class_index: 1
--------

Question: What is the difference between a board of directors and an advisory board ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the first host of Person to Person ?
class_name: Human being 
class_index: 3
--------

Question: What country has the port of Haifa ?
class_name: Location 
class_index: 4
--------

Question: How many American soldiers remain unaccounted from the Vietnam war ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What is the average weight of a Yellow Labrador ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the difference between a board of directors and an advisory board ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is the average weight of a Yellow Labrador ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 22:56:06 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14364'), (b'x-ratelimit-remaining-tokens', b'26102'), (b'x-ratelimit-reset-requests', b'3m35.763999999s'), (b'x-ratelimit-reset-tokens', b'7.796s'), (b'x-request-id', b'req_01hz0pp02qf988mdabxy40wvr5'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d606dcfa968f-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the difference between a board of directors and an advisory board ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is the average weight of a Yellow Labrador ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 22:56:08 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14363'), (b'x-ratelimit-remaining-tokens', b'26721'), (b'x-ratelimit-reset-requests', b'3m39.711s'), (b'x-ratelimit-reset-tokens', b'6.557s'), (b'x-request-id', b'req_01hz0pp22wer5breq758j50qjt'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d613ad44968f-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking for a specific numerical value, which is the average weight of a Yellow Labrador.
class_name: NUM
class_index: 5
data: {'text': 'Who was the first man to fly across the Pacific Ocean ?', 'coarse_label': 3, 'fine_label': 29}
task_input: Who was the first man to fly across the Pacific Ocean ?, corse_label: 3
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'Who was the first man to fly across the Pacific Ocean ?', 'examples_str': 'Question: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the difference between a board of directors and an advisory board ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does the channel ESPN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is the name of Jamiroquai new album ?
class_name: Entity 
class_index: 1
--------

Question: What is the difference between a board of directors and an advisory board ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the first host of Person to Person ?
class_name: Human being 
class_index: 3
--------

Question: What country has the port of Haifa ?
class_name: Location 
class_index: 4
--------

Question: How many American soldiers remain unaccounted from the Vietnam war ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Who was the first man to fly across the Pacific Ocean ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the difference between a board of directors and an advisory board ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Who was the first man to fly across the Pacific Ocean ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 22:56:08 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14363'), (b'x-ratelimit-remaining-tokens', b'26855'), (b'x-ratelimit-reset-requests', b'3m41.68s'), (b'x-ratelimit-reset-tokens', b'6.289s'), (b'x-request-id', b'req_01hz0pp2cxfwnrwjx2237r2964'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d615af15968f-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the difference between a board of directors and an advisory board ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Who was the first man to fly across the Pacific Ocean ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 22:56:10 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14362'), (b'x-ratelimit-remaining-tokens', b'27479'), (b'x-ratelimit-reset-requests', b'3m45.616s'), (b'x-ratelimit-reset-tokens', b'5.042s'), (b'x-request-id', b'req_01hz0pp4ddfma9c5mpsz7za63a'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d6229a20968f-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about a historical event and the person who achieved it, which is a characteristic of a human being.
class_name: HUM
class_index: 3
data: {'text': 'When did Idaho become a state ?', 'coarse_label': 5, 'fine_label': 39}
task_input: When did Idaho become a state ?, corse_label: 5
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'When did Idaho become a state ?', 'examples_str': 'Question: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the difference between a board of directors and an advisory board ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does the channel ESPN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is the name of Jamiroquai new album ?
class_name: Entity 
class_index: 1
--------

Question: What is the difference between a board of directors and an advisory board ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the first host of Person to Person ?
class_name: Human being 
class_index: 3
--------

Question: What country has the port of Haifa ?
class_name: Location 
class_index: 4
--------

Question: How many American soldiers remain unaccounted from the Vietnam war ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: When did Idaho become a state ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the difference between a board of directors and an advisory board ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: When did Idaho become a state ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 22:56:10 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14362'), (b'x-ratelimit-remaining-tokens', b'27580'), (b'x-ratelimit-reset-requests', b'3m47.735s'), (b'x-ratelimit-reset-tokens', b'4.839s'), (b'x-request-id', b'req_01hz0pp4nqe8csjt2km5qhy40d'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d6243ba9968f-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the difference between a board of directors and an advisory board ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: When did Idaho become a state ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 22:56:13 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14361'), (b'x-ratelimit-remaining-tokens', b'28211'), (b'x-ratelimit-reset-requests', b'3m51.667s'), (b'x-ratelimit-reset-tokens', b'3.577s'), (b'x-request-id', b'req_01hz0pp6pbfmst5651kzyzw9vc'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d6312ec5968f-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the date when Idaho became a state, which is a specific historical event.
class_name: Description and abstract concept
class_index: 2
```
data: {'text': 'What is the life expectancy for crickets ?', 'coarse_label': 5, 'fine_label': 43}
task_input: What is the life expectancy for crickets ?, corse_label: 5
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What is the life expectancy for crickets ?', 'examples_str': 'Question: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the difference between a board of directors and an advisory board ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does the channel ESPN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is the name of Jamiroquai new album ?
class_name: Entity 
class_index: 1
--------

Question: What is the difference between a board of directors and an advisory board ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the first host of Person to Person ?
class_name: Human being 
class_index: 3
--------

Question: What country has the port of Haifa ?
class_name: Location 
class_index: 4
--------

Question: How many American soldiers remain unaccounted from the Vietnam war ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What is the life expectancy for crickets ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the difference between a board of directors and an advisory board ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is the life expectancy for crickets ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 22:56:13 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'325'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14361'), (b'x-ratelimit-remaining-tokens', b'28569'), (b'x-ratelimit-reset-requests', b'3m53.22s'), (b'x-ratelimit-reset-tokens', b'2.861s'), (b'x-request-id', b'req_01hz0pp7ere2ctyjewzjh11f59'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d6360b9f968f-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the difference between a board of directors and an advisory board ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is the life expectancy for crickets ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 22:56:16 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14360'), (b'x-ratelimit-remaining-tokens', b'29196'), (b'x-ratelimit-reset-requests', b'3m57.156999999s'), (b'x-ratelimit-reset-tokens', b'1.608s'), (b'x-request-id', b'req_01hz0pp9f7e2cv3ggv9dzy49mb'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d642f980968f-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the life expectancy of a specific species, crickets, which is a numeric value.
class_name: NUM
class_index: 5
data: {'text': 'What metal has the highest melting point ?', 'coarse_label': 1, 'fine_label': 18}
task_input: What metal has the highest melting point ?, corse_label: 1
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What metal has the highest melting point ?', 'examples_str': 'Question: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the difference between a board of directors and an advisory board ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does the channel ESPN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is the name of Jamiroquai new album ?
class_name: Entity 
class_index: 1
--------

Question: What is the difference between a board of directors and an advisory board ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the first host of Person to Person ?
class_name: Human being 
class_index: 3
--------

Question: What country has the port of Haifa ?
class_name: Location 
class_index: 4
--------

Question: How many American soldiers remain unaccounted from the Vietnam war ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What metal has the highest melting point ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the difference between a board of directors and an advisory board ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What metal has the highest melting point ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 22:56:16 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14360'), (b'x-ratelimit-remaining-tokens', b'29284'), (b'x-ratelimit-reset-requests', b'3m59.766999999s'), (b'x-ratelimit-reset-tokens', b'1.432s'), (b'x-request-id', b'req_01hz0pp9phfmaseqe4ybq5yzft'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d6446acd968f-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the difference between a board of directors and an advisory board ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What metal has the highest melting point ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 22:56:18 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14359'), (b'x-ratelimit-remaining-tokens', b'29595'), (b'x-ratelimit-reset-requests', b'4m3.711s'), (b'x-ratelimit-reset-tokens', b'810ms'), (b'x-request-id', b'req_01hz0ppbpte8dbg3ppr5pmg09m'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d6513c58968f-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the metal with the highest melting point, which is a specific numeric value.
class_name: NUM
class_index: 5
data: {'text': 'Who developed the vaccination against polio ?', 'coarse_label': 3, 'fine_label': 29}
task_input: Who developed the vaccination against polio ?, corse_label: 3
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'Who developed the vaccination against polio ?', 'examples_str': 'Question: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the difference between a board of directors and an advisory board ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does the channel ESPN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is the name of Jamiroquai new album ?
class_name: Entity 
class_index: 1
--------

Question: What is the difference between a board of directors and an advisory board ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the first host of Person to Person ?
class_name: Human being 
class_index: 3
--------

Question: What country has the port of Haifa ?
class_name: Location 
class_index: 4
--------

Question: How many American soldiers remain unaccounted from the Vietnam war ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Who developed the vaccination against polio ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the difference between a board of directors and an advisory board ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Who developed the vaccination against polio ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 22:56:18 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14359'), (b'x-ratelimit-remaining-tokens', b'29594'), (b'x-ratelimit-reset-requests', b'4m5.760999999s'), (b'x-ratelimit-reset-tokens', b'811ms'), (b'x-request-id', b'req_01hz0ppby8eb4bnzffkg0qy0nc'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d652cd53968f-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the difference between a board of directors and an advisory board ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Who developed the vaccination against polio ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 22:56:20 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14358'), (b'x-ratelimit-remaining-tokens', b'29594'), (b'x-ratelimit-reset-requests', b'4m9.703s'), (b'x-ratelimit-reset-tokens', b'812ms'), (b'x-request-id', b'req_01hz0ppdykeb4ad0rvfvzj1ytm'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d65faea0968f-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is asking about a person who developed a vaccination, which is a human being.
class_name: HUM
class_index: 3
data: {'text': 'What is epilepsy ?', 'coarse_label': 2, 'fine_label': 24}
task_input: What is epilepsy ?, corse_label: 2
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What is epilepsy ?', 'examples_str': 'Question: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the difference between a board of directors and an advisory board ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does the channel ESPN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is the name of Jamiroquai new album ?
class_name: Entity 
class_index: 1
--------

Question: What is the difference between a board of directors and an advisory board ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the first host of Person to Person ?
class_name: Human being 
class_index: 3
--------

Question: What country has the port of Haifa ?
class_name: Location 
class_index: 4
--------

Question: How many American soldiers remain unaccounted from the Vietnam war ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What is epilepsy ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the difference between a board of directors and an advisory board ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is epilepsy ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 22:56:20 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14358'), (b'x-ratelimit-remaining-tokens', b'29642'), (b'x-ratelimit-reset-requests', b'4m11.673999999s'), (b'x-ratelimit-reset-tokens', b'715ms'), (b'x-request-id', b'req_01hz0ppe8teb49ea27dyf8ega1'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d661a847968f-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the difference between a board of directors and an advisory board ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is epilepsy ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 22:56:23 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14357'), (b'x-ratelimit-remaining-tokens', b'29601'), (b'x-ratelimit-reset-requests', b'4m15.614s'), (b'x-ratelimit-reset-tokens', b'798ms'), (b'x-request-id', b'req_01hz0ppg96ef39mmze2gyypv5c'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d66e89d6968f-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is asking for a definition or explanation of a concept, which is a characteristic of a description and abstract concept.
class_name: DESC
class_index: 2
```
data: {'text': 'What year did the Titanic sink ?', 'coarse_label': 5, 'fine_label': 39}
task_input: What year did the Titanic sink ?, corse_label: 5
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What year did the Titanic sink ?', 'examples_str': 'Question: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the difference between a board of directors and an advisory board ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does the channel ESPN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is the name of Jamiroquai new album ?
class_name: Entity 
class_index: 1
--------

Question: What is the difference between a board of directors and an advisory board ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the first host of Person to Person ?
class_name: Human being 
class_index: 3
--------

Question: What country has the port of Haifa ?
class_name: Location 
class_index: 4
--------

Question: How many American soldiers remain unaccounted from the Vietnam war ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What year did the Titanic sink ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the difference between a board of directors and an advisory board ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What year did the Titanic sink ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 22:56:23 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14357'), (b'x-ratelimit-remaining-tokens', b'29612'), (b'x-ratelimit-reset-requests', b'4m17.699s'), (b'x-ratelimit-reset-tokens', b'775ms'), (b'x-request-id', b'req_01hz0ppgjmfmark0tapz2gm6vc'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d6706b40968f-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the difference between a board of directors and an advisory board ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What year did the Titanic sink ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 22:56:25 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14356'), (b'x-ratelimit-remaining-tokens', b'29597'), (b'x-ratelimit-reset-requests', b'4m21.632999999s'), (b'x-ratelimit-reset-tokens', b'806ms'), (b'x-request-id', b'req_01hz0ppjk6fdt874mva1bdrqg0'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d67d5ca9968f-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking for a specific year, which is a numeric value.
class_name: NUM
class_index: 5
responses: [5, 4, 3, 2, 2, 5, 1, 2, 2, 2, 4, 3, 5, 3, 2, 5, 5, 3, 2, 5], targets: [5, 4, 3, 2, 5, 5, 3, 1, 2, 2, 4, 3, 5, 3, 5, 5, 1, 3, 2, 5]
num_invalid: 0
Preds tensor: tensor([[0., 0., 0., 0., 0., 1.],
        [0., 0., 0., 0., 1., 0.],
        [0., 0., 0., 1., 0., 0.],
        [0., 0., 1., 0., 0., 0.],
        [0., 0., 1., 0., 0., 0.],
        [0., 0., 0., 0., 0., 1.],
        [0., 1., 0., 0., 0., 0.],
        [0., 0., 1., 0., 0., 0.],
        [0., 0., 1., 0., 0., 0.],
        [0., 0., 1., 0., 0., 0.],
        [0., 0., 0., 0., 1., 0.],
        [0., 0., 0., 1., 0., 0.],
        [0., 0., 0., 0., 0., 1.],
        [0., 0., 0., 1., 0., 0.],
        [0., 0., 1., 0., 0., 0.],
        [0., 0., 0., 0., 0., 1.],
        [0., 0., 0., 0., 0., 1.],
        [0., 0., 0., 1., 0., 0.],
        [0., 0., 1., 0., 0., 0.],
        [0., 0., 0., 0., 0., 1.]])
Targets tensor: tensor([5, 4, 3, 2, 5, 5, 3, 1, 2, 2, 4, 3, 5, 3, 5, 5, 1, 3, 2, 5])
Test Accuracy Start: 0.75, F1: 0.677, score: 1.5870000000000002
step: 0
train_batch: {'text': ["Why shouldn 't you remove a bee stinger with tweezers ?", 'What is a virtual IP address ?', 'How many yards are in 1 mile ?', 'The trials resulting from World War II are known as what ?', 'Where is Rider College located ?', 'What war did the Wanna-Go-Home Riots occur after ?', 'What country did the Nile River originate in ?', 'What organ contains the islands of Langerhans ?', "Why are sometimes your hands cold , but the rest of you isn 't ?", "How does the car in `` Christine '' become possessed ?"], 'coarse_label': tensor([2, 2, 5, 1, 4, 1, 4, 1, 2, 2]), 'fine_label': tensor([27, 24, 38,  8, 35,  8, 33,  3, 27, 26])}
before random_replace: [Sample(index=439, data={'text': 'What does the channel ESPN stand for ?', 'coarse_label': 0, 'fine_label': 1}), Sample(index=1336, data={'text': 'What is the name of Jamiroquai new album ?', 'coarse_label': 1, 'fine_label': 5}), Sample(index=505, data={'text': 'What is the difference between a board of directors and an advisory board ?', 'coarse_label': 2, 'fine_label': 25}), Sample(index=2349, data={'text': 'Who was the first host of Person to Person ?', 'coarse_label': 3, 'fine_label': 29}), Sample(index=224, data={'text': 'What country has the port of Haifa ?', 'coarse_label': 4, 'fine_label': 33}), Sample(index=456, data={'text': 'How many American soldiers remain unaccounted from the Vietnam war ?', 'coarse_label': 5, 'fine_label': 38})]
after random_replace: [Sample(index=1933, data={'text': 'What is IOC an abbreviation of ?', 'coarse_label': 0, 'fine_label': 1}), Sample(index=1336, data={'text': 'What is the name of Jamiroquai new album ?', 'coarse_label': 1, 'fine_label': 5}), Sample(index=1688, data={'text': 'What makes thunder ?', 'coarse_label': 2, 'fine_label': 27}), Sample(index=2349, data={'text': 'Who was the first host of Person to Person ?', 'coarse_label': 3, 'fine_label': 29}), Sample(index=1713, data={'text': 'Where can I find the names of all the 15 Pokemon ?', 'coarse_label': 4, 'fine_label': 35}), Sample(index=456, data={'text': 'How many American soldiers remain unaccounted from the Vietnam war ?', 'coarse_label': 5, 'fine_label': 38})]
data: {'text': 'What does pH stand for ?', 'coarse_label': 0, 'fine_label': 1}
task_input: What does pH stand for ?, corse_label: 0
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What does pH stand for ?', 'examples_str': 'Question: What is IOC an abbreviation of ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What makes thunder ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where can I find the names of all the 15 Pokemon ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is IOC an abbreviation of ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is the name of Jamiroquai new album ?
class_name: Entity 
class_index: 1
--------

Question: What makes thunder ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the first host of Person to Person ?
class_name: Human being 
class_index: 3
--------

Question: Where can I find the names of all the 15 Pokemon ?
class_name: Location 
class_index: 4
--------

Question: How many American soldiers remain unaccounted from the Vietnam war ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What does pH stand for ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is IOC an abbreviation of ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What makes thunder ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where can I find the names of all the 15 Pokemon ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does pH stand for ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 22:56:25 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14356'), (b'x-ratelimit-remaining-tokens', b'29620'), (b'x-ratelimit-reset-requests', b'4m23.741s'), (b'x-ratelimit-reset-tokens', b'760ms'), (b'x-request-id', b'req_01hz0ppjv9eyg862gcsevapke5'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d67efdfd968f-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is IOC an abbreviation of ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What makes thunder ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where can I find the names of all the 15 Pokemon ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does pH stand for ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 22:56:27 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14355'), (b'x-ratelimit-remaining-tokens', b'29611'), (b'x-ratelimit-reset-requests', b'4m27.683999999s'), (b'x-ratelimit-reset-tokens', b'778ms'), (b'x-request-id', b'req_01hz0ppmvjec0r1ht9sfjmaq4v'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d68bdfcb968f-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the meaning of an abbreviation, which is a common use case for abbreviations.
class_name: ABBR
class_index: 0
data: {'text': 'What is RCD ?', 'coarse_label': 0, 'fine_label': 1}
task_input: What is RCD ?, corse_label: 0
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What is RCD ?', 'examples_str': 'Question: What is IOC an abbreviation of ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What makes thunder ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where can I find the names of all the 15 Pokemon ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is IOC an abbreviation of ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is the name of Jamiroquai new album ?
class_name: Entity 
class_index: 1
--------

Question: What makes thunder ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the first host of Person to Person ?
class_name: Human being 
class_index: 3
--------

Question: Where can I find the names of all the 15 Pokemon ?
class_name: Location 
class_index: 4
--------

Question: How many American soldiers remain unaccounted from the Vietnam war ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What is RCD ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is IOC an abbreviation of ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What makes thunder ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where can I find the names of all the 15 Pokemon ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is RCD ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 22:56:27 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14355'), (b'x-ratelimit-remaining-tokens', b'29629'), (b'x-ratelimit-reset-requests', b'4m29.679s'), (b'x-ratelimit-reset-tokens', b'741ms'), (b'x-request-id', b'req_01hz0ppn5net7bgqg5cgrkz9ds'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d68dd931968f-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is IOC an abbreviation of ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What makes thunder ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where can I find the names of all the 15 Pokemon ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is RCD ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 22:56:30 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14354'), (b'x-ratelimit-remaining-tokens', b'29614'), (b'x-ratelimit-reset-requests', b'4m33.616999999s'), (b'x-ratelimit-reset-tokens', b'772ms'), (b'x-request-id', b'req_01hz0ppq62et7bjp1rxe8b6x7h'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d69aba07968f-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking for the meaning of RCD, which is likely an abbreviation.
class_name: ABBR
class_index: 0
data: {'text': 'What does IQ stand for ?', 'coarse_label': 0, 'fine_label': 1}
task_input: What does IQ stand for ?, corse_label: 0
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What does IQ stand for ?', 'examples_str': 'Question: What is IOC an abbreviation of ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What makes thunder ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where can I find the names of all the 15 Pokemon ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is IOC an abbreviation of ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is the name of Jamiroquai new album ?
class_name: Entity 
class_index: 1
--------

Question: What makes thunder ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the first host of Person to Person ?
class_name: Human being 
class_index: 3
--------

Question: Where can I find the names of all the 15 Pokemon ?
class_name: Location 
class_index: 4
--------

Question: How many American soldiers remain unaccounted from the Vietnam war ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What does IQ stand for ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is IOC an abbreviation of ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What makes thunder ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where can I find the names of all the 15 Pokemon ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does IQ stand for ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 22:56:30 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14354'), (b'x-ratelimit-remaining-tokens', b'29634'), (b'x-ratelimit-reset-requests', b'4m35.705s'), (b'x-ratelimit-reset-tokens', b'732ms'), (b'x-request-id', b'req_01hz0ppqf9f3r807nwfrtwdz90'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d69c9b48968f-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is IOC an abbreviation of ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What makes thunder ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where can I find the names of all the 15 Pokemon ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does IQ stand for ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 22:56:32 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14353'), (b'x-ratelimit-remaining-tokens', b'29611'), (b'x-ratelimit-reset-requests', b'4m39.645s'), (b'x-ratelimit-reset-tokens', b'778ms'), (b'x-request-id', b'req_01hz0ppsfpec18av4zzr1jz92g'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d6a96c77968f-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking for the abbreviation of IQ, which is a well-known abbreviation in the field of psychology.
class_name: ABBR
class_index: 0
data: {'text': "What does the `` blue ribbon '' stand for ?", 'coarse_label': 0, 'fine_label': 1}
task_input: What does the `` blue ribbon '' stand for ?, corse_label: 0
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': "What does the `` blue ribbon '' stand for ?", 'examples_str': 'Question: What is IOC an abbreviation of ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What makes thunder ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where can I find the names of all the 15 Pokemon ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is IOC an abbreviation of ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is the name of Jamiroquai new album ?
class_name: Entity 
class_index: 1
--------

Question: What makes thunder ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the first host of Person to Person ?
class_name: Human being 
class_index: 3
--------

Question: Where can I find the names of all the 15 Pokemon ?
class_name: Location 
class_index: 4
--------

Question: How many American soldiers remain unaccounted from the Vietnam war ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What does the `` blue ribbon '' stand for ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is IOC an abbreviation of ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What makes thunder ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where can I find the names of all the 15 Pokemon ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does the `` blue ribbon '' stand for ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 22:56:32 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14353'), (b'x-ratelimit-remaining-tokens', b'29600'), (b'x-ratelimit-reset-requests', b'4m41.772999999s'), (b'x-ratelimit-reset-tokens', b'799ms'), (b'x-request-id', b'req_01hz0ppsptfxkb7azjsez8y2m9'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d6aadd60968f-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is IOC an abbreviation of ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What makes thunder ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where can I find the names of all the 15 Pokemon ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does the `` blue ribbon '' stand for ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 22:56:34 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14352'), (b'x-ratelimit-remaining-tokens', b'29606'), (b'x-ratelimit-reset-requests', b'4m45.711s'), (b'x-ratelimit-reset-tokens', b'788ms'), (b'x-request-id', b'req_01hz0ppvq8eb5ajn5bapzmsjp2'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d6b7bde8968f-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the meaning of a symbol, which is often represented by an abbreviation.
class_name: ABBR
class_index: 0
data: {'text': 'What English word contains the most letters ?', 'coarse_label': 1, 'fine_label': 23}
task_input: What English word contains the most letters ?, corse_label: 1
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What English word contains the most letters ?', 'examples_str': 'Question: What is IOC an abbreviation of ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What makes thunder ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where can I find the names of all the 15 Pokemon ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is IOC an abbreviation of ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is the name of Jamiroquai new album ?
class_name: Entity 
class_index: 1
--------

Question: What makes thunder ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the first host of Person to Person ?
class_name: Human being 
class_index: 3
--------

Question: Where can I find the names of all the 15 Pokemon ?
class_name: Location 
class_index: 4
--------

Question: How many American soldiers remain unaccounted from the Vietnam war ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What English word contains the most letters ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is IOC an abbreviation of ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What makes thunder ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where can I find the names of all the 15 Pokemon ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What English word contains the most letters ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 22:56:34 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14352'), (b'x-ratelimit-remaining-tokens', b'29642'), (b'x-ratelimit-reset-requests', b'4m47.642s'), (b'x-ratelimit-reset-tokens', b'715ms'), (b'x-request-id', b'req_01hz0ppw2ffj5s9x02c8y20svw'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d6b9ff0c968f-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is IOC an abbreviation of ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What makes thunder ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where can I find the names of all the 15 Pokemon ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What English word contains the most letters ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 22:56:37 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14351'), (b'x-ratelimit-remaining-tokens', b'29606'), (b'x-ratelimit-reset-requests', b'4m51.588999999s'), (b'x-ratelimit-reset-tokens', b'788ms'), (b'x-request-id', b'req_01hz0ppy2mfy682tzm30vewfrq'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d6c6d823968f-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is asking about a specific fact, and the answer is a number, which is a numeric value.
class_name: NUM
class_index: 5
data: {'text': "What color flies closest to the staff on Belgium 's flag ?", 'coarse_label': 1, 'fine_label': 4}
task_input: What color flies closest to the staff on Belgium 's flag ?, corse_label: 1
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': "What color flies closest to the staff on Belgium 's flag ?", 'examples_str': 'Question: What is IOC an abbreviation of ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What makes thunder ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where can I find the names of all the 15 Pokemon ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is IOC an abbreviation of ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is the name of Jamiroquai new album ?
class_name: Entity 
class_index: 1
--------

Question: What makes thunder ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the first host of Person to Person ?
class_name: Human being 
class_index: 3
--------

Question: Where can I find the names of all the 15 Pokemon ?
class_name: Location 
class_index: 4
--------

Question: How many American soldiers remain unaccounted from the Vietnam war ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What color flies closest to the staff on Belgium 's flag ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is IOC an abbreviation of ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What makes thunder ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where can I find the names of all the 15 Pokemon ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What color flies closest to the staff on Belgium 's flag ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 22:56:37 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14351'), (b'x-ratelimit-remaining-tokens', b'29602'), (b'x-ratelimit-reset-requests', b'4m53.737s'), (b'x-ratelimit-reset-tokens', b'796ms'), (b'x-request-id', b'req_01hz0ppyavfxks42n0fhqshrvh'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d6c87967968f-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is IOC an abbreviation of ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What makes thunder ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where can I find the names of all the 15 Pokemon ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What color flies closest to the staff on Belgium 's flag ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 22:56:39 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14350'), (b'x-ratelimit-remaining-tokens', b'29602'), (b'x-ratelimit-reset-requests', b'4m57.679999999s'), (b'x-ratelimit-reset-tokens', b'796ms'), (b'x-request-id', b'req_01hz0pq0b4ec1aq4ys0kfsw97b'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d6d55af4968f-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the color of an object on a flag, which is a specific detail.
class_name: Description and abstract concept
class_index: 2
data: {'text': "Name the disposable razor that `` costs about 19 cents . ''", 'coarse_label': 1, 'fine_label': 15}
task_input: Name the disposable razor that `` costs about 19 cents . '', corse_label: 1
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': "Name the disposable razor that `` costs about 19 cents . ''", 'examples_str': 'Question: What is IOC an abbreviation of ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What makes thunder ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where can I find the names of all the 15 Pokemon ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is IOC an abbreviation of ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is the name of Jamiroquai new album ?
class_name: Entity 
class_index: 1
--------

Question: What makes thunder ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the first host of Person to Person ?
class_name: Human being 
class_index: 3
--------

Question: Where can I find the names of all the 15 Pokemon ?
class_name: Location 
class_index: 4
--------

Question: How many American soldiers remain unaccounted from the Vietnam war ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Name the disposable razor that `` costs about 19 cents . ''
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is IOC an abbreviation of ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What makes thunder ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where can I find the names of all the 15 Pokemon ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Name the disposable razor that `` costs about 19 cents . ''\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 22:56:39 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14350'), (b'x-ratelimit-remaining-tokens', b'29597'), (b'x-ratelimit-reset-requests', b'4m59.757s'), (b'x-ratelimit-reset-tokens', b'805ms'), (b'x-request-id', b'req_01hz0pq0jre6g9a4txd1bgr5ah'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d6d6dbd6968f-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is IOC an abbreviation of ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What makes thunder ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where can I find the names of all the 15 Pokemon ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Name the disposable razor that `` costs about 19 cents . ''\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 22:56:41 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14349'), (b'x-ratelimit-remaining-tokens', b'29602'), (b'x-ratelimit-reset-requests', b'5m3.704s'), (b'x-ratelimit-reset-tokens', b'796ms'), (b'x-request-id', b'req_01hz0pq2jwer7bhpr8yr03ef0d'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d6e3ae33968f-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking for the name of a specific product, which is typically represented by an abbreviation.
class_name: ABBR
class_index: 0
data: {'text': "What 's the Southern dish made of pigs ' small intestines ?", 'coarse_label': 1, 'fine_label': 9}
task_input: What 's the Southern dish made of pigs ' small intestines ?, corse_label: 1
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': "What 's the Southern dish made of pigs ' small intestines ?", 'examples_str': 'Question: What is IOC an abbreviation of ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What makes thunder ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where can I find the names of all the 15 Pokemon ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is IOC an abbreviation of ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is the name of Jamiroquai new album ?
class_name: Entity 
class_index: 1
--------

Question: What makes thunder ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the first host of Person to Person ?
class_name: Human being 
class_index: 3
--------

Question: Where can I find the names of all the 15 Pokemon ?
class_name: Location 
class_index: 4
--------

Question: How many American soldiers remain unaccounted from the Vietnam war ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What 's the Southern dish made of pigs ' small intestines ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is IOC an abbreviation of ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What makes thunder ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where can I find the names of all the 15 Pokemon ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What 's the Southern dish made of pigs ' small intestines ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 22:56:41 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14349'), (b'x-ratelimit-remaining-tokens', b'29596'), (b'x-ratelimit-reset-requests', b'5m5.771999999s'), (b'x-ratelimit-reset-tokens', b'808ms'), (b'x-request-id', b'req_01hz0pq2t1fn3rzrzw45tpvtyn'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d6e51f1b968f-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is IOC an abbreviation of ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What makes thunder ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where can I find the names of all the 15 Pokemon ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What 's the Southern dish made of pigs ' small intestines ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 22:56:44 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14348'), (b'x-ratelimit-remaining-tokens', b'29602'), (b'x-ratelimit-reset-requests', b'5m9.711s'), (b'x-ratelimit-reset-tokens', b'796ms'), (b'x-request-id', b'req_01hz0pq4tgejc9c1e7v09yvha8'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d6f1f83e968f-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is about a specific type of food, and the description includes a specific ingredient, which is a characteristic of a Description and abstract concept.
class_name: DESC
class_index: 2
```
data: {'text': 'What makes hamburgers taste like steakburgers ?', 'coarse_label': 2, 'fine_label': 27}
task_input: What makes hamburgers taste like steakburgers ?, corse_label: 2
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What makes hamburgers taste like steakburgers ?', 'examples_str': 'Question: What is IOC an abbreviation of ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What makes thunder ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where can I find the names of all the 15 Pokemon ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is IOC an abbreviation of ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is the name of Jamiroquai new album ?
class_name: Entity 
class_index: 1
--------

Question: What makes thunder ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the first host of Person to Person ?
class_name: Human being 
class_index: 3
--------

Question: Where can I find the names of all the 15 Pokemon ?
class_name: Location 
class_index: 4
--------

Question: How many American soldiers remain unaccounted from the Vietnam war ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What makes hamburgers taste like steakburgers ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is IOC an abbreviation of ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What makes thunder ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where can I find the names of all the 15 Pokemon ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What makes hamburgers taste like steakburgers ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 22:56:44 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14348'), (b'x-ratelimit-remaining-tokens', b'29595'), (b'x-ratelimit-reset-requests', b'5m11.738s'), (b'x-ratelimit-reset-tokens', b'809ms'), (b'x-request-id', b'req_01hz0pq52nf7gvkwyx1vrfhf7p'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d6f3a95f968f-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is IOC an abbreviation of ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What makes thunder ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where can I find the names of all the 15 Pokemon ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What makes hamburgers taste like steakburgers ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 22:56:46 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14347'), (b'x-ratelimit-remaining-tokens', b'29605'), (b'x-ratelimit-reset-requests', b'5m15.680999999s'), (b'x-ratelimit-reset-tokens', b'790ms'), (b'x-request-id', b'req_01hz0pq72zfdvbxr66x5dg0m8t'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d7007a5e968f-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is about the characteristics that make hamburgers taste like steakburgers, which is a descriptive concept.
class_name: Description and abstract concept
class_index: 2
data: {'text': 'How is digital audio used ?', 'coarse_label': 2, 'fine_label': 26}
task_input: How is digital audio used ?, corse_label: 2
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'How is digital audio used ?', 'examples_str': 'Question: What is IOC an abbreviation of ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What makes thunder ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where can I find the names of all the 15 Pokemon ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is IOC an abbreviation of ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is the name of Jamiroquai new album ?
class_name: Entity 
class_index: 1
--------

Question: What makes thunder ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the first host of Person to Person ?
class_name: Human being 
class_index: 3
--------

Question: Where can I find the names of all the 15 Pokemon ?
class_name: Location 
class_index: 4
--------

Question: How many American soldiers remain unaccounted from the Vietnam war ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: How is digital audio used ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is IOC an abbreviation of ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What makes thunder ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where can I find the names of all the 15 Pokemon ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: How is digital audio used ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 22:56:46 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14347'), (b'x-ratelimit-remaining-tokens', b'29603'), (b'x-ratelimit-reset-requests', b'5m17.710999999s'), (b'x-ratelimit-reset-tokens', b'794ms'), (b'x-request-id', b'req_01hz0pq7c0f9raht9gjce10p7n'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d7024bc2968f-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is IOC an abbreviation of ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What makes thunder ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where can I find the names of all the 15 Pokemon ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: How is digital audio used ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 22:56:48 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14346'), (b'x-ratelimit-remaining-tokens', b'29610'), (b'x-ratelimit-reset-requests', b'5m21.657s'), (b'x-ratelimit-reset-tokens', b'780ms'), (b'x-request-id', b'req_01hz0pq9c7fdv8btkcnj8v882r'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d70f2d13968f-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is asking about the usage of digital audio, which is an abstract concept, so it falls under the category of Description and abstract concept.
class_name: DESC
class_index: 2
data: {'text': "What does the Georgetown `` Hoya '' mean ?", 'coarse_label': 2, 'fine_label': 24}
task_input: What does the Georgetown `` Hoya '' mean ?, corse_label: 2
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': "What does the Georgetown `` Hoya '' mean ?", 'examples_str': 'Question: What is IOC an abbreviation of ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What makes thunder ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where can I find the names of all the 15 Pokemon ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is IOC an abbreviation of ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is the name of Jamiroquai new album ?
class_name: Entity 
class_index: 1
--------

Question: What makes thunder ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the first host of Person to Person ?
class_name: Human being 
class_index: 3
--------

Question: Where can I find the names of all the 15 Pokemon ?
class_name: Location 
class_index: 4
--------

Question: How many American soldiers remain unaccounted from the Vietnam war ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What does the Georgetown `` Hoya '' mean ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is IOC an abbreviation of ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What makes thunder ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where can I find the names of all the 15 Pokemon ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does the Georgetown `` Hoya '' mean ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 22:56:48 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14346'), (b'x-ratelimit-remaining-tokens', b'29596'), (b'x-ratelimit-reset-requests', b'5m23.74s'), (b'x-ratelimit-reset-tokens', b'807ms'), (b'x-request-id', b'req_01hz0pq9mbe1fab8jgsc3d0wad'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d710ce07968f-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is IOC an abbreviation of ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What makes thunder ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where can I find the names of all the 15 Pokemon ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does the Georgetown `` Hoya '' mean ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 22:56:51 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14345'), (b'x-ratelimit-remaining-tokens', b'29606'), (b'x-ratelimit-reset-requests', b'5m27.678999999s'), (b'x-ratelimit-reset-tokens', b'788ms'), (b'x-request-id', b'req_01hz0pqbmseyh8jy8y2wy5jyct'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d71dae4c968f-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the meaning of a symbol or logo, which is typically represented by an abbreviation.
class_name: ABBR
class_index: 0
data: {'text': 'What is a hormone ?', 'coarse_label': 2, 'fine_label': 24}
task_input: What is a hormone ?, corse_label: 2
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What is a hormone ?', 'examples_str': 'Question: What is IOC an abbreviation of ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What makes thunder ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where can I find the names of all the 15 Pokemon ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is IOC an abbreviation of ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is the name of Jamiroquai new album ?
class_name: Entity 
class_index: 1
--------

Question: What makes thunder ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the first host of Person to Person ?
class_name: Human being 
class_index: 3
--------

Question: Where can I find the names of all the 15 Pokemon ?
class_name: Location 
class_index: 4
--------

Question: How many American soldiers remain unaccounted from the Vietnam war ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What is a hormone ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is IOC an abbreviation of ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What makes thunder ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where can I find the names of all the 15 Pokemon ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is a hormone ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 22:56:51 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14345'), (b'x-ratelimit-remaining-tokens', b'29634'), (b'x-ratelimit-reset-requests', b'5m29.663999999s'), (b'x-ratelimit-reset-tokens', b'731ms'), (b'x-request-id', b'req_01hz0pqbzafxm8gd70mgj25z36'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d71fc801968f-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is IOC an abbreviation of ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What makes thunder ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where can I find the names of all the 15 Pokemon ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is a hormone ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 22:56:53 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14344'), (b'x-ratelimit-remaining-tokens', b'29612'), (b'x-ratelimit-reset-requests', b'5m33.598s'), (b'x-ratelimit-reset-tokens', b'776ms'), (b'x-request-id', b'req_01hz0pqdzwer7sb3md168339s0'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d72caa1c968f-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is asking about a general concept or idea, which is typically described or defined.
class_name: Description and abstract concept
class_index: 2
data: {'text': "What kind of people took part in Shays ' Rebellion in Massachusetts in 1787 ?", 'coarse_label': 3, 'fine_label': 28}
task_input: What kind of people took part in Shays ' Rebellion in Massachusetts in 1787 ?, corse_label: 3
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': "What kind of people took part in Shays ' Rebellion in Massachusetts in 1787 ?", 'examples_str': 'Question: What is IOC an abbreviation of ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What makes thunder ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where can I find the names of all the 15 Pokemon ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is IOC an abbreviation of ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is the name of Jamiroquai new album ?
class_name: Entity 
class_index: 1
--------

Question: What makes thunder ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the first host of Person to Person ?
class_name: Human being 
class_index: 3
--------

Question: Where can I find the names of all the 15 Pokemon ?
class_name: Location 
class_index: 4
--------

Question: How many American soldiers remain unaccounted from the Vietnam war ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What kind of people took part in Shays ' Rebellion in Massachusetts in 1787 ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is IOC an abbreviation of ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What makes thunder ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where can I find the names of all the 15 Pokemon ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What kind of people took part in Shays ' Rebellion in Massachusetts in 1787 ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 22:56:53 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14344'), (b'x-ratelimit-remaining-tokens', b'29606'), (b'x-ratelimit-reset-requests', b'5m35.766999999s'), (b'x-ratelimit-reset-tokens', b'787ms'), (b'x-request-id', b'req_01hz0pqe76fn4am70pdqd4qdaw'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d72e2b1f968f-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is IOC an abbreviation of ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What makes thunder ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where can I find the names of all the 15 Pokemon ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What kind of people took part in Shays ' Rebellion in Massachusetts in 1787 ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 22:56:55 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14343'), (b'x-ratelimit-remaining-tokens', b'29598'), (b'x-ratelimit-reset-requests', b'5m39.715s'), (b'x-ratelimit-reset-tokens', b'804ms'), (b'x-request-id', b'req_01hz0pqg7aer7r4qgtwj5gk2x3'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d73afc29968f-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the type of people involved in Shays' Rebellion, which is a historical event.
class_name: Human being
class_index: 3
data: {'text': "Name the designer of the shoe that spawned millions of plastic imitations , known as ` jellies ' .", 'coarse_label': 3, 'fine_label': 29}
task_input: Name the designer of the shoe that spawned millions of plastic imitations , known as ` jellies ' ., corse_label: 3
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': "Name the designer of the shoe that spawned millions of plastic imitations , known as ` jellies ' .", 'examples_str': 'Question: What is IOC an abbreviation of ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What makes thunder ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where can I find the names of all the 15 Pokemon ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is IOC an abbreviation of ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is the name of Jamiroquai new album ?
class_name: Entity 
class_index: 1
--------

Question: What makes thunder ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the first host of Person to Person ?
class_name: Human being 
class_index: 3
--------

Question: Where can I find the names of all the 15 Pokemon ?
class_name: Location 
class_index: 4
--------

Question: How many American soldiers remain unaccounted from the Vietnam war ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Name the designer of the shoe that spawned millions of plastic imitations , known as ` jellies ' .
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is IOC an abbreviation of ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What makes thunder ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where can I find the names of all the 15 Pokemon ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Name the designer of the shoe that spawned millions of plastic imitations , known as ` jellies ' .\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 22:56:55 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14343'), (b'x-ratelimit-remaining-tokens', b'29592'), (b'x-ratelimit-reset-requests', b'5m41.724999999s'), (b'x-ratelimit-reset-tokens', b'816ms'), (b'x-request-id', b'req_01hz0pqgfyfn4btra1j8t059v4'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d73cbd2e968f-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is IOC an abbreviation of ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What makes thunder ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where can I find the names of all the 15 Pokemon ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Name the designer of the shoe that spawned millions of plastic imitations , known as ` jellies ' .\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 22:56:58 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14342'), (b'x-ratelimit-remaining-tokens', b'29592'), (b'x-ratelimit-reset-requests', b'5m45.659s'), (b'x-ratelimit-reset-tokens', b'816ms'), (b'x-request-id', b'req_01hz0pqjgfe8jvx659p41apyjx'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d7499e08968f-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking for the designer of a specific shoe, which is a human being.
class_name: HUM
class_index: 3
data: {'text': 'Who is Prince Naseem Hamed ?', 'coarse_label': 3, 'fine_label': 31}
task_input: Who is Prince Naseem Hamed ?, corse_label: 3
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'Who is Prince Naseem Hamed ?', 'examples_str': 'Question: What is IOC an abbreviation of ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What makes thunder ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where can I find the names of all the 15 Pokemon ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is IOC an abbreviation of ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is the name of Jamiroquai new album ?
class_name: Entity 
class_index: 1
--------

Question: What makes thunder ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the first host of Person to Person ?
class_name: Human being 
class_index: 3
--------

Question: Where can I find the names of all the 15 Pokemon ?
class_name: Location 
class_index: 4
--------

Question: How many American soldiers remain unaccounted from the Vietnam war ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Who is Prince Naseem Hamed ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is IOC an abbreviation of ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What makes thunder ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where can I find the names of all the 15 Pokemon ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Who is Prince Naseem Hamed ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 22:56:58 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14342'), (b'x-ratelimit-remaining-tokens', b'29589'), (b'x-ratelimit-reset-requests', b'5m47.776999999s'), (b'x-ratelimit-reset-tokens', b'822ms'), (b'x-request-id', b'req_01hz0pqjqfe2bb669bdhpdtdj0'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d74afeec968f-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is IOC an abbreviation of ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What makes thunder ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where can I find the names of all the 15 Pokemon ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Who is Prince Naseem Hamed ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 22:57:00 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14341'), (b'x-ratelimit-remaining-tokens', b'29610'), (b'x-ratelimit-reset-requests', b'5m51.712s'), (b'x-ratelimit-reset-tokens', b'780ms'), (b'x-request-id', b'req_01hz0pqmr1f0t8f274zyymzc6r'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d757e8e3968f-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about a specific person, Prince Naseem Hamed, which is a type of human being.
class_name: HUM
class_index: 3
data: {'text': "Who sings Angel Eyes from the 80 's ?", 'coarse_label': 3, 'fine_label': 29}
task_input: Who sings Angel Eyes from the 80 's ?, corse_label: 3
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': "Who sings Angel Eyes from the 80 's ?", 'examples_str': 'Question: What is IOC an abbreviation of ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What makes thunder ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where can I find the names of all the 15 Pokemon ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is IOC an abbreviation of ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is the name of Jamiroquai new album ?
class_name: Entity 
class_index: 1
--------

Question: What makes thunder ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the first host of Person to Person ?
class_name: Human being 
class_index: 3
--------

Question: Where can I find the names of all the 15 Pokemon ?
class_name: Location 
class_index: 4
--------

Question: How many American soldiers remain unaccounted from the Vietnam war ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Who sings Angel Eyes from the 80 's ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is IOC an abbreviation of ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What makes thunder ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where can I find the names of all the 15 Pokemon ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Who sings Angel Eyes from the 80 's ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 22:57:00 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14341'), (b'x-ratelimit-remaining-tokens', b'29594'), (b'x-ratelimit-reset-requests', b'5m53.737s'), (b'x-ratelimit-reset-tokens', b'811ms'), (b'x-request-id', b'req_01hz0pqn09f64ab09z6pyxsab7'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d7599a3d968f-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is IOC an abbreviation of ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What makes thunder ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where can I find the names of all the 15 Pokemon ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Who sings Angel Eyes from the 80 's ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 22:57:02 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14340'), (b'x-ratelimit-remaining-tokens', b'29608'), (b'x-ratelimit-reset-requests', b'5m57.681999999s'), (b'x-ratelimit-reset-tokens', b'784ms'), (b'x-request-id', b'req_01hz0pqq0ge1k9j6skbzen3ts9'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d7666abc968f-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about a person who sings a song, which is a characteristic of a human being.
class_name: HUM
class_index: 3
data: {'text': "What is New England 's highest mountain ?", 'coarse_label': 4, 'fine_label': 34}
task_input: What is New England 's highest mountain ?, corse_label: 4
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': "What is New England 's highest mountain ?", 'examples_str': 'Question: What is IOC an abbreviation of ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What makes thunder ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where can I find the names of all the 15 Pokemon ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is IOC an abbreviation of ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is the name of Jamiroquai new album ?
class_name: Entity 
class_index: 1
--------

Question: What makes thunder ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the first host of Person to Person ?
class_name: Human being 
class_index: 3
--------

Question: Where can I find the names of all the 15 Pokemon ?
class_name: Location 
class_index: 4
--------

Question: How many American soldiers remain unaccounted from the Vietnam war ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What is New England 's highest mountain ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is IOC an abbreviation of ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What makes thunder ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where can I find the names of all the 15 Pokemon ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is New England 's highest mountain ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 22:57:02 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14340'), (b'x-ratelimit-remaining-tokens', b'29645'), (b'x-ratelimit-reset-requests', b'5m59.632s'), (b'x-ratelimit-reset-tokens', b'709ms'), (b'x-request-id', b'req_01hz0pqqc2e8jvwqb9bxzx6mdf'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d768bc3f968f-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is IOC an abbreviation of ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What makes thunder ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where can I find the names of all the 15 Pokemon ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is New England 's highest mountain ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 22:57:05 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14339'), (b'x-ratelimit-remaining-tokens', b'29607'), (b'x-ratelimit-reset-requests', b'6m3.583999999s'), (b'x-ratelimit-reset-tokens', b'786ms'), (b'x-request-id', b'req_01hz0pqsc2e1k9ftbjpbqv3zan'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d7758d97968f-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about a geographical location, specifically the highest mountain in New England.
class_name: Location
class_index: 4
data: {'text': 'Where is Inoco based ?', 'coarse_label': 4, 'fine_label': 35}
task_input: Where is Inoco based ?, corse_label: 4
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'Where is Inoco based ?', 'examples_str': 'Question: What is IOC an abbreviation of ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What makes thunder ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where can I find the names of all the 15 Pokemon ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is IOC an abbreviation of ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is the name of Jamiroquai new album ?
class_name: Entity 
class_index: 1
--------

Question: What makes thunder ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the first host of Person to Person ?
class_name: Human being 
class_index: 3
--------

Question: Where can I find the names of all the 15 Pokemon ?
class_name: Location 
class_index: 4
--------

Question: How many American soldiers remain unaccounted from the Vietnam war ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Where is Inoco based ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is IOC an abbreviation of ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What makes thunder ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where can I find the names of all the 15 Pokemon ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Where is Inoco based ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 22:57:05 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14339'), (b'x-ratelimit-remaining-tokens', b'29608'), (b'x-ratelimit-reset-requests', b'6m5.771999999s'), (b'x-ratelimit-reset-tokens', b'783ms'), (b'x-request-id', b'req_01hz0pqsk7f0tth9eepd5cjk9z'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d776fe94968f-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is IOC an abbreviation of ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What makes thunder ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where can I find the names of all the 15 Pokemon ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Where is Inoco based ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 22:57:07 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14338'), (b'x-ratelimit-remaining-tokens', b'29611'), (b'x-ratelimit-reset-requests', b'6m9.711s'), (b'x-ratelimit-reset-tokens', b'778ms'), (b'x-request-id', b'req_01hz0pqvkmf7hvbz0kar41b7te'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d783dfc5968f-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking for the location of a company, which is typically represented by a location.
class_name: LOC
class_index: 4
data: {'text': 'Where is the location of the Orange Bowl ?', 'coarse_label': 4, 'fine_label': 35}
task_input: Where is the location of the Orange Bowl ?, corse_label: 4
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'Where is the location of the Orange Bowl ?', 'examples_str': 'Question: What is IOC an abbreviation of ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What makes thunder ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where can I find the names of all the 15 Pokemon ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is IOC an abbreviation of ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is the name of Jamiroquai new album ?
class_name: Entity 
class_index: 1
--------

Question: What makes thunder ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the first host of Person to Person ?
class_name: Human being 
class_index: 3
--------

Question: Where can I find the names of all the 15 Pokemon ?
class_name: Location 
class_index: 4
--------

Question: How many American soldiers remain unaccounted from the Vietnam war ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Where is the location of the Orange Bowl ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is IOC an abbreviation of ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What makes thunder ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where can I find the names of all the 15 Pokemon ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Where is the location of the Orange Bowl ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 22:57:07 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14338'), (b'x-ratelimit-remaining-tokens', b'29657'), (b'x-ratelimit-reset-requests', b'6m11.626s'), (b'x-ratelimit-reset-tokens', b'686ms'), (b'x-request-id', b'req_01hz0pqvzbe9jbpq3wy32d7k3a'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d78629c7968f-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is IOC an abbreviation of ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What makes thunder ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where can I find the names of all the 15 Pokemon ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Where is the location of the Orange Bowl ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 22:57:09 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14337'), (b'x-ratelimit-remaining-tokens', b'29606'), (b'x-ratelimit-reset-requests', b'6m15.56s'), (b'x-ratelimit-reset-tokens', b'788ms'), (b'x-request-id', b'req_01hz0pqxzxf7hsz3sqsjs5w6m8'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d7931c00968f-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking for the location of the Orange Bowl, which is a specific place.
class_name: Location
class_index: 4
data: {'text': 'What ocean surrounds the Madeira Islands ?', 'coarse_label': 4, 'fine_label': 35}
task_input: What ocean surrounds the Madeira Islands ?, corse_label: 4
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What ocean surrounds the Madeira Islands ?', 'examples_str': 'Question: What is IOC an abbreviation of ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What makes thunder ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where can I find the names of all the 15 Pokemon ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is IOC an abbreviation of ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is the name of Jamiroquai new album ?
class_name: Entity 
class_index: 1
--------

Question: What makes thunder ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the first host of Person to Person ?
class_name: Human being 
class_index: 3
--------

Question: Where can I find the names of all the 15 Pokemon ?
class_name: Location 
class_index: 4
--------

Question: How many American soldiers remain unaccounted from the Vietnam war ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What ocean surrounds the Madeira Islands ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is IOC an abbreviation of ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What makes thunder ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where can I find the names of all the 15 Pokemon ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What ocean surrounds the Madeira Islands ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 22:57:09 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14337'), (b'x-ratelimit-remaining-tokens', b'29608'), (b'x-ratelimit-reset-requests', b'6m17.766999999s'), (b'x-ratelimit-reset-tokens', b'783ms'), (b'x-request-id', b'req_01hz0pqy77f9sa0cg0t75f0t4t'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d7948d74968f-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is IOC an abbreviation of ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What makes thunder ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where can I find the names of all the 15 Pokemon ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What ocean surrounds the Madeira Islands ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 22:57:12 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14336'), (b'x-ratelimit-remaining-tokens', b'29606'), (b'x-ratelimit-reset-requests', b'6m21.7s'), (b'x-ratelimit-reset-tokens', b'788ms'), (b'x-request-id', b'req_01hz0pr07te1kr5vzy26677ea6'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d7a16f5b968f-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the location of the Madeira Islands, which is a specific geographic location.
class_name: Location
class_index: 4
data: {'text': 'When is Bastille Day ?', 'coarse_label': 5, 'fine_label': 39}
task_input: When is Bastille Day ?, corse_label: 5
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'When is Bastille Day ?', 'examples_str': 'Question: What is IOC an abbreviation of ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What makes thunder ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where can I find the names of all the 15 Pokemon ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is IOC an abbreviation of ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is the name of Jamiroquai new album ?
class_name: Entity 
class_index: 1
--------

Question: What makes thunder ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the first host of Person to Person ?
class_name: Human being 
class_index: 3
--------

Question: Where can I find the names of all the 15 Pokemon ?
class_name: Location 
class_index: 4
--------

Question: How many American soldiers remain unaccounted from the Vietnam war ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: When is Bastille Day ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is IOC an abbreviation of ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What makes thunder ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where can I find the names of all the 15 Pokemon ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: When is Bastille Day ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 22:57:12 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14336'), (b'x-ratelimit-remaining-tokens', b'29601'), (b'x-ratelimit-reset-requests', b'6m23.777999999s'), (b'x-ratelimit-reset-tokens', b'797ms'), (b'x-request-id', b'req_01hz0pr0ese2bthe4ayx2qgr7p'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d7a2d842968f-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is IOC an abbreviation of ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What makes thunder ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where can I find the names of all the 15 Pokemon ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: When is Bastille Day ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 22:57:14 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14335'), (b'x-ratelimit-remaining-tokens', b'29611'), (b'x-ratelimit-reset-requests', b'6m27.716s'), (b'x-ratelimit-reset-tokens', b'778ms'), (b'x-request-id', b'req_01hz0pr2f7e8jrhhv3mtqfa9mw'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d7afbb83968f-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is asking about a specific date or event, which is a type of abstract concept.
class_name: Description and abstract concept
class_index: 2
data: {'text': 'How many home runs did Babe Ruth hit in his lifetime ?', 'coarse_label': 5, 'fine_label': 38}
task_input: How many home runs did Babe Ruth hit in his lifetime ?, corse_label: 5
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'How many home runs did Babe Ruth hit in his lifetime ?', 'examples_str': 'Question: What is IOC an abbreviation of ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What makes thunder ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where can I find the names of all the 15 Pokemon ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is IOC an abbreviation of ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is the name of Jamiroquai new album ?
class_name: Entity 
class_index: 1
--------

Question: What makes thunder ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the first host of Person to Person ?
class_name: Human being 
class_index: 3
--------

Question: Where can I find the names of all the 15 Pokemon ?
class_name: Location 
class_index: 4
--------

Question: How many American soldiers remain unaccounted from the Vietnam war ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: How many home runs did Babe Ruth hit in his lifetime ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is IOC an abbreviation of ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What makes thunder ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where can I find the names of all the 15 Pokemon ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: How many home runs did Babe Ruth hit in his lifetime ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 22:57:14 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14335'), (b'x-ratelimit-remaining-tokens', b'29603'), (b'x-ratelimit-reset-requests', b'6m29.722999999s'), (b'x-ratelimit-reset-tokens', b'793ms'), (b'x-request-id', b'req_01hz0pr2qxe6nvdzxgss4gar94'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d7b17d17968f-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is IOC an abbreviation of ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What makes thunder ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where can I find the names of all the 15 Pokemon ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: How many home runs did Babe Ruth hit in his lifetime ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 22:57:16 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14334'), (b'x-ratelimit-remaining-tokens', b'29603'), (b'x-ratelimit-reset-requests', b'6m33.669s'), (b'x-ratelimit-reset-tokens', b'794ms'), (b'x-request-id', b'req_01hz0pr4r3e9jbdzp9wdcyn2yq'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d7be5f5c968f-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is asking for a specific numerical value, the number of home runs Babe Ruth hit in his lifetime.
class_name: Numeric value
class_index: 5
data: {'text': 'When was General Manuel Noriega ousted as the leader of Panama and turned over to U.S. authorities ?', 'coarse_label': 5, 'fine_label': 39}
task_input: When was General Manuel Noriega ousted as the leader of Panama and turned over to U.S. authorities ?, corse_label: 5
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'When was General Manuel Noriega ousted as the leader of Panama and turned over to U.S. authorities ?', 'examples_str': 'Question: What is IOC an abbreviation of ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What makes thunder ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where can I find the names of all the 15 Pokemon ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is IOC an abbreviation of ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is the name of Jamiroquai new album ?
class_name: Entity 
class_index: 1
--------

Question: What makes thunder ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the first host of Person to Person ?
class_name: Human being 
class_index: 3
--------

Question: Where can I find the names of all the 15 Pokemon ?
class_name: Location 
class_index: 4
--------

Question: How many American soldiers remain unaccounted from the Vietnam war ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: When was General Manuel Noriega ousted as the leader of Panama and turned over to U.S. authorities ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is IOC an abbreviation of ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What makes thunder ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where can I find the names of all the 15 Pokemon ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: When was General Manuel Noriega ousted as the leader of Panama and turned over to U.S. authorities ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 22:57:16 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14334'), (b'x-ratelimit-remaining-tokens', b'29630'), (b'x-ratelimit-reset-requests', b'6m35.657999999s'), (b'x-ratelimit-reset-tokens', b'740ms'), (b'x-request-id', b'req_01hz0pr52tfxns7jbtcwk0g7wa'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d7c07935968f-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is IOC an abbreviation of ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What makes thunder ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where can I find the names of all the 15 Pokemon ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: When was General Manuel Noriega ousted as the leader of Panama and turned over to U.S. authorities ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 22:57:19 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14333'), (b'x-ratelimit-remaining-tokens', b'29592'), (b'x-ratelimit-reset-requests', b'6m39.597s'), (b'x-ratelimit-reset-tokens', b'816ms'), (b'x-request-id', b'req_01hz0pr737f7ja1h7t6bhe91kd'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d7cd5ac5968f-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about a historical event and the people involved, which suggests it's related to a human being.
class_name: HUM
class_index: 3
data: {'text': 'What is the population of the largest Chilean city', 'coarse_label': 5, 'fine_label': 38}
task_input: What is the population of the largest Chilean city, corse_label: 5
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What is the population of the largest Chilean city', 'examples_str': 'Question: What is IOC an abbreviation of ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What makes thunder ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where can I find the names of all the 15 Pokemon ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is IOC an abbreviation of ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is the name of Jamiroquai new album ?
class_name: Entity 
class_index: 1
--------

Question: What makes thunder ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the first host of Person to Person ?
class_name: Human being 
class_index: 3
--------

Question: Where can I find the names of all the 15 Pokemon ?
class_name: Location 
class_index: 4
--------

Question: How many American soldiers remain unaccounted from the Vietnam war ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What is the population of the largest Chilean city
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is IOC an abbreviation of ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What makes thunder ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where can I find the names of all the 15 Pokemon ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is the population of the largest Chilean city\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 22:57:19 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'332'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14333'), (b'x-ratelimit-remaining-tokens', b'29639'), (b'x-ratelimit-reset-requests', b'6m41.613999999s'), (b'x-ratelimit-reset-tokens', b'722ms'), (b'x-request-id', b'req_01hz0pr7fafc9s0c5nfjbdv615'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d7cfcd01968f-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is IOC an abbreviation of ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What makes thunder ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where can I find the names of all the 15 Pokemon ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is the population of the largest Chilean city\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 22:57:21 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14332'), (b'x-ratelimit-remaining-tokens', b'29604'), (b'x-ratelimit-reset-requests', b'6m45.547s'), (b'x-ratelimit-reset-tokens', b'792ms'), (b'x-request-id', b'req_01hz0pr9fxfn5tg1a3vnzgj85d'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d7dcaecf968f-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking for a specific piece of information about a location, which is typically represented by a numeric value.
class_name: NUM
class_index: 5
responses: [0, 0, 0, 0, 5, 2, 0, 2, 2, 2, 0, 2, 3, 3, 3, 3, 4, 4, 4, 4, 2, 5, 3, 5], targets: [0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5]
num_invalid: 0
Preds tensor: tensor([[1., 0., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 1.],
        [0., 0., 1., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0.],
        [0., 0., 1., 0., 0., 0.],
        [0., 0., 1., 0., 0., 0.],
        [0., 0., 1., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0.],
        [0., 0., 1., 0., 0., 0.],
        [0., 0., 0., 1., 0., 0.],
        [0., 0., 0., 1., 0., 0.],
        [0., 0., 0., 1., 0., 0.],
        [0., 0., 0., 1., 0., 0.],
        [0., 0., 0., 0., 1., 0.],
        [0., 0., 0., 0., 1., 0.],
        [0., 0., 0., 0., 1., 0.],
        [0., 0., 0., 0., 1., 0.],
        [0., 0., 1., 0., 0., 0.],
        [0., 0., 0., 0., 0., 1.],
        [0., 0., 0., 1., 0., 0.],
        [0., 0., 0., 0., 0., 1.]])
Targets tensor: tensor([0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5])
Eval Accuracy 0 proposed: 0.708, F1: 0.643, score: 1.351
reset_parameter
step: 1
train_batch: {'text': ['What major Victorian novelist spent as much time working for the post office as he did writing ?', 'Who portrayed Etta Place , companion to Butch Cassidey and the Sundance Kid ?', 'What book did Aaron Hass write ?', 'How tall is the giraffe ?', 'Who was the first woman in space ?', "Who 's won the most Oscars for costume design ?", "What 's the capital of Monaco ?", 'What was the name of the lawyer who represented Randy Craft ?', 'What country covers 8 , 600 , 387 square miles ?', "What prompted the co-pilot of the Enola Gay to enter only `` My God '' in his log ?"], 'coarse_label': tensor([3, 3, 1, 5, 3, 3, 4, 3, 4, 2]), 'fine_label': tensor([29, 29,  5, 40, 29, 29, 32, 29, 33, 27])}
before random_replace: [Sample(index=439, data={'text': 'What does the channel ESPN stand for ?', 'coarse_label': 0, 'fine_label': 1}), Sample(index=1336, data={'text': 'What is the name of Jamiroquai new album ?', 'coarse_label': 1, 'fine_label': 5}), Sample(index=505, data={'text': 'What is the difference between a board of directors and an advisory board ?', 'coarse_label': 2, 'fine_label': 25}), Sample(index=2349, data={'text': 'Who was the first host of Person to Person ?', 'coarse_label': 3, 'fine_label': 29}), Sample(index=224, data={'text': 'What country has the port of Haifa ?', 'coarse_label': 4, 'fine_label': 33}), Sample(index=456, data={'text': 'How many American soldiers remain unaccounted from the Vietnam war ?', 'coarse_label': 5, 'fine_label': 38})]
after random_replace: [Sample(index=439, data={'text': 'What does the channel ESPN stand for ?', 'coarse_label': 0, 'fine_label': 1}), Sample(index=1147, data={'text': "What is Dr. Seuss ' most popular book ?", 'coarse_label': 1, 'fine_label': 5}), Sample(index=2629, data={'text': 'How do companies cut paper so thin ?', 'coarse_label': 2, 'fine_label': 26}), Sample(index=2349, data={'text': 'Who was the first host of Person to Person ?', 'coarse_label': 3, 'fine_label': 29}), Sample(index=224, data={'text': 'What country has the port of Haifa ?', 'coarse_label': 4, 'fine_label': 33}), Sample(index=782, data={'text': 'When did Mount St. Helen last have a significant eruption ?', 'coarse_label': 5, 'fine_label': 39})]
data: {'text': 'What does pH stand for ?', 'coarse_label': 0, 'fine_label': 1}
task_input: What does pH stand for ?, corse_label: 0
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What does pH stand for ?', 'examples_str': "Question: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is Dr. Seuss ' most popular book ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do companies cut paper so thin ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When did Mount St. Helen last have a significant eruption ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does the channel ESPN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is Dr. Seuss ' most popular book ?
class_name: Entity 
class_index: 1
--------

Question: How do companies cut paper so thin ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the first host of Person to Person ?
class_name: Human being 
class_index: 3
--------

Question: What country has the port of Haifa ?
class_name: Location 
class_index: 4
--------

Question: When did Mount St. Helen last have a significant eruption ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What does pH stand for ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is Dr. Seuss ' most popular book ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do companies cut paper so thin ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When did Mount St. Helen last have a significant eruption ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does pH stand for ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 22:57:21 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14332'), (b'x-ratelimit-remaining-tokens', b'29606'), (b'x-ratelimit-reset-requests', b'6m47.745s'), (b'x-ratelimit-reset-tokens', b'788ms'), (b'x-request-id', b'req_01hz0pr9qxfn5rjrv1mq4cknc2'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d7de4819968f-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is Dr. Seuss ' most popular book ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do companies cut paper so thin ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When did Mount St. Helen last have a significant eruption ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does pH stand for ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 22:57:23 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14331'), (b'x-ratelimit-remaining-tokens', b'29612'), (b'x-ratelimit-reset-requests', b'6m51.690999999s'), (b'x-ratelimit-reset-tokens', b'776ms'), (b'x-request-id', b'req_01hz0prbr3f7jrec8wpp7zpr1n'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d7eb1929968f-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the abbreviation of a term, which is a common characteristic of an abbreviation.
class_name: ABBR
class_index: 0
```
data: {'text': 'What is RCD ?', 'coarse_label': 0, 'fine_label': 1}
task_input: What is RCD ?, corse_label: 0
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What is RCD ?', 'examples_str': "Question: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is Dr. Seuss ' most popular book ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do companies cut paper so thin ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When did Mount St. Helen last have a significant eruption ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does the channel ESPN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is Dr. Seuss ' most popular book ?
class_name: Entity 
class_index: 1
--------

Question: How do companies cut paper so thin ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the first host of Person to Person ?
class_name: Human being 
class_index: 3
--------

Question: What country has the port of Haifa ?
class_name: Location 
class_index: 4
--------

Question: When did Mount St. Helen last have a significant eruption ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What is RCD ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is Dr. Seuss ' most popular book ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do companies cut paper so thin ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When did Mount St. Helen last have a significant eruption ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is RCD ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 22:57:24 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14331'), (b'x-ratelimit-remaining-tokens', b'29653'), (b'x-ratelimit-reset-requests', b'6m53.661999999s'), (b'x-ratelimit-reset-tokens', b'693ms'), (b'x-request-id', b'req_01hz0prc2nfn5v8eme9h3nzhgw'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d7ed3aa0968f-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is Dr. Seuss ' most popular book ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do companies cut paper so thin ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When did Mount St. Helen last have a significant eruption ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is RCD ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 22:57:26 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14330'), (b'x-ratelimit-remaining-tokens', b'29615'), (b'x-ratelimit-reset-requests', b'6m57.601s'), (b'x-ratelimit-reset-tokens', b'770ms'), (b'x-request-id', b'req_01hz0pre31e1g82ny35z62qdp0'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d7fa1b5c968f-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is asking for the meaning of the abbreviation RCD, which is a common abbreviation in various contexts.
class_name: ABBR
class_index: 0
data: {'text': 'What does IQ stand for ?', 'coarse_label': 0, 'fine_label': 1}
task_input: What does IQ stand for ?, corse_label: 0
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What does IQ stand for ?', 'examples_str': "Question: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is Dr. Seuss ' most popular book ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do companies cut paper so thin ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When did Mount St. Helen last have a significant eruption ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does the channel ESPN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is Dr. Seuss ' most popular book ?
class_name: Entity 
class_index: 1
--------

Question: How do companies cut paper so thin ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the first host of Person to Person ?
class_name: Human being 
class_index: 3
--------

Question: What country has the port of Haifa ?
class_name: Location 
class_index: 4
--------

Question: When did Mount St. Helen last have a significant eruption ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What does IQ stand for ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is Dr. Seuss ' most popular book ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do companies cut paper so thin ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When did Mount St. Helen last have a significant eruption ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does IQ stand for ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 22:57:26 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14330'), (b'x-ratelimit-remaining-tokens', b'29613'), (b'x-ratelimit-reset-requests', b'6m59.709999999s'), (b'x-ratelimit-reset-tokens', b'774ms'), (b'x-request-id', b'req_01hz0prec5fxntp54js7vqgja2'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d7fbecc6968f-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is Dr. Seuss ' most popular book ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do companies cut paper so thin ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When did Mount St. Helen last have a significant eruption ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does IQ stand for ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 22:57:28 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14329'), (b'x-ratelimit-remaining-tokens', b'29612'), (b'x-ratelimit-reset-requests', b'7m3.654s'), (b'x-ratelimit-reset-tokens', b'776ms'), (b'x-request-id', b'req_01hz0prgcdfn5sj2qwtrsey2pe'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d808cd63968f-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the abbreviation of IQ, which is a well-known abbreviation in the field of psychology.
class_name: ABBR
class_index: 0
data: {'text': "What does the `` blue ribbon '' stand for ?", 'coarse_label': 0, 'fine_label': 1}
task_input: What does the `` blue ribbon '' stand for ?, corse_label: 0
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': "What does the `` blue ribbon '' stand for ?", 'examples_str': "Question: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is Dr. Seuss ' most popular book ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do companies cut paper so thin ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When did Mount St. Helen last have a significant eruption ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does the channel ESPN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is Dr. Seuss ' most popular book ?
class_name: Entity 
class_index: 1
--------

Question: How do companies cut paper so thin ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the first host of Person to Person ?
class_name: Human being 
class_index: 3
--------

Question: What country has the port of Haifa ?
class_name: Location 
class_index: 4
--------

Question: When did Mount St. Helen last have a significant eruption ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What does the `` blue ribbon '' stand for ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is Dr. Seuss ' most popular book ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do companies cut paper so thin ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When did Mount St. Helen last have a significant eruption ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does the `` blue ribbon '' stand for ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 22:57:28 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14329'), (b'x-ratelimit-remaining-tokens', b'29632'), (b'x-ratelimit-reset-requests', b'7m5.704s'), (b'x-ratelimit-reset-tokens', b'736ms'), (b'x-request-id', b'req_01hz0prgnnf9ebve5dscktzyv3'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d80a9e67968f-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is Dr. Seuss ' most popular book ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do companies cut paper so thin ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When did Mount St. Helen last have a significant eruption ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does the `` blue ribbon '' stand for ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 22:57:31 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14328'), (b'x-ratelimit-remaining-tokens', b'29607'), (b'x-ratelimit-reset-requests', b'7m9.641999999s'), (b'x-ratelimit-reset-tokens', b'786ms'), (b'x-request-id', b'req_01hz0prjp4fmeaezv071dzwx1q'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d8178eb7968f-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the meaning of a specific symbol, which is a common abbreviation.
class_name: ABBR
class_index: 0
```
data: {'text': 'What English word contains the most letters ?', 'coarse_label': 1, 'fine_label': 23}
task_input: What English word contains the most letters ?, corse_label: 1
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What English word contains the most letters ?', 'examples_str': "Question: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is Dr. Seuss ' most popular book ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do companies cut paper so thin ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When did Mount St. Helen last have a significant eruption ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does the channel ESPN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is Dr. Seuss ' most popular book ?
class_name: Entity 
class_index: 1
--------

Question: How do companies cut paper so thin ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the first host of Person to Person ?
class_name: Human being 
class_index: 3
--------

Question: What country has the port of Haifa ?
class_name: Location 
class_index: 4
--------

Question: When did Mount St. Helen last have a significant eruption ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What English word contains the most letters ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is Dr. Seuss ' most popular book ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do companies cut paper so thin ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When did Mount St. Helen last have a significant eruption ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What English word contains the most letters ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 22:57:31 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14328'), (b'x-ratelimit-remaining-tokens', b'29633'), (b'x-ratelimit-reset-requests', b'7m11.604999999s'), (b'x-ratelimit-reset-tokens', b'733ms'), (b'x-request-id', b'req_01hz0prk2ge6paswbfqhd4t56v'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d81a085e968f-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is Dr. Seuss ' most popular book ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do companies cut paper so thin ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When did Mount St. Helen last have a significant eruption ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What English word contains the most letters ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 22:57:33 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14327'), (b'x-ratelimit-remaining-tokens', b'29607'), (b'x-ratelimit-reset-requests', b'7m15.542s'), (b'x-ratelimit-reset-tokens', b'786ms'), (b'x-request-id', b'req_01hz0prn2zf3v9djyvz6csqa0y'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d826e993968f-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is asking about the English word with the most letters, which is a descriptive concept.
class_name: DESC
class_index: 2
```
data: {'text': "What color flies closest to the staff on Belgium 's flag ?", 'coarse_label': 1, 'fine_label': 4}
task_input: What color flies closest to the staff on Belgium 's flag ?, corse_label: 1
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': "What color flies closest to the staff on Belgium 's flag ?", 'examples_str': "Question: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is Dr. Seuss ' most popular book ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do companies cut paper so thin ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When did Mount St. Helen last have a significant eruption ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does the channel ESPN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is Dr. Seuss ' most popular book ?
class_name: Entity 
class_index: 1
--------

Question: How do companies cut paper so thin ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the first host of Person to Person ?
class_name: Human being 
class_index: 3
--------

Question: What country has the port of Haifa ?
class_name: Location 
class_index: 4
--------

Question: When did Mount St. Helen last have a significant eruption ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What color flies closest to the staff on Belgium 's flag ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is Dr. Seuss ' most popular book ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do companies cut paper so thin ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When did Mount St. Helen last have a significant eruption ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What color flies closest to the staff on Belgium 's flag ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 22:57:33 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14327'), (b'x-ratelimit-remaining-tokens', b'29607'), (b'x-ratelimit-reset-requests', b'7m17.758999999s'), (b'x-ratelimit-reset-tokens', b'785ms'), (b'x-request-id', b'req_01hz0prnahfj8vk00c3m29wfe4'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d8286a72968f-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is Dr. Seuss ' most popular book ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do companies cut paper so thin ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When did Mount St. Helen last have a significant eruption ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What color flies closest to the staff on Belgium 's flag ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 22:57:35 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14326'), (b'x-ratelimit-remaining-tokens', b'29603'), (b'x-ratelimit-reset-requests', b'7m21.704s'), (b'x-ratelimit-reset-tokens', b'794ms'), (b'x-request-id', b'req_01hz0prqare1gsnm7xw1fvtn9e'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d8353b04968f-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the color of an element on a flag, which is a descriptive concept.
class_name: Description and abstract concept
class_index: 2
data: {'text': "Name the disposable razor that `` costs about 19 cents . ''", 'coarse_label': 1, 'fine_label': 15}
task_input: Name the disposable razor that `` costs about 19 cents . '', corse_label: 1
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': "Name the disposable razor that `` costs about 19 cents . ''", 'examples_str': "Question: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is Dr. Seuss ' most popular book ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do companies cut paper so thin ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When did Mount St. Helen last have a significant eruption ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does the channel ESPN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is Dr. Seuss ' most popular book ?
class_name: Entity 
class_index: 1
--------

Question: How do companies cut paper so thin ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the first host of Person to Person ?
class_name: Human being 
class_index: 3
--------

Question: What country has the port of Haifa ?
class_name: Location 
class_index: 4
--------

Question: When did Mount St. Helen last have a significant eruption ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Name the disposable razor that `` costs about 19 cents . ''
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is Dr. Seuss ' most popular book ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do companies cut paper so thin ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When did Mount St. Helen last have a significant eruption ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Name the disposable razor that `` costs about 19 cents . ''\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 22:57:35 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14326'), (b'x-ratelimit-remaining-tokens', b'29635'), (b'x-ratelimit-reset-requests', b'7m23.649s'), (b'x-ratelimit-reset-tokens', b'730ms'), (b'x-request-id', b'req_01hz0prqnre1mvxa8mepqcrhkx'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d8376c61968f-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is Dr. Seuss ' most popular book ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do companies cut paper so thin ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When did Mount St. Helen last have a significant eruption ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Name the disposable razor that `` costs about 19 cents . ''\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 22:57:38 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14325'), (b'x-ratelimit-remaining-tokens', b'29603'), (b'x-ratelimit-reset-requests', b'7m27.586999999s'), (b'x-ratelimit-reset-tokens', b'794ms'), (b'x-request-id', b'req_01hz0prsp6fccb8tq2npagwe7t'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d8445c74968f-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking for the name of a disposable razor, which is an object that can be held in one's hand, and its price is given in cents.
class_name: Entity
class_index: 1
data: {'text': "What 's the Southern dish made of pigs ' small intestines ?", 'coarse_label': 1, 'fine_label': 9}
task_input: What 's the Southern dish made of pigs ' small intestines ?, corse_label: 1
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': "What 's the Southern dish made of pigs ' small intestines ?", 'examples_str': "Question: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is Dr. Seuss ' most popular book ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do companies cut paper so thin ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When did Mount St. Helen last have a significant eruption ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does the channel ESPN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is Dr. Seuss ' most popular book ?
class_name: Entity 
class_index: 1
--------

Question: How do companies cut paper so thin ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the first host of Person to Person ?
class_name: Human being 
class_index: 3
--------

Question: What country has the port of Haifa ?
class_name: Location 
class_index: 4
--------

Question: When did Mount St. Helen last have a significant eruption ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What 's the Southern dish made of pigs ' small intestines ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is Dr. Seuss ' most popular book ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do companies cut paper so thin ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When did Mount St. Helen last have a significant eruption ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What 's the Southern dish made of pigs ' small intestines ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 22:57:38 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14325'), (b'x-ratelimit-remaining-tokens', b'29583'), (b'x-ratelimit-reset-requests', b'7m29.767999999s'), (b'x-ratelimit-reset-tokens', b'834ms'), (b'x-request-id', b'req_01hz0prsxfe2cs4rgaa95hbs86'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d845cd40968f-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is Dr. Seuss ' most popular book ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do companies cut paper so thin ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When did Mount St. Helen last have a significant eruption ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What 's the Southern dish made of pigs ' small intestines ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 22:57:40 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14324'), (b'x-ratelimit-remaining-tokens', b'29603'), (b'x-ratelimit-reset-requests', b'7m33.714s'), (b'x-ratelimit-reset-tokens', b'794ms'), (b'x-request-id', b'req_01hz0prvxne2csenykra92zxe2'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d852ad3a968f-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is about a specific type of food, which is often described in a culinary context.
class_name: Description and abstract concept
class_index: 2
data: {'text': 'What makes hamburgers taste like steakburgers ?', 'coarse_label': 2, 'fine_label': 27}
task_input: What makes hamburgers taste like steakburgers ?, corse_label: 2
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What makes hamburgers taste like steakburgers ?', 'examples_str': "Question: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is Dr. Seuss ' most popular book ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do companies cut paper so thin ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When did Mount St. Helen last have a significant eruption ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does the channel ESPN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is Dr. Seuss ' most popular book ?
class_name: Entity 
class_index: 1
--------

Question: How do companies cut paper so thin ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the first host of Person to Person ?
class_name: Human being 
class_index: 3
--------

Question: What country has the port of Haifa ?
class_name: Location 
class_index: 4
--------

Question: When did Mount St. Helen last have a significant eruption ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What makes hamburgers taste like steakburgers ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is Dr. Seuss ' most popular book ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do companies cut paper so thin ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When did Mount St. Helen last have a significant eruption ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What makes hamburgers taste like steakburgers ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 22:57:40 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'325'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14324'), (b'x-ratelimit-remaining-tokens', b'29592'), (b'x-ratelimit-reset-requests', b'7m35.768999999s'), (b'x-ratelimit-reset-tokens', b'815ms'), (b'x-request-id', b'req_01hz0prw4xe2cvkjrtxw470q17'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d8541e17968f-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is Dr. Seuss ' most popular book ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do companies cut paper so thin ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When did Mount St. Helen last have a significant eruption ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What makes hamburgers taste like steakburgers ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 22:57:43 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14323'), (b'x-ratelimit-remaining-tokens', b'29606'), (b'x-ratelimit-reset-requests', b'7m39.708s'), (b'x-ratelimit-reset-tokens', b'788ms'), (b'x-request-id', b'req_01hz0pry5af0wtbrews064wskh'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d860fd86968f-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is asking about the characteristics that make hamburgers taste like steakburgers, which is a descriptive concept.
class_name: Description and abstract concept
class_index: 2
data: {'text': 'How is digital audio used ?', 'coarse_label': 2, 'fine_label': 26}
task_input: How is digital audio used ?, corse_label: 2
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'How is digital audio used ?', 'examples_str': "Question: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is Dr. Seuss ' most popular book ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do companies cut paper so thin ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When did Mount St. Helen last have a significant eruption ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does the channel ESPN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is Dr. Seuss ' most popular book ?
class_name: Entity 
class_index: 1
--------

Question: How do companies cut paper so thin ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the first host of Person to Person ?
class_name: Human being 
class_index: 3
--------

Question: What country has the port of Haifa ?
class_name: Location 
class_index: 4
--------

Question: When did Mount St. Helen last have a significant eruption ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: How is digital audio used ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is Dr. Seuss ' most popular book ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do companies cut paper so thin ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When did Mount St. Helen last have a significant eruption ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: How is digital audio used ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 22:57:43 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14323'), (b'x-ratelimit-remaining-tokens', b'29625'), (b'x-ratelimit-reset-requests', b'7m41.368s'), (b'x-ratelimit-reset-tokens', b'750ms'), (b'x-request-id', b'req_01hz0prys3fccaf42k53pyhwcj'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d864efd7968f-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is Dr. Seuss ' most popular book ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do companies cut paper so thin ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When did Mount St. Helen last have a significant eruption ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: How is digital audio used ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 22:57:45 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14322'), (b'x-ratelimit-remaining-tokens', b'29611'), (b'x-ratelimit-reset-requests', b'7m45.296999999s'), (b'x-ratelimit-reset-tokens', b'778ms'), (b'x-request-id', b'req_01hz0ps0stf7kvacxed0fzbg0c'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d871d83e968f-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is asking about the concept of digital audio and its usage, which is an abstract concept.
class_name: DESC
class_index: 2
```
data: {'text': "What does the Georgetown `` Hoya '' mean ?", 'coarse_label': 2, 'fine_label': 24}
task_input: What does the Georgetown `` Hoya '' mean ?, corse_label: 2
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': "What does the Georgetown `` Hoya '' mean ?", 'examples_str': "Question: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is Dr. Seuss ' most popular book ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do companies cut paper so thin ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When did Mount St. Helen last have a significant eruption ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does the channel ESPN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is Dr. Seuss ' most popular book ?
class_name: Entity 
class_index: 1
--------

Question: How do companies cut paper so thin ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the first host of Person to Person ?
class_name: Human being 
class_index: 3
--------

Question: What country has the port of Haifa ?
class_name: Location 
class_index: 4
--------

Question: When did Mount St. Helen last have a significant eruption ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What does the Georgetown `` Hoya '' mean ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is Dr. Seuss ' most popular book ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do companies cut paper so thin ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When did Mount St. Helen last have a significant eruption ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does the Georgetown `` Hoya '' mean ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 22:57:45 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14322'), (b'x-ratelimit-remaining-tokens', b'29603'), (b'x-ratelimit-reset-requests', b'7m47.764999999s'), (b'x-ratelimit-reset-tokens', b'793ms'), (b'x-request-id', b'req_01hz0ps116f669ryh5ktxpse4a'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d873594c968f-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is Dr. Seuss ' most popular book ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do companies cut paper so thin ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When did Mount St. Helen last have a significant eruption ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does the Georgetown `` Hoya '' mean ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 22:57:47 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14321'), (b'x-ratelimit-remaining-tokens', b'29607'), (b'x-ratelimit-reset-requests', b'7m51.712s'), (b'x-ratelimit-reset-tokens', b'786ms'), (b'x-request-id', b'req_01hz0ps31be1nsfr1bkddmej7b'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d88029c5968f-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the meaning of the Georgetown "Hoya", which is likely an abbreviation.
class_name: ABBR
class_index: 0
data: {'text': 'What is a hormone ?', 'coarse_label': 2, 'fine_label': 24}
task_input: What is a hormone ?, corse_label: 2
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What is a hormone ?', 'examples_str': "Question: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is Dr. Seuss ' most popular book ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do companies cut paper so thin ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When did Mount St. Helen last have a significant eruption ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does the channel ESPN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is Dr. Seuss ' most popular book ?
class_name: Entity 
class_index: 1
--------

Question: How do companies cut paper so thin ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the first host of Person to Person ?
class_name: Human being 
class_index: 3
--------

Question: What country has the port of Haifa ?
class_name: Location 
class_index: 4
--------

Question: When did Mount St. Helen last have a significant eruption ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What is a hormone ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is Dr. Seuss ' most popular book ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do companies cut paper so thin ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When did Mount St. Helen last have a significant eruption ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is a hormone ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 22:57:47 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14321'), (b'x-ratelimit-remaining-tokens', b'29599'), (b'x-ratelimit-reset-requests', b'7m53.727999999s'), (b'x-ratelimit-reset-tokens', b'802ms'), (b'x-request-id', b'req_01hz0ps39we6ka0j8h5rsdmhrb'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d881db2d968f-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is Dr. Seuss ' most popular book ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do companies cut paper so thin ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When did Mount St. Helen last have a significant eruption ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is a hormone ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 22:57:50 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14320'), (b'x-ratelimit-remaining-tokens', b'29613'), (b'x-ratelimit-reset-requests', b'7m57.644s'), (b'x-ratelimit-reset-tokens', b'774ms'), (b'x-request-id', b'req_01hz0ps5b0fmybcmvdjagmr658'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d88ebbd7968f-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is asking about a general concept or idea, which is a characteristic of a description and abstract concept.
class_name: DESC
class_index: 2
```
data: {'text': "What kind of people took part in Shays ' Rebellion in Massachusetts in 1787 ?", 'coarse_label': 3, 'fine_label': 28}
task_input: What kind of people took part in Shays ' Rebellion in Massachusetts in 1787 ?, corse_label: 3
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': "What kind of people took part in Shays ' Rebellion in Massachusetts in 1787 ?", 'examples_str': "Question: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is Dr. Seuss ' most popular book ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do companies cut paper so thin ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When did Mount St. Helen last have a significant eruption ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does the channel ESPN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is Dr. Seuss ' most popular book ?
class_name: Entity 
class_index: 1
--------

Question: How do companies cut paper so thin ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the first host of Person to Person ?
class_name: Human being 
class_index: 3
--------

Question: What country has the port of Haifa ?
class_name: Location 
class_index: 4
--------

Question: When did Mount St. Helen last have a significant eruption ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What kind of people took part in Shays ' Rebellion in Massachusetts in 1787 ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is Dr. Seuss ' most popular book ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do companies cut paper so thin ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When did Mount St. Helen last have a significant eruption ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What kind of people took part in Shays ' Rebellion in Massachusetts in 1787 ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 22:57:50 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14320'), (b'x-ratelimit-remaining-tokens', b'29601'), (b'x-ratelimit-reset-requests', b'7m59.766999999s'), (b'x-ratelimit-reset-tokens', b'798ms'), (b'x-request-id', b'req_01hz0ps5jae2hb6eaccxyreadp'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d8905cdf968f-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is Dr. Seuss ' most popular book ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do companies cut paper so thin ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When did Mount St. Helen last have a significant eruption ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What kind of people took part in Shays ' Rebellion in Massachusetts in 1787 ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 22:57:52 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14319'), (b'x-ratelimit-remaining-tokens', b'29599'), (b'x-ratelimit-reset-requests', b'8m3.695999999s'), (b'x-ratelimit-reset-tokens', b'802ms'), (b'x-request-id', b'req_01hz0ps7k1fwv8s1ghnhntpvky'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d89d4e91968f-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about a historical event and the people involved, which suggests a focus on human beings.
class_name: HUM
class_index: 3
data: {'text': "Name the designer of the shoe that spawned millions of plastic imitations , known as ` jellies ' .", 'coarse_label': 3, 'fine_label': 29}
task_input: Name the designer of the shoe that spawned millions of plastic imitations , known as ` jellies ' ., corse_label: 3
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': "Name the designer of the shoe that spawned millions of plastic imitations , known as ` jellies ' .", 'examples_str': "Question: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is Dr. Seuss ' most popular book ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do companies cut paper so thin ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When did Mount St. Helen last have a significant eruption ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does the channel ESPN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is Dr. Seuss ' most popular book ?
class_name: Entity 
class_index: 1
--------

Question: How do companies cut paper so thin ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the first host of Person to Person ?
class_name: Human being 
class_index: 3
--------

Question: What country has the port of Haifa ?
class_name: Location 
class_index: 4
--------

Question: When did Mount St. Helen last have a significant eruption ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Name the designer of the shoe that spawned millions of plastic imitations , known as ` jellies ' .
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is Dr. Seuss ' most popular book ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do companies cut paper so thin ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When did Mount St. Helen last have a significant eruption ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Name the designer of the shoe that spawned millions of plastic imitations , known as ` jellies ' .\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 22:57:52 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14319'), (b'x-ratelimit-remaining-tokens', b'29606'), (b'x-ratelimit-reset-requests', b'8m5.69s'), (b'x-ratelimit-reset-tokens', b'788ms'), (b'x-request-id', b'req_01hz0ps7wsf9fse74b862v0rbm'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d89f4808968f-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is Dr. Seuss ' most popular book ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do companies cut paper so thin ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When did Mount St. Helen last have a significant eruption ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Name the designer of the shoe that spawned millions of plastic imitations , known as ` jellies ' .\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 22:57:54 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14318'), (b'x-ratelimit-remaining-tokens', b'29593'), (b'x-ratelimit-reset-requests', b'8m9.620999999s'), (b'x-ratelimit-reset-tokens', b'814ms'), (b'x-request-id', b'req_01hz0ps9xefmysetm1h6eh603s'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d8ac2960968f-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking for the designer of a specific shoe, which is a type of entity.
class_name: Entity
class_index: 1
data: {'text': 'Who is Prince Naseem Hamed ?', 'coarse_label': 3, 'fine_label': 31}
task_input: Who is Prince Naseem Hamed ?, corse_label: 3
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'Who is Prince Naseem Hamed ?', 'examples_str': "Question: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is Dr. Seuss ' most popular book ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do companies cut paper so thin ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When did Mount St. Helen last have a significant eruption ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does the channel ESPN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is Dr. Seuss ' most popular book ?
class_name: Entity 
class_index: 1
--------

Question: How do companies cut paper so thin ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the first host of Person to Person ?
class_name: Human being 
class_index: 3
--------

Question: What country has the port of Haifa ?
class_name: Location 
class_index: 4
--------

Question: When did Mount St. Helen last have a significant eruption ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Who is Prince Naseem Hamed ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is Dr. Seuss ' most popular book ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do companies cut paper so thin ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When did Mount St. Helen last have a significant eruption ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Who is Prince Naseem Hamed ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 22:57:54 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14318'), (b'x-ratelimit-remaining-tokens', b'29642'), (b'x-ratelimit-reset-requests', b'8m11.635s'), (b'x-ratelimit-reset-tokens', b'715ms'), (b'x-request-id', b'req_01hz0psa8veb0bjjyp3ftsxdhz'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d8ae7b10968f-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is Dr. Seuss ' most popular book ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do companies cut paper so thin ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When did Mount St. Helen last have a significant eruption ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Who is Prince Naseem Hamed ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 22:57:57 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14317'), (b'x-ratelimit-remaining-tokens', b'29611'), (b'x-ratelimit-reset-requests', b'8m15.573999999s'), (b'x-ratelimit-reset-tokens', b'778ms'), (b'x-request-id', b'req_01hz0psc99e8j8trcebvdyj2w0'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d8bb5c43968f-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about a specific person, Prince Naseem Hamed, which is a type of human being.
class_name: "HUM"
class_index: 3
data: {'text': "Who sings Angel Eyes from the 80 's ?", 'coarse_label': 3, 'fine_label': 29}
task_input: Who sings Angel Eyes from the 80 's ?, corse_label: 3
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': "Who sings Angel Eyes from the 80 's ?", 'examples_str': "Question: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is Dr. Seuss ' most popular book ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do companies cut paper so thin ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When did Mount St. Helen last have a significant eruption ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does the channel ESPN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is Dr. Seuss ' most popular book ?
class_name: Entity 
class_index: 1
--------

Question: How do companies cut paper so thin ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the first host of Person to Person ?
class_name: Human being 
class_index: 3
--------

Question: What country has the port of Haifa ?
class_name: Location 
class_index: 4
--------

Question: When did Mount St. Helen last have a significant eruption ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Who sings Angel Eyes from the 80 's ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is Dr. Seuss ' most popular book ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do companies cut paper so thin ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When did Mount St. Helen last have a significant eruption ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Who sings Angel Eyes from the 80 's ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 22:57:57 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14317'), (b'x-ratelimit-remaining-tokens', b'29619'), (b'x-ratelimit-reset-requests', b'8m17.648s'), (b'x-ratelimit-reset-tokens', b'762ms'), (b'x-request-id', b'req_01hz0pscmaf0x9w2d81b1emfm5'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d8bd8dba968f-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is Dr. Seuss ' most popular book ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do companies cut paper so thin ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When did Mount St. Helen last have a significant eruption ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Who sings Angel Eyes from the 80 's ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 22:57:59 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14316'), (b'x-ratelimit-remaining-tokens', b'29609'), (b'x-ratelimit-reset-requests', b'8m21.586999999s'), (b'x-ratelimit-reset-tokens', b'782ms'), (b'x-request-id', b'req_01hz0psemqfyab711aqfagpsx0'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d8ca6eb3968f-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about a specific song and its artist, which is a common topic in music.
class_name: HUM
class_index: 3
data: {'text': "What is New England 's highest mountain ?", 'coarse_label': 4, 'fine_label': 34}
task_input: What is New England 's highest mountain ?, corse_label: 4
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': "What is New England 's highest mountain ?", 'examples_str': "Question: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is Dr. Seuss ' most popular book ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do companies cut paper so thin ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When did Mount St. Helen last have a significant eruption ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does the channel ESPN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is Dr. Seuss ' most popular book ?
class_name: Entity 
class_index: 1
--------

Question: How do companies cut paper so thin ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the first host of Person to Person ?
class_name: Human being 
class_index: 3
--------

Question: What country has the port of Haifa ?
class_name: Location 
class_index: 4
--------

Question: When did Mount St. Helen last have a significant eruption ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What is New England 's highest mountain ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is Dr. Seuss ' most popular book ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do companies cut paper so thin ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When did Mount St. Helen last have a significant eruption ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is New England 's highest mountain ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 22:57:59 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14316'), (b'x-ratelimit-remaining-tokens', b'29597'), (b'x-ratelimit-reset-requests', b'8m23.780999999s'), (b'x-ratelimit-reset-tokens', b'805ms'), (b'x-request-id', b'req_01hz0psevmf3wrwjm47d0xkdys'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d8cbdfc9968f-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is Dr. Seuss ' most popular book ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do companies cut paper so thin ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When did Mount St. Helen last have a significant eruption ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is New England 's highest mountain ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 22:58:01 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14315'), (b'x-ratelimit-remaining-tokens', b'29608'), (b'x-ratelimit-reset-requests', b'8m27.728999999s'), (b'x-ratelimit-reset-tokens', b'784ms'), (b'x-request-id', b'req_01hz0psgvpeyn89d91he31f95k'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d8d8a96f968f-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the highest mountain in a specific region, which is a geographic location.
class_name: Location
class_index: 4
data: {'text': 'Where is Inoco based ?', 'coarse_label': 4, 'fine_label': 35}
task_input: Where is Inoco based ?, corse_label: 4
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'Where is Inoco based ?', 'examples_str': "Question: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is Dr. Seuss ' most popular book ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do companies cut paper so thin ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When did Mount St. Helen last have a significant eruption ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does the channel ESPN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is Dr. Seuss ' most popular book ?
class_name: Entity 
class_index: 1
--------

Question: How do companies cut paper so thin ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the first host of Person to Person ?
class_name: Human being 
class_index: 3
--------

Question: What country has the port of Haifa ?
class_name: Location 
class_index: 4
--------

Question: When did Mount St. Helen last have a significant eruption ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Where is Inoco based ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is Dr. Seuss ' most popular book ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do companies cut paper so thin ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When did Mount St. Helen last have a significant eruption ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Where is Inoco based ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 22:58:02 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14315'), (b'x-ratelimit-remaining-tokens', b'29604'), (b'x-ratelimit-reset-requests', b'8m29.724999999s'), (b'x-ratelimit-reset-tokens', b'791ms'), (b'x-request-id', b'req_01hz0psh4afxjtfcx6qh3j2rsh'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d8da5ac9968f-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is Dr. Seuss ' most popular book ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do companies cut paper so thin ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When did Mount St. Helen last have a significant eruption ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Where is Inoco based ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 22:58:04 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14314'), (b'x-ratelimit-remaining-tokens', b'29612'), (b'x-ratelimit-reset-requests', b'8m33.667s'), (b'x-ratelimit-reset-tokens', b'776ms'), (b'x-request-id', b'req_01hz0psk4ne2j8y8zjfjtkpmfz'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d8e73cb1968f-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the location of a company, which is typically represented by its headquarters.
class_name: Location
class_index: 4
data: {'text': 'Where is the location of the Orange Bowl ?', 'coarse_label': 4, 'fine_label': 35}
task_input: Where is the location of the Orange Bowl ?, corse_label: 4
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'Where is the location of the Orange Bowl ?', 'examples_str': "Question: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is Dr. Seuss ' most popular book ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do companies cut paper so thin ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When did Mount St. Helen last have a significant eruption ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does the channel ESPN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is Dr. Seuss ' most popular book ?
class_name: Entity 
class_index: 1
--------

Question: How do companies cut paper so thin ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the first host of Person to Person ?
class_name: Human being 
class_index: 3
--------

Question: What country has the port of Haifa ?
class_name: Location 
class_index: 4
--------

Question: When did Mount St. Helen last have a significant eruption ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Where is the location of the Orange Bowl ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is Dr. Seuss ' most popular book ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do companies cut paper so thin ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When did Mount St. Helen last have a significant eruption ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Where is the location of the Orange Bowl ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 22:58:04 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'325'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14314'), (b'x-ratelimit-remaining-tokens', b'29609'), (b'x-ratelimit-reset-requests', b'8m35.38s'), (b'x-ratelimit-reset-tokens', b'781ms'), (b'x-request-id', b'req_01hz0pskr1e1pbjpbqrpa3djem'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d8eb1802968f-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is Dr. Seuss ' most popular book ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do companies cut paper so thin ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When did Mount St. Helen last have a significant eruption ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Where is the location of the Orange Bowl ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 22:58:06 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14313'), (b'x-ratelimit-remaining-tokens', b'29607'), (b'x-ratelimit-reset-requests', b'8m39.319999999s'), (b'x-ratelimit-reset-tokens', b'786ms'), (b'x-request-id', b'req_01hz0psnrdec5rmy9mnta8n4kv'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d8f7fa75968f-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking for the location of the Orange Bowl, which is a specific stadium.
class_name: Location
class_index: 4
data: {'text': 'What ocean surrounds the Madeira Islands ?', 'coarse_label': 4, 'fine_label': 35}
task_input: What ocean surrounds the Madeira Islands ?, corse_label: 4
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What ocean surrounds the Madeira Islands ?', 'examples_str': "Question: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is Dr. Seuss ' most popular book ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do companies cut paper so thin ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When did Mount St. Helen last have a significant eruption ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does the channel ESPN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is Dr. Seuss ' most popular book ?
class_name: Entity 
class_index: 1
--------

Question: How do companies cut paper so thin ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the first host of Person to Person ?
class_name: Human being 
class_index: 3
--------

Question: What country has the port of Haifa ?
class_name: Location 
class_index: 4
--------

Question: When did Mount St. Helen last have a significant eruption ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What ocean surrounds the Madeira Islands ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is Dr. Seuss ' most popular book ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do companies cut paper so thin ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When did Mount St. Helen last have a significant eruption ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What ocean surrounds the Madeira Islands ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 22:58:07 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14313'), (b'x-ratelimit-remaining-tokens', b'29628'), (b'x-ratelimit-reset-requests', b'8m41.682s'), (b'x-ratelimit-reset-tokens', b'743ms'), (b'x-request-id', b'req_01hz0psp2ce1prq40n6y8qf0rm'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d8f9fbf4968f-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is Dr. Seuss ' most popular book ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do companies cut paper so thin ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When did Mount St. Helen last have a significant eruption ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What ocean surrounds the Madeira Islands ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 22:58:09 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14312'), (b'x-ratelimit-remaining-tokens', b'29607'), (b'x-ratelimit-reset-requests', b'8m45.621999999s'), (b'x-ratelimit-reset-tokens', b'786ms'), (b'x-request-id', b'req_01hz0psr2rfmg8fgn651hjxajg'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d906dd90968f-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the geographical location of the Madeira Islands, which is a specific location on the Earth's surface.
class_name: Location
class_index: 4
data: {'text': 'When is Bastille Day ?', 'coarse_label': 5, 'fine_label': 39}
task_input: When is Bastille Day ?, corse_label: 5
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'When is Bastille Day ?', 'examples_str': "Question: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is Dr. Seuss ' most popular book ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do companies cut paper so thin ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When did Mount St. Helen last have a significant eruption ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does the channel ESPN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is Dr. Seuss ' most popular book ?
class_name: Entity 
class_index: 1
--------

Question: How do companies cut paper so thin ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the first host of Person to Person ?
class_name: Human being 
class_index: 3
--------

Question: What country has the port of Haifa ?
class_name: Location 
class_index: 4
--------

Question: When did Mount St. Helen last have a significant eruption ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: When is Bastille Day ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is Dr. Seuss ' most popular book ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do companies cut paper so thin ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When did Mount St. Helen last have a significant eruption ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: When is Bastille Day ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 22:58:09 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14312'), (b'x-ratelimit-remaining-tokens', b'29599'), (b'x-ratelimit-reset-requests', b'8m47.735s'), (b'x-ratelimit-reset-tokens', b'802ms'), (b'x-request-id', b'req_01hz0psrb2fmfryxfgyjty6njt'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d9088f35968f-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is Dr. Seuss ' most popular book ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do companies cut paper so thin ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When did Mount St. Helen last have a significant eruption ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: When is Bastille Day ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 22:58:11 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14311'), (b'x-ratelimit-remaining-tokens', b'29612'), (b'x-ratelimit-reset-requests', b'8m51.645s'), (b'x-ratelimit-reset-tokens', b'776ms'), (b'x-request-id', b'req_01hz0pstccfmfr4mdrhfp3mrwn'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d915996c968f-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is asking about a specific date or event, which is typically represented by a numeric value.
class_name: NUM
class_index: 5
data: {'text': 'How many home runs did Babe Ruth hit in his lifetime ?', 'coarse_label': 5, 'fine_label': 38}
task_input: How many home runs did Babe Ruth hit in his lifetime ?, corse_label: 5
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'How many home runs did Babe Ruth hit in his lifetime ?', 'examples_str': "Question: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is Dr. Seuss ' most popular book ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do companies cut paper so thin ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When did Mount St. Helen last have a significant eruption ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does the channel ESPN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is Dr. Seuss ' most popular book ?
class_name: Entity 
class_index: 1
--------

Question: How do companies cut paper so thin ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the first host of Person to Person ?
class_name: Human being 
class_index: 3
--------

Question: What country has the port of Haifa ?
class_name: Location 
class_index: 4
--------

Question: When did Mount St. Helen last have a significant eruption ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: How many home runs did Babe Ruth hit in his lifetime ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is Dr. Seuss ' most popular book ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do companies cut paper so thin ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When did Mount St. Helen last have a significant eruption ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: How many home runs did Babe Ruth hit in his lifetime ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 22:58:11 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14311'), (b'x-ratelimit-remaining-tokens', b'29634'), (b'x-ratelimit-reset-requests', b'8m53.705s'), (b'x-ratelimit-reset-tokens', b'732ms'), (b'x-request-id', b'req_01hz0pstnkeb8vs2q9t8njcf45'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d9176ac7968f-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is Dr. Seuss ' most popular book ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do companies cut paper so thin ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When did Mount St. Helen last have a significant eruption ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: How many home runs did Babe Ruth hit in his lifetime ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 22:58:14 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14310'), (b'x-ratelimit-remaining-tokens', b'29604'), (b'x-ratelimit-reset-requests', b'8m57.643s'), (b'x-ratelimit-reset-tokens', b'792ms'), (b'x-request-id', b'req_01hz0pswp2e1jrv0kqjy54hhzy'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d9244b7a968f-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking for a specific numerical value, the number of home runs Babe Ruth hit in his lifetime.
class_name: Numeric value
class_index: 5
data: {'text': 'When was General Manuel Noriega ousted as the leader of Panama and turned over to U.S. authorities ?', 'coarse_label': 5, 'fine_label': 39}
task_input: When was General Manuel Noriega ousted as the leader of Panama and turned over to U.S. authorities ?, corse_label: 5
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'When was General Manuel Noriega ousted as the leader of Panama and turned over to U.S. authorities ?', 'examples_str': "Question: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is Dr. Seuss ' most popular book ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do companies cut paper so thin ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When did Mount St. Helen last have a significant eruption ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does the channel ESPN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is Dr. Seuss ' most popular book ?
class_name: Entity 
class_index: 1
--------

Question: How do companies cut paper so thin ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the first host of Person to Person ?
class_name: Human being 
class_index: 3
--------

Question: What country has the port of Haifa ?
class_name: Location 
class_index: 4
--------

Question: When did Mount St. Helen last have a significant eruption ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: When was General Manuel Noriega ousted as the leader of Panama and turned over to U.S. authorities ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is Dr. Seuss ' most popular book ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do companies cut paper so thin ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When did Mount St. Helen last have a significant eruption ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: When was General Manuel Noriega ousted as the leader of Panama and turned over to U.S. authorities ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 22:58:14 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14310'), (b'x-ratelimit-remaining-tokens', b'29594'), (b'x-ratelimit-reset-requests', b'8m59.777999999s'), (b'x-ratelimit-reset-tokens', b'812ms'), (b'x-request-id', b'req_01hz0pswx1fdzsfkx56wb59hsr'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d925bcdb968f-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is Dr. Seuss ' most popular book ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do companies cut paper so thin ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When did Mount St. Helen last have a significant eruption ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: When was General Manuel Noriega ousted as the leader of Panama and turned over to U.S. authorities ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 22:58:16 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14309'), (b'x-ratelimit-remaining-tokens', b'29593'), (b'x-ratelimit-reset-requests', b'9m3.713s'), (b'x-ratelimit-reset-tokens', b'814ms'), (b'x-request-id', b'req_01hz0psyxhf3x984z6zhqqr3vw'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d9329f3f968f-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is about a historical event and a specific individual, which makes it likely to be about a human being.
class_name: HUM
class_index: 3
data: {'text': 'What is the population of the largest Chilean city', 'coarse_label': 5, 'fine_label': 38}
task_input: What is the population of the largest Chilean city, corse_label: 5
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What is the population of the largest Chilean city', 'examples_str': "Question: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is Dr. Seuss ' most popular book ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do companies cut paper so thin ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When did Mount St. Helen last have a significant eruption ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does the channel ESPN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is Dr. Seuss ' most popular book ?
class_name: Entity 
class_index: 1
--------

Question: How do companies cut paper so thin ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the first host of Person to Person ?
class_name: Human being 
class_index: 3
--------

Question: What country has the port of Haifa ?
class_name: Location 
class_index: 4
--------

Question: When did Mount St. Helen last have a significant eruption ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What is the population of the largest Chilean city
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is Dr. Seuss ' most popular book ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do companies cut paper so thin ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When did Mount St. Helen last have a significant eruption ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is the population of the largest Chilean city\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 22:58:16 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14309'), (b'x-ratelimit-remaining-tokens', b'29583'), (b'x-ratelimit-reset-requests', b'9m5.620999999s'), (b'x-ratelimit-reset-tokens', b'833ms'), (b'x-request-id', b'req_01hz0psz9eeb99e6mydkp1aqvn'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d934f971968f-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is Dr. Seuss ' most popular book ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do companies cut paper so thin ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When did Mount St. Helen last have a significant eruption ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is the population of the largest Chilean city\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 22:58:18 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14308'), (b'x-ratelimit-remaining-tokens', b'29605'), (b'x-ratelimit-reset-requests', b'9m9.573999999s'), (b'x-ratelimit-reset-tokens', b'790ms'), (b'x-request-id', b'req_01hz0pt19de1q9083j9y2gregs'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d941cba0968f-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking for the population of a city, which is a numeric value.
class_name: NUM
class_index: 5
responses: [0, 0, 0, 0, 2, 2, 1, 2, 2, 2, 0, 2, 3, 1, 3, 3, 4, 4, 4, 4, 5, 5, 3, 5], targets: [0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5]
num_invalid: 0
Preds tensor: tensor([[1., 0., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0.],
        [0., 0., 1., 0., 0., 0.],
        [0., 0., 1., 0., 0., 0.],
        [0., 1., 0., 0., 0., 0.],
        [0., 0., 1., 0., 0., 0.],
        [0., 0., 1., 0., 0., 0.],
        [0., 0., 1., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0.],
        [0., 0., 1., 0., 0., 0.],
        [0., 0., 0., 1., 0., 0.],
        [0., 1., 0., 0., 0., 0.],
        [0., 0., 0., 1., 0., 0.],
        [0., 0., 0., 1., 0., 0.],
        [0., 0., 0., 0., 1., 0.],
        [0., 0., 0., 0., 1., 0.],
        [0., 0., 0., 0., 1., 0.],
        [0., 0., 0., 0., 1., 0.],
        [0., 0., 0., 0., 0., 1.],
        [0., 0., 0., 0., 0., 1.],
        [0., 0., 0., 1., 0., 0.],
        [0., 0., 0., 0., 0., 1.]])
Targets tensor: tensor([0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5])
Eval Accuracy 1 proposed: 0.75, F1: 0.738, score: 1.488
reset_parameter
step: 2
train_batch: {'text': ['Who wrote the bestselling Missionary Travels and Researches in South Africa , published in 1857 ?', 'What were the trials called which followed World War II ?', 'Who was the architect of Central Park ?', 'What type of childhood did Jules Verne have ?', 'How many hands does Bjorn Borg use when hitting his forehand ?', 'How do I legally make my own will and testament ?', 'Where can you find the Venus flytrap ?', 'Why do people shake hands to show friendliness ?', 'How do you get a pointsettia to turn red ?', "What 's the difference between TFT and dual-scan display ?"], 'coarse_label': tensor([3, 1, 3, 2, 5, 2, 4, 2, 2, 2]), 'fine_label': tensor([29,  8, 29, 25, 38, 26, 35, 27, 26, 25])}
before random_replace: [Sample(index=439, data={'text': 'What does the channel ESPN stand for ?', 'coarse_label': 0, 'fine_label': 1}), Sample(index=1336, data={'text': 'What is the name of Jamiroquai new album ?', 'coarse_label': 1, 'fine_label': 5}), Sample(index=505, data={'text': 'What is the difference between a board of directors and an advisory board ?', 'coarse_label': 2, 'fine_label': 25}), Sample(index=2349, data={'text': 'Who was the first host of Person to Person ?', 'coarse_label': 3, 'fine_label': 29}), Sample(index=224, data={'text': 'What country has the port of Haifa ?', 'coarse_label': 4, 'fine_label': 33}), Sample(index=456, data={'text': 'How many American soldiers remain unaccounted from the Vietnam war ?', 'coarse_label': 5, 'fine_label': 38})]
after random_replace: [Sample(index=356, data={'text': 'What is the full name of the PLO ?', 'coarse_label': 0, 'fine_label': 1}), Sample(index=1771, data={'text': 'In order from the top , the four stripes on a can of Pepsi are what colors ?', 'coarse_label': 1, 'fine_label': 4}), Sample(index=1401, data={'text': 'How do they find or choose witnesses to an execution ?', 'coarse_label': 2, 'fine_label': 26}), Sample(index=1825, data={'text': "What piano company claims its product is the `` Instrument of the immortals '' ?", 'coarse_label': 3, 'fine_label': 28}), Sample(index=224, data={'text': 'What country has the port of Haifa ?', 'coarse_label': 4, 'fine_label': 33}), Sample(index=456, data={'text': 'How many American soldiers remain unaccounted from the Vietnam war ?', 'coarse_label': 5, 'fine_label': 38})]
data: {'text': 'What does pH stand for ?', 'coarse_label': 0, 'fine_label': 1}
task_input: What does pH stand for ?, corse_label: 0
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What does pH stand for ?', 'examples_str': "Question: What is the full name of the PLO ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: In order from the top , the four stripes on a can of Pepsi are what colors ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do they find or choose witnesses to an execution ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What piano company claims its product is the `` Instrument of the immortals '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is the full name of the PLO ?
class_name: Abbreviation 
class_index: 0
--------

Question: In order from the top , the four stripes on a can of Pepsi are what colors ?
class_name: Entity 
class_index: 1
--------

Question: How do they find or choose witnesses to an execution ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What piano company claims its product is the `` Instrument of the immortals '' ?
class_name: Human being 
class_index: 3
--------

Question: What country has the port of Haifa ?
class_name: Location 
class_index: 4
--------

Question: How many American soldiers remain unaccounted from the Vietnam war ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What does pH stand for ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the full name of the PLO ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: In order from the top , the four stripes on a can of Pepsi are what colors ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do they find or choose witnesses to an execution ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What piano company claims its product is the `` Instrument of the immortals '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does pH stand for ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 22:58:18 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14308'), (b'x-ratelimit-remaining-tokens', b'29617'), (b'x-ratelimit-reset-requests', b'9m11.745s'), (b'x-ratelimit-reset-tokens', b'766ms'), (b'x-request-id', b'req_01hz0pt1hdetcshm064mp6fr8f'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d9435cc4968f-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the full name of the PLO ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: In order from the top , the four stripes on a can of Pepsi are what colors ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do they find or choose witnesses to an execution ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What piano company claims its product is the `` Instrument of the immortals '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does pH stand for ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 22:58:21 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14307'), (b'x-ratelimit-remaining-tokens', b'29588'), (b'x-ratelimit-reset-requests', b'9m15.679999999s'), (b'x-ratelimit-reset-tokens', b'824ms'), (b'x-request-id', b'req_01hz0pt3hyfxrtwmw8cqphrqyk'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d9504eb7968f-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the meaning of an abbreviation, which is a common use of abbreviations.
class_name: ABBR
class_index: 0
```
data: {'text': 'What is RCD ?', 'coarse_label': 0, 'fine_label': 1}
task_input: What is RCD ?, corse_label: 0
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What is RCD ?', 'examples_str': "Question: What is the full name of the PLO ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: In order from the top , the four stripes on a can of Pepsi are what colors ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do they find or choose witnesses to an execution ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What piano company claims its product is the `` Instrument of the immortals '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is the full name of the PLO ?
class_name: Abbreviation 
class_index: 0
--------

Question: In order from the top , the four stripes on a can of Pepsi are what colors ?
class_name: Entity 
class_index: 1
--------

Question: How do they find or choose witnesses to an execution ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What piano company claims its product is the `` Instrument of the immortals '' ?
class_name: Human being 
class_index: 3
--------

Question: What country has the port of Haifa ?
class_name: Location 
class_index: 4
--------

Question: How many American soldiers remain unaccounted from the Vietnam war ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What is RCD ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the full name of the PLO ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: In order from the top , the four stripes on a can of Pepsi are what colors ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do they find or choose witnesses to an execution ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What piano company claims its product is the `` Instrument of the immortals '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is RCD ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 22:58:21 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14307'), (b'x-ratelimit-remaining-tokens', b'29623'), (b'x-ratelimit-reset-requests', b'9m17.674999999s'), (b'x-ratelimit-reset-tokens', b'753ms'), (b'x-request-id', b'req_01hz0pt3w4eypb4g0zzp825343'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d9525882968f-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the full name of the PLO ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: In order from the top , the four stripes on a can of Pepsi are what colors ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do they find or choose witnesses to an execution ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What piano company claims its product is the `` Instrument of the immortals '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is RCD ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 22:58:23 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14306'), (b'x-ratelimit-remaining-tokens', b'29591'), (b'x-ratelimit-reset-requests', b'9m21.619999999s'), (b'x-ratelimit-reset-tokens', b'818ms'), (b'x-request-id', b'req_01hz0pt5wbf68az8s0m618ngt9'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d95f2a8b968f-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is asking for the meaning of an abbreviation, which is typically represented by a shortened form of a word or phrase.
class_name: ABBR
class_index: 0
data: {'text': 'What does IQ stand for ?', 'coarse_label': 0, 'fine_label': 1}
task_input: What does IQ stand for ?, corse_label: 0
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What does IQ stand for ?', 'examples_str': "Question: What is the full name of the PLO ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: In order from the top , the four stripes on a can of Pepsi are what colors ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do they find or choose witnesses to an execution ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What piano company claims its product is the `` Instrument of the immortals '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is the full name of the PLO ?
class_name: Abbreviation 
class_index: 0
--------

Question: In order from the top , the four stripes on a can of Pepsi are what colors ?
class_name: Entity 
class_index: 1
--------

Question: How do they find or choose witnesses to an execution ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What piano company claims its product is the `` Instrument of the immortals '' ?
class_name: Human being 
class_index: 3
--------

Question: What country has the port of Haifa ?
class_name: Location 
class_index: 4
--------

Question: How many American soldiers remain unaccounted from the Vietnam war ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What does IQ stand for ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the full name of the PLO ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: In order from the top , the four stripes on a can of Pepsi are what colors ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do they find or choose witnesses to an execution ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What piano company claims its product is the `` Instrument of the immortals '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does IQ stand for ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 22:58:23 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14306'), (b'x-ratelimit-remaining-tokens', b'29579'), (b'x-ratelimit-reset-requests', b'9m23.769999999s'), (b'x-ratelimit-reset-tokens', b'842ms'), (b'x-request-id', b'req_01hz0pt63jfybrzhmqqa4mx9gd'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d9609b67968f-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the full name of the PLO ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: In order from the top , the four stripes on a can of Pepsi are what colors ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do they find or choose witnesses to an execution ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What piano company claims its product is the `` Instrument of the immortals '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does IQ stand for ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 22:58:25 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14305'), (b'x-ratelimit-remaining-tokens', b'29588'), (b'x-ratelimit-reset-requests', b'9m27.713s'), (b'x-ratelimit-reset-tokens', b'824ms'), (b'x-request-id', b'req_01hz0pt83vf7nvdbp5bcvgww26'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d96d7c1e968f-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking for the abbreviation of a term, which is a common use case for abbreviations.
class_name: ABBR
class_index: 0
```
data: {'text': "What does the `` blue ribbon '' stand for ?", 'coarse_label': 0, 'fine_label': 1}
task_input: What does the `` blue ribbon '' stand for ?, corse_label: 0
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': "What does the `` blue ribbon '' stand for ?", 'examples_str': "Question: What is the full name of the PLO ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: In order from the top , the four stripes on a can of Pepsi are what colors ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do they find or choose witnesses to an execution ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What piano company claims its product is the `` Instrument of the immortals '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is the full name of the PLO ?
class_name: Abbreviation 
class_index: 0
--------

Question: In order from the top , the four stripes on a can of Pepsi are what colors ?
class_name: Entity 
class_index: 1
--------

Question: How do they find or choose witnesses to an execution ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What piano company claims its product is the `` Instrument of the immortals '' ?
class_name: Human being 
class_index: 3
--------

Question: What country has the port of Haifa ?
class_name: Location 
class_index: 4
--------

Question: How many American soldiers remain unaccounted from the Vietnam war ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What does the `` blue ribbon '' stand for ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the full name of the PLO ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: In order from the top , the four stripes on a can of Pepsi are what colors ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do they find or choose witnesses to an execution ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What piano company claims its product is the `` Instrument of the immortals '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does the `` blue ribbon '' stand for ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 22:58:25 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14305'), (b'x-ratelimit-remaining-tokens', b'29585'), (b'x-ratelimit-reset-requests', b'9m29.683s'), (b'x-ratelimit-reset-tokens', b'830ms'), (b'x-request-id', b'req_01hz0pt8drerc915gf5pb68hxa'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d96f7d42968f-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the full name of the PLO ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: In order from the top , the four stripes on a can of Pepsi are what colors ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do they find or choose witnesses to an execution ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What piano company claims its product is the `` Instrument of the immortals '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does the `` blue ribbon '' stand for ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 22:58:28 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14304'), (b'x-ratelimit-remaining-tokens', b'29583'), (b'x-ratelimit-reset-requests', b'9m33.620999999s'), (b'x-ratelimit-reset-tokens', b'834ms'), (b'x-request-id', b'req_01hz0ptae7fxm97mktdb1p4tta'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d97c5e06968f-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the meaning or significance of the "blue ribbon", which is an abstract concept.
class_name: DESC
class_index: 2
```
data: {'text': 'What English word contains the most letters ?', 'coarse_label': 1, 'fine_label': 23}
task_input: What English word contains the most letters ?, corse_label: 1
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What English word contains the most letters ?', 'examples_str': "Question: What is the full name of the PLO ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: In order from the top , the four stripes on a can of Pepsi are what colors ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do they find or choose witnesses to an execution ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What piano company claims its product is the `` Instrument of the immortals '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is the full name of the PLO ?
class_name: Abbreviation 
class_index: 0
--------

Question: In order from the top , the four stripes on a can of Pepsi are what colors ?
class_name: Entity 
class_index: 1
--------

Question: How do they find or choose witnesses to an execution ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What piano company claims its product is the `` Instrument of the immortals '' ?
class_name: Human being 
class_index: 3
--------

Question: What country has the port of Haifa ?
class_name: Location 
class_index: 4
--------

Question: How many American soldiers remain unaccounted from the Vietnam war ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What English word contains the most letters ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the full name of the PLO ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: In order from the top , the four stripes on a can of Pepsi are what colors ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do they find or choose witnesses to an execution ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What piano company claims its product is the `` Instrument of the immortals '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What English word contains the most letters ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 22:58:28 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14304'), (b'x-ratelimit-remaining-tokens', b'29623'), (b'x-ratelimit-reset-requests', b'9m35.657999999s'), (b'x-ratelimit-reset-tokens', b'754ms'), (b'x-request-id', b'req_01hz0ptaryf9f9mfnaz5xx8790'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d97e7f9e968f-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the full name of the PLO ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: In order from the top , the four stripes on a can of Pepsi are what colors ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do they find or choose witnesses to an execution ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What piano company claims its product is the `` Instrument of the immortals '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What English word contains the most letters ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 22:58:30 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14303'), (b'x-ratelimit-remaining-tokens', b'29583'), (b'x-ratelimit-reset-requests', b'9m39.595s'), (b'x-ratelimit-reset-tokens', b'834ms'), (b'x-request-id', b'req_01hz0ptcsdfxs94dd1m0s1ce1b'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d98b6f40968f-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is asking about the English word with the most letters, which is a specific piece of information that can be looked up or calculated.
class_name: Numeric value
class_index: 5
data: {'text': "What color flies closest to the staff on Belgium 's flag ?", 'coarse_label': 1, 'fine_label': 4}
task_input: What color flies closest to the staff on Belgium 's flag ?, corse_label: 1
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': "What color flies closest to the staff on Belgium 's flag ?", 'examples_str': "Question: What is the full name of the PLO ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: In order from the top , the four stripes on a can of Pepsi are what colors ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do they find or choose witnesses to an execution ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What piano company claims its product is the `` Instrument of the immortals '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is the full name of the PLO ?
class_name: Abbreviation 
class_index: 0
--------

Question: In order from the top , the four stripes on a can of Pepsi are what colors ?
class_name: Entity 
class_index: 1
--------

Question: How do they find or choose witnesses to an execution ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What piano company claims its product is the `` Instrument of the immortals '' ?
class_name: Human being 
class_index: 3
--------

Question: What country has the port of Haifa ?
class_name: Location 
class_index: 4
--------

Question: How many American soldiers remain unaccounted from the Vietnam war ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What color flies closest to the staff on Belgium 's flag ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the full name of the PLO ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: In order from the top , the four stripes on a can of Pepsi are what colors ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do they find or choose witnesses to an execution ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What piano company claims its product is the `` Instrument of the immortals '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What color flies closest to the staff on Belgium 's flag ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 22:58:30 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14303'), (b'x-ratelimit-remaining-tokens', b'29596'), (b'x-ratelimit-reset-requests', b'9m41.713999999s'), (b'x-ratelimit-reset-tokens', b'808ms'), (b'x-request-id', b'req_01hz0ptd2cfmhbwr0wmjd90h5d'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d98d28f0968f-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the full name of the PLO ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: In order from the top , the four stripes on a can of Pepsi are what colors ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do they find or choose witnesses to an execution ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What piano company claims its product is the `` Instrument of the immortals '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What color flies closest to the staff on Belgium 's flag ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 22:58:32 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14302'), (b'x-ratelimit-remaining-tokens', b'29579'), (b'x-ratelimit-reset-requests', b'9m45.65s'), (b'x-ratelimit-reset-tokens', b'842ms'), (b'x-request-id', b'req_01hz0ptf2we8pvvedgpyg2dcda'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d99a19a2968f-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the color of the flag of Belgium, which is a specific entity.
class_name: Entity
class_index: 1
data: {'text': "Name the disposable razor that `` costs about 19 cents . ''", 'coarse_label': 1, 'fine_label': 15}
task_input: Name the disposable razor that `` costs about 19 cents . '', corse_label: 1
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': "Name the disposable razor that `` costs about 19 cents . ''", 'examples_str': "Question: What is the full name of the PLO ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: In order from the top , the four stripes on a can of Pepsi are what colors ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do they find or choose witnesses to an execution ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What piano company claims its product is the `` Instrument of the immortals '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is the full name of the PLO ?
class_name: Abbreviation 
class_index: 0
--------

Question: In order from the top , the four stripes on a can of Pepsi are what colors ?
class_name: Entity 
class_index: 1
--------

Question: How do they find or choose witnesses to an execution ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What piano company claims its product is the `` Instrument of the immortals '' ?
class_name: Human being 
class_index: 3
--------

Question: What country has the port of Haifa ?
class_name: Location 
class_index: 4
--------

Question: How many American soldiers remain unaccounted from the Vietnam war ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Name the disposable razor that `` costs about 19 cents . ''
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the full name of the PLO ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: In order from the top , the four stripes on a can of Pepsi are what colors ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do they find or choose witnesses to an execution ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What piano company claims its product is the `` Instrument of the immortals '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Name the disposable razor that `` costs about 19 cents . ''\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 22:58:32 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14302'), (b'x-ratelimit-remaining-tokens', b'29587'), (b'x-ratelimit-reset-requests', b'9m47.754s'), (b'x-ratelimit-reset-tokens', b'826ms'), (b'x-request-id', b'req_01hz0ptfakefab4etyr85sz84k'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d99b9ac1968f-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the full name of the PLO ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: In order from the top , the four stripes on a can of Pepsi are what colors ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do they find or choose witnesses to an execution ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What piano company claims its product is the `` Instrument of the immortals '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Name the disposable razor that `` costs about 19 cents . ''\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 22:58:35 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14301'), (b'x-ratelimit-remaining-tokens', b'29579'), (b'x-ratelimit-reset-requests', b'9m51.689999999s'), (b'x-ratelimit-reset-tokens', b'842ms'), (b'x-request-id', b'req_01hz0pthb3fces9bt8v0105qw1'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d9a88af3968f-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking for the name of a disposable razor, and the price is mentioned as 19 cents.
class_name: ABBR
class_index: 0
data: {'text': "What 's the Southern dish made of pigs ' small intestines ?", 'coarse_label': 1, 'fine_label': 9}
task_input: What 's the Southern dish made of pigs ' small intestines ?, corse_label: 1
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': "What 's the Southern dish made of pigs ' small intestines ?", 'examples_str': "Question: What is the full name of the PLO ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: In order from the top , the four stripes on a can of Pepsi are what colors ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do they find or choose witnesses to an execution ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What piano company claims its product is the `` Instrument of the immortals '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is the full name of the PLO ?
class_name: Abbreviation 
class_index: 0
--------

Question: In order from the top , the four stripes on a can of Pepsi are what colors ?
class_name: Entity 
class_index: 1
--------

Question: How do they find or choose witnesses to an execution ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What piano company claims its product is the `` Instrument of the immortals '' ?
class_name: Human being 
class_index: 3
--------

Question: What country has the port of Haifa ?
class_name: Location 
class_index: 4
--------

Question: How many American soldiers remain unaccounted from the Vietnam war ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What 's the Southern dish made of pigs ' small intestines ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the full name of the PLO ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: In order from the top , the four stripes on a can of Pepsi are what colors ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do they find or choose witnesses to an execution ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What piano company claims its product is the `` Instrument of the immortals '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What 's the Southern dish made of pigs ' small intestines ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 22:58:35 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'325'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14301'), (b'x-ratelimit-remaining-tokens', b'29571'), (b'x-ratelimit-reset-requests', b'9m53.718999999s'), (b'x-ratelimit-reset-tokens', b'857ms'), (b'x-request-id', b'req_01hz0pthkxft394jr85bm9hh0r'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d9aa4c21968f-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the full name of the PLO ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: In order from the top , the four stripes on a can of Pepsi are what colors ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do they find or choose witnesses to an execution ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What piano company claims its product is the `` Instrument of the immortals '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What 's the Southern dish made of pigs ' small intestines ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 22:58:37 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14300'), (b'x-ratelimit-remaining-tokens', b'29579'), (b'x-ratelimit-reset-requests', b'9m57.667s'), (b'x-ratelimit-reset-tokens', b'842ms'), (b'x-request-id', b'req_01hz0ptkm1eb29p38yms9zqw91'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d9b71de7968f-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is about a type of food, specifically a Southern dish, and the description mentions pigs' small intestines, which is a unique and specific ingredient.
class_name: Description and abstract concept
class_index: 2
data: {'text': 'What makes hamburgers taste like steakburgers ?', 'coarse_label': 2, 'fine_label': 27}
task_input: What makes hamburgers taste like steakburgers ?, corse_label: 2
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What makes hamburgers taste like steakburgers ?', 'examples_str': "Question: What is the full name of the PLO ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: In order from the top , the four stripes on a can of Pepsi are what colors ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do they find or choose witnesses to an execution ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What piano company claims its product is the `` Instrument of the immortals '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is the full name of the PLO ?
class_name: Abbreviation 
class_index: 0
--------

Question: In order from the top , the four stripes on a can of Pepsi are what colors ?
class_name: Entity 
class_index: 1
--------

Question: How do they find or choose witnesses to an execution ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What piano company claims its product is the `` Instrument of the immortals '' ?
class_name: Human being 
class_index: 3
--------

Question: What country has the port of Haifa ?
class_name: Location 
class_index: 4
--------

Question: How many American soldiers remain unaccounted from the Vietnam war ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What makes hamburgers taste like steakburgers ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the full name of the PLO ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: In order from the top , the four stripes on a can of Pepsi are what colors ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do they find or choose witnesses to an execution ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What piano company claims its product is the `` Instrument of the immortals '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What makes hamburgers taste like steakburgers ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 22:58:37 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14300'), (b'x-ratelimit-remaining-tokens', b'29562'), (b'x-ratelimit-reset-requests', b'9m59.749s'), (b'x-ratelimit-reset-tokens', b'875ms'), (b'x-request-id', b'req_01hz0ptkvxfn0sw65nc1j8aa5n'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d9b8af0e968f-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the full name of the PLO ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: In order from the top , the four stripes on a can of Pepsi are what colors ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do they find or choose witnesses to an execution ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What piano company claims its product is the `` Instrument of the immortals '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What makes hamburgers taste like steakburgers ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 22:58:39 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14299'), (b'x-ratelimit-remaining-tokens', b'29582'), (b'x-ratelimit-reset-requests', b'10m3.697s'), (b'x-ratelimit-reset-tokens', b'836ms'), (b'x-request-id', b'req_01hz0ptnw1f69a3e2qhft2qsc2'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d9c5883b968f-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the characteristics that make hamburgers taste like steakburgers, which is a descriptive concept.
class_name: DESC
class_index: 2
```
data: {'text': 'How is digital audio used ?', 'coarse_label': 2, 'fine_label': 26}
task_input: How is digital audio used ?, corse_label: 2
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'How is digital audio used ?', 'examples_str': "Question: What is the full name of the PLO ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: In order from the top , the four stripes on a can of Pepsi are what colors ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do they find or choose witnesses to an execution ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What piano company claims its product is the `` Instrument of the immortals '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is the full name of the PLO ?
class_name: Abbreviation 
class_index: 0
--------

Question: In order from the top , the four stripes on a can of Pepsi are what colors ?
class_name: Entity 
class_index: 1
--------

Question: How do they find or choose witnesses to an execution ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What piano company claims its product is the `` Instrument of the immortals '' ?
class_name: Human being 
class_index: 3
--------

Question: What country has the port of Haifa ?
class_name: Location 
class_index: 4
--------

Question: How many American soldiers remain unaccounted from the Vietnam war ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: How is digital audio used ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the full name of the PLO ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: In order from the top , the four stripes on a can of Pepsi are what colors ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do they find or choose witnesses to an execution ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What piano company claims its product is the `` Instrument of the immortals '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: How is digital audio used ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 22:58:39 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14299'), (b'x-ratelimit-remaining-tokens', b'29576'), (b'x-ratelimit-reset-requests', b'10m5.688s'), (b'x-ratelimit-reset-tokens', b'848ms'), (b'x-request-id', b'req_01hz0ptp5te2ktqavff9mv7yrq'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d9c77978968f-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the full name of the PLO ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: In order from the top , the four stripes on a can of Pepsi are what colors ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do they find or choose witnesses to an execution ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What piano company claims its product is the `` Instrument of the immortals '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: How is digital audio used ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 22:58:42 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14298'), (b'x-ratelimit-remaining-tokens', b'29587'), (b'x-ratelimit-reset-requests', b'10m9.627999999s'), (b'x-ratelimit-reset-tokens', b'826ms'), (b'x-request-id', b'req_01hz0ptr66fn9se00hg49rny01'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d9d45a9c968f-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the usage of digital audio, which is an abstract concept, so it falls under the category of Description and abstract concept.
class_name: DESC
class_index: 2
```
data: {'text': "What does the Georgetown `` Hoya '' mean ?", 'coarse_label': 2, 'fine_label': 24}
task_input: What does the Georgetown `` Hoya '' mean ?, corse_label: 2
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': "What does the Georgetown `` Hoya '' mean ?", 'examples_str': "Question: What is the full name of the PLO ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: In order from the top , the four stripes on a can of Pepsi are what colors ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do they find or choose witnesses to an execution ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What piano company claims its product is the `` Instrument of the immortals '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is the full name of the PLO ?
class_name: Abbreviation 
class_index: 0
--------

Question: In order from the top , the four stripes on a can of Pepsi are what colors ?
class_name: Entity 
class_index: 1
--------

Question: How do they find or choose witnesses to an execution ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What piano company claims its product is the `` Instrument of the immortals '' ?
class_name: Human being 
class_index: 3
--------

Question: What country has the port of Haifa ?
class_name: Location 
class_index: 4
--------

Question: How many American soldiers remain unaccounted from the Vietnam war ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What does the Georgetown `` Hoya '' mean ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the full name of the PLO ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: In order from the top , the four stripes on a can of Pepsi are what colors ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do they find or choose witnesses to an execution ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What piano company claims its product is the `` Instrument of the immortals '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does the Georgetown `` Hoya '' mean ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 22:58:42 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14298'), (b'x-ratelimit-remaining-tokens', b'29598'), (b'x-ratelimit-reset-requests', b'10m11.707999999s'), (b'x-ratelimit-reset-tokens', b'804ms'), (b'x-request-id', b'req_01hz0ptrfbfmhttkrxyh0zsrp9'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d9d62bbe968f-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the full name of the PLO ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: In order from the top , the four stripes on a can of Pepsi are what colors ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do they find or choose witnesses to an execution ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What piano company claims its product is the `` Instrument of the immortals '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does the Georgetown `` Hoya '' mean ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 22:58:44 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14297'), (b'x-ratelimit-remaining-tokens', b'29583'), (b'x-ratelimit-reset-requests', b'10m15.643s'), (b'x-ratelimit-reset-tokens', b'834ms'), (b'x-request-id', b'req_01hz0pttfwfxms2dd2svejmzhm'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d9e31c72968f-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the meaning of the Georgetown "Hoya", which is a symbol of Georgetown University.
class_name: ABBR
class_index: 0
data: {'text': 'What is a hormone ?', 'coarse_label': 2, 'fine_label': 24}
task_input: What is a hormone ?, corse_label: 2
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What is a hormone ?', 'examples_str': "Question: What is the full name of the PLO ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: In order from the top , the four stripes on a can of Pepsi are what colors ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do they find or choose witnesses to an execution ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What piano company claims its product is the `` Instrument of the immortals '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is the full name of the PLO ?
class_name: Abbreviation 
class_index: 0
--------

Question: In order from the top , the four stripes on a can of Pepsi are what colors ?
class_name: Entity 
class_index: 1
--------

Question: How do they find or choose witnesses to an execution ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What piano company claims its product is the `` Instrument of the immortals '' ?
class_name: Human being 
class_index: 3
--------

Question: What country has the port of Haifa ?
class_name: Location 
class_index: 4
--------

Question: How many American soldiers remain unaccounted from the Vietnam war ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What is a hormone ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the full name of the PLO ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: In order from the top , the four stripes on a can of Pepsi are what colors ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do they find or choose witnesses to an execution ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What piano company claims its product is the `` Instrument of the immortals '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is a hormone ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 22:58:44 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14297'), (b'x-ratelimit-remaining-tokens', b'29577'), (b'x-ratelimit-reset-requests', b'10m17.761999999s'), (b'x-ratelimit-reset-tokens', b'845ms'), (b'x-request-id', b'req_01hz0pttqbebasy08kf9v4c4kq'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d9e49d64968f-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the full name of the PLO ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: In order from the top , the four stripes on a can of Pepsi are what colors ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do they find or choose witnesses to an execution ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What piano company claims its product is the `` Instrument of the immortals '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is a hormone ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 22:58:46 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14296'), (b'x-ratelimit-remaining-tokens', b'29589'), (b'x-ratelimit-reset-requests', b'10m21.708s'), (b'x-ratelimit-reset-tokens', b'822ms'), (b'x-request-id', b'req_01hz0ptwqhfxsr48ermxvv749z'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d9f16e91968f-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is asking about a biological concept, which is typically described in a scientific or medical context.
class_name: DESC
class_index: 2
```
data: {'text': "What kind of people took part in Shays ' Rebellion in Massachusetts in 1787 ?", 'coarse_label': 3, 'fine_label': 28}
task_input: What kind of people took part in Shays ' Rebellion in Massachusetts in 1787 ?, corse_label: 3
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': "What kind of people took part in Shays ' Rebellion in Massachusetts in 1787 ?", 'examples_str': "Question: What is the full name of the PLO ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: In order from the top , the four stripes on a can of Pepsi are what colors ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do they find or choose witnesses to an execution ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What piano company claims its product is the `` Instrument of the immortals '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is the full name of the PLO ?
class_name: Abbreviation 
class_index: 0
--------

Question: In order from the top , the four stripes on a can of Pepsi are what colors ?
class_name: Entity 
class_index: 1
--------

Question: How do they find or choose witnesses to an execution ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What piano company claims its product is the `` Instrument of the immortals '' ?
class_name: Human being 
class_index: 3
--------

Question: What country has the port of Haifa ?
class_name: Location 
class_index: 4
--------

Question: How many American soldiers remain unaccounted from the Vietnam war ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What kind of people took part in Shays ' Rebellion in Massachusetts in 1787 ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the full name of the PLO ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: In order from the top , the four stripes on a can of Pepsi are what colors ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do they find or choose witnesses to an execution ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What piano company claims its product is the `` Instrument of the immortals '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What kind of people took part in Shays ' Rebellion in Massachusetts in 1787 ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 22:58:46 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'325'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14296'), (b'x-ratelimit-remaining-tokens', b'29587'), (b'x-ratelimit-reset-requests', b'10m23.719999999s'), (b'x-ratelimit-reset-tokens', b'826ms'), (b'x-request-id', b'req_01hz0ptx0aeteay2ncftm9havn'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1d9f32fd5968f-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the full name of the PLO ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: In order from the top , the four stripes on a can of Pepsi are what colors ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do they find or choose witnesses to an execution ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What piano company claims its product is the `` Instrument of the immortals '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What kind of people took part in Shays ' Rebellion in Massachusetts in 1787 ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 22:58:49 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14295'), (b'x-ratelimit-remaining-tokens', b'29575'), (b'x-ratelimit-reset-requests', b'10m27.664s'), (b'x-ratelimit-reset-tokens', b'850ms'), (b'x-request-id', b'req_01hz0ptz0he2g8mzkm0vdgbvpj'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1da000901968f-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the type of people involved in Shays' Rebellion in Massachusetts in 1787, which suggests that the answer is a group of people, specifically humans.
class_name: HUM
class_index: 3
data: {'text': "Name the designer of the shoe that spawned millions of plastic imitations , known as ` jellies ' .", 'coarse_label': 3, 'fine_label': 29}
task_input: Name the designer of the shoe that spawned millions of plastic imitations , known as ` jellies ' ., corse_label: 3
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': "Name the designer of the shoe that spawned millions of plastic imitations , known as ` jellies ' .", 'examples_str': "Question: What is the full name of the PLO ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: In order from the top , the four stripes on a can of Pepsi are what colors ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do they find or choose witnesses to an execution ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What piano company claims its product is the `` Instrument of the immortals '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is the full name of the PLO ?
class_name: Abbreviation 
class_index: 0
--------

Question: In order from the top , the four stripes on a can of Pepsi are what colors ?
class_name: Entity 
class_index: 1
--------

Question: How do they find or choose witnesses to an execution ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What piano company claims its product is the `` Instrument of the immortals '' ?
class_name: Human being 
class_index: 3
--------

Question: What country has the port of Haifa ?
class_name: Location 
class_index: 4
--------

Question: How many American soldiers remain unaccounted from the Vietnam war ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Name the designer of the shoe that spawned millions of plastic imitations , known as ` jellies ' .
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the full name of the PLO ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: In order from the top , the four stripes on a can of Pepsi are what colors ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do they find or choose witnesses to an execution ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What piano company claims its product is the `` Instrument of the immortals '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Name the designer of the shoe that spawned millions of plastic imitations , known as ` jellies ' .\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 22:58:49 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14295'), (b'x-ratelimit-remaining-tokens', b'29562'), (b'x-ratelimit-reset-requests', b'10m29.728999999s'), (b'x-ratelimit-reset-tokens', b'876ms'), (b'x-request-id', b'req_01hz0ptz92fmj8gjbasd8abj4a'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1da01aa12968f-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the full name of the PLO ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: In order from the top , the four stripes on a can of Pepsi are what colors ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do they find or choose witnesses to an execution ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What piano company claims its product is the `` Instrument of the immortals '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Name the designer of the shoe that spawned millions of plastic imitations , known as ` jellies ' .\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 22:58:51 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14294'), (b'x-ratelimit-remaining-tokens', b'29569'), (b'x-ratelimit-reset-requests', b'10m33.664s'), (b'x-ratelimit-reset-tokens', b'862ms'), (b'x-request-id', b'req_01hz0pv19kfna9t8xyxb1j5y88'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1da0e9ba5968f-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking for the name of a person, which is a characteristic of a human being.
class_name: HUM
class_index: 3
data: {'text': 'Who is Prince Naseem Hamed ?', 'coarse_label': 3, 'fine_label': 31}
task_input: Who is Prince Naseem Hamed ?, corse_label: 3
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'Who is Prince Naseem Hamed ?', 'examples_str': "Question: What is the full name of the PLO ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: In order from the top , the four stripes on a can of Pepsi are what colors ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do they find or choose witnesses to an execution ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What piano company claims its product is the `` Instrument of the immortals '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is the full name of the PLO ?
class_name: Abbreviation 
class_index: 0
--------

Question: In order from the top , the four stripes on a can of Pepsi are what colors ?
class_name: Entity 
class_index: 1
--------

Question: How do they find or choose witnesses to an execution ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What piano company claims its product is the `` Instrument of the immortals '' ?
class_name: Human being 
class_index: 3
--------

Question: What country has the port of Haifa ?
class_name: Location 
class_index: 4
--------

Question: How many American soldiers remain unaccounted from the Vietnam war ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Who is Prince Naseem Hamed ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the full name of the PLO ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: In order from the top , the four stripes on a can of Pepsi are what colors ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do they find or choose witnesses to an execution ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What piano company claims its product is the `` Instrument of the immortals '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Who is Prince Naseem Hamed ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 22:58:51 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14294'), (b'x-ratelimit-remaining-tokens', b'29569'), (b'x-ratelimit-reset-requests', b'10m35.769999999s'), (b'x-ratelimit-reset-tokens', b'862ms'), (b'x-request-id', b'req_01hz0pv1gtfn1v65404jph74qa'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1da101cad968f-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the full name of the PLO ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: In order from the top , the four stripes on a can of Pepsi are what colors ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do they find or choose witnesses to an execution ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What piano company claims its product is the `` Instrument of the immortals '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Who is Prince Naseem Hamed ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 22:58:53 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14293'), (b'x-ratelimit-remaining-tokens', b'29587'), (b'x-ratelimit-reset-requests', b'10m39.697s'), (b'x-ratelimit-reset-tokens', b'826ms'), (b'x-request-id', b'req_01hz0pv3hkfcft28jyx7ew1awh'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1da1cee0f968f-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about a specific person, Prince Naseem Hamed.
class_name: HUM
class_index: 3
```
data: {'text': "Who sings Angel Eyes from the 80 's ?", 'coarse_label': 3, 'fine_label': 29}
task_input: Who sings Angel Eyes from the 80 's ?, corse_label: 3
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': "Who sings Angel Eyes from the 80 's ?", 'examples_str': "Question: What is the full name of the PLO ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: In order from the top , the four stripes on a can of Pepsi are what colors ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do they find or choose witnesses to an execution ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What piano company claims its product is the `` Instrument of the immortals '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is the full name of the PLO ?
class_name: Abbreviation 
class_index: 0
--------

Question: In order from the top , the four stripes on a can of Pepsi are what colors ?
class_name: Entity 
class_index: 1
--------

Question: How do they find or choose witnesses to an execution ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What piano company claims its product is the `` Instrument of the immortals '' ?
class_name: Human being 
class_index: 3
--------

Question: What country has the port of Haifa ?
class_name: Location 
class_index: 4
--------

Question: How many American soldiers remain unaccounted from the Vietnam war ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Who sings Angel Eyes from the 80 's ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the full name of the PLO ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: In order from the top , the four stripes on a can of Pepsi are what colors ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do they find or choose witnesses to an execution ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What piano company claims its product is the `` Instrument of the immortals '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Who sings Angel Eyes from the 80 's ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 22:58:53 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'324'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14293'), (b'x-ratelimit-remaining-tokens', b'29585'), (b'x-ratelimit-reset-requests', b'10m41.7s'), (b'x-ratelimit-reset-tokens', b'830ms'), (b'x-request-id', b'req_01hz0pv3tzebarq133ncs1v8ge'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1da1eef68968f-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the full name of the PLO ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: In order from the top , the four stripes on a can of Pepsi are what colors ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do they find or choose witnesses to an execution ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What piano company claims its product is the `` Instrument of the immortals '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Who sings Angel Eyes from the 80 's ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 22:58:56 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14292'), (b'x-ratelimit-remaining-tokens', b'29585'), (b'x-ratelimit-reset-requests', b'10m45.647s'), (b'x-ratelimit-reset-tokens', b'830ms'), (b'x-request-id', b'req_01hz0pv5v4fna8p6mtcceezrk0'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1da2bb815968f-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about a person who sings a song, which is a characteristic of a human being.
class_name: HUM
class_index: 3
data: {'text': "What is New England 's highest mountain ?", 'coarse_label': 4, 'fine_label': 34}
task_input: What is New England 's highest mountain ?, corse_label: 4
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': "What is New England 's highest mountain ?", 'examples_str': "Question: What is the full name of the PLO ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: In order from the top , the four stripes on a can of Pepsi are what colors ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do they find or choose witnesses to an execution ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What piano company claims its product is the `` Instrument of the immortals '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is the full name of the PLO ?
class_name: Abbreviation 
class_index: 0
--------

Question: In order from the top , the four stripes on a can of Pepsi are what colors ?
class_name: Entity 
class_index: 1
--------

Question: How do they find or choose witnesses to an execution ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What piano company claims its product is the `` Instrument of the immortals '' ?
class_name: Human being 
class_index: 3
--------

Question: What country has the port of Haifa ?
class_name: Location 
class_index: 4
--------

Question: How many American soldiers remain unaccounted from the Vietnam war ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What is New England 's highest mountain ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the full name of the PLO ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: In order from the top , the four stripes on a can of Pepsi are what colors ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do they find or choose witnesses to an execution ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What piano company claims its product is the `` Instrument of the immortals '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is New England 's highest mountain ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 22:58:56 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14292'), (b'x-ratelimit-remaining-tokens', b'29611'), (b'x-ratelimit-reset-requests', b'10m47.658999999s'), (b'x-ratelimit-reset-tokens', b'778ms'), (b'x-request-id', b'req_01hz0pv65vfe1rqajx55t465zt'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1da2dd977968f-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the full name of the PLO ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: In order from the top , the four stripes on a can of Pepsi are what colors ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do they find or choose witnesses to an execution ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What piano company claims its product is the `` Instrument of the immortals '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is New England 's highest mountain ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 22:58:58 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14291'), (b'x-ratelimit-remaining-tokens', b'29584'), (b'x-ratelimit-reset-requests', b'10m51.608s'), (b'x-ratelimit-reset-tokens', b'832ms'), (b'x-request-id', b'req_01hz0pv85xf7q93z73efetbezf'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1da3ab9a6968f-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the highest mountain in New England, which is a geographic location.
class_name: Location
class_index: 4
data: {'text': 'Where is Inoco based ?', 'coarse_label': 4, 'fine_label': 35}
task_input: Where is Inoco based ?, corse_label: 4
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'Where is Inoco based ?', 'examples_str': "Question: What is the full name of the PLO ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: In order from the top , the four stripes on a can of Pepsi are what colors ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do they find or choose witnesses to an execution ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What piano company claims its product is the `` Instrument of the immortals '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is the full name of the PLO ?
class_name: Abbreviation 
class_index: 0
--------

Question: In order from the top , the four stripes on a can of Pepsi are what colors ?
class_name: Entity 
class_index: 1
--------

Question: How do they find or choose witnesses to an execution ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What piano company claims its product is the `` Instrument of the immortals '' ?
class_name: Human being 
class_index: 3
--------

Question: What country has the port of Haifa ?
class_name: Location 
class_index: 4
--------

Question: How many American soldiers remain unaccounted from the Vietnam war ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Where is Inoco based ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the full name of the PLO ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: In order from the top , the four stripes on a can of Pepsi are what colors ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do they find or choose witnesses to an execution ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What piano company claims its product is the `` Instrument of the immortals '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Where is Inoco based ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 22:58:58 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14291'), (b'x-ratelimit-remaining-tokens', b'29582'), (b'x-ratelimit-reset-requests', b'10m53.775999999s'), (b'x-ratelimit-reset-tokens', b'836ms'), (b'x-request-id', b'req_01hz0pv8cyerdtnva5ftksn062'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1da3c1a9b968f-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the full name of the PLO ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: In order from the top , the four stripes on a can of Pepsi are what colors ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do they find or choose witnesses to an execution ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What piano company claims its product is the `` Instrument of the immortals '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Where is Inoco based ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 22:59:00 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14290'), (b'x-ratelimit-remaining-tokens', b'29588'), (b'x-ratelimit-reset-requests', b'10m57.716s'), (b'x-ratelimit-reset-tokens', b'824ms'), (b'x-request-id', b'req_01hz0pvadaeyqv8gvck6ef883w'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1da48fbaa968f-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking for the location of Inoco, which is a company, so it's likely to be a location.
class_name: LOC
class_index: 4
```
data: {'text': 'Where is the location of the Orange Bowl ?', 'coarse_label': 4, 'fine_label': 35}
task_input: Where is the location of the Orange Bowl ?, corse_label: 4
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'Where is the location of the Orange Bowl ?', 'examples_str': "Question: What is the full name of the PLO ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: In order from the top , the four stripes on a can of Pepsi are what colors ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do they find or choose witnesses to an execution ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What piano company claims its product is the `` Instrument of the immortals '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is the full name of the PLO ?
class_name: Abbreviation 
class_index: 0
--------

Question: In order from the top , the four stripes on a can of Pepsi are what colors ?
class_name: Entity 
class_index: 1
--------

Question: How do they find or choose witnesses to an execution ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What piano company claims its product is the `` Instrument of the immortals '' ?
class_name: Human being 
class_index: 3
--------

Question: What country has the port of Haifa ?
class_name: Location 
class_index: 4
--------

Question: How many American soldiers remain unaccounted from the Vietnam war ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Where is the location of the Orange Bowl ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the full name of the PLO ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: In order from the top , the four stripes on a can of Pepsi are what colors ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do they find or choose witnesses to an execution ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What piano company claims its product is the `` Instrument of the immortals '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Where is the location of the Orange Bowl ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 22:59:00 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14290'), (b'x-ratelimit-remaining-tokens', b'29594'), (b'x-ratelimit-reset-requests', b'10m59.737s'), (b'x-ratelimit-reset-tokens', b'812ms'), (b'x-request-id', b'req_01hz0pvanjfjdb8mebx6z4rx5x'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1da4a9ceb968f-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the full name of the PLO ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: In order from the top , the four stripes on a can of Pepsi are what colors ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do they find or choose witnesses to an execution ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What piano company claims its product is the `` Instrument of the immortals '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Where is the location of the Orange Bowl ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 22:59:03 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14289'), (b'x-ratelimit-remaining-tokens', b'29583'), (b'x-ratelimit-reset-requests', b'11m3.678999999s'), (b'x-ratelimit-reset-tokens', b'834ms'), (b'x-request-id', b'req_01hz0pvcnwfe280vmmchsfmkhb'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1da577d53968f-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking for the location of the Orange Bowl, which is a specific stadium.
class_name: Location
class_index: 4
data: {'text': 'What ocean surrounds the Madeira Islands ?', 'coarse_label': 4, 'fine_label': 35}
task_input: What ocean surrounds the Madeira Islands ?, corse_label: 4
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What ocean surrounds the Madeira Islands ?', 'examples_str': "Question: What is the full name of the PLO ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: In order from the top , the four stripes on a can of Pepsi are what colors ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do they find or choose witnesses to an execution ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What piano company claims its product is the `` Instrument of the immortals '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is the full name of the PLO ?
class_name: Abbreviation 
class_index: 0
--------

Question: In order from the top , the four stripes on a can of Pepsi are what colors ?
class_name: Entity 
class_index: 1
--------

Question: How do they find or choose witnesses to an execution ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What piano company claims its product is the `` Instrument of the immortals '' ?
class_name: Human being 
class_index: 3
--------

Question: What country has the port of Haifa ?
class_name: Location 
class_index: 4
--------

Question: How many American soldiers remain unaccounted from the Vietnam war ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What ocean surrounds the Madeira Islands ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the full name of the PLO ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: In order from the top , the four stripes on a can of Pepsi are what colors ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do they find or choose witnesses to an execution ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What piano company claims its product is the `` Instrument of the immortals '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What ocean surrounds the Madeira Islands ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 22:59:03 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14289'), (b'x-ratelimit-remaining-tokens', b'29598'), (b'x-ratelimit-reset-requests', b'11m5.696s'), (b'x-ratelimit-reset-tokens', b'803ms'), (b'x-request-id', b'req_01hz0pvczdf3zvgjbeag3c4qay'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1da596e6f968f-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the full name of the PLO ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: In order from the top , the four stripes on a can of Pepsi are what colors ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do they find or choose witnesses to an execution ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What piano company claims its product is the `` Instrument of the immortals '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What ocean surrounds the Madeira Islands ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 22:59:05 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14288'), (b'x-ratelimit-remaining-tokens', b'29583'), (b'x-ratelimit-reset-requests', b'11m9.626999999s'), (b'x-ratelimit-reset-tokens', b'834ms'), (b'x-request-id', b'req_01hz0pvf02ereb09f2xbn57pr0'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1da665f67968f-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the geographical location of the Madeira Islands, which is a specific location.
class_name: Location
class_index: 4
data: {'text': 'When is Bastille Day ?', 'coarse_label': 5, 'fine_label': 39}
task_input: When is Bastille Day ?, corse_label: 5
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'When is Bastille Day ?', 'examples_str': "Question: What is the full name of the PLO ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: In order from the top , the four stripes on a can of Pepsi are what colors ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do they find or choose witnesses to an execution ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What piano company claims its product is the `` Instrument of the immortals '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is the full name of the PLO ?
class_name: Abbreviation 
class_index: 0
--------

Question: In order from the top , the four stripes on a can of Pepsi are what colors ?
class_name: Entity 
class_index: 1
--------

Question: How do they find or choose witnesses to an execution ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What piano company claims its product is the `` Instrument of the immortals '' ?
class_name: Human being 
class_index: 3
--------

Question: What country has the port of Haifa ?
class_name: Location 
class_index: 4
--------

Question: How many American soldiers remain unaccounted from the Vietnam war ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: When is Bastille Day ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the full name of the PLO ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: In order from the top , the four stripes on a can of Pepsi are what colors ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do they find or choose witnesses to an execution ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What piano company claims its product is the `` Instrument of the immortals '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: When is Bastille Day ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 22:59:05 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'325'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14288'), (b'x-ratelimit-remaining-tokens', b'29584'), (b'x-ratelimit-reset-requests', b'11m11.69s'), (b'x-ratelimit-reset-tokens', b'831ms'), (b'x-request-id', b'req_01hz0pvf9se8rs5gk7xmva1eas'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1da684897968f-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the full name of the PLO ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: In order from the top , the four stripes on a can of Pepsi are what colors ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do they find or choose witnesses to an execution ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What piano company claims its product is the `` Instrument of the immortals '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: When is Bastille Day ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 22:59:07 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14287'), (b'x-ratelimit-remaining-tokens', b'29588'), (b'x-ratelimit-reset-requests', b'11m15.623999999s'), (b'x-ratelimit-reset-tokens', b'824ms'), (b'x-request-id', b'req_01hz0pvhabft4at2yn29y3jmzy'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1da7528d7968f-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is asking about a specific date, which is a numeric value.
class_name: NUM
class_index: 5
data: {'text': 'How many home runs did Babe Ruth hit in his lifetime ?', 'coarse_label': 5, 'fine_label': 38}
task_input: How many home runs did Babe Ruth hit in his lifetime ?, corse_label: 5
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'How many home runs did Babe Ruth hit in his lifetime ?', 'examples_str': "Question: What is the full name of the PLO ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: In order from the top , the four stripes on a can of Pepsi are what colors ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do they find or choose witnesses to an execution ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What piano company claims its product is the `` Instrument of the immortals '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is the full name of the PLO ?
class_name: Abbreviation 
class_index: 0
--------

Question: In order from the top , the four stripes on a can of Pepsi are what colors ?
class_name: Entity 
class_index: 1
--------

Question: How do they find or choose witnesses to an execution ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What piano company claims its product is the `` Instrument of the immortals '' ?
class_name: Human being 
class_index: 3
--------

Question: What country has the port of Haifa ?
class_name: Location 
class_index: 4
--------

Question: How many American soldiers remain unaccounted from the Vietnam war ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: How many home runs did Babe Ruth hit in his lifetime ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the full name of the PLO ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: In order from the top , the four stripes on a can of Pepsi are what colors ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do they find or choose witnesses to an execution ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What piano company claims its product is the `` Instrument of the immortals '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: How many home runs did Babe Ruth hit in his lifetime ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 22:59:08 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14287'), (b'x-ratelimit-remaining-tokens', b'29590'), (b'x-ratelimit-reset-requests', b'11m17.723999999s'), (b'x-ratelimit-reset-tokens', b'819ms'), (b'x-request-id', b'req_01hz0pvhk0e1sv11frxhr3m0rv'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1da76e9e8968f-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the full name of the PLO ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: In order from the top , the four stripes on a can of Pepsi are what colors ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do they find or choose witnesses to an execution ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What piano company claims its product is the `` Instrument of the immortals '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: How many home runs did Babe Ruth hit in his lifetime ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 22:59:10 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14286'), (b'x-ratelimit-remaining-tokens', b'29580'), (b'x-ratelimit-reset-requests', b'11m21.669999999s'), (b'x-ratelimit-reset-tokens', b'840ms'), (b'x-request-id', b'req_01hz0pvkk5eyr9why7mrztb336'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1da83baa9968f-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is asking about a specific statistic related to a famous person, which is a numeric value.
class_name: NUM
class_index: 5
data: {'text': 'When was General Manuel Noriega ousted as the leader of Panama and turned over to U.S. authorities ?', 'coarse_label': 5, 'fine_label': 39}
task_input: When was General Manuel Noriega ousted as the leader of Panama and turned over to U.S. authorities ?, corse_label: 5
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'When was General Manuel Noriega ousted as the leader of Panama and turned over to U.S. authorities ?', 'examples_str': "Question: What is the full name of the PLO ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: In order from the top , the four stripes on a can of Pepsi are what colors ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do they find or choose witnesses to an execution ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What piano company claims its product is the `` Instrument of the immortals '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is the full name of the PLO ?
class_name: Abbreviation 
class_index: 0
--------

Question: In order from the top , the four stripes on a can of Pepsi are what colors ?
class_name: Entity 
class_index: 1
--------

Question: How do they find or choose witnesses to an execution ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What piano company claims its product is the `` Instrument of the immortals '' ?
class_name: Human being 
class_index: 3
--------

Question: What country has the port of Haifa ?
class_name: Location 
class_index: 4
--------

Question: How many American soldiers remain unaccounted from the Vietnam war ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: When was General Manuel Noriega ousted as the leader of Panama and turned over to U.S. authorities ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the full name of the PLO ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: In order from the top , the four stripes on a can of Pepsi are what colors ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do they find or choose witnesses to an execution ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What piano company claims its product is the `` Instrument of the immortals '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: When was General Manuel Noriega ousted as the leader of Panama and turned over to U.S. authorities ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 22:59:10 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14286'), (b'x-ratelimit-remaining-tokens', b'29588'), (b'x-ratelimit-reset-requests', b'11m23.708999999s'), (b'x-ratelimit-reset-tokens', b'824ms'), (b'x-request-id', b'req_01hz0pvkwae6q9fshfqbrvsdh5'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1da859c0b968f-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the full name of the PLO ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: In order from the top , the four stripes on a can of Pepsi are what colors ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do they find or choose witnesses to an execution ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What piano company claims its product is the `` Instrument of the immortals '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: When was General Manuel Noriega ousted as the leader of Panama and turned over to U.S. authorities ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 22:59:12 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14285'), (b'x-ratelimit-remaining-tokens', b'29569'), (b'x-ratelimit-reset-requests', b'11m27.643s'), (b'x-ratelimit-reset-tokens', b'862ms'), (b'x-request-id', b'req_01hz0pvnwwfyebb1drhktgbdjm'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1da927d32968f-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about a historical event, specifically the ousting of General Manuel Noriega, which is a factual event.
class_name: Description and abstract concept
class_index: 2
data: {'text': 'What is the population of the largest Chilean city', 'coarse_label': 5, 'fine_label': 38}
task_input: What is the population of the largest Chilean city, corse_label: 5
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What is the population of the largest Chilean city', 'examples_str': "Question: What is the full name of the PLO ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: In order from the top , the four stripes on a can of Pepsi are what colors ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do they find or choose witnesses to an execution ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What piano company claims its product is the `` Instrument of the immortals '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is the full name of the PLO ?
class_name: Abbreviation 
class_index: 0
--------

Question: In order from the top , the four stripes on a can of Pepsi are what colors ?
class_name: Entity 
class_index: 1
--------

Question: How do they find or choose witnesses to an execution ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What piano company claims its product is the `` Instrument of the immortals '' ?
class_name: Human being 
class_index: 3
--------

Question: What country has the port of Haifa ?
class_name: Location 
class_index: 4
--------

Question: How many American soldiers remain unaccounted from the Vietnam war ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What is the population of the largest Chilean city
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the full name of the PLO ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: In order from the top , the four stripes on a can of Pepsi are what colors ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do they find or choose witnesses to an execution ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What piano company claims its product is the `` Instrument of the immortals '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is the population of the largest Chilean city\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 22:59:12 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14285'), (b'x-ratelimit-remaining-tokens', b'29602'), (b'x-ratelimit-reset-requests', b'11m29.612999999s'), (b'x-ratelimit-reset-tokens', b'796ms'), (b'x-request-id', b'req_01hz0pvp90eb3rtz1727v0km76'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1da94eed3968f-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the full name of the PLO ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: In order from the top , the four stripes on a can of Pepsi are what colors ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do they find or choose witnesses to an execution ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What piano company claims its product is the `` Instrument of the immortals '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is the population of the largest Chilean city\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 22:59:15 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14284'), (b'x-ratelimit-remaining-tokens', b'29581'), (b'x-ratelimit-reset-requests', b'11m33.556s'), (b'x-ratelimit-reset-tokens', b'838ms'), (b'x-request-id', b'req_01hz0pvr99eyramzyewx3eckbb'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1daa1cf48968f-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking for the population of a city, which is a numeric value.
class_name: NUM
class_index: 5
responses: [0, 0, 0, 2, 5, 1, 0, 2, 2, 2, 0, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 2, 5], targets: [0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5]
num_invalid: 0
Preds tensor: tensor([[1., 0., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0.],
        [0., 0., 1., 0., 0., 0.],
        [0., 0., 0., 0., 0., 1.],
        [0., 1., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0.],
        [0., 0., 1., 0., 0., 0.],
        [0., 0., 1., 0., 0., 0.],
        [0., 0., 1., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0.],
        [0., 0., 1., 0., 0., 0.],
        [0., 0., 0., 1., 0., 0.],
        [0., 0., 0., 1., 0., 0.],
        [0., 0., 0., 1., 0., 0.],
        [0., 0., 0., 1., 0., 0.],
        [0., 0., 0., 0., 1., 0.],
        [0., 0., 0., 0., 1., 0.],
        [0., 0., 0., 0., 1., 0.],
        [0., 0., 0., 0., 1., 0.],
        [0., 0., 0., 0., 0., 1.],
        [0., 0., 0., 0., 0., 1.],
        [0., 0., 1., 0., 0., 0.],
        [0., 0., 0., 0., 0., 1.]])
Targets tensor: tensor([0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5])
Eval Accuracy 2 proposed: 0.75, F1: 0.736, score: 1.486
reset_parameter
step: 3
train_batch: {'text': ['Who is Count Cinzano ?', 'How big is a quart ?', 'What was the first country to put a second woman in space ?', "What characteristics contribute to its `` intelligence '' ?", 'What has been the most common Christian name of U.S. presidents ?', 'What dropped 1 , 313 feet in 1980 ?', 'Who is reputed to be the greatest maker of violins ?', 'How many electoral votes does it take to win presidency ?', 'What is the origin of the name Katie ?', 'What are the first names of the famous husband-and-wife acting team of Lunt and Fontanne ?'], 'coarse_label': tensor([3, 5, 4, 2, 3, 1, 3, 5, 2, 3]), 'fine_label': tensor([31, 48, 33, 27, 29, 13, 29, 38, 25, 29])}
before random_replace: [Sample(index=439, data={'text': 'What does the channel ESPN stand for ?', 'coarse_label': 0, 'fine_label': 1}), Sample(index=1336, data={'text': 'What is the name of Jamiroquai new album ?', 'coarse_label': 1, 'fine_label': 5}), Sample(index=505, data={'text': 'What is the difference between a board of directors and an advisory board ?', 'coarse_label': 2, 'fine_label': 25}), Sample(index=2349, data={'text': 'Who was the first host of Person to Person ?', 'coarse_label': 3, 'fine_label': 29}), Sample(index=224, data={'text': 'What country has the port of Haifa ?', 'coarse_label': 4, 'fine_label': 33}), Sample(index=456, data={'text': 'How many American soldiers remain unaccounted from the Vietnam war ?', 'coarse_label': 5, 'fine_label': 38})]
after random_replace: [Sample(index=2531, data={'text': "What does the `` c '' stand for in the equation E=mc2 ?", 'coarse_label': 0, 'fine_label': 1}), Sample(index=2428, data={'text': 'What holidays are celebrated in Ireland ?', 'coarse_label': 1, 'fine_label': 8}), Sample(index=2538, data={'text': 'What was the verdict in the 1925 trial of John T. Scopes ?', 'coarse_label': 2, 'fine_label': 25}), Sample(index=2349, data={'text': 'Who was the first host of Person to Person ?', 'coarse_label': 3, 'fine_label': 29}), Sample(index=224, data={'text': 'What country has the port of Haifa ?', 'coarse_label': 4, 'fine_label': 33}), Sample(index=2401, data={'text': "What was Einstein 's IQ ?", 'coarse_label': 5, 'fine_label': 43})]
data: {'text': 'What does pH stand for ?', 'coarse_label': 0, 'fine_label': 1}
task_input: What does pH stand for ?, corse_label: 0
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What does pH stand for ?', 'examples_str': "Question: What does the `` c '' stand for in the equation E=mc2 ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What holidays are celebrated in Ireland ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What was the verdict in the 1925 trial of John T. Scopes ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What was Einstein 's IQ ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does the `` c '' stand for in the equation E=mc2 ?
class_name: Abbreviation 
class_index: 0
--------

Question: What holidays are celebrated in Ireland ?
class_name: Entity 
class_index: 1
--------

Question: What was the verdict in the 1925 trial of John T. Scopes ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the first host of Person to Person ?
class_name: Human being 
class_index: 3
--------

Question: What country has the port of Haifa ?
class_name: Location 
class_index: 4
--------

Question: What was Einstein 's IQ ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What does pH stand for ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the `` c '' stand for in the equation E=mc2 ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What holidays are celebrated in Ireland ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What was the verdict in the 1925 trial of John T. Scopes ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What was Einstein 's IQ ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does pH stand for ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 22:59:15 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14284'), (b'x-ratelimit-remaining-tokens', b'29594'), (b'x-ratelimit-reset-requests', b'11m35.744s'), (b'x-ratelimit-reset-tokens', b'812ms'), (b'x-request-id', b'req_01hz0pvrhaeb3rt33pmv33t0w4'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1daa35832968f-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the `` c '' stand for in the equation E=mc2 ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What holidays are celebrated in Ireland ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What was the verdict in the 1925 trial of John T. Scopes ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What was Einstein 's IQ ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does pH stand for ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 22:59:17 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14283'), (b'x-ratelimit-remaining-tokens', b'29610'), (b'x-ratelimit-reset-requests', b'11m39.687999999s'), (b'x-ratelimit-reset-tokens', b'780ms'), (b'x-request-id', b'req_01hz0pvthjft4rfaj11b52fvt7'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1dab02869968f-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the meaning of an abbreviation, which is a common use of abbreviations.
class_name: ABBR
class_index: 0
data: {'text': 'What is RCD ?', 'coarse_label': 0, 'fine_label': 1}
task_input: What is RCD ?, corse_label: 0
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What is RCD ?', 'examples_str': "Question: What does the `` c '' stand for in the equation E=mc2 ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What holidays are celebrated in Ireland ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What was the verdict in the 1925 trial of John T. Scopes ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What was Einstein 's IQ ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does the `` c '' stand for in the equation E=mc2 ?
class_name: Abbreviation 
class_index: 0
--------

Question: What holidays are celebrated in Ireland ?
class_name: Entity 
class_index: 1
--------

Question: What was the verdict in the 1925 trial of John T. Scopes ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the first host of Person to Person ?
class_name: Human being 
class_index: 3
--------

Question: What country has the port of Haifa ?
class_name: Location 
class_index: 4
--------

Question: What was Einstein 's IQ ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What is RCD ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the `` c '' stand for in the equation E=mc2 ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What holidays are celebrated in Ireland ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What was the verdict in the 1925 trial of John T. Scopes ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What was Einstein 's IQ ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is RCD ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 22:59:17 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14283'), (b'x-ratelimit-remaining-tokens', b'29596'), (b'x-ratelimit-reset-requests', b'11m41.722999999s'), (b'x-ratelimit-reset-tokens', b'808ms'), (b'x-request-id', b'req_01hz0pvtt7e2htph1z4njw83m3'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1dab1e963968f-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the `` c '' stand for in the equation E=mc2 ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What holidays are celebrated in Ireland ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What was the verdict in the 1925 trial of John T. Scopes ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What was Einstein 's IQ ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is RCD ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 22:59:19 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14282'), (b'x-ratelimit-remaining-tokens', b'29613'), (b'x-ratelimit-reset-requests', b'11m45.665s'), (b'x-ratelimit-reset-tokens', b'774ms'), (b'x-request-id', b'req_01hz0pvwtjec9a0d0eztpetvqw'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1dabec975968f-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the meaning of an abbreviation, which is typically represented by a few letters.
class_name: ABBR
class_index: 0
data: {'text': 'What does IQ stand for ?', 'coarse_label': 0, 'fine_label': 1}
task_input: What does IQ stand for ?, corse_label: 0
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What does IQ stand for ?', 'examples_str': "Question: What does the `` c '' stand for in the equation E=mc2 ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What holidays are celebrated in Ireland ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What was the verdict in the 1925 trial of John T. Scopes ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What was Einstein 's IQ ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does the `` c '' stand for in the equation E=mc2 ?
class_name: Abbreviation 
class_index: 0
--------

Question: What holidays are celebrated in Ireland ?
class_name: Entity 
class_index: 1
--------

Question: What was the verdict in the 1925 trial of John T. Scopes ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the first host of Person to Person ?
class_name: Human being 
class_index: 3
--------

Question: What country has the port of Haifa ?
class_name: Location 
class_index: 4
--------

Question: What was Einstein 's IQ ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What does IQ stand for ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the `` c '' stand for in the equation E=mc2 ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What holidays are celebrated in Ireland ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What was the verdict in the 1925 trial of John T. Scopes ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What was Einstein 's IQ ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does IQ stand for ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 22:59:19 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14282'), (b'x-ratelimit-remaining-tokens', b'29626'), (b'x-ratelimit-reset-requests', b'11m47.701s'), (b'x-ratelimit-reset-tokens', b'748ms'), (b'x-request-id', b'req_01hz0pvx3yf7r949fd4ep8zq8w'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1dac06af2968f-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the `` c '' stand for in the equation E=mc2 ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What holidays are celebrated in Ireland ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What was the verdict in the 1925 trial of John T. Scopes ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What was Einstein 's IQ ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does IQ stand for ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 22:59:22 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14281'), (b'x-ratelimit-remaining-tokens', b'29610'), (b'x-ratelimit-reset-requests', b'11m51.640999999s'), (b'x-ratelimit-reset-tokens', b'780ms'), (b'x-request-id', b'req_01hz0pvz4afwzr86cxjvwpckd8'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1dacd8cbb968f-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the meaning of an abbreviation, which is typically represented by a single letter or a few letters.
class_name: ABBR
class_index: 0
data: {'text': "What does the `` blue ribbon '' stand for ?", 'coarse_label': 0, 'fine_label': 1}
task_input: What does the `` blue ribbon '' stand for ?, corse_label: 0
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': "What does the `` blue ribbon '' stand for ?", 'examples_str': "Question: What does the `` c '' stand for in the equation E=mc2 ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What holidays are celebrated in Ireland ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What was the verdict in the 1925 trial of John T. Scopes ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What was Einstein 's IQ ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does the `` c '' stand for in the equation E=mc2 ?
class_name: Abbreviation 
class_index: 0
--------

Question: What holidays are celebrated in Ireland ?
class_name: Entity 
class_index: 1
--------

Question: What was the verdict in the 1925 trial of John T. Scopes ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the first host of Person to Person ?
class_name: Human being 
class_index: 3
--------

Question: What country has the port of Haifa ?
class_name: Location 
class_index: 4
--------

Question: What was Einstein 's IQ ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What does the `` blue ribbon '' stand for ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the `` c '' stand for in the equation E=mc2 ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What holidays are celebrated in Ireland ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What was the verdict in the 1925 trial of John T. Scopes ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What was Einstein 's IQ ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does the `` blue ribbon '' stand for ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 22:59:22 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14281'), (b'x-ratelimit-remaining-tokens', b'29620'), (b'x-ratelimit-reset-requests', b'11m53.636s'), (b'x-ratelimit-reset-tokens', b'759ms'), (b'x-request-id', b'req_01hz0pvzfqf11rax65mgy078fm'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1dacfce39968f-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the `` c '' stand for in the equation E=mc2 ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What holidays are celebrated in Ireland ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What was the verdict in the 1925 trial of John T. Scopes ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What was Einstein 's IQ ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does the `` blue ribbon '' stand for ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 22:59:24 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14280'), (b'x-ratelimit-remaining-tokens', b'29605'), (b'x-ratelimit-reset-requests', b'11m57.571999999s'), (b'x-ratelimit-reset-tokens', b'790ms'), (b'x-request-id', b'req_01hz0pw1g7f9htbbbgyqnza2d4'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1dadcbeac968f-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the meaning of a specific phrase, which is likely an abbreviation.
class_name: ABBR
class_index: 0
```
data: {'text': 'What English word contains the most letters ?', 'coarse_label': 1, 'fine_label': 23}
task_input: What English word contains the most letters ?, corse_label: 1
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What English word contains the most letters ?', 'examples_str': "Question: What does the `` c '' stand for in the equation E=mc2 ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What holidays are celebrated in Ireland ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What was the verdict in the 1925 trial of John T. Scopes ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What was Einstein 's IQ ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does the `` c '' stand for in the equation E=mc2 ?
class_name: Abbreviation 
class_index: 0
--------

Question: What holidays are celebrated in Ireland ?
class_name: Entity 
class_index: 1
--------

Question: What was the verdict in the 1925 trial of John T. Scopes ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the first host of Person to Person ?
class_name: Human being 
class_index: 3
--------

Question: What country has the port of Haifa ?
class_name: Location 
class_index: 4
--------

Question: What was Einstein 's IQ ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What English word contains the most letters ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the `` c '' stand for in the equation E=mc2 ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What holidays are celebrated in Ireland ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What was the verdict in the 1925 trial of John T. Scopes ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What was Einstein 's IQ ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What English word contains the most letters ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 22:59:24 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14280'), (b'x-ratelimit-remaining-tokens', b'29590'), (b'x-ratelimit-reset-requests', b'11m59.727999999s'), (b'x-ratelimit-reset-tokens', b'820ms'), (b'x-request-id', b'req_01hz0pw1rrf6bbhqw20hz9evmn'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1dade7fc8968f-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the `` c '' stand for in the equation E=mc2 ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What holidays are celebrated in Ireland ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What was the verdict in the 1925 trial of John T. Scopes ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What was Einstein 's IQ ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What English word contains the most letters ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 22:59:26 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14279'), (b'x-ratelimit-remaining-tokens', b'29605'), (b'x-ratelimit-reset-requests', b'12m3.673999999s'), (b'x-ratelimit-reset-tokens', b'790ms'), (b'x-request-id', b'req_01hz0pw3rzft5as2e71rjwfedn'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1daeb49dd968f-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is about a specific fact, and the answer is a word, which is a type of entity.
class_name: Entity
class_index: 1
data: {'text': "What color flies closest to the staff on Belgium 's flag ?", 'coarse_label': 1, 'fine_label': 4}
task_input: What color flies closest to the staff on Belgium 's flag ?, corse_label: 1
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': "What color flies closest to the staff on Belgium 's flag ?", 'examples_str': "Question: What does the `` c '' stand for in the equation E=mc2 ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What holidays are celebrated in Ireland ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What was the verdict in the 1925 trial of John T. Scopes ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What was Einstein 's IQ ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does the `` c '' stand for in the equation E=mc2 ?
class_name: Abbreviation 
class_index: 0
--------

Question: What holidays are celebrated in Ireland ?
class_name: Entity 
class_index: 1
--------

Question: What was the verdict in the 1925 trial of John T. Scopes ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the first host of Person to Person ?
class_name: Human being 
class_index: 3
--------

Question: What country has the port of Haifa ?
class_name: Location 
class_index: 4
--------

Question: What was Einstein 's IQ ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What color flies closest to the staff on Belgium 's flag ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the `` c '' stand for in the equation E=mc2 ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What holidays are celebrated in Ireland ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What was the verdict in the 1925 trial of John T. Scopes ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What was Einstein 's IQ ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What color flies closest to the staff on Belgium 's flag ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 22:59:26 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14279'), (b'x-ratelimit-remaining-tokens', b'29595'), (b'x-ratelimit-reset-requests', b'12m5.720999999s'), (b'x-ratelimit-reset-tokens', b'809ms'), (b'x-request-id', b'req_01hz0pw41pf4191qhxapd227pj'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1daed0af9968f-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the `` c '' stand for in the equation E=mc2 ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What holidays are celebrated in Ireland ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What was the verdict in the 1925 trial of John T. Scopes ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What was Einstein 's IQ ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What color flies closest to the staff on Belgium 's flag ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 22:59:29 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14278'), (b'x-ratelimit-remaining-tokens', b'29602'), (b'x-ratelimit-reset-requests', b'12m9.659s'), (b'x-ratelimit-reset-tokens', b'796ms'), (b'x-request-id', b'req_01hz0pw624etgb66fnjjzd2pd5'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1daf9eb07968f-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the color of an element on a flag, which is a specific location on a flag.
class_name: Location
class_index: 4
data: {'text': "Name the disposable razor that `` costs about 19 cents . ''", 'coarse_label': 1, 'fine_label': 15}
task_input: Name the disposable razor that `` costs about 19 cents . '', corse_label: 1
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': "Name the disposable razor that `` costs about 19 cents . ''", 'examples_str': "Question: What does the `` c '' stand for in the equation E=mc2 ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What holidays are celebrated in Ireland ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What was the verdict in the 1925 trial of John T. Scopes ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What was Einstein 's IQ ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does the `` c '' stand for in the equation E=mc2 ?
class_name: Abbreviation 
class_index: 0
--------

Question: What holidays are celebrated in Ireland ?
class_name: Entity 
class_index: 1
--------

Question: What was the verdict in the 1925 trial of John T. Scopes ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the first host of Person to Person ?
class_name: Human being 
class_index: 3
--------

Question: What country has the port of Haifa ?
class_name: Location 
class_index: 4
--------

Question: What was Einstein 's IQ ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Name the disposable razor that `` costs about 19 cents . ''
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the `` c '' stand for in the equation E=mc2 ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What holidays are celebrated in Ireland ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What was the verdict in the 1925 trial of John T. Scopes ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What was Einstein 's IQ ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Name the disposable razor that `` costs about 19 cents . ''\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 22:59:29 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14278'), (b'x-ratelimit-remaining-tokens', b'29590'), (b'x-ratelimit-reset-requests', b'12m11.767999999s'), (b'x-ratelimit-reset-tokens', b'820ms'), (b'x-request-id', b'req_01hz0pw69de1ttm9wn79jqfdn1'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1dafb5c3f968f-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the `` c '' stand for in the equation E=mc2 ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What holidays are celebrated in Ireland ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What was the verdict in the 1925 trial of John T. Scopes ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What was Einstein 's IQ ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Name the disposable razor that `` costs about 19 cents . ''\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 22:59:31 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14277'), (b'x-ratelimit-remaining-tokens', b'29601'), (b'x-ratelimit-reset-requests', b'12m15.701s'), (b'x-ratelimit-reset-tokens', b'798ms'), (b'x-request-id', b'req_01hz0pw8a0e8ptwdp2g4av0q8e'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1db084d1e968f-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking for the name of a specific product, which is a type of entity.
class_name: Entity
class_index: 1
data: {'text': "What 's the Southern dish made of pigs ' small intestines ?", 'coarse_label': 1, 'fine_label': 9}
task_input: What 's the Southern dish made of pigs ' small intestines ?, corse_label: 1
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': "What 's the Southern dish made of pigs ' small intestines ?", 'examples_str': "Question: What does the `` c '' stand for in the equation E=mc2 ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What holidays are celebrated in Ireland ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What was the verdict in the 1925 trial of John T. Scopes ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What was Einstein 's IQ ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does the `` c '' stand for in the equation E=mc2 ?
class_name: Abbreviation 
class_index: 0
--------

Question: What holidays are celebrated in Ireland ?
class_name: Entity 
class_index: 1
--------

Question: What was the verdict in the 1925 trial of John T. Scopes ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the first host of Person to Person ?
class_name: Human being 
class_index: 3
--------

Question: What country has the port of Haifa ?
class_name: Location 
class_index: 4
--------

Question: What was Einstein 's IQ ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What 's the Southern dish made of pigs ' small intestines ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the `` c '' stand for in the equation E=mc2 ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What holidays are celebrated in Ireland ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What was the verdict in the 1925 trial of John T. Scopes ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What was Einstein 's IQ ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What 's the Southern dish made of pigs ' small intestines ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 22:59:31 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14277'), (b'x-ratelimit-remaining-tokens', b'29609'), (b'x-ratelimit-reset-requests', b'12m17.720999999s'), (b'x-ratelimit-reset-tokens', b'782ms'), (b'x-request-id', b'req_01hz0pw8jrf11s0fgvsakyqr7e'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1db0a0e8d968f-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the `` c '' stand for in the equation E=mc2 ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What holidays are celebrated in Ireland ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What was the verdict in the 1925 trial of John T. Scopes ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What was Einstein 's IQ ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What 's the Southern dish made of pigs ' small intestines ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 22:59:33 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14276'), (b'x-ratelimit-remaining-tokens', b'29601'), (b'x-ratelimit-reset-requests', b'12m21.669s'), (b'x-ratelimit-reset-tokens', b'798ms'), (b'x-request-id', b'req_01hz0pwajwefdbnaacm6m5811c'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1db16d82b968f-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is about a specific type of food, and the description includes a specific ingredient, which is a type of animal part.
class_name: Description and abstract concept
class_index: 2
data: {'text': 'What makes hamburgers taste like steakburgers ?', 'coarse_label': 2, 'fine_label': 27}
task_input: What makes hamburgers taste like steakburgers ?, corse_label: 2
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What makes hamburgers taste like steakburgers ?', 'examples_str': "Question: What does the `` c '' stand for in the equation E=mc2 ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What holidays are celebrated in Ireland ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What was the verdict in the 1925 trial of John T. Scopes ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What was Einstein 's IQ ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does the `` c '' stand for in the equation E=mc2 ?
class_name: Abbreviation 
class_index: 0
--------

Question: What holidays are celebrated in Ireland ?
class_name: Entity 
class_index: 1
--------

Question: What was the verdict in the 1925 trial of John T. Scopes ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the first host of Person to Person ?
class_name: Human being 
class_index: 3
--------

Question: What country has the port of Haifa ?
class_name: Location 
class_index: 4
--------

Question: What was Einstein 's IQ ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What makes hamburgers taste like steakburgers ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the `` c '' stand for in the equation E=mc2 ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What holidays are celebrated in Ireland ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What was the verdict in the 1925 trial of John T. Scopes ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What was Einstein 's IQ ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What makes hamburgers taste like steakburgers ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 22:59:33 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14276'), (b'x-ratelimit-remaining-tokens', b'29609'), (b'x-ratelimit-reset-requests', b'12m23.701s'), (b'x-ratelimit-reset-tokens', b'781ms'), (b'x-request-id', b'req_01hz0pwaw8fjebdxax138k7ns0'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1db18b97d968f-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the `` c '' stand for in the equation E=mc2 ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What holidays are celebrated in Ireland ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What was the verdict in the 1925 trial of John T. Scopes ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What was Einstein 's IQ ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What makes hamburgers taste like steakburgers ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 22:59:36 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14275'), (b'x-ratelimit-remaining-tokens', b'29604'), (b'x-ratelimit-reset-requests', b'12m27.645s'), (b'x-ratelimit-reset-tokens', b'792ms'), (b'x-request-id', b'req_01hz0pwcwgfmmvaw6gax4mtx4c'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1db259a6f968f-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is about the taste difference between hamburgers and steakburgers, which is a subjective and abstract concept, making it a description and abstract concept.
class_name: DESC
class_index: 2
data: {'text': 'How is digital audio used ?', 'coarse_label': 2, 'fine_label': 26}
task_input: How is digital audio used ?, corse_label: 2
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'How is digital audio used ?', 'examples_str': "Question: What does the `` c '' stand for in the equation E=mc2 ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What holidays are celebrated in Ireland ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What was the verdict in the 1925 trial of John T. Scopes ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What was Einstein 's IQ ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does the `` c '' stand for in the equation E=mc2 ?
class_name: Abbreviation 
class_index: 0
--------

Question: What holidays are celebrated in Ireland ?
class_name: Entity 
class_index: 1
--------

Question: What was the verdict in the 1925 trial of John T. Scopes ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the first host of Person to Person ?
class_name: Human being 
class_index: 3
--------

Question: What country has the port of Haifa ?
class_name: Location 
class_index: 4
--------

Question: What was Einstein 's IQ ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: How is digital audio used ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the `` c '' stand for in the equation E=mc2 ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What holidays are celebrated in Ireland ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What was the verdict in the 1925 trial of John T. Scopes ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What was Einstein 's IQ ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: How is digital audio used ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 22:59:36 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14275'), (b'x-ratelimit-remaining-tokens', b'29585'), (b'x-ratelimit-reset-requests', b'12m29.753s'), (b'x-ratelimit-reset-tokens', b'830ms'), (b'x-request-id', b'req_01hz0pwd48e1trddnng6jkaq0e'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1db272b6c968f-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the `` c '' stand for in the equation E=mc2 ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What holidays are celebrated in Ireland ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What was the verdict in the 1925 trial of John T. Scopes ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What was Einstein 's IQ ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: How is digital audio used ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 22:59:38 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14274'), (b'x-ratelimit-remaining-tokens', b'29609'), (b'x-ratelimit-reset-requests', b'12m33.690999999s'), (b'x-ratelimit-reset-tokens', b'782ms'), (b'x-request-id', b'req_01hz0pwf4pfmmvtkdj7k7mphht'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1db340b7b968f-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is asking about the usage of digital audio, which is a concept or description, so it falls under the category of Description and abstract concept.
class_name: DESC
class_index: 2
data: {'text': "What does the Georgetown `` Hoya '' mean ?", 'coarse_label': 2, 'fine_label': 24}
task_input: What does the Georgetown `` Hoya '' mean ?, corse_label: 2
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': "What does the Georgetown `` Hoya '' mean ?", 'examples_str': "Question: What does the `` c '' stand for in the equation E=mc2 ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What holidays are celebrated in Ireland ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What was the verdict in the 1925 trial of John T. Scopes ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What was Einstein 's IQ ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does the `` c '' stand for in the equation E=mc2 ?
class_name: Abbreviation 
class_index: 0
--------

Question: What holidays are celebrated in Ireland ?
class_name: Entity 
class_index: 1
--------

Question: What was the verdict in the 1925 trial of John T. Scopes ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the first host of Person to Person ?
class_name: Human being 
class_index: 3
--------

Question: What country has the port of Haifa ?
class_name: Location 
class_index: 4
--------

Question: What was Einstein 's IQ ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What does the Georgetown `` Hoya '' mean ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the `` c '' stand for in the equation E=mc2 ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What holidays are celebrated in Ireland ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What was the verdict in the 1925 trial of John T. Scopes ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What was Einstein 's IQ ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does the Georgetown `` Hoya '' mean ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 22:59:38 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14274'), (b'x-ratelimit-remaining-tokens', b'29624'), (b'x-ratelimit-reset-requests', b'12m35.652999999s'), (b'x-ratelimit-reset-tokens', b'752ms'), (b'x-request-id', b'req_01hz0pwffjfxws6hv2t9a3fa05'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1db363cd6968f-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the `` c '' stand for in the equation E=mc2 ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What holidays are celebrated in Ireland ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What was the verdict in the 1925 trial of John T. Scopes ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What was Einstein 's IQ ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does the Georgetown `` Hoya '' mean ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 22:59:40 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14273'), (b'x-ratelimit-remaining-tokens', b'29606'), (b'x-ratelimit-reset-requests', b'12m39.593s'), (b'x-ratelimit-reset-tokens', b'788ms'), (b'x-request-id', b'req_01hz0pwhfyfn3s97q4qy845h3h'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1db431cc5968f-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the meaning of the "Hoya" symbol, which is a mascot of Georgetown University, and it is likely referring to the university's athletic teams.
class_name: "ABBR"
class_index: 0
data: {'text': 'What is a hormone ?', 'coarse_label': 2, 'fine_label': 24}
task_input: What is a hormone ?, corse_label: 2
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What is a hormone ?', 'examples_str': "Question: What does the `` c '' stand for in the equation E=mc2 ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What holidays are celebrated in Ireland ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What was the verdict in the 1925 trial of John T. Scopes ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What was Einstein 's IQ ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does the `` c '' stand for in the equation E=mc2 ?
class_name: Abbreviation 
class_index: 0
--------

Question: What holidays are celebrated in Ireland ?
class_name: Entity 
class_index: 1
--------

Question: What was the verdict in the 1925 trial of John T. Scopes ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the first host of Person to Person ?
class_name: Human being 
class_index: 3
--------

Question: What country has the port of Haifa ?
class_name: Location 
class_index: 4
--------

Question: What was Einstein 's IQ ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What is a hormone ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the `` c '' stand for in the equation E=mc2 ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What holidays are celebrated in Ireland ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What was the verdict in the 1925 trial of John T. Scopes ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What was Einstein 's IQ ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is a hormone ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 22:59:40 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14273'), (b'x-ratelimit-remaining-tokens', b'29575'), (b'x-ratelimit-reset-requests', b'12m41.726999999s'), (b'x-ratelimit-reset-tokens', b'850ms'), (b'x-request-id', b'req_01hz0pwhrffjetj1drqqy30qka'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1db44cdc4968f-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the `` c '' stand for in the equation E=mc2 ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What holidays are celebrated in Ireland ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What was the verdict in the 1925 trial of John T. Scopes ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What was Einstein 's IQ ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is a hormone ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 22:59:43 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14272'), (b'x-ratelimit-remaining-tokens', b'29611'), (b'x-ratelimit-reset-requests', b'12m45.65s'), (b'x-ratelimit-reset-tokens', b'778ms'), (b'x-request-id', b'req_01hz0pwksdfe4bkg5p0xqme6vw'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1db51ae32968f-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is asking about a general concept or definition, which is typically described in a dictionary or encyclopedia.
class_name: Description and abstract concept
class_index: 2
data: {'text': "What kind of people took part in Shays ' Rebellion in Massachusetts in 1787 ?", 'coarse_label': 3, 'fine_label': 28}
task_input: What kind of people took part in Shays ' Rebellion in Massachusetts in 1787 ?, corse_label: 3
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': "What kind of people took part in Shays ' Rebellion in Massachusetts in 1787 ?", 'examples_str': "Question: What does the `` c '' stand for in the equation E=mc2 ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What holidays are celebrated in Ireland ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What was the verdict in the 1925 trial of John T. Scopes ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What was Einstein 's IQ ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does the `` c '' stand for in the equation E=mc2 ?
class_name: Abbreviation 
class_index: 0
--------

Question: What holidays are celebrated in Ireland ?
class_name: Entity 
class_index: 1
--------

Question: What was the verdict in the 1925 trial of John T. Scopes ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the first host of Person to Person ?
class_name: Human being 
class_index: 3
--------

Question: What country has the port of Haifa ?
class_name: Location 
class_index: 4
--------

Question: What was Einstein 's IQ ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What kind of people took part in Shays ' Rebellion in Massachusetts in 1787 ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the `` c '' stand for in the equation E=mc2 ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What holidays are celebrated in Ireland ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What was the verdict in the 1925 trial of John T. Scopes ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What was Einstein 's IQ ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What kind of people took part in Shays ' Rebellion in Massachusetts in 1787 ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 22:59:43 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'325'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14272'), (b'x-ratelimit-remaining-tokens', b'29595'), (b'x-ratelimit-reset-requests', b'12m47.760999999s'), (b'x-ratelimit-reset-tokens', b'809ms'), (b'x-request-id', b'req_01hz0pwm0ye6sb2j0yqswvjkmr'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1db534f6b968f-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the `` c '' stand for in the equation E=mc2 ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What holidays are celebrated in Ireland ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What was the verdict in the 1925 trial of John T. Scopes ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What was Einstein 's IQ ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What kind of people took part in Shays ' Rebellion in Massachusetts in 1787 ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 22:59:45 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14271'), (b'x-ratelimit-remaining-tokens', b'29597'), (b'x-ratelimit-reset-requests', b'12m51.694999999s'), (b'x-ratelimit-reset-tokens', b'806ms'), (b'x-request-id', b'req_01hz0pwp1ge2q9q81tgkkcjxp9'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1db603867968f-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the participants of a historical event, which suggests that the participants are human beings.
class_name: Human being
class_index: 3
data: {'text': "Name the designer of the shoe that spawned millions of plastic imitations , known as ` jellies ' .", 'coarse_label': 3, 'fine_label': 29}
task_input: Name the designer of the shoe that spawned millions of plastic imitations , known as ` jellies ' ., corse_label: 3
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': "Name the designer of the shoe that spawned millions of plastic imitations , known as ` jellies ' .", 'examples_str': "Question: What does the `` c '' stand for in the equation E=mc2 ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What holidays are celebrated in Ireland ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What was the verdict in the 1925 trial of John T. Scopes ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What was Einstein 's IQ ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does the `` c '' stand for in the equation E=mc2 ?
class_name: Abbreviation 
class_index: 0
--------

Question: What holidays are celebrated in Ireland ?
class_name: Entity 
class_index: 1
--------

Question: What was the verdict in the 1925 trial of John T. Scopes ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the first host of Person to Person ?
class_name: Human being 
class_index: 3
--------

Question: What country has the port of Haifa ?
class_name: Location 
class_index: 4
--------

Question: What was Einstein 's IQ ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Name the designer of the shoe that spawned millions of plastic imitations , known as ` jellies ' .
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the `` c '' stand for in the equation E=mc2 ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What holidays are celebrated in Ireland ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What was the verdict in the 1925 trial of John T. Scopes ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What was Einstein 's IQ ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Name the designer of the shoe that spawned millions of plastic imitations , known as ` jellies ' .\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 22:59:45 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'332'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14271'), (b'x-ratelimit-remaining-tokens', b'29584'), (b'x-ratelimit-reset-requests', b'12m53.722999999s'), (b'x-ratelimit-reset-tokens', b'831ms'), (b'x-request-id', b'req_01hz0pwpa5e2k9erj8jap5yefz'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1db61f9a9968f-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the `` c '' stand for in the equation E=mc2 ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What holidays are celebrated in Ireland ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What was the verdict in the 1925 trial of John T. Scopes ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What was Einstein 's IQ ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Name the designer of the shoe that spawned millions of plastic imitations , known as ` jellies ' .\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 22:59:47 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14270'), (b'x-ratelimit-remaining-tokens', b'29592'), (b'x-ratelimit-reset-requests', b'12m57.666s'), (b'x-ratelimit-reset-tokens', b'816ms'), (b'x-request-id', b'req_01hz0pwrafeth8tz2q4tcb5q2f'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1db6ecacc968f-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking for the designer of a specific type of shoe, which is a human being.
class_name: HUM
class_index: 3
data: {'text': 'Who is Prince Naseem Hamed ?', 'coarse_label': 3, 'fine_label': 31}
task_input: Who is Prince Naseem Hamed ?, corse_label: 3
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'Who is Prince Naseem Hamed ?', 'examples_str': "Question: What does the `` c '' stand for in the equation E=mc2 ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What holidays are celebrated in Ireland ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What was the verdict in the 1925 trial of John T. Scopes ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What was Einstein 's IQ ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does the `` c '' stand for in the equation E=mc2 ?
class_name: Abbreviation 
class_index: 0
--------

Question: What holidays are celebrated in Ireland ?
class_name: Entity 
class_index: 1
--------

Question: What was the verdict in the 1925 trial of John T. Scopes ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the first host of Person to Person ?
class_name: Human being 
class_index: 3
--------

Question: What country has the port of Haifa ?
class_name: Location 
class_index: 4
--------

Question: What was Einstein 's IQ ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Who is Prince Naseem Hamed ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the `` c '' stand for in the equation E=mc2 ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What holidays are celebrated in Ireland ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What was the verdict in the 1925 trial of John T. Scopes ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What was Einstein 's IQ ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Who is Prince Naseem Hamed ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 22:59:47 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14270'), (b'x-ratelimit-remaining-tokens', b'29589'), (b'x-ratelimit-reset-requests', b'12m59.743s'), (b'x-ratelimit-reset-tokens', b'821ms'), (b'x-request-id', b'req_01hz0pwrjge2kbvms2a4qgw7gb'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1db706bf2968f-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the `` c '' stand for in the equation E=mc2 ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What holidays are celebrated in Ireland ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What was the verdict in the 1925 trial of John T. Scopes ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What was Einstein 's IQ ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Who is Prince Naseem Hamed ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 22:59:50 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14269'), (b'x-ratelimit-remaining-tokens', b'29609'), (b'x-ratelimit-reset-requests', b'13m3.666s'), (b'x-ratelimit-reset-tokens', b'782ms'), (b'x-request-id', b'req_01hz0pwtkeergasenzmbgmnc2n'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1db7d6ced968f-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about a specific person, Prince Naseem Hamed.
class_name: Human being
class_index: 3
data: {'text': "Who sings Angel Eyes from the 80 's ?", 'coarse_label': 3, 'fine_label': 29}
task_input: Who sings Angel Eyes from the 80 's ?, corse_label: 3
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': "Who sings Angel Eyes from the 80 's ?", 'examples_str': "Question: What does the `` c '' stand for in the equation E=mc2 ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What holidays are celebrated in Ireland ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What was the verdict in the 1925 trial of John T. Scopes ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What was Einstein 's IQ ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does the `` c '' stand for in the equation E=mc2 ?
class_name: Abbreviation 
class_index: 0
--------

Question: What holidays are celebrated in Ireland ?
class_name: Entity 
class_index: 1
--------

Question: What was the verdict in the 1925 trial of John T. Scopes ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the first host of Person to Person ?
class_name: Human being 
class_index: 3
--------

Question: What country has the port of Haifa ?
class_name: Location 
class_index: 4
--------

Question: What was Einstein 's IQ ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Who sings Angel Eyes from the 80 's ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the `` c '' stand for in the equation E=mc2 ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What holidays are celebrated in Ireland ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What was the verdict in the 1925 trial of John T. Scopes ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What was Einstein 's IQ ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Who sings Angel Eyes from the 80 's ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 22:59:50 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14269'), (b'x-ratelimit-remaining-tokens', b'29597'), (b'x-ratelimit-reset-requests', b'13m5.776999999s'), (b'x-ratelimit-reset-tokens', b'805ms'), (b'x-request-id', b'req_01hz0pwttee1vvggvz0716p4p6'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1db7ece53968f-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the `` c '' stand for in the equation E=mc2 ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What holidays are celebrated in Ireland ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What was the verdict in the 1925 trial of John T. Scopes ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What was Einstein 's IQ ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Who sings Angel Eyes from the 80 's ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 22:59:52 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14268'), (b'x-ratelimit-remaining-tokens', b'29607'), (b'x-ratelimit-reset-requests', b'13m9.722s'), (b'x-ratelimit-reset-tokens', b'786ms'), (b'x-request-id', b'req_01hz0pwwtneytbck6rd1my3081'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1db8b9fd7968f-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about a specific song and its artist, which is a common topic in music-related conversations.
class_name: Human being
class_index: 3
data: {'text': "What is New England 's highest mountain ?", 'coarse_label': 4, 'fine_label': 34}
task_input: What is New England 's highest mountain ?, corse_label: 4
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': "What is New England 's highest mountain ?", 'examples_str': "Question: What does the `` c '' stand for in the equation E=mc2 ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What holidays are celebrated in Ireland ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What was the verdict in the 1925 trial of John T. Scopes ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What was Einstein 's IQ ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does the `` c '' stand for in the equation E=mc2 ?
class_name: Abbreviation 
class_index: 0
--------

Question: What holidays are celebrated in Ireland ?
class_name: Entity 
class_index: 1
--------

Question: What was the verdict in the 1925 trial of John T. Scopes ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the first host of Person to Person ?
class_name: Human being 
class_index: 3
--------

Question: What country has the port of Haifa ?
class_name: Location 
class_index: 4
--------

Question: What was Einstein 's IQ ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What is New England 's highest mountain ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the `` c '' stand for in the equation E=mc2 ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What holidays are celebrated in Ireland ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What was the verdict in the 1925 trial of John T. Scopes ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What was Einstein 's IQ ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is New England 's highest mountain ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 22:59:52 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14268'), (b'x-ratelimit-remaining-tokens', b'29592'), (b'x-ratelimit-reset-requests', b'13m11.758999999s'), (b'x-ratelimit-reset-tokens', b'816ms'), (b'x-request-id', b'req_01hz0pwx27fndap27bfqepc3xp'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1db8d28dc968f-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the `` c '' stand for in the equation E=mc2 ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What holidays are celebrated in Ireland ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What was the verdict in the 1925 trial of John T. Scopes ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What was Einstein 's IQ ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is New England 's highest mountain ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 22:59:54 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14267'), (b'x-ratelimit-remaining-tokens', b'29606'), (b'x-ratelimit-reset-requests', b'13m15.701s'), (b'x-ratelimit-reset-tokens', b'788ms'), (b'x-request-id', b'req_01hz0pwz2hebdvwz7y1avf6r8c'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1db9a0a05968f-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about a geographical feature, specifically a mountain, which is typically classified as a location.
class_name: Location
class_index: 4
data: {'text': 'Where is Inoco based ?', 'coarse_label': 4, 'fine_label': 35}
task_input: Where is Inoco based ?, corse_label: 4
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'Where is Inoco based ?', 'examples_str': "Question: What does the `` c '' stand for in the equation E=mc2 ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What holidays are celebrated in Ireland ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What was the verdict in the 1925 trial of John T. Scopes ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What was Einstein 's IQ ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does the `` c '' stand for in the equation E=mc2 ?
class_name: Abbreviation 
class_index: 0
--------

Question: What holidays are celebrated in Ireland ?
class_name: Entity 
class_index: 1
--------

Question: What was the verdict in the 1925 trial of John T. Scopes ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the first host of Person to Person ?
class_name: Human being 
class_index: 3
--------

Question: What country has the port of Haifa ?
class_name: Location 
class_index: 4
--------

Question: What was Einstein 's IQ ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Where is Inoco based ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the `` c '' stand for in the equation E=mc2 ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What holidays are celebrated in Ireland ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What was the verdict in the 1925 trial of John T. Scopes ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What was Einstein 's IQ ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Where is Inoco based ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 22:59:54 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14267'), (b'x-ratelimit-remaining-tokens', b'29592'), (b'x-ratelimit-reset-requests', b'13m17.697s'), (b'x-ratelimit-reset-tokens', b'815ms'), (b'x-request-id', b'req_01hz0pwzc0fxxbvdr6s9fbaftq'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1db9beb79968f-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the `` c '' stand for in the equation E=mc2 ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What holidays are celebrated in Ireland ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What was the verdict in the 1925 trial of John T. Scopes ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What was Einstein 's IQ ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Where is Inoco based ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 22:59:57 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14266'), (b'x-ratelimit-remaining-tokens', b'29611'), (b'x-ratelimit-reset-requests', b'13m21.637999999s'), (b'x-ratelimit-reset-tokens', b'778ms'), (b'x-request-id', b'req_01hz0px1ccecbbftdzsf9b9xwz'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1dba8cc7a968f-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking for the location of a company, which is typically represented by its headquarters.
class_name: Location
class_index: 4
data: {'text': 'Where is the location of the Orange Bowl ?', 'coarse_label': 4, 'fine_label': 35}
task_input: Where is the location of the Orange Bowl ?, corse_label: 4
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'Where is the location of the Orange Bowl ?', 'examples_str': "Question: What does the `` c '' stand for in the equation E=mc2 ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What holidays are celebrated in Ireland ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What was the verdict in the 1925 trial of John T. Scopes ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What was Einstein 's IQ ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does the `` c '' stand for in the equation E=mc2 ?
class_name: Abbreviation 
class_index: 0
--------

Question: What holidays are celebrated in Ireland ?
class_name: Entity 
class_index: 1
--------

Question: What was the verdict in the 1925 trial of John T. Scopes ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the first host of Person to Person ?
class_name: Human being 
class_index: 3
--------

Question: What country has the port of Haifa ?
class_name: Location 
class_index: 4
--------

Question: What was Einstein 's IQ ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Where is the location of the Orange Bowl ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the `` c '' stand for in the equation E=mc2 ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What holidays are celebrated in Ireland ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What was the verdict in the 1925 trial of John T. Scopes ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What was Einstein 's IQ ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Where is the location of the Orange Bowl ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 22:59:57 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14266'), (b'x-ratelimit-remaining-tokens', b'29602'), (b'x-ratelimit-reset-requests', b'13m23.687s'), (b'x-ratelimit-reset-tokens', b'796ms'), (b'x-request-id', b'req_01hz0px1p5fxrt41fqzkv1sqqx'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1dbaabdb9968f-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the `` c '' stand for in the equation E=mc2 ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What holidays are celebrated in Ireland ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What was the verdict in the 1925 trial of John T. Scopes ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What was Einstein 's IQ ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Where is the location of the Orange Bowl ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 22:59:59 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14265'), (b'x-ratelimit-remaining-tokens', b'29606'), (b'x-ratelimit-reset-requests', b'13m27.624999999s'), (b'x-ratelimit-reset-tokens', b'788ms'), (b'x-request-id', b'req_01hz0px3pmf9kbpkb0wsh0ctj2'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1dbb7ae1a968f-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking for the location of the Orange Bowl, which is a specific stadium.
class_name: Location
class_index: 4
data: {'text': 'What ocean surrounds the Madeira Islands ?', 'coarse_label': 4, 'fine_label': 35}
task_input: What ocean surrounds the Madeira Islands ?, corse_label: 4
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What ocean surrounds the Madeira Islands ?', 'examples_str': "Question: What does the `` c '' stand for in the equation E=mc2 ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What holidays are celebrated in Ireland ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What was the verdict in the 1925 trial of John T. Scopes ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What was Einstein 's IQ ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does the `` c '' stand for in the equation E=mc2 ?
class_name: Abbreviation 
class_index: 0
--------

Question: What holidays are celebrated in Ireland ?
class_name: Entity 
class_index: 1
--------

Question: What was the verdict in the 1925 trial of John T. Scopes ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the first host of Person to Person ?
class_name: Human being 
class_index: 3
--------

Question: What country has the port of Haifa ?
class_name: Location 
class_index: 4
--------

Question: What was Einstein 's IQ ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What ocean surrounds the Madeira Islands ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the `` c '' stand for in the equation E=mc2 ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What holidays are celebrated in Ireland ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What was the verdict in the 1925 trial of John T. Scopes ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What was Einstein 's IQ ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What ocean surrounds the Madeira Islands ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 22:59:59 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'325'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14265'), (b'x-ratelimit-remaining-tokens', b'29621'), (b'x-ratelimit-reset-requests', b'13m29.619999999s'), (b'x-ratelimit-reset-tokens', b'758ms'), (b'x-request-id', b'req_01hz0px42heb69s53znfwxxzge'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1dbb9f820968f-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the `` c '' stand for in the equation E=mc2 ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What holidays are celebrated in Ireland ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What was the verdict in the 1925 trial of John T. Scopes ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What was Einstein 's IQ ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What ocean surrounds the Madeira Islands ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:00:01 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14264'), (b'x-ratelimit-remaining-tokens', b'29606'), (b'x-ratelimit-reset-requests', b'13m33.563999999s'), (b'x-ratelimit-reset-tokens', b'788ms'), (b'x-request-id', b'req_01hz0px62sejp9x2643fqx1ks0'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1dbc6da19968f-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the geographical location of the Madeira Islands, which is surrounded by the Atlantic Ocean.
class_name: Location
class_index: 4
data: {'text': 'When is Bastille Day ?', 'coarse_label': 5, 'fine_label': 39}
task_input: When is Bastille Day ?, corse_label: 5
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'When is Bastille Day ?', 'examples_str': "Question: What does the `` c '' stand for in the equation E=mc2 ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What holidays are celebrated in Ireland ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What was the verdict in the 1925 trial of John T. Scopes ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What was Einstein 's IQ ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does the `` c '' stand for in the equation E=mc2 ?
class_name: Abbreviation 
class_index: 0
--------

Question: What holidays are celebrated in Ireland ?
class_name: Entity 
class_index: 1
--------

Question: What was the verdict in the 1925 trial of John T. Scopes ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the first host of Person to Person ?
class_name: Human being 
class_index: 3
--------

Question: What country has the port of Haifa ?
class_name: Location 
class_index: 4
--------

Question: What was Einstein 's IQ ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: When is Bastille Day ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the `` c '' stand for in the equation E=mc2 ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What holidays are celebrated in Ireland ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What was the verdict in the 1925 trial of John T. Scopes ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What was Einstein 's IQ ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: When is Bastille Day ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 23:00:02 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14264'), (b'x-ratelimit-remaining-tokens', b'29627'), (b'x-ratelimit-reset-requests', b'13m35.704s'), (b'x-ratelimit-reset-tokens', b'745ms'), (b'x-request-id', b'req_01hz0px6c2fnds9x7gk77jytzt'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1dbc8bb7d968f-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the `` c '' stand for in the equation E=mc2 ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What holidays are celebrated in Ireland ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What was the verdict in the 1925 trial of John T. Scopes ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What was Einstein 's IQ ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: When is Bastille Day ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:00:04 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14263'), (b'x-ratelimit-remaining-tokens', b'29611'), (b'x-ratelimit-reset-requests', b'13m39.645s'), (b'x-ratelimit-reset-tokens', b'778ms'), (b'x-request-id', b'req_01hz0px8cdf9kb34h0ncztvxhy'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1dbd59d54968f-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is asking about a specific date or event, which is typically associated with a location.
class_name: Location
class_index: 4
data: {'text': 'How many home runs did Babe Ruth hit in his lifetime ?', 'coarse_label': 5, 'fine_label': 38}
task_input: How many home runs did Babe Ruth hit in his lifetime ?, corse_label: 5
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'How many home runs did Babe Ruth hit in his lifetime ?', 'examples_str': "Question: What does the `` c '' stand for in the equation E=mc2 ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What holidays are celebrated in Ireland ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What was the verdict in the 1925 trial of John T. Scopes ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What was Einstein 's IQ ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does the `` c '' stand for in the equation E=mc2 ?
class_name: Abbreviation 
class_index: 0
--------

Question: What holidays are celebrated in Ireland ?
class_name: Entity 
class_index: 1
--------

Question: What was the verdict in the 1925 trial of John T. Scopes ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the first host of Person to Person ?
class_name: Human being 
class_index: 3
--------

Question: What country has the port of Haifa ?
class_name: Location 
class_index: 4
--------

Question: What was Einstein 's IQ ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: How many home runs did Babe Ruth hit in his lifetime ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the `` c '' stand for in the equation E=mc2 ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What holidays are celebrated in Ireland ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What was the verdict in the 1925 trial of John T. Scopes ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What was Einstein 's IQ ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: How many home runs did Babe Ruth hit in his lifetime ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 23:00:04 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'325'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14263'), (b'x-ratelimit-remaining-tokens', b'29638'), (b'x-ratelimit-reset-requests', b'13m41.69s'), (b'x-ratelimit-reset-tokens', b'724ms'), (b'x-request-id', b'req_01hz0px8p4f7va63d2t9zdjp0r'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1dbd78ec5968f-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the `` c '' stand for in the equation E=mc2 ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What holidays are celebrated in Ireland ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What was the verdict in the 1925 trial of John T. Scopes ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What was Einstein 's IQ ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: How many home runs did Babe Ruth hit in his lifetime ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:00:06 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14262'), (b'x-ratelimit-remaining-tokens', b'29603'), (b'x-ratelimit-reset-requests', b'13m45.628999999s'), (b'x-ratelimit-reset-tokens', b'794ms'), (b'x-request-id', b'req_01hz0pxapgfx2avxne28yn0eaq'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1dbe46841968f-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking for a specific numerical value, the number of home runs Babe Ruth hit in his lifetime.
class_name: Numeric value
class_index: 5
data: {'text': 'When was General Manuel Noriega ousted as the leader of Panama and turned over to U.S. authorities ?', 'coarse_label': 5, 'fine_label': 39}
task_input: When was General Manuel Noriega ousted as the leader of Panama and turned over to U.S. authorities ?, corse_label: 5
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'When was General Manuel Noriega ousted as the leader of Panama and turned over to U.S. authorities ?', 'examples_str': "Question: What does the `` c '' stand for in the equation E=mc2 ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What holidays are celebrated in Ireland ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What was the verdict in the 1925 trial of John T. Scopes ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What was Einstein 's IQ ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does the `` c '' stand for in the equation E=mc2 ?
class_name: Abbreviation 
class_index: 0
--------

Question: What holidays are celebrated in Ireland ?
class_name: Entity 
class_index: 1
--------

Question: What was the verdict in the 1925 trial of John T. Scopes ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the first host of Person to Person ?
class_name: Human being 
class_index: 3
--------

Question: What country has the port of Haifa ?
class_name: Location 
class_index: 4
--------

Question: What was Einstein 's IQ ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: When was General Manuel Noriega ousted as the leader of Panama and turned over to U.S. authorities ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the `` c '' stand for in the equation E=mc2 ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What holidays are celebrated in Ireland ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What was the verdict in the 1925 trial of John T. Scopes ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What was Einstein 's IQ ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: When was General Manuel Noriega ousted as the leader of Panama and turned over to U.S. authorities ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 23:00:06 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14262'), (b'x-ratelimit-remaining-tokens', b'29612'), (b'x-ratelimit-reset-requests', b'13m47.714999999s'), (b'x-ratelimit-reset-tokens', b'776ms'), (b'x-request-id', b'req_01hz0pxazffjgaq1pq1hngyvj8'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1dbe63977968f-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the `` c '' stand for in the equation E=mc2 ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What holidays are celebrated in Ireland ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What was the verdict in the 1925 trial of John T. Scopes ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What was Einstein 's IQ ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: When was General Manuel Noriega ousted as the leader of Panama and turned over to U.S. authorities ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:00:09 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14261'), (b'x-ratelimit-remaining-tokens', b'29591'), (b'x-ratelimit-reset-requests', b'13m51.65s'), (b'x-ratelimit-reset-tokens', b'818ms'), (b'x-request-id', b'req_01hz0pxd00fe58f98tetrggtbb'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1dbf31a65968f-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about a historical event involving a specific person and a country, which suggests it's a description of an event.
class_name: Description and abstract concept
class_index: 2
data: {'text': 'What is the population of the largest Chilean city', 'coarse_label': 5, 'fine_label': 38}
task_input: What is the population of the largest Chilean city, corse_label: 5
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What is the population of the largest Chilean city', 'examples_str': "Question: What does the `` c '' stand for in the equation E=mc2 ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What holidays are celebrated in Ireland ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What was the verdict in the 1925 trial of John T. Scopes ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What was Einstein 's IQ ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does the `` c '' stand for in the equation E=mc2 ?
class_name: Abbreviation 
class_index: 0
--------

Question: What holidays are celebrated in Ireland ?
class_name: Entity 
class_index: 1
--------

Question: What was the verdict in the 1925 trial of John T. Scopes ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the first host of Person to Person ?
class_name: Human being 
class_index: 3
--------

Question: What country has the port of Haifa ?
class_name: Location 
class_index: 4
--------

Question: What was Einstein 's IQ ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What is the population of the largest Chilean city
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the `` c '' stand for in the equation E=mc2 ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What holidays are celebrated in Ireland ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What was the verdict in the 1925 trial of John T. Scopes ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What was Einstein 's IQ ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is the population of the largest Chilean city\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 23:00:09 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14261'), (b'x-ratelimit-remaining-tokens', b'29573'), (b'x-ratelimit-reset-requests', b'13m53.720999999s'), (b'x-ratelimit-reset-tokens', b'854ms'), (b'x-request-id', b'req_01hz0pxd8rf13tnx9d4yy9bn0n'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1dbf4db8a968f-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the `` c '' stand for in the equation E=mc2 ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What holidays are celebrated in Ireland ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What was the verdict in the 1925 trial of John T. Scopes ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What was Einstein 's IQ ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is the population of the largest Chilean city\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:00:11 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14260'), (b'x-ratelimit-remaining-tokens', b'29604'), (b'x-ratelimit-reset-requests', b'13m57.658s'), (b'x-ratelimit-reset-tokens', b'792ms'), (b'x-request-id', b'req_01hz0pxf97efe967n5k65jk93m'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1dc01bd5e968f-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking for the population of a city, which is a specific location, and the population is a numeric value.
class_name: Location
class_index: 4
responses: [0, 0, 0, 0, 1, 4, 1, 2, 2, 2, 0, 2, 3, 3, 3, 3, 4, 4, 4, 4, 4, 5, 2, 4], targets: [0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5]
num_invalid: 0
Preds tensor: tensor([[1., 0., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0.],
        [0., 1., 0., 0., 0., 0.],
        [0., 0., 0., 0., 1., 0.],
        [0., 1., 0., 0., 0., 0.],
        [0., 0., 1., 0., 0., 0.],
        [0., 0., 1., 0., 0., 0.],
        [0., 0., 1., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0.],
        [0., 0., 1., 0., 0., 0.],
        [0., 0., 0., 1., 0., 0.],
        [0., 0., 0., 1., 0., 0.],
        [0., 0., 0., 1., 0., 0.],
        [0., 0., 0., 1., 0., 0.],
        [0., 0., 0., 0., 1., 0.],
        [0., 0., 0., 0., 1., 0.],
        [0., 0., 0., 0., 1., 0.],
        [0., 0., 0., 0., 1., 0.],
        [0., 0., 0., 0., 1., 0.],
        [0., 0., 0., 0., 0., 1.],
        [0., 0., 1., 0., 0., 0.],
        [0., 0., 0., 0., 1., 0.]])
Targets tensor: tensor([0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5])
Eval Accuracy 3 proposed: 0.75, F1: 0.725, score: 1.475
reset_parameter
data: {'text': 'How far is it from Denver to Aspen ?', 'coarse_label': 5, 'fine_label': 40}
task_input: How far is it from Denver to Aspen ?, corse_label: 5
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'How far is it from Denver to Aspen ?', 'examples_str': 'Question: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the difference between a board of directors and an advisory board ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does the channel ESPN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is the name of Jamiroquai new album ?
class_name: Entity 
class_index: 1
--------

Question: What is the difference between a board of directors and an advisory board ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the first host of Person to Person ?
class_name: Human being 
class_index: 3
--------

Question: What country has the port of Haifa ?
class_name: Location 
class_index: 4
--------

Question: How many American soldiers remain unaccounted from the Vietnam war ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: How far is it from Denver to Aspen ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the difference between a board of directors and an advisory board ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: How far is it from Denver to Aspen ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 23:00:11 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'332'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14260'), (b'x-ratelimit-remaining-tokens', b'29662'), (b'x-ratelimit-reset-requests', b'13m59.613999999s'), (b'x-ratelimit-reset-tokens', b'676ms'), (b'x-request-id', b'req_01hz0pxfnafa1t10x4y4hzenxc'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1dc042f1a968f-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the difference between a board of directors and an advisory board ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: How far is it from Denver to Aspen ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:00:13 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14259'), (b'x-ratelimit-remaining-tokens', b'29596'), (b'x-ratelimit-reset-requests', b'14m3.557s'), (b'x-ratelimit-reset-tokens', b'808ms'), (b'x-request-id', b'req_01hz0pxhnkfx2rdh69hj6payea'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1dc10f840968f-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking for a distance between two cities, which is a measurable value.
class_name: Numeric value
class_index: 5
data: {'text': 'What county is Modesto , California in ?', 'coarse_label': 4, 'fine_label': 32}
task_input: What county is Modesto , California in ?, corse_label: 4
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What county is Modesto , California in ?', 'examples_str': 'Question: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the difference between a board of directors and an advisory board ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does the channel ESPN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is the name of Jamiroquai new album ?
class_name: Entity 
class_index: 1
--------

Question: What is the difference between a board of directors and an advisory board ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the first host of Person to Person ?
class_name: Human being 
class_index: 3
--------

Question: What country has the port of Haifa ?
class_name: Location 
class_index: 4
--------

Question: How many American soldiers remain unaccounted from the Vietnam war ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What county is Modesto , California in ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the difference between a board of directors and an advisory board ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What county is Modesto , California in ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 23:00:13 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14259'), (b'x-ratelimit-remaining-tokens', b'29596'), (b'x-ratelimit-reset-requests', b'14m5.768999999s'), (b'x-ratelimit-reset-tokens', b'808ms'), (b'x-request-id', b'req_01hz0pxhwvfnebm99e3rkjzw6k'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1dc127942968f-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the difference between a board of directors and an advisory board ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What county is Modesto , California in ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:00:16 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14258'), (b'x-ratelimit-remaining-tokens', b'29595'), (b'x-ratelimit-reset-requests', b'14m9.695999999s'), (b'x-ratelimit-reset-tokens', b'810ms'), (b'x-request-id', b'req_01hz0pxkxmft7rdkbjxe57dsk0'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1dc1f6a12968f-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the location of Modesto, California, which is a specific geographic location.
class_name: Location
class_index: 4
data: {'text': 'Who was Galileo ?', 'coarse_label': 3, 'fine_label': 31}
task_input: Who was Galileo ?, corse_label: 3
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'Who was Galileo ?', 'examples_str': 'Question: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the difference between a board of directors and an advisory board ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does the channel ESPN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is the name of Jamiroquai new album ?
class_name: Entity 
class_index: 1
--------

Question: What is the difference between a board of directors and an advisory board ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the first host of Person to Person ?
class_name: Human being 
class_index: 3
--------

Question: What country has the port of Haifa ?
class_name: Location 
class_index: 4
--------

Question: How many American soldiers remain unaccounted from the Vietnam war ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Who was Galileo ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the difference between a board of directors and an advisory board ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Who was Galileo ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 23:00:16 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14258'), (b'x-ratelimit-remaining-tokens', b'29600'), (b'x-ratelimit-reset-requests', b'14m11.754s'), (b'x-ratelimit-reset-tokens', b'800ms'), (b'x-request-id', b'req_01hz0pxm5bfxst8knkj4gaf33c'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1dc20fb03968f-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the difference between a board of directors and an advisory board ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Who was Galileo ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:00:18 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14257'), (b'x-ratelimit-remaining-tokens', b'29601'), (b'x-ratelimit-reset-requests', b'14m15.698s'), (b'x-ratelimit-reset-tokens', b'798ms'), (b'x-request-id', b'req_01hz0pxp5kefe8drbq24x8e8pg'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1dc2dcbf3968f-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is asking about a historical figure, Galileo, which is a human being.
class_name: HUM
class_index: 3
data: {'text': 'What is an atom ?', 'coarse_label': 2, 'fine_label': 24}
task_input: What is an atom ?, corse_label: 2
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What is an atom ?', 'examples_str': 'Question: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the difference between a board of directors and an advisory board ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does the channel ESPN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is the name of Jamiroquai new album ?
class_name: Entity 
class_index: 1
--------

Question: What is the difference between a board of directors and an advisory board ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the first host of Person to Person ?
class_name: Human being 
class_index: 3
--------

Question: What country has the port of Haifa ?
class_name: Location 
class_index: 4
--------

Question: How many American soldiers remain unaccounted from the Vietnam war ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What is an atom ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the difference between a board of directors and an advisory board ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is an atom ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 23:00:18 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14257'), (b'x-ratelimit-remaining-tokens', b'29603'), (b'x-ratelimit-reset-requests', b'14m17.758s'), (b'x-ratelimit-reset-tokens', b'794ms'), (b'x-request-id', b'req_01hz0pxpd6e2mvwzjnav00297b'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1dc2f5d1c968f-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the difference between a board of directors and an advisory board ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is an atom ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:00:20 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14256'), (b'x-ratelimit-remaining-tokens', b'29601'), (b'x-ratelimit-reset-requests', b'14m21.702s'), (b'x-ratelimit-reset-tokens', b'798ms'), (b'x-request-id', b'req_01hz0pxrdeft7sj5665ff5n7fy'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1dc3c2e72968f-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is asking for a definition or explanation of an atom, which is an abstract concept.
class_name: Description and abstract concept
class_index: 2
data: {'text': 'When did Hawaii become a state ?', 'coarse_label': 5, 'fine_label': 39}
task_input: When did Hawaii become a state ?, corse_label: 5
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'When did Hawaii become a state ?', 'examples_str': 'Question: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the difference between a board of directors and an advisory board ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does the channel ESPN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is the name of Jamiroquai new album ?
class_name: Entity 
class_index: 1
--------

Question: What is the difference between a board of directors and an advisory board ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the first host of Person to Person ?
class_name: Human being 
class_index: 3
--------

Question: What country has the port of Haifa ?
class_name: Location 
class_index: 4
--------

Question: How many American soldiers remain unaccounted from the Vietnam war ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: When did Hawaii become a state ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the difference between a board of directors and an advisory board ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: When did Hawaii become a state ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 23:00:20 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14256'), (b'x-ratelimit-remaining-tokens', b'29599'), (b'x-ratelimit-reset-requests', b'14m23.724999999s'), (b'x-ratelimit-reset-tokens', b'802ms'), (b'x-request-id', b'req_01hz0pxrp2e6yrt5q2mprd56fg'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1dc3defbd968f-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the difference between a board of directors and an advisory board ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: When did Hawaii become a state ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:00:23 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14255'), (b'x-ratelimit-remaining-tokens', b'29597'), (b'x-ratelimit-reset-requests', b'14m27.661s'), (b'x-ratelimit-reset-tokens', b'806ms'), (b'x-request-id', b'req_01hz0pxtpjetjs4qxwydwvm3jw'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1dc4ad8fb968f-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about a specific event in history, which is a factual information.
class_name: Description and abstract concept
class_index: 2
data: {'text': 'How tall is the Sears Building ?', 'coarse_label': 5, 'fine_label': 40}
task_input: How tall is the Sears Building ?, corse_label: 5
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'How tall is the Sears Building ?', 'examples_str': 'Question: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the difference between a board of directors and an advisory board ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does the channel ESPN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is the name of Jamiroquai new album ?
class_name: Entity 
class_index: 1
--------

Question: What is the difference between a board of directors and an advisory board ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the first host of Person to Person ?
class_name: Human being 
class_index: 3
--------

Question: What country has the port of Haifa ?
class_name: Location 
class_index: 4
--------

Question: How many American soldiers remain unaccounted from the Vietnam war ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: How tall is the Sears Building ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the difference between a board of directors and an advisory board ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: How tall is the Sears Building ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 23:00:23 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14255'), (b'x-ratelimit-remaining-tokens', b'29594'), (b'x-ratelimit-reset-requests', b'14m29.705s'), (b'x-ratelimit-reset-tokens', b'812ms'), (b'x-request-id', b'req_01hz0pxtzvfxyrvfz5vvgyw367'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1dc4caa21968f-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the difference between a board of directors and an advisory board ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: How tall is the Sears Building ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:00:25 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14254'), (b'x-ratelimit-remaining-tokens', b'29597'), (b'x-ratelimit-reset-requests', b'14m33.646s'), (b'x-ratelimit-reset-tokens', b'806ms'), (b'x-request-id', b'req_01hz0pxx06fyhs9rh9ppvhv2da'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1dc598b73968f-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question asks about the height of a specific building, which is a measurable value.
class_name: NUM
class_index: 5
data: {'text': 'George Bush purchased a small interest in which baseball team ?', 'coarse_label': 3, 'fine_label': 28}
task_input: George Bush purchased a small interest in which baseball team ?, corse_label: 3
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'George Bush purchased a small interest in which baseball team ?', 'examples_str': 'Question: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the difference between a board of directors and an advisory board ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does the channel ESPN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is the name of Jamiroquai new album ?
class_name: Entity 
class_index: 1
--------

Question: What is the difference between a board of directors and an advisory board ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the first host of Person to Person ?
class_name: Human being 
class_index: 3
--------

Question: What country has the port of Haifa ?
class_name: Location 
class_index: 4
--------

Question: How many American soldiers remain unaccounted from the Vietnam war ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: George Bush purchased a small interest in which baseball team ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the difference between a board of directors and an advisory board ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: George Bush purchased a small interest in which baseball team ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 23:00:25 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14254'), (b'x-ratelimit-remaining-tokens', b'29646'), (b'x-ratelimit-reset-requests', b'14m35.646s'), (b'x-ratelimit-reset-tokens', b'708ms'), (b'x-request-id', b'req_01hz0pxxb9f14v8aj59tcg1yke'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1dc5baccd968f-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the difference between a board of directors and an advisory board ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: George Bush purchased a small interest in which baseball team ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:00:28 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14253'), (b'x-ratelimit-remaining-tokens', b'29589'), (b'x-ratelimit-reset-requests', b'14m39.574999999s'), (b'x-ratelimit-reset-tokens', b'822ms'), (b'x-request-id', b'req_01hz0pxzc0fn6btbh7bvm07cj6'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1dc68bdd3968f-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about a specific baseball team, which is likely to be a named entity.
class_name: Entity
class_index: 1
data: {'text': "What is Australia 's national flower ?", 'coarse_label': 1, 'fine_label': 14}
task_input: What is Australia 's national flower ?, corse_label: 1
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': "What is Australia 's national flower ?", 'examples_str': 'Question: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the difference between a board of directors and an advisory board ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does the channel ESPN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is the name of Jamiroquai new album ?
class_name: Entity 
class_index: 1
--------

Question: What is the difference between a board of directors and an advisory board ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the first host of Person to Person ?
class_name: Human being 
class_index: 3
--------

Question: What country has the port of Haifa ?
class_name: Location 
class_index: 4
--------

Question: How many American soldiers remain unaccounted from the Vietnam war ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What is Australia 's national flower ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the difference between a board of directors and an advisory board ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is Australia 's national flower ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 23:00:28 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'325'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'1'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14253'), (b'x-ratelimit-remaining-tokens', b'29604'), (b'x-ratelimit-reset-requests', b'14m40.862999999s'), (b'x-ratelimit-reset-tokens', b'792ms'), (b'x-request-id', b'req_01hz0py0fjf7wayh8mf942ngyd'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1dc6fcabd968f-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 1.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the difference between a board of directors and an advisory board ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is Australia 's national flower ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:00:30 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14252'), (b'x-ratelimit-remaining-tokens', b'29596'), (b'x-ratelimit-reset-requests', b'14m45.802999999s'), (b'x-ratelimit-reset-tokens', b'808ms'), (b'x-request-id', b'req_01hz0py1gpeff8tx6gefhkn1ec'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1dc767f5e968f-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the national flower of Australia, which is a specific piece of information that can be looked up.
class_name: Description and abstract concept
class_index: 2
data: {'text': 'Why does the moon turn orange ?', 'coarse_label': 2, 'fine_label': 27}
task_input: Why does the moon turn orange ?, corse_label: 2
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'Why does the moon turn orange ?', 'examples_str': 'Question: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the difference between a board of directors and an advisory board ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does the channel ESPN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is the name of Jamiroquai new album ?
class_name: Entity 
class_index: 1
--------

Question: What is the difference between a board of directors and an advisory board ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the first host of Person to Person ?
class_name: Human being 
class_index: 3
--------

Question: What country has the port of Haifa ?
class_name: Location 
class_index: 4
--------

Question: How many American soldiers remain unaccounted from the Vietnam war ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Why does the moon turn orange ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the difference between a board of directors and an advisory board ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Why does the moon turn orange ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 23:00:30 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'325'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14252'), (b'x-ratelimit-remaining-tokens', b'29592'), (b'x-ratelimit-reset-requests', b'14m47.719999999s'), (b'x-ratelimit-reset-tokens', b'816ms'), (b'x-request-id', b'req_01hz0py1sffxz90cgqt18qzrh7'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1dc78388d968f-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the difference between a board of directors and an advisory board ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Why does the moon turn orange ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:00:32 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14251'), (b'x-ratelimit-remaining-tokens', b'29597'), (b'x-ratelimit-reset-requests', b'14m51.664s'), (b'x-ratelimit-reset-tokens', b'806ms'), (b'x-request-id', b'req_01hz0py3spe8st4ckg0yy4w0mh'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1dc850965968f-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the moon's color change, which is a natural phenomenon, and the answer is likely related to atmospheric conditions.
class_name: Description and abstract concept
class_index: 2
data: {'text': 'What is autism ?', 'coarse_label': 2, 'fine_label': 24}
task_input: What is autism ?, corse_label: 2
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What is autism ?', 'examples_str': 'Question: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the difference between a board of directors and an advisory board ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does the channel ESPN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is the name of Jamiroquai new album ?
class_name: Entity 
class_index: 1
--------

Question: What is the difference between a board of directors and an advisory board ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the first host of Person to Person ?
class_name: Human being 
class_index: 3
--------

Question: What country has the port of Haifa ?
class_name: Location 
class_index: 4
--------

Question: How many American soldiers remain unaccounted from the Vietnam war ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What is autism ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the difference between a board of directors and an advisory board ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is autism ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 23:00:32 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14251'), (b'x-ratelimit-remaining-tokens', b'29598'), (b'x-ratelimit-reset-requests', b'14m53.711999999s'), (b'x-ratelimit-reset-tokens', b'804ms'), (b'x-request-id', b'req_01hz0py42rfa2t3a7d9q5htn9r'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1dc86dad7968f-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the difference between a board of directors and an advisory board ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is autism ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:00:34 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14250'), (b'x-ratelimit-remaining-tokens', b'29601'), (b'x-ratelimit-reset-requests', b'14m57.656s'), (b'x-ratelimit-reset-tokens', b'798ms'), (b'x-request-id', b'req_01hz0py62zfmqsd2sehebmym6j'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1dc93bcc9968f-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is asking about a medical condition, which is typically described in a conceptual or abstract way, making it a description and abstract concept.
class_name: DESC
class_index: 2
data: {'text': 'What city had a world fair in 1900 ?', 'coarse_label': 4, 'fine_label': 32}
task_input: What city had a world fair in 1900 ?, corse_label: 4
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What city had a world fair in 1900 ?', 'examples_str': 'Question: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the difference between a board of directors and an advisory board ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does the channel ESPN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is the name of Jamiroquai new album ?
class_name: Entity 
class_index: 1
--------

Question: What is the difference between a board of directors and an advisory board ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the first host of Person to Person ?
class_name: Human being 
class_index: 3
--------

Question: What country has the port of Haifa ?
class_name: Location 
class_index: 4
--------

Question: How many American soldiers remain unaccounted from the Vietnam war ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What city had a world fair in 1900 ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the difference between a board of directors and an advisory board ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What city had a world fair in 1900 ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 23:00:34 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14250'), (b'x-ratelimit-remaining-tokens', b'29594'), (b'x-ratelimit-reset-requests', b'14m59.763999999s'), (b'x-ratelimit-reset-tokens', b'812ms'), (b'x-request-id', b'req_01hz0py6ade8xvefkaf83eecb7'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1dc952df8968f-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the difference between a board of directors and an advisory board ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What city had a world fair in 1900 ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:00:37 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14249'), (b'x-ratelimit-remaining-tokens', b'29596'), (b'x-ratelimit-reset-requests', b'15m3.707s'), (b'x-ratelimit-reset-tokens', b'808ms'), (b'x-request-id', b'req_01hz0py8ape1ya4t89twsn4z5y'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1dca20ec4968f-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about a specific event in the past, which is likely to be related to a specific location.
class_name: Location
class_index: 4
data: {'text': "What person 's head is on a dime ?", 'coarse_label': 3, 'fine_label': 29}
task_input: What person 's head is on a dime ?, corse_label: 3
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': "What person 's head is on a dime ?", 'examples_str': 'Question: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the difference between a board of directors and an advisory board ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does the channel ESPN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is the name of Jamiroquai new album ?
class_name: Entity 
class_index: 1
--------

Question: What is the difference between a board of directors and an advisory board ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the first host of Person to Person ?
class_name: Human being 
class_index: 3
--------

Question: What country has the port of Haifa ?
class_name: Location 
class_index: 4
--------

Question: How many American soldiers remain unaccounted from the Vietnam war ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What person 's head is on a dime ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the difference between a board of directors and an advisory board ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What person 's head is on a dime ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 23:00:37 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14249'), (b'x-ratelimit-remaining-tokens', b'29591'), (b'x-ratelimit-reset-requests', b'15m5.716999999s'), (b'x-ratelimit-reset-tokens', b'817ms'), (b'x-request-id', b'req_01hz0py8kjetk8gr4xar8tgcjm'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1dca3d809968f-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the difference between a board of directors and an advisory board ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What person 's head is on a dime ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:00:39 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14248'), (b'x-ratelimit-remaining-tokens', b'29597'), (b'x-ratelimit-reset-requests', b'15m9.661s'), (b'x-ratelimit-reset-tokens', b'806ms'), (b'x-request-id', b'req_01hz0pyakte6zrxwztg17rq8cj'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1dcb0a943968f-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about a person's head being on a dime, which is a common idiomatic expression referring to the profile of Abraham Lincoln on the United States one-cent coin.
class_name: Human being
class_index: 3
data: {'text': 'What is the average weight of a Yellow Labrador ?', 'coarse_label': 5, 'fine_label': 49}
task_input: What is the average weight of a Yellow Labrador ?, corse_label: 5
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What is the average weight of a Yellow Labrador ?', 'examples_str': 'Question: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the difference between a board of directors and an advisory board ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does the channel ESPN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is the name of Jamiroquai new album ?
class_name: Entity 
class_index: 1
--------

Question: What is the difference between a board of directors and an advisory board ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the first host of Person to Person ?
class_name: Human being 
class_index: 3
--------

Question: What country has the port of Haifa ?
class_name: Location 
class_index: 4
--------

Question: How many American soldiers remain unaccounted from the Vietnam war ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What is the average weight of a Yellow Labrador ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the difference between a board of directors and an advisory board ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is the average weight of a Yellow Labrador ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 23:00:39 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'332'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14248'), (b'x-ratelimit-remaining-tokens', b'29586'), (b'x-ratelimit-reset-requests', b'15m11.732s'), (b'x-ratelimit-reset-tokens', b'827ms'), (b'x-request-id', b'req_01hz0pyaw7fmqv20msnpcr0gky'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1dcb25a90968f-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the difference between a board of directors and an advisory board ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is the average weight of a Yellow Labrador ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:00:41 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14247'), (b'x-ratelimit-remaining-tokens', b'29593'), (b'x-ratelimit-reset-requests', b'15m15.666s'), (b'x-ratelimit-reset-tokens', b'814ms'), (b'x-request-id', b'req_01hz0pycwsfnfthz350xp6t46p'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1dcbf4ce4968f-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking for a specific numerical value, which is the average weight of a Yellow Labrador.
class_name: NUM
class_index: 5
data: {'text': 'Who was the first man to fly across the Pacific Ocean ?', 'coarse_label': 3, 'fine_label': 29}
task_input: Who was the first man to fly across the Pacific Ocean ?, corse_label: 3
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'Who was the first man to fly across the Pacific Ocean ?', 'examples_str': 'Question: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the difference between a board of directors and an advisory board ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does the channel ESPN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is the name of Jamiroquai new album ?
class_name: Entity 
class_index: 1
--------

Question: What is the difference between a board of directors and an advisory board ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the first host of Person to Person ?
class_name: Human being 
class_index: 3
--------

Question: What country has the port of Haifa ?
class_name: Location 
class_index: 4
--------

Question: How many American soldiers remain unaccounted from the Vietnam war ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Who was the first man to fly across the Pacific Ocean ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the difference between a board of directors and an advisory board ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Who was the first man to fly across the Pacific Ocean ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 23:00:41 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'325'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14247'), (b'x-ratelimit-remaining-tokens', b'29622'), (b'x-ratelimit-reset-requests', b'15m17.669999999s'), (b'x-ratelimit-reset-tokens', b'756ms'), (b'x-request-id', b'req_01hz0pyd74fn79qcpageyj5y5m'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1dcc15e86968f-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the difference between a board of directors and an advisory board ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Who was the first man to fly across the Pacific Ocean ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:00:44 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14246'), (b'x-ratelimit-remaining-tokens', b'29591'), (b'x-ratelimit-reset-requests', b'15m21.604s'), (b'x-ratelimit-reset-tokens', b'818ms'), (b'x-request-id', b'req_01hz0pyf7pfxzv84dg9y3pp8b1'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1dcce3f76968f-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about a historical event and the person who achieved it, which is a characteristic of a human being.
class_name: HUM
class_index: 3
data: {'text': 'When did Idaho become a state ?', 'coarse_label': 5, 'fine_label': 39}
task_input: When did Idaho become a state ?, corse_label: 5
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'When did Idaho become a state ?', 'examples_str': 'Question: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the difference between a board of directors and an advisory board ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does the channel ESPN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is the name of Jamiroquai new album ?
class_name: Entity 
class_index: 1
--------

Question: What is the difference between a board of directors and an advisory board ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the first host of Person to Person ?
class_name: Human being 
class_index: 3
--------

Question: What country has the port of Haifa ?
class_name: Location 
class_index: 4
--------

Question: How many American soldiers remain unaccounted from the Vietnam war ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: When did Idaho become a state ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the difference between a board of directors and an advisory board ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: When did Idaho become a state ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 23:00:44 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14246'), (b'x-ratelimit-remaining-tokens', b'29589'), (b'x-ratelimit-reset-requests', b'15m23.681s'), (b'x-ratelimit-reset-tokens', b'821ms'), (b'x-request-id', b'req_01hz0pyfhnf9n8zyv3ad4aczgg'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1dcd038f9968f-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the difference between a board of directors and an advisory board ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: When did Idaho become a state ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:00:46 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14245'), (b'x-ratelimit-remaining-tokens', b'29597'), (b'x-ratelimit-reset-requests', b'15m27.621999999s'), (b'x-ratelimit-reset-tokens', b'806ms'), (b'x-request-id', b'req_01hz0pyhj1e1t8bv5bw4wej0vv'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1dcdd1acd968f-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the date when Idaho became a state, which is a specific historical event.
class_name: Description and abstract concept
class_index: 2
```
data: {'text': 'What is the life expectancy for crickets ?', 'coarse_label': 5, 'fine_label': 43}
task_input: What is the life expectancy for crickets ?, corse_label: 5
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What is the life expectancy for crickets ?', 'examples_str': 'Question: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the difference between a board of directors and an advisory board ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does the channel ESPN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is the name of Jamiroquai new album ?
class_name: Entity 
class_index: 1
--------

Question: What is the difference between a board of directors and an advisory board ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the first host of Person to Person ?
class_name: Human being 
class_index: 3
--------

Question: What country has the port of Haifa ?
class_name: Location 
class_index: 4
--------

Question: How many American soldiers remain unaccounted from the Vietnam war ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What is the life expectancy for crickets ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the difference between a board of directors and an advisory board ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is the life expectancy for crickets ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 23:00:46 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14245'), (b'x-ratelimit-remaining-tokens', b'29590'), (b'x-ratelimit-reset-requests', b'15m29.720999999s'), (b'x-ratelimit-reset-tokens', b'819ms'), (b'x-request-id', b'req_01hz0pyhtsfe78x7p8yqesfjfg'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1dcdedc0a968f-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the difference between a board of directors and an advisory board ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is the life expectancy for crickets ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:00:48 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14244'), (b'x-ratelimit-remaining-tokens', b'29595'), (b'x-ratelimit-reset-requests', b'15m33.658s'), (b'x-ratelimit-reset-tokens', b'810ms'), (b'x-request-id', b'req_01hz0pykv8f15srmzykn06gmdw'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1dcebbdd6968f-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the life expectancy of a specific species, crickets, which is a numeric value.
class_name: NUM
class_index: 5
data: {'text': 'What metal has the highest melting point ?', 'coarse_label': 1, 'fine_label': 18}
task_input: What metal has the highest melting point ?, corse_label: 1
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What metal has the highest melting point ?', 'examples_str': 'Question: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the difference between a board of directors and an advisory board ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does the channel ESPN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is the name of Jamiroquai new album ?
class_name: Entity 
class_index: 1
--------

Question: What is the difference between a board of directors and an advisory board ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the first host of Person to Person ?
class_name: Human being 
class_index: 3
--------

Question: What country has the port of Haifa ?
class_name: Location 
class_index: 4
--------

Question: How many American soldiers remain unaccounted from the Vietnam war ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What metal has the highest melting point ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the difference between a board of directors and an advisory board ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What metal has the highest melting point ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 23:00:48 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14244'), (b'x-ratelimit-remaining-tokens', b'29595'), (b'x-ratelimit-reset-requests', b'15m35.761999999s'), (b'x-ratelimit-reset-tokens', b'810ms'), (b'x-request-id', b'req_01hz0pym2qfyjtp18bm35a8p7b'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1dced3f2c968f-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the difference between a board of directors and an advisory board ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What metal has the highest melting point ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:00:51 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14243'), (b'x-ratelimit-remaining-tokens', b'29595'), (b'x-ratelimit-reset-requests', b'15m39.703s'), (b'x-ratelimit-reset-tokens', b'810ms'), (b'x-request-id', b'req_01hz0pyp32f45v1dr2fgh4mvr7'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1dcfa187e968f-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the metal with the highest melting point, which is a specific numeric value.
class_name: NUM
class_index: 5
data: {'text': 'Who developed the vaccination against polio ?', 'coarse_label': 3, 'fine_label': 29}
task_input: Who developed the vaccination against polio ?, corse_label: 3
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'Who developed the vaccination against polio ?', 'examples_str': 'Question: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the difference between a board of directors and an advisory board ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does the channel ESPN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is the name of Jamiroquai new album ?
class_name: Entity 
class_index: 1
--------

Question: What is the difference between a board of directors and an advisory board ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the first host of Person to Person ?
class_name: Human being 
class_index: 3
--------

Question: What country has the port of Haifa ?
class_name: Location 
class_index: 4
--------

Question: How many American soldiers remain unaccounted from the Vietnam war ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Who developed the vaccination against polio ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the difference between a board of directors and an advisory board ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Who developed the vaccination against polio ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 23:00:51 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14243'), (b'x-ratelimit-remaining-tokens', b'29628'), (b'x-ratelimit-reset-requests', b'15m41.695s'), (b'x-ratelimit-reset-tokens', b'743ms'), (b'x-request-id', b'req_01hz0pypcmerm9s74fvv5tkk3e'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1dcfc09f1968f-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the difference between a board of directors and an advisory board ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Who developed the vaccination against polio ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:00:54 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14242'), (b'x-ratelimit-remaining-tokens', b'29594'), (b'x-ratelimit-reset-requests', b'15m45.627999999s'), (b'x-ratelimit-reset-tokens', b'812ms'), (b'x-request-id', b'req_01hz0pyrd7e1trn5z4z41bz6wd'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1dd08faa0968f-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is asking about a person who developed a vaccination, which is a human being.
class_name: HUM
class_index: 3
data: {'text': 'What is epilepsy ?', 'coarse_label': 2, 'fine_label': 24}
task_input: What is epilepsy ?, corse_label: 2
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What is epilepsy ?', 'examples_str': 'Question: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the difference between a board of directors and an advisory board ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does the channel ESPN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is the name of Jamiroquai new album ?
class_name: Entity 
class_index: 1
--------

Question: What is the difference between a board of directors and an advisory board ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the first host of Person to Person ?
class_name: Human being 
class_index: 3
--------

Question: What country has the port of Haifa ?
class_name: Location 
class_index: 4
--------

Question: How many American soldiers remain unaccounted from the Vietnam war ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What is epilepsy ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the difference between a board of directors and an advisory board ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is epilepsy ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 23:00:54 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14242'), (b'x-ratelimit-remaining-tokens', b'29604'), (b'x-ratelimit-reset-requests', b'15m47.214s'), (b'x-ratelimit-reset-tokens', b'792ms'), (b'x-request-id', b'req_01hz0pys5tft9vzxxzz460pqg7'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1dd0dde24968f-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the difference between a board of directors and an advisory board ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is epilepsy ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:00:56 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14241'), (b'x-ratelimit-remaining-tokens', b'29601'), (b'x-ratelimit-reset-requests', b'15m51.155999999s'), (b'x-ratelimit-reset-tokens', b'798ms'), (b'x-request-id', b'req_01hz0pyv64e9xb5qafefspvy4x'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1dd1abffc968f-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is asking for a definition or explanation of a concept, which is a characteristic of a description and abstract concept.
class_name: DESC
class_index: 2
```
data: {'text': 'What year did the Titanic sink ?', 'coarse_label': 5, 'fine_label': 39}
task_input: What year did the Titanic sink ?, corse_label: 5
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What year did the Titanic sink ?', 'examples_str': 'Question: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the difference between a board of directors and an advisory board ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.
Question: What does the channel ESPN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is the name of Jamiroquai new album ?
class_name: Entity 
class_index: 1
--------

Question: What is the difference between a board of directors and an advisory board ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the first host of Person to Person ?
class_name: Human being 
class_index: 3
--------

Question: What country has the port of Haifa ?
class_name: Location 
class_index: 4
--------

Question: How many American soldiers remain unaccounted from the Vietnam war ?
class_name: Numeric value 
class_index: 5
--------

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does the channel ESPN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is the name of Jamiroquai new album ?
class_name: Entity 
class_index: 1
--------

Question: What is the difference between a board of directors and an advisory board ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who was the first host of Person to Person ?
class_name: Human being 
class_index: 3
--------

Question: What country has the port of Haifa ?
class_name: Location 
class_index: 4
--------

Question: How many American soldiers remain unaccounted from the Vietnam war ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What year did the Titanic sink ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the difference between a board of directors and an advisory board ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What year did the Titanic sink ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 23:00:56 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14241'), (b'x-ratelimit-remaining-tokens', b'29596'), (b'x-ratelimit-reset-requests', b'15m53.757s'), (b'x-ratelimit-reset-tokens', b'808ms'), (b'x-request-id', b'req_01hz0pyvdrefgsc40x0c2ew3ky'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1dd1c38e4968f-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the channel ESPN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of Jamiroquai new album ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the difference between a board of directors and an advisory board ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who was the first host of Person to Person ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What country has the port of Haifa ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American soldiers remain unaccounted from the Vietnam war ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What year did the Titanic sink ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 23:00:58 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14240'), (b'x-ratelimit-remaining-tokens', b'29597'), (b'x-ratelimit-reset-requests', b'15m57.704s'), (b'x-ratelimit-reset-tokens', b'806ms'), (b'x-request-id', b'req_01hz0pyxdxf7y8wd629eh1w1r7'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b1dd291b0a968f-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking for a specific year, which is a numeric value.
class_name: NUM
class_index: 5
responses: [5, 4, 3, 2, 2, 5, 1, 2, 2, 2, 4, 3, 5, 3, 2, 5, 5, 3, 2, 5], targets: [5, 4, 3, 2, 5, 5, 3, 1, 2, 2, 4, 3, 5, 3, 5, 5, 1, 3, 2, 5]
num_invalid: 0
Preds tensor: tensor([[0., 0., 0., 0., 0., 1.],
        [0., 0., 0., 0., 1., 0.],
        [0., 0., 0., 1., 0., 0.],
        [0., 0., 1., 0., 0., 0.],
        [0., 0., 1., 0., 0., 0.],
        [0., 0., 0., 0., 0., 1.],
        [0., 1., 0., 0., 0., 0.],
        [0., 0., 1., 0., 0., 0.],
        [0., 0., 1., 0., 0., 0.],
        [0., 0., 1., 0., 0., 0.],
        [0., 0., 0., 0., 1., 0.],
        [0., 0., 0., 1., 0., 0.],
        [0., 0., 0., 0., 0., 1.],
        [0., 0., 0., 1., 0., 0.],
        [0., 0., 1., 0., 0., 0.],
        [0., 0., 0., 0., 0., 1.],
        [0., 0., 0., 0., 0., 1.],
        [0., 0., 0., 1., 0., 0.],
        [0., 0., 1., 0., 0., 0.],
        [0., 0., 0., 0., 0., 1.]])
Targets tensor: tensor([5, 4, 3, 2, 5, 5, 3, 1, 2, 2, 4, 3, 5, 3, 5, 5, 1, 3, 2, 5])
Test Accuracy: 0.75, F1: 0.677
best_score: 1.5870000000000002
