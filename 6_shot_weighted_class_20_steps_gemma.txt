train: 600
eval: 24
test: 24
INFO:core.prompt_builder:Prompt has variables: ['classes']
INFO:core.prompt_builder:Prompt has variables: ['example', 'schema']
DEBUG:use_cases.classification.task:output_str: Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

DEBUG:httpx:load_ssl_context verify=True cert=None trust_env=True http2=False
DEBUG:httpx:load_verify_locations cafile='/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/certifi/cacert.pem'
INFO:core.prompt_builder:Prompt has variables: ['input', 'task_desc_str', 'examples_str', 'output_format_str', 'input_label']
data: None, requires_opt: True
Registered parameter examples_str with value Parameter: None
INFO:core.prompt_builder:Prompt has variables: ['output', 'input', 'description', 'label']
module: Prompt(
  template: You are a classifier. Given a Question, you need to classify it into one of the following classes:
  Format: class_index. class_name, class_description
  {% for class in classes %}
  {{loop.index-1}}. {{class.label}}, {{class.desc}}
  {% endfor %}
  , preset_prompt_kwargs: {'classes': [{'label': 'ABBR', 'desc': 'Abbreviation'}, {'label': 'ENTY', 'desc': 'Entity'}, {'label': 'DESC', 'desc': 'Description and abstract concept'}, {'label': 'HUM', 'desc': 'Human being'}, {'label': 'LOC', 'desc': 'Location'}, {'label': 'NUM', 'desc': 'Numeric value'}]}, prompt_variables: ['classes']
)    
module: Generator(
  model_kwargs={'model': 'gemma-7b-it', 'temperature': 0.0, 'top_p': 1, 'frequency_penalty': 0, 'presence_penalty': 0, 'n': 1}, model_type=ModelType.LLM
  (model_client): GroqAPIClient()
  (system_prompt): Prompt(
    template: {# task desc #}
    {% if task_desc_str %}
    {{task_desc_str}}
    {% endif %}
    {%if output_format_str %}
    <OUTPUT_FORMAT>
    {{output_format_str}}
    </OUTPUT_FORMAT>
    {% endif %}
    {# example #}
    {% if examples_str %}
    <EXAMPLES>
    {#{% for example in examples_str %}#}
    {{examples_str}}
    {#{% endfor %}#}
    </EXAMPLES>
    {% endif %}
    {{input_label}}: {{input}}
    Your output:
    , preset_prompt_kwargs: {'task_desc_str': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n', 'output_format_str': 'Your output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n', 'input_label': 'Question'}, prompt_variables: ['input', 'task_desc_str', 'examples_str', 'output_format_str', 'input_label']
  )
  (output_processors): Sequential(
    (0): YAMLOutputParser(
      data_class_for_yaml=<class 'use_cases.classification.prompt.OutputFormat'>
      (yaml_output_format_prompt): Prompt(
        template: Your output should be formatted as a standard YAML instance with the following schema:
        ```
        {{schema}}
        ```
        {% if example %}
        Here is an example:
        ```
        {{example}}
        ```
        {% endif %}
        
        -Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
        -Follow the YAML formatting conventions with an indent of 2 spaces. 
        -Quote the string values properly.
        , prompt_variables: ['example', 'schema']
      )
      (output_processors): YAMLParser()
    )
    (1): <lambda>Component()
  )
)    
module: GroqAPIClient()    
module: Prompt(
  template: {# task desc #}
  {% if task_desc_str %}
  {{task_desc_str}}
  {% endif %}
  {%if output_format_str %}
  <OUTPUT_FORMAT>
  {{output_format_str}}
  </OUTPUT_FORMAT>
  {% endif %}
  {# example #}
  {% if examples_str %}
  <EXAMPLES>
  {#{% for example in examples_str %}#}
  {{examples_str}}
  {#{% endfor %}#}
  </EXAMPLES>
  {% endif %}
  {{input_label}}: {{input}}
  Your output:
  , preset_prompt_kwargs: {'task_desc_str': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n', 'output_format_str': 'Your output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n', 'input_label': 'Question'}, prompt_variables: ['input', 'task_desc_str', 'examples_str', 'output_format_str', 'input_label']
)    
module: Sequential(
  (0): YAMLOutputParser(
    data_class_for_yaml=<class 'use_cases.classification.prompt.OutputFormat'>
    (yaml_output_format_prompt): Prompt(
      template: Your output should be formatted as a standard YAML instance with the following schema:
      ```
      {{schema}}
      ```
      {% if example %}
      Here is an example:
      ```
      {{example}}
      ```
      {% endif %}
      
      -Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
      -Follow the YAML formatting conventions with an indent of 2 spaces. 
      -Quote the string values properly.
      , prompt_variables: ['example', 'schema']
    )
    (output_processors): YAMLParser()
  )
  (1): <lambda>Component()
)    
module: YAMLOutputParser(
  data_class_for_yaml=<class 'use_cases.classification.prompt.OutputFormat'>
  (yaml_output_format_prompt): Prompt(
    template: Your output should be formatted as a standard YAML instance with the following schema:
    ```
    {{schema}}
    ```
    {% if example %}
    Here is an example:
    ```
    {{example}}
    ```
    {% endif %}
    
    -Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
    -Follow the YAML formatting conventions with an indent of 2 spaces. 
    -Quote the string values properly.
    , prompt_variables: ['example', 'schema']
  )
  (output_processors): YAMLParser()
)    
module: Prompt(
  template: Your output should be formatted as a standard YAML instance with the following schema:
  ```
  {{schema}}
  ```
  {% if example %}
  Here is an example:
  ```
  {{example}}
  ```
  {% endif %}
  
  -Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
  -Follow the YAML formatting conventions with an indent of 2 spaces. 
  -Quote the string values properly.
  , prompt_variables: ['example', 'schema']
)    
module: YAMLParser()    
module: <lambda>Component()    
params: {'generator.examples_str': Parameter: None}
few_shot_optimizer: <optim.optimizer.BootstrapFewShot object at 0x17cb07b90>
few_shot_state_dict: None
data: {'text': 'What does pH stand for ?', 'coarse_label': 0, 'fine_label': 1}
task_input: What does pH stand for ?, corse_label: 0
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What does pH stand for ?', 'examples_str': None}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
Question: What does pH stand for ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\nQuestion: What does pH stand for ?\nYour output:'}], 'model': 'gemma-7b-it', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.connection:connect_tcp.started host='api.groq.com' port=443 local_address=None timeout=5.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x17c6b82d0>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x17cac2840> server_hostname='api.groq.com' timeout=5.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x17cae7110>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 23:44:48 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'15000'), (b'x-ratelimit-remaining-requests', b'14399'), (b'x-ratelimit-remaining-tokens', b'14774'), (b'x-ratelimit-reset-requests', b'6s'), (b'x-ratelimit-reset-tokens', b'904ms'), (b'x-request-id', b'req_01hz3bvwbbfamsyv4x81gpcv76'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=6jp82ZKlqnVc21GpZ7.xE9xrsprmzMF8HdCX15oWX2c-1717026288-1.0.1.1-oSfOCr5C3IJ7q208TgGQv6HMgLt9HGnC5OISuGGgaCYCmDqVSMcDAPOBstnd_hl2k3fPaTjqBIomNNC7URg5zA; path=/; expires=Thu, 30-May-24 00:14:48 GMT; domain=.groq.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ba5abbbb80984c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```yaml
thought: The question asks for the meaning of an acronym.
class_name: ABBR
class_index: 0
```
data: {'text': 'What does HIV stand for ?', 'coarse_label': 0, 'fine_label': 1}
task_input: What does HIV stand for ?, corse_label: 0
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What does HIV stand for ?', 'examples_str': None}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
Question: What does HIV stand for ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\nQuestion: What does HIV stand for ?\nYour output:'}], 'model': 'gemma-7b-it', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 23:44:48 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'15000'), (b'x-ratelimit-remaining-requests', b'14398'), (b'x-ratelimit-remaining-tokens', b'14526'), (b'x-ratelimit-reset-requests', b'11.511999999s'), (b'x-ratelimit-reset-tokens', b'1.894s'), (b'x-request-id', b'req_01hz3bvwtxep0aq9wc312anx6h'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ba5abedd6f984c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```yaml
thought: The question asks for the expansion of the acronym HIV.
class_name: ABBR
class_index: 0
```
data: {'text': 'What does NECROSIS mean ?', 'coarse_label': 0, 'fine_label': 1}
task_input: What does NECROSIS mean ?, corse_label: 0
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What does NECROSIS mean ?', 'examples_str': None}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
Question: What does NECROSIS mean ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\nQuestion: What does NECROSIS mean ?\nYour output:'}], 'model': 'gemma-7b-it', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 23:44:49 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'15000'), (b'x-ratelimit-remaining-requests', b'14397'), (b'x-ratelimit-remaining-tokens', b'14336'), (b'x-ratelimit-reset-requests', b'17.647s'), (b'x-ratelimit-reset-tokens', b'2.655s'), (b'x-request-id', b'req_01hz3bvx60e22ak047zxbapppg'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ba5ac11e93984c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```yaml
thought: The question seeks to understand the meaning of a specific word.
class_name: DESC
class_index: 2
```
data: {'text': 'What is the abbreviation of the International Olympic Committee ?', 'coarse_label': 0, 'fine_label': 0}
task_input: What is the abbreviation of the International Olympic Committee ?, corse_label: 0
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What is the abbreviation of the International Olympic Committee ?', 'examples_str': None}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
Question: What is the abbreviation of the International Olympic Committee ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\nQuestion: What is the abbreviation of the International Olympic Committee ?\nYour output:'}], 'model': 'gemma-7b-it', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 23:44:49 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'15000'), (b'x-ratelimit-remaining-requests', b'14396'), (b'x-ratelimit-remaining-tokens', b'14134'), (b'x-ratelimit-reset-requests', b'23.651s'), (b'x-ratelimit-reset-tokens', b'3.462s'), (b'x-request-id', b'req_01hz3bvxgxemwbvjwf2arec1w7'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ba5ac34fdb984c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```yaml
thought: The question is inquiring about the abbreviation of a specific organization.
class_name: ABBR
class_index: 0
```
data: {'text': 'What color was the hundred billionth crayon made by Crayola ?', 'coarse_label': 1, 'fine_label': 4}
task_input: What color was the hundred billionth crayon made by Crayola ?, corse_label: 1
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What color was the hundred billionth crayon made by Crayola ?', 'examples_str': None}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
Question: What color was the hundred billionth crayon made by Crayola ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\nQuestion: What color was the hundred billionth crayon made by Crayola ?\nYour output:'}], 'model': 'gemma-7b-it', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 23:44:49 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'15000'), (b'x-ratelimit-remaining-requests', b'14395'), (b'x-ratelimit-remaining-tokens', b'13925'), (b'x-ratelimit-reset-requests', b'29.707999999s'), (b'x-ratelimit-reset-tokens', b'4.297s'), (b'x-request-id', b'req_01hz3bvxt4e069nn06k37fzyvy'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ba5ac518d1984c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```yaml
thought: The question seeks information about a specific crayon and its color.
class_name: DESC
class_index: 2
```
data: {'text': 'What is a fear of drinking ?', 'coarse_label': 1, 'fine_label': 7}
task_input: What is a fear of drinking ?, corse_label: 1
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What is a fear of drinking ?', 'examples_str': None}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
Question: What is a fear of drinking ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\nQuestion: What is a fear of drinking ?\nYour output:'}], 'model': 'gemma-7b-it', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 23:44:50 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'15000'), (b'x-ratelimit-remaining-requests', b'14394'), (b'x-ratelimit-remaining-tokens', b'13723'), (b'x-ratelimit-reset-requests', b'35.702s'), (b'x-ratelimit-reset-tokens', b'5.105s'), (b'x-request-id', b'req_01hz3bvy3eeyn80ykvnhfmm2d3'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ba5ac6f9ae984c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```yaml
thought: The question inquires about a specific phobia related to drinking.
class_name: DESC
class_index: 2
```
data: {'text': "What 's the word for broken glass or sharp rocks embedded in cement on top of a wall ?", 'coarse_label': 1, 'fine_label': 23}
task_input: What 's the word for broken glass or sharp rocks embedded in cement on top of a wall ?, corse_label: 1
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': "What 's the word for broken glass or sharp rocks embedded in cement on top of a wall ?", 'examples_str': None}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
Question: What 's the word for broken glass or sharp rocks embedded in cement on top of a wall ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\nQuestion: What 's the word for broken glass or sharp rocks embedded in cement on top of a wall ?\nYour output:"}], 'model': 'gemma-7b-it', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 23:44:50 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'15000'), (b'x-ratelimit-remaining-requests', b'14393'), (b'x-ratelimit-remaining-tokens', b'13517'), (b'x-ratelimit-reset-requests', b'41.652999999s'), (b'x-ratelimit-reset-tokens', b'5.931s'), (b'x-request-id', b'req_01hz3bvyebffs8wfhm0dgr47h3'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ba5ac92ae7984c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```yaml
thought: The question seeks a term for broken glass or sharp rocks embedded in cement on top of a wall.
class_name: ABBR
class_index: 0
```
data: {'text': 'What are the top vegetable crops in the world ?', 'coarse_label': 1, 'fine_label': 9}
task_input: What are the top vegetable crops in the world ?, corse_label: 1
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What are the top vegetable crops in the world ?', 'examples_str': None}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
Question: What are the top vegetable crops in the world ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\nQuestion: What are the top vegetable crops in the world ?\nYour output:'}], 'model': 'gemma-7b-it', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 23:44:51 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'15000'), (b'x-ratelimit-remaining-requests', b'14392'), (b'x-ratelimit-remaining-tokens', b'13399'), (b'x-ratelimit-reset-requests', b'47.305s'), (b'x-ratelimit-reset-tokens', b'6.404s'), (b'x-request-id', b'req_01hz3bvz43fx6sqt2f89bww48y'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ba5acd8d01984c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```yaml
thought: The question seeks a list of the most cultivated vegetable crops globally.
class_name: DESC
class_index: 2
```
data: {'text': 'Why did the Anglican church split from the Vatican ?', 'coarse_label': 2, 'fine_label': 27}
task_input: Why did the Anglican church split from the Vatican ?, corse_label: 2
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'Why did the Anglican church split from the Vatican ?', 'examples_str': None}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
Question: Why did the Anglican church split from the Vatican ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\nQuestion: Why did the Anglican church split from the Vatican ?\nYour output:'}], 'model': 'gemma-7b-it', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 23:44:51 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'15000'), (b'x-ratelimit-remaining-requests', b'14391'), (b'x-ratelimit-remaining-tokens', b'13190'), (b'x-ratelimit-reset-requests', b'53.696s'), (b'x-ratelimit-reset-tokens', b'7.237s'), (b'x-request-id', b'req_01hz3bvzdkejzs2g2jt9j2jxa3'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ba5acf6e06984c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```yaml
thought: The question seeks to understand the historical separation between two religious institutions.
class_name: DESC
class_index: 2
```
data: {'text': 'How do I find info about rice importers in the world ?', 'coarse_label': 2, 'fine_label': 26}
task_input: How do I find info about rice importers in the world ?, corse_label: 2
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'How do I find info about rice importers in the world ?', 'examples_str': None}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
Question: How do I find info about rice importers in the world ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\nQuestion: How do I find info about rice importers in the world ?\nYour output:'}], 'model': 'gemma-7b-it', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 23:44:51 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'15000'), (b'x-ratelimit-remaining-requests', b'14390'), (b'x-ratelimit-remaining-tokens', b'12983'), (b'x-ratelimit-reset-requests', b'59.694s'), (b'x-ratelimit-reset-tokens', b'8.066s'), (b'x-request-id', b'req_01hz3bvzq7fmrt1er197v8fbgm'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ba5ad15efd984c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```yaml
thought: The question seeks information about organizations that import rice globally.
class_name: ENTY
class_index: 1
```
data: {'text': "What 's a water funnel ?", 'coarse_label': 2, 'fine_label': 24}
task_input: What 's a water funnel ?, corse_label: 2
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': "What 's a water funnel ?", 'examples_str': None}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
Question: What 's a water funnel ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\nQuestion: What 's a water funnel ?\nYour output:"}], 'model': 'gemma-7b-it', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 23:44:52 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'15000'), (b'x-ratelimit-remaining-requests', b'14389'), (b'x-ratelimit-remaining-tokens', b'12807'), (b'x-ratelimit-reset-requests', b'1m5.597s'), (b'x-ratelimit-reset-tokens', b'8.772s'), (b'x-request-id', b'req_01hz3bw03weyn872agzg5st7fz'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ba5ad3d86e984c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```yaml
thought: "It asks for a definition of 'water funnel'."
class_name: DESC
class_index: 2
```
data: {'text': 'Why do USA fax machines not work in UK , NNP ?', 'coarse_label': 2, 'fine_label': 27}
task_input: Why do USA fax machines not work in UK , NNP ?, corse_label: 2
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'Why do USA fax machines not work in UK , NNP ?', 'examples_str': None}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
Question: Why do USA fax machines not work in UK , NNP ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\nQuestion: Why do USA fax machines not work in UK , NNP ?\nYour output:'}], 'model': 'gemma-7b-it', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 23:44:54 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'15000'), (b'x-ratelimit-remaining-requests', b'14388'), (b'x-ratelimit-remaining-tokens', b'12621'), (b'x-ratelimit-reset-requests', b'1m11.609999999s'), (b'x-ratelimit-reset-tokens', b'9.514s'), (b'x-request-id', b'req_01hz3bw0g2fmrv6zej0akbd214'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ba5ad65982984c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```yaml
thought: The question explores the difference in technology infrastructure between the US and UK, specifically regarding fax machines.
class_name: DESC
class_index: 2
```
data: {'text': "Which company claimed to be `` the world 's biggest toy store '' ?", 'coarse_label': 3, 'fine_label': 28}
task_input: Which company claimed to be `` the world 's biggest toy store '' ?, corse_label: 3
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': "Which company claimed to be `` the world 's biggest toy store '' ?", 'examples_str': None}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
Question: Which company claimed to be `` the world 's biggest toy store '' ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\nQuestion: Which company claimed to be `` the world 's biggest toy store '' ?\nYour output:"}], 'model': 'gemma-7b-it', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 23:44:55 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'15000'), (b'x-ratelimit-remaining-requests', b'14387'), (b'x-ratelimit-remaining-tokens', b'13050'), (b'x-ratelimit-reset-requests', b'1m15.092999999s'), (b'x-ratelimit-reset-tokens', b'7.797s'), (b'x-request-id', b'req_01hz3bw3ayeaxb7cwkyp14dtx6'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ba5ae87adf984c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```yaml
thought: The sentence mentions a company claiming to be the biggest toy store in the world.
class_name: ENTY
class_index: 1
```
data: {'text': 'Who is the voice of Miss Piggy ?', 'coarse_label': 3, 'fine_label': 29}
task_input: Who is the voice of Miss Piggy ?, corse_label: 3
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'Who is the voice of Miss Piggy ?', 'examples_str': None}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
Question: Who is the voice of Miss Piggy ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\nQuestion: Who is the voice of Miss Piggy ?\nYour output:'}], 'model': 'gemma-7b-it', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 23:44:55 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'15000'), (b'x-ratelimit-remaining-requests', b'14386'), (b'x-ratelimit-remaining-tokens', b'12905'), (b'x-ratelimit-reset-requests', b'1m23.444999999s'), (b'x-ratelimit-reset-tokens', b'8.377s'), (b'x-request-id', b'req_01hz3bw3wbfan8c13kr566rqhz'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ba5aebfca6984c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```yaml
thought: The question identifies the voice actor of a specific character.
class_name: HUM
class_index: 3
```
data: {'text': "What 's the supreme policy-making bureau of the Soviet Communist Party ?", 'coarse_label': 3, 'fine_label': 28}
task_input: What 's the supreme policy-making bureau of the Soviet Communist Party ?, corse_label: 3
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': "What 's the supreme policy-making bureau of the Soviet Communist Party ?", 'examples_str': None}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
Question: What 's the supreme policy-making bureau of the Soviet Communist Party ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\nQuestion: What 's the supreme policy-making bureau of the Soviet Communist Party ?\nYour output:"}], 'model': 'gemma-7b-it', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 23:44:56 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'15000'), (b'x-ratelimit-remaining-requests', b'14385'), (b'x-ratelimit-remaining-tokens', b'12703'), (b'x-ratelimit-reset-requests', b'1m29.651999999s'), (b'x-ratelimit-reset-tokens', b'9.186s'), (b'x-request-id', b'req_01hz3bw479e2298f6zc6bw6tbm'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ba5aee2dde984c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```yaml
thought: "The question inquires about the highest authority in the Soviet Communist Party."
class_name: ENTY
class_index: 1
```
data: {'text': 'Who gave King Arthur the round table ?', 'coarse_label': 3, 'fine_label': 29}
task_input: Who gave King Arthur the round table ?, corse_label: 3
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'Who gave King Arthur the round table ?', 'examples_str': None}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
Question: Who gave King Arthur the round table ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\nQuestion: Who gave King Arthur the round table ?\nYour output:'}], 'model': 'gemma-7b-it', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 23:44:58 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'15000'), (b'x-ratelimit-remaining-requests', b'14384'), (b'x-ratelimit-remaining-tokens', b'12602'), (b'x-ratelimit-reset-requests', b'1m35.276s'), (b'x-ratelimit-reset-tokens', b'9.592s'), (b'x-request-id', b'req_01hz3bw4xxejzspf9sg1rqcrje'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ba5af2a821984c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```yaml
thought: The question identifies the giver of the round table to King Arthur.
class_name: HUM
class_index: 3
```
data: {'text': 'What ocean was Amelia Earhart flying over when she disappeared ?', 'coarse_label': 4, 'fine_label': 35}
task_input: What ocean was Amelia Earhart flying over when she disappeared ?, corse_label: 4
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What ocean was Amelia Earhart flying over when she disappeared ?', 'examples_str': None}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
Question: What ocean was Amelia Earhart flying over when she disappeared ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\nQuestion: What ocean was Amelia Earhart flying over when she disappeared ?\nYour output:'}], 'model': 'gemma-7b-it', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 23:44:58 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'15000'), (b'x-ratelimit-remaining-requests', b'14383'), (b'x-ratelimit-remaining-tokens', b'12695'), (b'x-ratelimit-reset-requests', b'1m40.473999999s'), (b'x-ratelimit-reset-tokens', b'9.22s'), (b'x-request-id', b'req_01hz3bw6dmfanagbvp2q9y6332'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ba5afc3cdc984c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```yaml
thought: The question seeks information about a specific ocean Amelia Earhart was flying over when she disappeared.
class_name: LOC
class_index: 4
```
data: {'text': 'Where did Dikembe Mutombo go to college ?', 'coarse_label': 4, 'fine_label': 35}
task_input: Where did Dikembe Mutombo go to college ?, corse_label: 4
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'Where did Dikembe Mutombo go to college ?', 'examples_str': None}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
Question: Where did Dikembe Mutombo go to college ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\nQuestion: Where did Dikembe Mutombo go to college ?\nYour output:'}], 'model': 'gemma-7b-it', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 23:44:59 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'15000'), (b'x-ratelimit-remaining-requests', b'14382'), (b'x-ratelimit-remaining-tokens', b'12513'), (b'x-ratelimit-reset-requests', b'1m47.589s'), (b'x-ratelimit-reset-tokens', b'9.945s'), (b'x-request-id', b'req_01hz3bw6tge06sydt931dxnjdt'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ba5afece18984c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```yaml
thought: The question seeks information about Dikembe Mutombo's college education.
class_name: LOC
class_index: 4
```
data: {'text': 'What capital is built around Monument Circle which contains soldiers and sailors monument ?', 'coarse_label': 4, 'fine_label': 32}
task_input: What capital is built around Monument Circle which contains soldiers and sailors monument ?, corse_label: 4
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What capital is built around Monument Circle which contains soldiers and sailors monument ?', 'examples_str': None}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
Question: What capital is built around Monument Circle which contains soldiers and sailors monument ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\nQuestion: What capital is built around Monument Circle which contains soldiers and sailors monument ?\nYour output:'}], 'model': 'gemma-7b-it', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 23:44:59 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'15000'), (b'x-ratelimit-remaining-requests', b'14381'), (b'x-ratelimit-remaining-tokens', b'12341'), (b'x-ratelimit-reset-requests', b'1m53.492999999s'), (b'x-ratelimit-reset-tokens', b'10.635s'), (b'x-request-id', b'req_01hz3bw7acensakcc18h24sked'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ba5b01ffac984c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```yaml
thought: The question mentions a capital city and a monument within it.
class_name: LOC
class_index: 4
```
data: {'text': "What are Britain 's two longest rivers ?", 'coarse_label': 4, 'fine_label': 35}
task_input: What are Britain 's two longest rivers ?, corse_label: 4
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': "What are Britain 's two longest rivers ?", 'examples_str': None}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
Question: What are Britain 's two longest rivers ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\nQuestion: What are Britain 's two longest rivers ?\nYour output:"}], 'model': 'gemma-7b-it', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 23:45:00 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'15000'), (b'x-ratelimit-remaining-requests', b'14380'), (b'x-ratelimit-remaining-tokens', b'12173'), (b'x-ratelimit-reset-requests', b'1m59.581s'), (b'x-ratelimit-reset-tokens', b'11.308s'), (b'x-request-id', b'req_01hz3bw7qheynvy559pkp9spf8'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ba5b0498e5984c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```yaml
thought: The question asks for the two longest rivers in Britain.
class_name: ENTY
class_index: 1
```
data: {'text': "How many tenths of the Earth 's surface lie under water ?", 'coarse_label': 5, 'fine_label': 38}
task_input: How many tenths of the Earth 's surface lie under water ?, corse_label: 5
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': "How many tenths of the Earth 's surface lie under water ?", 'examples_str': None}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
Question: How many tenths of the Earth 's surface lie under water ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\nQuestion: How many tenths of the Earth 's surface lie under water ?\nYour output:"}], 'model': 'gemma-7b-it', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 23:45:00 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'15000'), (b'x-ratelimit-remaining-requests', b'14379'), (b'x-ratelimit-remaining-tokens', b'12016'), (b'x-ratelimit-reset-requests', b'2m5.489s'), (b'x-ratelimit-reset-tokens', b'11.935s'), (b'x-request-id', b'req_01hz3bw87herz86end363m1ha1'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ba5b07ca5a984c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```yaml
thought: The question asks for a numerical value related to the percentage of the Earth's surface covered by water.
class_name: NUM
class_index: 5
```
data: {'text': 'When did President Kennedy , Lee Harvey Oswald , and Jack Ruby all die ?', 'coarse_label': 5, 'fine_label': 39}
task_input: When did President Kennedy , Lee Harvey Oswald , and Jack Ruby all die ?, corse_label: 5
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'When did President Kennedy , Lee Harvey Oswald , and Jack Ruby all die ?', 'examples_str': None}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
Question: When did President Kennedy , Lee Harvey Oswald , and Jack Ruby all die ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\nQuestion: When did President Kennedy , Lee Harvey Oswald , and Jack Ruby all die ?\nYour output:'}], 'model': 'gemma-7b-it', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 23:45:01 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'15000'), (b'x-ratelimit-remaining-requests', b'14378'), (b'x-ratelimit-remaining-tokens', b'11882'), (b'x-ratelimit-reset-requests', b'2m11.342999999s'), (b'x-ratelimit-reset-tokens', b'12.47s'), (b'x-request-id', b'req_01hz3bw8w4e22syhr1anqt7qz3'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ba5b0bec71984c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```yaml
thought: The question mentions the deaths of multiple historical figures.
class_name: DESC
class_index: 2
```
data: {'text': 'How many Superbowls have the ers won ?', 'coarse_label': 5, 'fine_label': 38}
task_input: How many Superbowls have the ers won ?, corse_label: 5
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'How many Superbowls have the ers won ?', 'examples_str': None}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
Question: How many Superbowls have the ers won ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\nQuestion: How many Superbowls have the ers won ?\nYour output:'}], 'model': 'gemma-7b-it', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 23:45:01 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'15000'), (b'x-ratelimit-remaining-requests', b'14377'), (b'x-ratelimit-remaining-tokens', b'11722'), (b'x-ratelimit-reset-requests', b'2m17.537s'), (b'x-ratelimit-reset-tokens', b'13.111s'), (b'x-request-id', b'req_01hz3bw9ameynsqxa2ehpargwx'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ba5b0ece38984c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```yaml
thought: The question asks for a numerical count of Superbowls won by a specific team.
class_name: NUM
class_index: 5
```
data: {'text': 'How many inches tall is Stuart Little at birth ?', 'coarse_label': 5, 'fine_label': 38}
task_input: How many inches tall is Stuart Little at birth ?, corse_label: 5
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'How many inches tall is Stuart Little at birth ?', 'examples_str': None}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
Question: How many inches tall is Stuart Little at birth ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\nQuestion: How many inches tall is Stuart Little at birth ?\nYour output:'}], 'model': 'gemma-7b-it', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 23:45:02 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'15000'), (b'x-ratelimit-remaining-requests', b'14376'), (b'x-ratelimit-remaining-tokens', b'11584'), (b'x-ratelimit-reset-requests', b'2m23.392999999s'), (b'x-ratelimit-reset-tokens', b'13.662s'), (b'x-request-id', b'req_01hz3bw9xme0brt9fvnsp4796h'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ba5b129808984c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```yaml
thought: The question seeks a numerical measurement of Stuart Little's height at birth.
class_name: NUM
class_index: 5
```
responses: [0, 0, 2, 0, 2, 2, 0, 2, 2, 1, 2, 2, 1, 3, 1, 3, 4, 4, 4, 1, 5, 2, 5, 5], targets: [0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5]
num_invalid: 0
Preds tensor: tensor([[1., 0., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0.],
        [0., 0., 1., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0.],
        [0., 0., 1., 0., 0., 0.],
        [0., 0., 1., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0.],
        [0., 0., 1., 0., 0., 0.],
        [0., 0., 1., 0., 0., 0.],
        [0., 1., 0., 0., 0., 0.],
        [0., 0., 1., 0., 0., 0.],
        [0., 0., 1., 0., 0., 0.],
        [0., 1., 0., 0., 0., 0.],
        [0., 0., 0., 1., 0., 0.],
        [0., 1., 0., 0., 0., 0.],
        [0., 0., 0., 1., 0., 0.],
        [0., 0., 0., 0., 1., 0.],
        [0., 0., 0., 0., 1., 0.],
        [0., 0., 0., 0., 1., 0.],
        [0., 1., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 1.],
        [0., 0., 1., 0., 0., 0.],
        [0., 0., 0., 0., 0., 1.],
        [0., 0., 0., 0., 0., 1.]])
Targets tensor: tensor([0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5])
Eval Accuracy Zero shot Start: 0.583, F1: 0.605, score: 1.188, best_weights_per_class: [0.6666662222225186, 1000000.0, 0.7999993600005121, 0.8571421078525788, 0.6222218317653215, 0.6222218317653215]
data: {'text': 'What does pH stand for ?', 'coarse_label': 0, 'fine_label': 1}
task_input: What does pH stand for ?, corse_label: 0
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What does pH stand for ?', 'examples_str': "Question: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What was the education system in the 1960 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a pointsettia to turn red ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What character in The Beverly Hillbillies has the given names Daisy Moses ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What celestial body has a diameter of 864 , 000 miles ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the average time to kiss somene ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CNN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What was the education system in the 1960 's ?
class_name: Entity 
class_index: 1
--------

Question: How do you get a pointsettia to turn red ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What character in The Beverly Hillbillies has the given names Daisy Moses ?
class_name: Human being 
class_index: 3
--------

Question: What celestial body has a diameter of 864 , 000 miles ?
class_name: Location 
class_index: 4
--------

Question: What is the average time to kiss somene ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What does pH stand for ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What was the education system in the 1960 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a pointsettia to turn red ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What character in The Beverly Hillbillies has the given names Daisy Moses ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What celestial body has a diameter of 864 , 000 miles ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the average time to kiss somene ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does pH stand for ?\nYour output:"}], 'model': 'gemma-7b-it', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 23:45:03 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'15000'), (b'x-ratelimit-remaining-requests', b'14375'), (b'x-ratelimit-remaining-tokens', b'11300'), (b'x-ratelimit-reset-requests', b'2m29.329s'), (b'x-ratelimit-reset-tokens', b'14.797s'), (b'x-request-id', b'req_01hz3bwajnfant43rd64h7svbw'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ba5b16da1b984c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```yaml
thought: The question is inquiring about the meaning of an abbreviation.
class_name: Abbreviation
class_index: 0
```
data: {'text': 'What does HIV stand for ?', 'coarse_label': 0, 'fine_label': 1}
task_input: What does HIV stand for ?, corse_label: 0
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What does HIV stand for ?', 'examples_str': "Question: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What was the education system in the 1960 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a pointsettia to turn red ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What character in The Beverly Hillbillies has the given names Daisy Moses ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What celestial body has a diameter of 864 , 000 miles ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the average time to kiss somene ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CNN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What was the education system in the 1960 's ?
class_name: Entity 
class_index: 1
--------

Question: How do you get a pointsettia to turn red ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What character in The Beverly Hillbillies has the given names Daisy Moses ?
class_name: Human being 
class_index: 3
--------

Question: What celestial body has a diameter of 864 , 000 miles ?
class_name: Location 
class_index: 4
--------

Question: What is the average time to kiss somene ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What does HIV stand for ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What was the education system in the 1960 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a pointsettia to turn red ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What character in The Beverly Hillbillies has the given names Daisy Moses ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What celestial body has a diameter of 864 , 000 miles ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the average time to kiss somene ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does HIV stand for ?\nYour output:"}], 'model': 'gemma-7b-it', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 23:45:04 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'15000'), (b'x-ratelimit-remaining-requests', b'14374'), (b'x-ratelimit-remaining-tokens', b'10991'), (b'x-ratelimit-reset-requests', b'2m35.308s'), (b'x-ratelimit-reset-tokens', b'16.035s'), (b'x-request-id', b'req_01hz3bwb89ffsttz50tgx26rgb'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ba5b1b2c60984c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```yaml
thought: The question is inquiring about the acronym HIV.
class_name: Abbreviation
class_index: 0
```
data: {'text': 'What does NECROSIS mean ?', 'coarse_label': 0, 'fine_label': 1}
task_input: What does NECROSIS mean ?, corse_label: 0
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What does NECROSIS mean ?', 'examples_str': "Question: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What was the education system in the 1960 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a pointsettia to turn red ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What character in The Beverly Hillbillies has the given names Daisy Moses ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What celestial body has a diameter of 864 , 000 miles ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the average time to kiss somene ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CNN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What was the education system in the 1960 's ?
class_name: Entity 
class_index: 1
--------

Question: How do you get a pointsettia to turn red ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What character in The Beverly Hillbillies has the given names Daisy Moses ?
class_name: Human being 
class_index: 3
--------

Question: What celestial body has a diameter of 864 , 000 miles ?
class_name: Location 
class_index: 4
--------

Question: What is the average time to kiss somene ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What does NECROSIS mean ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What was the education system in the 1960 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a pointsettia to turn red ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What character in The Beverly Hillbillies has the given names Daisy Moses ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What celestial body has a diameter of 864 , 000 miles ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the average time to kiss somene ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does NECROSIS mean ?\nYour output:"}], 'model': 'gemma-7b-it', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 23:45:04 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'15000'), (b'x-ratelimit-remaining-requests', b'14373'), (b'x-ratelimit-remaining-tokens', b'10783'), (b'x-ratelimit-reset-requests', b'2m40.909999999s'), (b'x-ratelimit-reset-tokens', b'16.867s'), (b'x-request-id', b'req_01hz3bwcacfmssqfwr9jfvfzdv'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ba5b21f892984c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```yaml
thought: The word "NECROSIS" refers to a medical condition.
class_name: Description and abstract concept
class_index: 2
```
data: {'text': 'What is the abbreviation of the International Olympic Committee ?', 'coarse_label': 0, 'fine_label': 0}
task_input: What is the abbreviation of the International Olympic Committee ?, corse_label: 0
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What is the abbreviation of the International Olympic Committee ?', 'examples_str': "Question: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What was the education system in the 1960 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a pointsettia to turn red ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What character in The Beverly Hillbillies has the given names Daisy Moses ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What celestial body has a diameter of 864 , 000 miles ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the average time to kiss somene ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CNN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What was the education system in the 1960 's ?
class_name: Entity 
class_index: 1
--------

Question: How do you get a pointsettia to turn red ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What character in The Beverly Hillbillies has the given names Daisy Moses ?
class_name: Human being 
class_index: 3
--------

Question: What celestial body has a diameter of 864 , 000 miles ?
class_name: Location 
class_index: 4
--------

Question: What is the average time to kiss somene ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What is the abbreviation of the International Olympic Committee ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What was the education system in the 1960 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a pointsettia to turn red ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What character in The Beverly Hillbillies has the given names Daisy Moses ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What celestial body has a diameter of 864 , 000 miles ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the average time to kiss somene ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is the abbreviation of the International Olympic Committee ?\nYour output:"}], 'model': 'gemma-7b-it', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 23:45:05 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'15000'), (b'x-ratelimit-remaining-requests', b'14372'), (b'x-ratelimit-remaining-tokens', b'10415'), (b'x-ratelimit-reset-requests', b'2m47.482s'), (b'x-ratelimit-reset-tokens', b'18.337s'), (b'x-request-id', b'req_01hz3bwctmens97jzap6ycwn8g'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ba5b253a37984c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```yaml
thought: The question is inquiring about the abbreviation of the International Olympic Committee.
class_name: Abbreviation
class_index: 0
```
data: {'text': 'What color was the hundred billionth crayon made by Crayola ?', 'coarse_label': 1, 'fine_label': 4}
task_input: What color was the hundred billionth crayon made by Crayola ?, corse_label: 1
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What color was the hundred billionth crayon made by Crayola ?', 'examples_str': "Question: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What was the education system in the 1960 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a pointsettia to turn red ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What character in The Beverly Hillbillies has the given names Daisy Moses ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What celestial body has a diameter of 864 , 000 miles ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the average time to kiss somene ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CNN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What was the education system in the 1960 's ?
class_name: Entity 
class_index: 1
--------

Question: How do you get a pointsettia to turn red ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What character in The Beverly Hillbillies has the given names Daisy Moses ?
class_name: Human being 
class_index: 3
--------

Question: What celestial body has a diameter of 864 , 000 miles ?
class_name: Location 
class_index: 4
--------

Question: What is the average time to kiss somene ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What color was the hundred billionth crayon made by Crayola ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What was the education system in the 1960 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a pointsettia to turn red ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What character in The Beverly Hillbillies has the given names Daisy Moses ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What celestial body has a diameter of 864 , 000 miles ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the average time to kiss somene ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What color was the hundred billionth crayon made by Crayola ?\nYour output:"}], 'model': 'gemma-7b-it', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 23:45:06 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'15000'), (b'x-ratelimit-remaining-requests', b'14371'), (b'x-ratelimit-remaining-tokens', b'10051'), (b'x-ratelimit-reset-requests', b'2m53.508999999s'), (b'x-ratelimit-reset-tokens', b'19.795s'), (b'x-request-id', b'req_01hz3bwd9zf2et0rrj6pqc6wwj'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ba5b284bda984c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```yaml
thought: The question seeks to inquire about the color of the hundred billionth crayon produced by Crayola.
class_name: Abbreviation
class_index: 0
```
data: {'text': 'What is a fear of drinking ?', 'coarse_label': 1, 'fine_label': 7}
task_input: What is a fear of drinking ?, corse_label: 1
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What is a fear of drinking ?', 'examples_str': "Question: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What was the education system in the 1960 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a pointsettia to turn red ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What character in The Beverly Hillbillies has the given names Daisy Moses ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What celestial body has a diameter of 864 , 000 miles ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the average time to kiss somene ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CNN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What was the education system in the 1960 's ?
class_name: Entity 
class_index: 1
--------

Question: How do you get a pointsettia to turn red ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What character in The Beverly Hillbillies has the given names Daisy Moses ?
class_name: Human being 
class_index: 3
--------

Question: What celestial body has a diameter of 864 , 000 miles ?
class_name: Location 
class_index: 4
--------

Question: What is the average time to kiss somene ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What is a fear of drinking ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What was the education system in the 1960 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a pointsettia to turn red ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What character in The Beverly Hillbillies has the given names Daisy Moses ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What celestial body has a diameter of 864 , 000 miles ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the average time to kiss somene ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is a fear of drinking ?\nYour output:"}], 'model': 'gemma-7b-it', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 23:45:06 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'15000'), (b'x-ratelimit-remaining-requests', b'14370'), (b'x-ratelimit-remaining-tokens', b'9740'), (b'x-ratelimit-reset-requests', b'2m59.289999999s'), (b'x-ratelimit-reset-tokens', b'21.04s'), (b'x-request-id', b'req_01hz3bwe06ep18jr1n5z8gzbff'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ba5b2cbe58984c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```yaml
thought: The question seeks to inquire about a specific term and its definition.
class_name: Abbreviation
class_index: 0
```
data: {'text': "What 's the word for broken glass or sharp rocks embedded in cement on top of a wall ?", 'coarse_label': 1, 'fine_label': 23}
task_input: What 's the word for broken glass or sharp rocks embedded in cement on top of a wall ?, corse_label: 1
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': "What 's the word for broken glass or sharp rocks embedded in cement on top of a wall ?", 'examples_str': "Question: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What was the education system in the 1960 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a pointsettia to turn red ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What character in The Beverly Hillbillies has the given names Daisy Moses ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What celestial body has a diameter of 864 , 000 miles ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the average time to kiss somene ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CNN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What was the education system in the 1960 's ?
class_name: Entity 
class_index: 1
--------

Question: How do you get a pointsettia to turn red ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What character in The Beverly Hillbillies has the given names Daisy Moses ?
class_name: Human being 
class_index: 3
--------

Question: What celestial body has a diameter of 864 , 000 miles ?
class_name: Location 
class_index: 4
--------

Question: What is the average time to kiss somene ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What 's the word for broken glass or sharp rocks embedded in cement on top of a wall ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What was the education system in the 1960 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a pointsettia to turn red ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What character in The Beverly Hillbillies has the given names Daisy Moses ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What celestial body has a diameter of 864 , 000 miles ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the average time to kiss somene ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What 's the word for broken glass or sharp rocks embedded in cement on top of a wall ?\nYour output:"}], 'model': 'gemma-7b-it', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 23:45:07 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'15000'), (b'x-ratelimit-remaining-requests', b'14369'), (b'x-ratelimit-remaining-tokens', b'9344'), (b'x-ratelimit-reset-requests', b'3m5.585s'), (b'x-ratelimit-reset-tokens', b'22.624s'), (b'x-request-id', b'req_01hz3bwed6ep1917kddvt2e1bh'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ba5b2f5fc2984c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```yaml
thought: The question is inquiring about a specific term related to construction materials.
class_name: Abbreviation
class_index: 0
```
data: {'text': 'What are the top vegetable crops in the world ?', 'coarse_label': 1, 'fine_label': 9}
task_input: What are the top vegetable crops in the world ?, corse_label: 1
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What are the top vegetable crops in the world ?', 'examples_str': "Question: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What was the education system in the 1960 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a pointsettia to turn red ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What character in The Beverly Hillbillies has the given names Daisy Moses ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What celestial body has a diameter of 864 , 000 miles ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the average time to kiss somene ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CNN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What was the education system in the 1960 's ?
class_name: Entity 
class_index: 1
--------

Question: How do you get a pointsettia to turn red ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What character in The Beverly Hillbillies has the given names Daisy Moses ?
class_name: Human being 
class_index: 3
--------

Question: What celestial body has a diameter of 864 , 000 miles ?
class_name: Location 
class_index: 4
--------

Question: What is the average time to kiss somene ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What are the top vegetable crops in the world ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What was the education system in the 1960 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a pointsettia to turn red ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What character in The Beverly Hillbillies has the given names Daisy Moses ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What celestial body has a diameter of 864 , 000 miles ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the average time to kiss somene ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What are the top vegetable crops in the world ?\nYour output:"}], 'model': 'gemma-7b-it', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 23:45:07 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'323'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'15000'), (b'x-ratelimit-remaining-requests', b'14369'), (b'x-ratelimit-remaining-tokens', b'9415'), (b'x-ratelimit-reset-requests', b'3m5.378s'), (b'x-ratelimit-reset-tokens', b'22.337s'), (b'x-request-id', b'req_01hz3bwf0pe079hyd1fqj5sg2r'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ba5b33397b984c-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What was the education system in the 1960 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a pointsettia to turn red ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What character in The Beverly Hillbillies has the given names Daisy Moses ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What celestial body has a diameter of 864 , 000 miles ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the average time to kiss somene ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What are the top vegetable crops in the world ?\nYour output:"}], 'model': 'gemma-7b-it', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 23:45:09 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'15000'), (b'x-ratelimit-remaining-requests', b'14368'), (b'x-ratelimit-remaining-tokens', b'9530'), (b'x-ratelimit-reset-requests', b'3m9.303999999s'), (b'x-ratelimit-reset-tokens', b'21.878s'), (b'x-request-id', b'req_01hz3bwh1gep1s3jbv6ysas6k4'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ba5b4038ac984c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```yaml
thought: The question seeks a list of crops, which aligns with the concept of enumeration.
class_name: Abbreviation
class_index: 0
```
data: {'text': 'Why did the Anglican church split from the Vatican ?', 'coarse_label': 2, 'fine_label': 27}
task_input: Why did the Anglican church split from the Vatican ?, corse_label: 2
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'Why did the Anglican church split from the Vatican ?', 'examples_str': "Question: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What was the education system in the 1960 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a pointsettia to turn red ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What character in The Beverly Hillbillies has the given names Daisy Moses ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What celestial body has a diameter of 864 , 000 miles ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the average time to kiss somene ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CNN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What was the education system in the 1960 's ?
class_name: Entity 
class_index: 1
--------

Question: How do you get a pointsettia to turn red ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What character in The Beverly Hillbillies has the given names Daisy Moses ?
class_name: Human being 
class_index: 3
--------

Question: What celestial body has a diameter of 864 , 000 miles ?
class_name: Location 
class_index: 4
--------

Question: What is the average time to kiss somene ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Why did the Anglican church split from the Vatican ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What was the education system in the 1960 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a pointsettia to turn red ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What character in The Beverly Hillbillies has the given names Daisy Moses ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What celestial body has a diameter of 864 , 000 miles ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the average time to kiss somene ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Why did the Anglican church split from the Vatican ?\nYour output:"}], 'model': 'gemma-7b-it', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 23:45:09 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'323'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'15000'), (b'x-ratelimit-remaining-requests', b'14368'), (b'x-ratelimit-remaining-tokens', b'9567'), (b'x-ratelimit-reset-requests', b'3m11.502999999s'), (b'x-ratelimit-reset-tokens', b'21.731s'), (b'x-request-id', b'req_01hz3bwhh2ek0saswkbwpfajna'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ba5b434a49984c-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What was the education system in the 1960 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a pointsettia to turn red ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What character in The Beverly Hillbillies has the given names Daisy Moses ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What celestial body has a diameter of 864 , 000 miles ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the average time to kiss somene ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Why did the Anglican church split from the Vatican ?\nYour output:"}], 'model': 'gemma-7b-it', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 23:45:12 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'15000'), (b'x-ratelimit-remaining-requests', b'14367'), (b'x-ratelimit-remaining-tokens', b'9678'), (b'x-ratelimit-reset-requests', b'3m15.437s'), (b'x-ratelimit-reset-tokens', b'21.285s'), (b'x-request-id', b'req_01hz3bwkhmfx7ttwam69p2dtdb'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ba5b5038c2984c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```yaml
thought: The question seeks an explanation for the separation of the Anglican Church from the Vatican.
class_name: Description and abstract concept
class_index: 2
```
data: {'text': 'How do I find info about rice importers in the world ?', 'coarse_label': 2, 'fine_label': 26}
task_input: How do I find info about rice importers in the world ?, corse_label: 2
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'How do I find info about rice importers in the world ?', 'examples_str': "Question: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What was the education system in the 1960 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a pointsettia to turn red ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What character in The Beverly Hillbillies has the given names Daisy Moses ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What celestial body has a diameter of 864 , 000 miles ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the average time to kiss somene ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CNN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What was the education system in the 1960 's ?
class_name: Entity 
class_index: 1
--------

Question: How do you get a pointsettia to turn red ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What character in The Beverly Hillbillies has the given names Daisy Moses ?
class_name: Human being 
class_index: 3
--------

Question: What celestial body has a diameter of 864 , 000 miles ?
class_name: Location 
class_index: 4
--------

Question: What is the average time to kiss somene ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: How do I find info about rice importers in the world ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What was the education system in the 1960 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a pointsettia to turn red ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What character in The Beverly Hillbillies has the given names Daisy Moses ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What celestial body has a diameter of 864 , 000 miles ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the average time to kiss somene ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: How do I find info about rice importers in the world ?\nYour output:"}], 'model': 'gemma-7b-it', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 23:45:12 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'323'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'15000'), (b'x-ratelimit-remaining-requests', b'14367'), (b'x-ratelimit-remaining-tokens', b'9774'), (b'x-ratelimit-reset-requests', b'3m17.265s'), (b'x-ratelimit-reset-tokens', b'20.902s'), (b'x-request-id', b'req_01hz3bwm8meay9g35hgnc8xpmg'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ba5b54db6a984c-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What was the education system in the 1960 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a pointsettia to turn red ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What character in The Beverly Hillbillies has the given names Daisy Moses ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What celestial body has a diameter of 864 , 000 miles ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the average time to kiss somene ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: How do I find info about rice importers in the world ?\nYour output:"}], 'model': 'gemma-7b-it', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 23:45:15 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'15000'), (b'x-ratelimit-remaining-requests', b'14366'), (b'x-ratelimit-remaining-tokens', b'9884'), (b'x-ratelimit-reset-requests', b'3m21.201999999s'), (b'x-ratelimit-reset-tokens', b'20.462s'), (b'x-request-id', b'req_01hz3bwp93f2f9v3yvtxgfpeg2'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ba5b61bb9e984c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```yaml
thought: The question seeks information about a specific group of rice importers globally.
class_name: Description and abstract concept
class_index: 2
```
data: {'text': "What 's a water funnel ?", 'coarse_label': 2, 'fine_label': 24}
task_input: What 's a water funnel ?, corse_label: 2
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': "What 's a water funnel ?", 'examples_str': "Question: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What was the education system in the 1960 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a pointsettia to turn red ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What character in The Beverly Hillbillies has the given names Daisy Moses ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What celestial body has a diameter of 864 , 000 miles ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the average time to kiss somene ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CNN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What was the education system in the 1960 's ?
class_name: Entity 
class_index: 1
--------

Question: How do you get a pointsettia to turn red ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What character in The Beverly Hillbillies has the given names Daisy Moses ?
class_name: Human being 
class_index: 3
--------

Question: What celestial body has a diameter of 864 , 000 miles ?
class_name: Location 
class_index: 4
--------

Question: What is the average time to kiss somene ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What 's a water funnel ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What was the education system in the 1960 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a pointsettia to turn red ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What character in The Beverly Hillbillies has the given names Daisy Moses ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What celestial body has a diameter of 864 , 000 miles ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the average time to kiss somene ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What 's a water funnel ?\nYour output:"}], 'model': 'gemma-7b-it', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 23:45:15 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'323'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'15000'), (b'x-ratelimit-remaining-requests', b'14366'), (b'x-ratelimit-remaining-tokens', b'9988'), (b'x-ratelimit-reset-requests', b'3m23.240999999s'), (b'x-ratelimit-reset-tokens', b'20.048s'), (b'x-request-id', b'req_01hz3bwq0terzv2p9bxr2wjb80'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ba5b667e18984c-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What was the education system in the 1960 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a pointsettia to turn red ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What character in The Beverly Hillbillies has the given names Daisy Moses ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What celestial body has a diameter of 864 , 000 miles ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the average time to kiss somene ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What 's a water funnel ?\nYour output:"}], 'model': 'gemma-7b-it', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 23:45:17 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'15000'), (b'x-ratelimit-remaining-requests', b'14365'), (b'x-ratelimit-remaining-tokens', b'10104'), (b'x-ratelimit-reset-requests', b'3m27.182s'), (b'x-ratelimit-reset-tokens', b'19.581s'), (b'x-request-id', b'req_01hz3bws16emyabdgz07wm7evq'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ba5b735d17984c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```yaml
thought: The question inquires about the definition of "water funnel."
class_name: Abbreviation
class_index: 0
```
data: {'text': 'Why do USA fax machines not work in UK , NNP ?', 'coarse_label': 2, 'fine_label': 27}
task_input: Why do USA fax machines not work in UK , NNP ?, corse_label: 2
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'Why do USA fax machines not work in UK , NNP ?', 'examples_str': "Question: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What was the education system in the 1960 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a pointsettia to turn red ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What character in The Beverly Hillbillies has the given names Daisy Moses ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What celestial body has a diameter of 864 , 000 miles ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the average time to kiss somene ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CNN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What was the education system in the 1960 's ?
class_name: Entity 
class_index: 1
--------

Question: How do you get a pointsettia to turn red ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What character in The Beverly Hillbillies has the given names Daisy Moses ?
class_name: Human being 
class_index: 3
--------

Question: What celestial body has a diameter of 864 , 000 miles ?
class_name: Location 
class_index: 4
--------

Question: What is the average time to kiss somene ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Why do USA fax machines not work in UK , NNP ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What was the education system in the 1960 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a pointsettia to turn red ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What character in The Beverly Hillbillies has the given names Daisy Moses ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What celestial body has a diameter of 864 , 000 miles ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the average time to kiss somene ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Why do USA fax machines not work in UK , NNP ?\nYour output:"}], 'model': 'gemma-7b-it', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 23:45:17 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'323'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'15000'), (b'x-ratelimit-remaining-requests', b'14365'), (b'x-ratelimit-remaining-tokens', b'10173'), (b'x-ratelimit-reset-requests', b'3m29.381s'), (b'x-ratelimit-reset-tokens', b'19.308s'), (b'x-request-id', b'req_01hz3bwsmjfmt9gye8yv4547s8'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ba5b773f04984c-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What was the education system in the 1960 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a pointsettia to turn red ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What character in The Beverly Hillbillies has the given names Daisy Moses ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What celestial body has a diameter of 864 , 000 miles ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the average time to kiss somene ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Why do USA fax machines not work in UK , NNP ?\nYour output:"}], 'model': 'gemma-7b-it', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 23:45:20 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'15000'), (b'x-ratelimit-remaining-requests', b'14364'), (b'x-ratelimit-remaining-tokens', b'10282'), (b'x-ratelimit-reset-requests', b'3m33.328s'), (b'x-ratelimit-reset-tokens', b'18.87s'), (b'x-request-id', b'req_01hz3bwvmqentambgd613tkgmm'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ba5b840e7b984c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```yaml
thought: The question seeks to explain why a specific technological device does not function in a different geographical location.
class_name: Description and abstract concept
class_index: 2
```
data: {'text': "Which company claimed to be `` the world 's biggest toy store '' ?", 'coarse_label': 3, 'fine_label': 28}
task_input: Which company claimed to be `` the world 's biggest toy store '' ?, corse_label: 3
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': "Which company claimed to be `` the world 's biggest toy store '' ?", 'examples_str': "Question: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What was the education system in the 1960 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a pointsettia to turn red ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What character in The Beverly Hillbillies has the given names Daisy Moses ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What celestial body has a diameter of 864 , 000 miles ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the average time to kiss somene ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CNN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What was the education system in the 1960 's ?
class_name: Entity 
class_index: 1
--------

Question: How do you get a pointsettia to turn red ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What character in The Beverly Hillbillies has the given names Daisy Moses ?
class_name: Human being 
class_index: 3
--------

Question: What celestial body has a diameter of 864 , 000 miles ?
class_name: Location 
class_index: 4
--------

Question: What is the average time to kiss somene ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Which company claimed to be `` the world 's biggest toy store '' ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What was the education system in the 1960 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a pointsettia to turn red ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What character in The Beverly Hillbillies has the given names Daisy Moses ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What celestial body has a diameter of 864 , 000 miles ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the average time to kiss somene ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Which company claimed to be `` the world 's biggest toy store '' ?\nYour output:"}], 'model': 'gemma-7b-it', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 23:45:20 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'323'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'15000'), (b'x-ratelimit-remaining-requests', b'14364'), (b'x-ratelimit-remaining-tokens', b'10312'), (b'x-ratelimit-reset-requests', b'3m35.500999999s'), (b'x-ratelimit-reset-tokens', b'18.751s'), (b'x-request-id', b'req_01hz3bww4bfpfbn63xk4af7qee'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ba5b872fe5984c-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What was the education system in the 1960 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a pointsettia to turn red ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What character in The Beverly Hillbillies has the given names Daisy Moses ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What celestial body has a diameter of 864 , 000 miles ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the average time to kiss somene ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Which company claimed to be `` the world 's biggest toy store '' ?\nYour output:"}], 'model': 'gemma-7b-it', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 23:45:22 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'15000'), (b'x-ratelimit-remaining-requests', b'14363'), (b'x-ratelimit-remaining-tokens', b'10418'), (b'x-ratelimit-reset-requests', b'3m39.442s'), (b'x-ratelimit-reset-tokens', b'18.328s'), (b'x-request-id', b'req_01hz3bwy4pes0btwvc2pk61s3v'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ba5b940e89984c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```yaml
thought: Which company claimed to be "the world's biggest toy store"?
class_name: Abbreviation
class_index: 0
```
data: {'text': 'Who is the voice of Miss Piggy ?', 'coarse_label': 3, 'fine_label': 29}
task_input: Who is the voice of Miss Piggy ?, corse_label: 3
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'Who is the voice of Miss Piggy ?', 'examples_str': "Question: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What was the education system in the 1960 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a pointsettia to turn red ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What character in The Beverly Hillbillies has the given names Daisy Moses ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What celestial body has a diameter of 864 , 000 miles ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the average time to kiss somene ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CNN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What was the education system in the 1960 's ?
class_name: Entity 
class_index: 1
--------

Question: How do you get a pointsettia to turn red ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What character in The Beverly Hillbillies has the given names Daisy Moses ?
class_name: Human being 
class_index: 3
--------

Question: What celestial body has a diameter of 864 , 000 miles ?
class_name: Location 
class_index: 4
--------

Question: What is the average time to kiss somene ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Who is the voice of Miss Piggy ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What was the education system in the 1960 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a pointsettia to turn red ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What character in The Beverly Hillbillies has the given names Daisy Moses ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What celestial body has a diameter of 864 , 000 miles ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the average time to kiss somene ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Who is the voice of Miss Piggy ?\nYour output:"}], 'model': 'gemma-7b-it', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 23:45:23 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'323'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'15000'), (b'x-ratelimit-remaining-requests', b'14363'), (b'x-ratelimit-remaining-tokens', b'10437'), (b'x-ratelimit-reset-requests', b'3m41.582s'), (b'x-ratelimit-reset-tokens', b'18.251s'), (b'x-request-id', b'req_01hz3bwyhsep29pep2wm3m46jv'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ba5b96aff1984c-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What was the education system in the 1960 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a pointsettia to turn red ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What character in The Beverly Hillbillies has the given names Daisy Moses ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What celestial body has a diameter of 864 , 000 miles ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the average time to kiss somene ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Who is the voice of Miss Piggy ?\nYour output:"}], 'model': 'gemma-7b-it', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 23:45:25 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'15000'), (b'x-ratelimit-remaining-requests', b'14362'), (b'x-ratelimit-remaining-tokens', b'10552'), (b'x-ratelimit-reset-requests', b'3m45.522999999s'), (b'x-ratelimit-reset-tokens', b'17.792s'), (b'x-request-id', b'req_01hz3bx0j3ent9tgz91vwsmhmb'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ba5ba38e76984c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```yaml
thought: Who is the voice of Miss Piggy ?
class_name: Human being
class_index: 3
```
data: {'text': "What 's the supreme policy-making bureau of the Soviet Communist Party ?", 'coarse_label': 3, 'fine_label': 28}
task_input: What 's the supreme policy-making bureau of the Soviet Communist Party ?, corse_label: 3
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': "What 's the supreme policy-making bureau of the Soviet Communist Party ?", 'examples_str': "Question: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What was the education system in the 1960 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a pointsettia to turn red ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What character in The Beverly Hillbillies has the given names Daisy Moses ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What celestial body has a diameter of 864 , 000 miles ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the average time to kiss somene ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CNN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What was the education system in the 1960 's ?
class_name: Entity 
class_index: 1
--------

Question: How do you get a pointsettia to turn red ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What character in The Beverly Hillbillies has the given names Daisy Moses ?
class_name: Human being 
class_index: 3
--------

Question: What celestial body has a diameter of 864 , 000 miles ?
class_name: Location 
class_index: 4
--------

Question: What is the average time to kiss somene ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What 's the supreme policy-making bureau of the Soviet Communist Party ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What was the education system in the 1960 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a pointsettia to turn red ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What character in The Beverly Hillbillies has the given names Daisy Moses ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What celestial body has a diameter of 864 , 000 miles ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the average time to kiss somene ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What 's the supreme policy-making bureau of the Soviet Communist Party ?\nYour output:"}], 'model': 'gemma-7b-it', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 23:45:25 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'329'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'15000'), (b'x-ratelimit-remaining-requests', b'14362'), (b'x-ratelimit-remaining-tokens', b'10662'), (b'x-ratelimit-reset-requests', b'3m47.231999999s'), (b'x-ratelimit-reset-tokens', b'17.349s'), (b'x-request-id', b'req_01hz3bx1a5eypvh47g7tj8ns7d'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ba5ba858f5984c-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What was the education system in the 1960 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a pointsettia to turn red ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What character in The Beverly Hillbillies has the given names Daisy Moses ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What celestial body has a diameter of 864 , 000 miles ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the average time to kiss somene ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What 's the supreme policy-making bureau of the Soviet Communist Party ?\nYour output:"}], 'model': 'gemma-7b-it', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 23:45:28 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'15000'), (b'x-ratelimit-remaining-requests', b'14361'), (b'x-ratelimit-remaining-tokens', b'10769'), (b'x-ratelimit-reset-requests', b'3m51.166s'), (b'x-ratelimit-reset-tokens', b'16.922999999s'), (b'x-request-id', b'req_01hz3bx3aqep28qhpk53r4j8ar'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ba5bb53ec8984c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```yaml
thought: The supreme policy-making bureau of the Soviet Communist Party
class_name: Abbreviation
class_index: 0
```
data: {'text': 'Who gave King Arthur the round table ?', 'coarse_label': 3, 'fine_label': 29}
task_input: Who gave King Arthur the round table ?, corse_label: 3
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'Who gave King Arthur the round table ?', 'examples_str': "Question: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What was the education system in the 1960 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a pointsettia to turn red ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What character in The Beverly Hillbillies has the given names Daisy Moses ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What celestial body has a diameter of 864 , 000 miles ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the average time to kiss somene ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CNN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What was the education system in the 1960 's ?
class_name: Entity 
class_index: 1
--------

Question: How do you get a pointsettia to turn red ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What character in The Beverly Hillbillies has the given names Daisy Moses ?
class_name: Human being 
class_index: 3
--------

Question: What celestial body has a diameter of 864 , 000 miles ?
class_name: Location 
class_index: 4
--------

Question: What is the average time to kiss somene ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Who gave King Arthur the round table ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What was the education system in the 1960 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a pointsettia to turn red ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What character in The Beverly Hillbillies has the given names Daisy Moses ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What celestial body has a diameter of 864 , 000 miles ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the average time to kiss somene ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Who gave King Arthur the round table ?\nYour output:"}], 'model': 'gemma-7b-it', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 23:45:28 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'323'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'15000'), (b'x-ratelimit-remaining-requests', b'14361'), (b'x-ratelimit-remaining-tokens', b'10834'), (b'x-ratelimit-reset-requests', b'3m53.416s'), (b'x-ratelimit-reset-tokens', b'16.664s'), (b'x-request-id', b'req_01hz3bx3wzemytd60kdaxnbb28'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ba5bb8e8b8984c-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What was the education system in the 1960 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a pointsettia to turn red ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What character in The Beverly Hillbillies has the given names Daisy Moses ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What celestial body has a diameter of 864 , 000 miles ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the average time to kiss somene ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Who gave King Arthur the round table ?\nYour output:"}], 'model': 'gemma-7b-it', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 23:45:31 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'15000'), (b'x-ratelimit-remaining-requests', b'14360'), (b'x-ratelimit-remaining-tokens', b'10946'), (b'x-ratelimit-reset-requests', b'3m57.356999999s'), (b'x-ratelimit-reset-tokens', b'16.213s'), (b'x-request-id', b'req_01hz3bx5xbeaz8jv4faxdjjeq9'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ba5bc5cee8984c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```yaml
thought: Who gave King Arthur the round table ?
class_name: Entity
class_index: 1
```
data: {'text': 'What ocean was Amelia Earhart flying over when she disappeared ?', 'coarse_label': 4, 'fine_label': 35}
task_input: What ocean was Amelia Earhart flying over when she disappeared ?, corse_label: 4
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What ocean was Amelia Earhart flying over when she disappeared ?', 'examples_str': "Question: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What was the education system in the 1960 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a pointsettia to turn red ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What character in The Beverly Hillbillies has the given names Daisy Moses ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What celestial body has a diameter of 864 , 000 miles ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the average time to kiss somene ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CNN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What was the education system in the 1960 's ?
class_name: Entity 
class_index: 1
--------

Question: How do you get a pointsettia to turn red ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What character in The Beverly Hillbillies has the given names Daisy Moses ?
class_name: Human being 
class_index: 3
--------

Question: What celestial body has a diameter of 864 , 000 miles ?
class_name: Location 
class_index: 4
--------

Question: What is the average time to kiss somene ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What ocean was Amelia Earhart flying over when she disappeared ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What was the education system in the 1960 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a pointsettia to turn red ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What character in The Beverly Hillbillies has the given names Daisy Moses ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What celestial body has a diameter of 864 , 000 miles ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the average time to kiss somene ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What ocean was Amelia Earhart flying over when she disappeared ?\nYour output:"}], 'model': 'gemma-7b-it', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 23:45:31 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'323'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'15000'), (b'x-ratelimit-remaining-requests', b'14360'), (b'x-ratelimit-remaining-tokens', b'11007'), (b'x-ratelimit-reset-requests', b'3m59.442999999s'), (b'x-ratelimit-reset-tokens', b'15.969s'), (b'x-request-id', b'req_01hz3bx6eqfmabgqh0q1j9krkb'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ba5bc93899984c-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What was the education system in the 1960 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a pointsettia to turn red ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What character in The Beverly Hillbillies has the given names Daisy Moses ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What celestial body has a diameter of 864 , 000 miles ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the average time to kiss somene ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What ocean was Amelia Earhart flying over when she disappeared ?\nYour output:"}], 'model': 'gemma-7b-it', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 23:45:33 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'15000'), (b'x-ratelimit-remaining-requests', b'14359'), (b'x-ratelimit-remaining-tokens', b'11114'), (b'x-ratelimit-reset-requests', b'4m3.387s'), (b'x-ratelimit-reset-tokens', b'15.544s'), (b'x-request-id', b'req_01hz3bx8f1ew4sa16v7sczx84h'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ba5bd61ecd984c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```yaml
thought: The question seeks to identify the ocean Amelia Earhart was flying over when she disappeared.
class_name: Location
class_index: 4
```
data: {'text': 'Where did Dikembe Mutombo go to college ?', 'coarse_label': 4, 'fine_label': 35}
task_input: Where did Dikembe Mutombo go to college ?, corse_label: 4
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'Where did Dikembe Mutombo go to college ?', 'examples_str': "Question: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What was the education system in the 1960 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a pointsettia to turn red ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What character in The Beverly Hillbillies has the given names Daisy Moses ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What celestial body has a diameter of 864 , 000 miles ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the average time to kiss somene ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CNN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What was the education system in the 1960 's ?
class_name: Entity 
class_index: 1
--------

Question: How do you get a pointsettia to turn red ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What character in The Beverly Hillbillies has the given names Daisy Moses ?
class_name: Human being 
class_index: 3
--------

Question: What celestial body has a diameter of 864 , 000 miles ?
class_name: Location 
class_index: 4
--------

Question: What is the average time to kiss somene ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Where did Dikembe Mutombo go to college ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What was the education system in the 1960 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a pointsettia to turn red ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What character in The Beverly Hillbillies has the given names Daisy Moses ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What celestial body has a diameter of 864 , 000 miles ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the average time to kiss somene ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Where did Dikembe Mutombo go to college ?\nYour output:"}], 'model': 'gemma-7b-it', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 23:45:34 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'323'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'15000'), (b'x-ratelimit-remaining-requests', b'14359'), (b'x-ratelimit-remaining-tokens', b'11244'), (b'x-ratelimit-reset-requests', b'4m5.137999999s'), (b'x-ratelimit-reset-tokens', b'15.021s'), (b'x-request-id', b'req_01hz3bx9a1fmatmdath1tvvfs6'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ba5bdb897f984c-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What was the education system in the 1960 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a pointsettia to turn red ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What character in The Beverly Hillbillies has the given names Daisy Moses ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What celestial body has a diameter of 864 , 000 miles ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the average time to kiss somene ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Where did Dikembe Mutombo go to college ?\nYour output:"}], 'model': 'gemma-7b-it', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 23:45:36 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'15000'), (b'x-ratelimit-remaining-requests', b'14358'), (b'x-ratelimit-remaining-tokens', b'11355'), (b'x-ratelimit-reset-requests', b'4m9.085999999s'), (b'x-ratelimit-reset-tokens', b'14.577s'), (b'x-request-id', b'req_01hz3bxba5eyqb4kv8zxy1yzde'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ba5be8591c984c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```yaml
thought: Where did Dikembe Mutombo go to college ?
class_name: Location
class_index: 4
```
data: {'text': 'What capital is built around Monument Circle which contains soldiers and sailors monument ?', 'coarse_label': 4, 'fine_label': 32}
task_input: What capital is built around Monument Circle which contains soldiers and sailors monument ?, corse_label: 4
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What capital is built around Monument Circle which contains soldiers and sailors monument ?', 'examples_str': "Question: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What was the education system in the 1960 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a pointsettia to turn red ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What character in The Beverly Hillbillies has the given names Daisy Moses ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What celestial body has a diameter of 864 , 000 miles ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the average time to kiss somene ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CNN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What was the education system in the 1960 's ?
class_name: Entity 
class_index: 1
--------

Question: How do you get a pointsettia to turn red ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What character in The Beverly Hillbillies has the given names Daisy Moses ?
class_name: Human being 
class_index: 3
--------

Question: What celestial body has a diameter of 864 , 000 miles ?
class_name: Location 
class_index: 4
--------

Question: What is the average time to kiss somene ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What capital is built around Monument Circle which contains soldiers and sailors monument ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What was the education system in the 1960 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a pointsettia to turn red ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What character in The Beverly Hillbillies has the given names Daisy Moses ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What celestial body has a diameter of 864 , 000 miles ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the average time to kiss somene ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What capital is built around Monument Circle which contains soldiers and sailors monument ?\nYour output:"}], 'model': 'gemma-7b-it', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 23:45:36 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'323'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'15000'), (b'x-ratelimit-remaining-requests', b'14358'), (b'x-ratelimit-remaining-tokens', b'11401'), (b'x-ratelimit-reset-requests', b'4m11.482s'), (b'x-ratelimit-reset-tokens', b'14.395s'), (b'x-request-id', b'req_01hz3bxbtcfpfrycpptmxbmvdh'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ba5beb9af1984c-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What was the education system in the 1960 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a pointsettia to turn red ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What character in The Beverly Hillbillies has the given names Daisy Moses ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What celestial body has a diameter of 864 , 000 miles ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the average time to kiss somene ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What capital is built around Monument Circle which contains soldiers and sailors monument ?\nYour output:"}], 'model': 'gemma-7b-it', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 23:45:39 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'15000'), (b'x-ratelimit-remaining-requests', b'14357'), (b'x-ratelimit-remaining-tokens', b'11501'), (b'x-ratelimit-reset-requests', b'4m15.421999999s'), (b'x-ratelimit-reset-tokens', b'13.995s'), (b'x-request-id', b'req_01hz3bxdtrffvr1ke5p7yem8nx'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ba5bf879f9984c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```yaml
thought: The question describes a physical location with a specific monument.
class_name: Location
class_index: 4
```
data: {'text': "What are Britain 's two longest rivers ?", 'coarse_label': 4, 'fine_label': 35}
task_input: What are Britain 's two longest rivers ?, corse_label: 4
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': "What are Britain 's two longest rivers ?", 'examples_str': "Question: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What was the education system in the 1960 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a pointsettia to turn red ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What character in The Beverly Hillbillies has the given names Daisy Moses ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What celestial body has a diameter of 864 , 000 miles ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the average time to kiss somene ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CNN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What was the education system in the 1960 's ?
class_name: Entity 
class_index: 1
--------

Question: How do you get a pointsettia to turn red ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What character in The Beverly Hillbillies has the given names Daisy Moses ?
class_name: Human being 
class_index: 3
--------

Question: What celestial body has a diameter of 864 , 000 miles ?
class_name: Location 
class_index: 4
--------

Question: What is the average time to kiss somene ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What are Britain 's two longest rivers ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What was the education system in the 1960 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a pointsettia to turn red ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What character in The Beverly Hillbillies has the given names Daisy Moses ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What celestial body has a diameter of 864 , 000 miles ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the average time to kiss somene ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What are Britain 's two longest rivers ?\nYour output:"}], 'model': 'gemma-7b-it', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 23:45:39 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'323'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'15000'), (b'x-ratelimit-remaining-requests', b'14357'), (b'x-ratelimit-remaining-tokens', b'11543'), (b'x-ratelimit-reset-requests', b'4m17.536s'), (b'x-ratelimit-reset-tokens', b'13.826s'), (b'x-request-id', b'req_01hz3bxe99emz97tam59n7c1qj'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ba5bfb5b63984c-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What was the education system in the 1960 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a pointsettia to turn red ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What character in The Beverly Hillbillies has the given names Daisy Moses ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What celestial body has a diameter of 864 , 000 miles ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the average time to kiss somene ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What are Britain 's two longest rivers ?\nYour output:"}], 'model': 'gemma-7b-it', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 23:45:41 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'15000'), (b'x-ratelimit-remaining-requests', b'14356'), (b'x-ratelimit-remaining-tokens', b'11659'), (b'x-ratelimit-reset-requests', b'4m21.463999999s'), (b'x-ratelimit-reset-tokens', b'13.363s'), (b'x-request-id', b'req_01hz3bxga0fx8rrz2am7zra508'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ba5c083972984c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```yaml
thought: The question seeks to identify the names of Britain's two longest rivers.
class_name: Entity
class_index: 1
```
data: {'text': "How many tenths of the Earth 's surface lie under water ?", 'coarse_label': 5, 'fine_label': 38}
task_input: How many tenths of the Earth 's surface lie under water ?, corse_label: 5
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': "How many tenths of the Earth 's surface lie under water ?", 'examples_str': "Question: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What was the education system in the 1960 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a pointsettia to turn red ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What character in The Beverly Hillbillies has the given names Daisy Moses ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What celestial body has a diameter of 864 , 000 miles ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the average time to kiss somene ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CNN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What was the education system in the 1960 's ?
class_name: Entity 
class_index: 1
--------

Question: How do you get a pointsettia to turn red ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What character in The Beverly Hillbillies has the given names Daisy Moses ?
class_name: Human being 
class_index: 3
--------

Question: What celestial body has a diameter of 864 , 000 miles ?
class_name: Location 
class_index: 4
--------

Question: What is the average time to kiss somene ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: How many tenths of the Earth 's surface lie under water ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What was the education system in the 1960 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a pointsettia to turn red ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What character in The Beverly Hillbillies has the given names Daisy Moses ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What celestial body has a diameter of 864 , 000 miles ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the average time to kiss somene ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: How many tenths of the Earth 's surface lie under water ?\nYour output:"}], 'model': 'gemma-7b-it', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 23:45:41 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'323'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'15000'), (b'x-ratelimit-remaining-requests', b'14356'), (b'x-ratelimit-remaining-tokens', b'11730'), (b'x-ratelimit-reset-requests', b'4m23.372s'), (b'x-ratelimit-reset-tokens', b'13.08s'), (b'x-request-id', b'req_01hz3bxgxpeaztbvds47hyd50c'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ba5c0c3b33984c-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What was the education system in the 1960 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a pointsettia to turn red ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What character in The Beverly Hillbillies has the given names Daisy Moses ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What celestial body has a diameter of 864 , 000 miles ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the average time to kiss somene ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: How many tenths of the Earth 's surface lie under water ?\nYour output:"}], 'model': 'gemma-7b-it', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 23:45:44 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'15000'), (b'x-ratelimit-remaining-requests', b'14355'), (b'x-ratelimit-remaining-tokens', b'11842'), (b'x-ratelimit-reset-requests', b'4m27.298999999s'), (b'x-ratelimit-reset-tokens', b'12.631s'), (b'x-request-id', b'req_01hz3bxjyfemzanvs5k33rmbsf'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ba5c192986984c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```yaml
thought: The question inquires about a specific percentage of the Earth's surface covered by water.
class_name: Numeric value
class_index: 5
```
data: {'text': 'When did President Kennedy , Lee Harvey Oswald , and Jack Ruby all die ?', 'coarse_label': 5, 'fine_label': 39}
task_input: When did President Kennedy , Lee Harvey Oswald , and Jack Ruby all die ?, corse_label: 5
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'When did President Kennedy , Lee Harvey Oswald , and Jack Ruby all die ?', 'examples_str': "Question: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What was the education system in the 1960 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a pointsettia to turn red ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What character in The Beverly Hillbillies has the given names Daisy Moses ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What celestial body has a diameter of 864 , 000 miles ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the average time to kiss somene ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CNN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What was the education system in the 1960 's ?
class_name: Entity 
class_index: 1
--------

Question: How do you get a pointsettia to turn red ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What character in The Beverly Hillbillies has the given names Daisy Moses ?
class_name: Human being 
class_index: 3
--------

Question: What celestial body has a diameter of 864 , 000 miles ?
class_name: Location 
class_index: 4
--------

Question: What is the average time to kiss somene ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: When did President Kennedy , Lee Harvey Oswald , and Jack Ruby all die ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What was the education system in the 1960 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a pointsettia to turn red ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What character in The Beverly Hillbillies has the given names Daisy Moses ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What celestial body has a diameter of 864 , 000 miles ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the average time to kiss somene ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: When did President Kennedy , Lee Harvey Oswald , and Jack Ruby all die ?\nYour output:"}], 'model': 'gemma-7b-it', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 23:45:44 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'323'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'15000'), (b'x-ratelimit-remaining-requests', b'14355'), (b'x-ratelimit-remaining-tokens', b'11900'), (b'x-ratelimit-reset-requests', b'4m29.407999999s'), (b'x-ratelimit-reset-tokens', b'12.399s'), (b'x-request-id', b'req_01hz3bxkh0ew5achjbrjjkzag2'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ba5c1ceb89984c-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What was the education system in the 1960 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a pointsettia to turn red ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What character in The Beverly Hillbillies has the given names Daisy Moses ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What celestial body has a diameter of 864 , 000 miles ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the average time to kiss somene ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: When did President Kennedy , Lee Harvey Oswald , and Jack Ruby all die ?\nYour output:"}], 'model': 'gemma-7b-it', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 23:45:46 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'15000'), (b'x-ratelimit-remaining-requests', b'14354'), (b'x-ratelimit-remaining-tokens', b'12003'), (b'x-ratelimit-reset-requests', b'4m33.353999999s'), (b'x-ratelimit-reset-tokens', b'11.985s'), (b'x-request-id', b'req_01hz3bxnh6es18vmp7xcfzv9nv'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ba5c29baa3984c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```yaml
thought: When did President Kennedy, Lee Harvey Oswald, and Jack Ruby all die?
class_name: Event
class_index: 2
```
data: {'text': 'How many Superbowls have the ers won ?', 'coarse_label': 5, 'fine_label': 38}
task_input: How many Superbowls have the ers won ?, corse_label: 5
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'How many Superbowls have the ers won ?', 'examples_str': "Question: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What was the education system in the 1960 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a pointsettia to turn red ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What character in The Beverly Hillbillies has the given names Daisy Moses ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What celestial body has a diameter of 864 , 000 miles ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the average time to kiss somene ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CNN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What was the education system in the 1960 's ?
class_name: Entity 
class_index: 1
--------

Question: How do you get a pointsettia to turn red ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What character in The Beverly Hillbillies has the given names Daisy Moses ?
class_name: Human being 
class_index: 3
--------

Question: What celestial body has a diameter of 864 , 000 miles ?
class_name: Location 
class_index: 4
--------

Question: What is the average time to kiss somene ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: How many Superbowls have the ers won ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What was the education system in the 1960 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a pointsettia to turn red ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What character in The Beverly Hillbillies has the given names Daisy Moses ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What celestial body has a diameter of 864 , 000 miles ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the average time to kiss somene ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: How many Superbowls have the ers won ?\nYour output:"}], 'model': 'gemma-7b-it', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 23:45:47 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'323'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'15000'), (b'x-ratelimit-remaining-requests', b'14354'), (b'x-ratelimit-remaining-tokens', b'12047'), (b'x-ratelimit-reset-requests', b'4m35.487s'), (b'x-ratelimit-reset-tokens', b'11.809s'), (b'x-request-id', b'req_01hz3bxp18eyr9rsg5kzmqtdzx'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ba5c2cfc87984c-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What was the education system in the 1960 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a pointsettia to turn red ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What character in The Beverly Hillbillies has the given names Daisy Moses ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What celestial body has a diameter of 864 , 000 miles ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the average time to kiss somene ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: How many Superbowls have the ers won ?\nYour output:"}], 'model': 'gemma-7b-it', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 23:45:49 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'15000'), (b'x-ratelimit-remaining-requests', b'14353'), (b'x-ratelimit-remaining-tokens', b'12160'), (b'x-ratelimit-reset-requests', b'4m39.427999999s'), (b'x-ratelimit-reset-tokens', b'11.358s'), (b'x-request-id', b'req_01hz3bxr1jew5bh30ehz9j4mxp'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ba5c39cb6f984c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```yaml
thought: How many Superbowls have the ers won ?
class_name: Numeric value
class_index: 5
```
data: {'text': 'How many inches tall is Stuart Little at birth ?', 'coarse_label': 5, 'fine_label': 38}
task_input: How many inches tall is Stuart Little at birth ?, corse_label: 5
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'How many inches tall is Stuart Little at birth ?', 'examples_str': "Question: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What was the education system in the 1960 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a pointsettia to turn red ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What character in The Beverly Hillbillies has the given names Daisy Moses ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What celestial body has a diameter of 864 , 000 miles ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the average time to kiss somene ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CNN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What was the education system in the 1960 's ?
class_name: Entity 
class_index: 1
--------

Question: How do you get a pointsettia to turn red ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What character in The Beverly Hillbillies has the given names Daisy Moses ?
class_name: Human being 
class_index: 3
--------

Question: What celestial body has a diameter of 864 , 000 miles ?
class_name: Location 
class_index: 4
--------

Question: What is the average time to kiss somene ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: How many inches tall is Stuart Little at birth ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What was the education system in the 1960 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a pointsettia to turn red ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What character in The Beverly Hillbillies has the given names Daisy Moses ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What celestial body has a diameter of 864 , 000 miles ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the average time to kiss somene ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: How many inches tall is Stuart Little at birth ?\nYour output:"}], 'model': 'gemma-7b-it', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 23:45:49 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'323'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'15000'), (b'x-ratelimit-remaining-requests', b'14353'), (b'x-ratelimit-remaining-tokens', b'12200'), (b'x-ratelimit-reset-requests', b'4m41.506999999s'), (b'x-ratelimit-reset-tokens', b'11.198s'), (b'x-request-id', b'req_01hz3bxrh1farb9jbj6xgnqyjc'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ba5c3ced2c984c-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What was the education system in the 1960 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a pointsettia to turn red ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What character in The Beverly Hillbillies has the given names Daisy Moses ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What celestial body has a diameter of 864 , 000 miles ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the average time to kiss somene ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: How many inches tall is Stuart Little at birth ?\nYour output:"}], 'model': 'gemma-7b-it', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 23:45:52 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'15000'), (b'x-ratelimit-remaining-requests', b'14352'), (b'x-ratelimit-remaining-tokens', b'12313'), (b'x-ratelimit-reset-requests', b'4m45.439s'), (b'x-ratelimit-reset-tokens', b'10.747s'), (b'x-request-id', b'req_01hz3bxthnen0b8anay5hzv5mj'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ba5c49dbd9984c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```yaml
thought: The question inquires about a specific physical attribute of a fictional character.
class_name: Human being
class_index: 3
```
responses: [0, 0, 2, 0, 0, 0, 0, 0, 2, 2, 0, 2, 0, 3, 0, 1, 4, 4, 4, 1, 5, 2, 5, 3], targets: [0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5]
num_invalid: 0
Preds tensor: tensor([[1., 0., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0.],
        [0., 0., 1., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0.],
        [0., 0., 1., 0., 0., 0.],
        [0., 0., 1., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0.],
        [0., 0., 1., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0.],
        [0., 0., 0., 1., 0., 0.],
        [1., 0., 0., 0., 0., 0.],
        [0., 1., 0., 0., 0., 0.],
        [0., 0., 0., 0., 1., 0.],
        [0., 0., 0., 0., 1., 0.],
        [0., 0., 0., 0., 1., 0.],
        [0., 1., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 1.],
        [0., 0., 1., 0., 0., 0.],
        [0., 0., 0., 0., 0., 1.],
        [0., 0., 0., 1., 0., 0.]])
Targets tensor: tensor([0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5])
Eval Accuracy Start: 0.5, F1: 0.492, score: 1.188, best_weights_per_class: [0.8484841254938575, 1000000.0, 0.7058818447719127, 1.7142827463212307, 0.6222218317653215, 0.8571421078525788]
data: {'text': 'What does I.V. stand for ?', 'coarse_label': 0, 'fine_label': 1}
task_input: What does I.V. stand for ?, corse_label: 0
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What does I.V. stand for ?', 'examples_str': "Question: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What was the education system in the 1960 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a pointsettia to turn red ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What character in The Beverly Hillbillies has the given names Daisy Moses ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What celestial body has a diameter of 864 , 000 miles ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the average time to kiss somene ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CNN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What was the education system in the 1960 's ?
class_name: Entity 
class_index: 1
--------

Question: How do you get a pointsettia to turn red ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What character in The Beverly Hillbillies has the given names Daisy Moses ?
class_name: Human being 
class_index: 3
--------

Question: What celestial body has a diameter of 864 , 000 miles ?
class_name: Location 
class_index: 4
--------

Question: What is the average time to kiss somene ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What does I.V. stand for ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What was the education system in the 1960 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a pointsettia to turn red ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What character in The Beverly Hillbillies has the given names Daisy Moses ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What celestial body has a diameter of 864 , 000 miles ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the average time to kiss somene ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does I.V. stand for ?\nYour output:"}], 'model': 'gemma-7b-it', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 23:45:52 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'323'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'15000'), (b'x-ratelimit-remaining-requests', b'14352'), (b'x-ratelimit-remaining-tokens', b'12397'), (b'x-ratelimit-reset-requests', b'4m47.321s'), (b'x-ratelimit-reset-tokens', b'10.409s'), (b'x-request-id', b'req_01hz3bxv6xe25rbcb48pvxnm0h'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ba5c4e1dc8984c-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What was the education system in the 1960 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a pointsettia to turn red ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What character in The Beverly Hillbillies has the given names Daisy Moses ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What celestial body has a diameter of 864 , 000 miles ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the average time to kiss somene ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does I.V. stand for ?\nYour output:"}], 'model': 'gemma-7b-it', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 23:45:55 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'15000'), (b'x-ratelimit-remaining-requests', b'14351'), (b'x-ratelimit-remaining-tokens', b'12517'), (b'x-ratelimit-reset-requests', b'4m51.247999999s'), (b'x-ratelimit-reset-tokens', b'9.931s'), (b'x-request-id', b'req_01hz3bxx7pes1vkxbb2g2ra9ev'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ba5c5b0c4c984c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```yaml
thought: What does I.V. stand for ?
class_name: Abbreviation
class_index: 0
```
data: {'text': 'What does NASA stand for ?', 'coarse_label': 0, 'fine_label': 1}
task_input: What does NASA stand for ?, corse_label: 0
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What does NASA stand for ?', 'examples_str': "Question: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What was the education system in the 1960 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a pointsettia to turn red ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What character in The Beverly Hillbillies has the given names Daisy Moses ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What celestial body has a diameter of 864 , 000 miles ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the average time to kiss somene ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CNN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What was the education system in the 1960 's ?
class_name: Entity 
class_index: 1
--------

Question: How do you get a pointsettia to turn red ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What character in The Beverly Hillbillies has the given names Daisy Moses ?
class_name: Human being 
class_index: 3
--------

Question: What celestial body has a diameter of 864 , 000 miles ?
class_name: Location 
class_index: 4
--------

Question: What is the average time to kiss somene ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What does NASA stand for ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What was the education system in the 1960 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a pointsettia to turn red ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What character in The Beverly Hillbillies has the given names Daisy Moses ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What celestial body has a diameter of 864 , 000 miles ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the average time to kiss somene ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does NASA stand for ?\nYour output:"}], 'model': 'gemma-7b-it', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 23:45:55 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'322'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'1'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'15000'), (b'x-ratelimit-remaining-requests', b'14351'), (b'x-ratelimit-remaining-tokens', b'12696'), (b'x-ratelimit-reset-requests', b'4m52.945s'), (b'x-ratelimit-reset-tokens', b'9.213s'), (b'x-request-id', b'req_01hz3bxy8pek2savrjpz6x5zvv'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ba5c619fd8984c-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 1.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What was the education system in the 1960 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a pointsettia to turn red ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What character in The Beverly Hillbillies has the given names Daisy Moses ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What celestial body has a diameter of 864 , 000 miles ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the average time to kiss somene ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does NASA stand for ?\nYour output:"}], 'model': 'gemma-7b-it', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 23:45:57 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'15000'), (b'x-ratelimit-remaining-requests', b'14350'), (b'x-ratelimit-remaining-tokens', b'12563'), (b'x-ratelimit-reset-requests', b'4m57.883999999s'), (b'x-ratelimit-reset-tokens', b'9.748s'), (b'x-request-id', b'req_01hz3bxz9veyrbm7e5ctt3y36y'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ba5c684b0c984c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```yaml
thought: The acronym of NASA
class_name: Abbreviation
class_index: 0
```
data: {'text': 'What does the abbreviation SOS mean ?', 'coarse_label': 0, 'fine_label': 1}
task_input: What does the abbreviation SOS mean ?, corse_label: 0
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What does the abbreviation SOS mean ?', 'examples_str': "Question: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What was the education system in the 1960 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a pointsettia to turn red ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What character in The Beverly Hillbillies has the given names Daisy Moses ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What celestial body has a diameter of 864 , 000 miles ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the average time to kiss somene ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CNN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What was the education system in the 1960 's ?
class_name: Entity 
class_index: 1
--------

Question: How do you get a pointsettia to turn red ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What character in The Beverly Hillbillies has the given names Daisy Moses ?
class_name: Human being 
class_index: 3
--------

Question: What celestial body has a diameter of 864 , 000 miles ?
class_name: Location 
class_index: 4
--------

Question: What is the average time to kiss somene ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What does the abbreviation SOS mean ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What was the education system in the 1960 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a pointsettia to turn red ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What character in The Beverly Hillbillies has the given names Daisy Moses ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What celestial body has a diameter of 864 , 000 miles ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the average time to kiss somene ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does the abbreviation SOS mean ?\nYour output:"}], 'model': 'gemma-7b-it', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 23:45:57 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'329'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'15000'), (b'x-ratelimit-remaining-requests', b'14350'), (b'x-ratelimit-remaining-tokens', b'12677'), (b'x-ratelimit-reset-requests', b'4m59.235999999s'), (b'x-ratelimit-reset-tokens', b'9.29s'), (b'x-request-id', b'req_01hz3by01rfmw9zz01vfeqd56y'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ba5c6d0dac984c-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What was the education system in the 1960 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a pointsettia to turn red ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What character in The Beverly Hillbillies has the given names Daisy Moses ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What celestial body has a diameter of 864 , 000 miles ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the average time to kiss somene ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does the abbreviation SOS mean ?\nYour output:"}], 'model': 'gemma-7b-it', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 23:45:59 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'15000'), (b'x-ratelimit-remaining-requests', b'14349'), (b'x-ratelimit-remaining-tokens', b'12793'), (b'x-ratelimit-reset-requests', b'5m3.17s'), (b'x-ratelimit-reset-tokens', b'8.827s'), (b'x-request-id', b'req_01hz3by22beb0t2thjkx1yxr2f'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ba5c79fc2d984c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```yaml
thought: The question is inquiring about the meaning of an abbreviation.
class_name: Abbreviation
class_index: 0
```
data: {'text': 'What does CPR stand for ?', 'coarse_label': 0, 'fine_label': 1}
task_input: What does CPR stand for ?, corse_label: 0
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What does CPR stand for ?', 'examples_str': "Question: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What was the education system in the 1960 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a pointsettia to turn red ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What character in The Beverly Hillbillies has the given names Daisy Moses ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What celestial body has a diameter of 864 , 000 miles ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the average time to kiss somene ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CNN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What was the education system in the 1960 's ?
class_name: Entity 
class_index: 1
--------

Question: How do you get a pointsettia to turn red ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What character in The Beverly Hillbillies has the given names Daisy Moses ?
class_name: Human being 
class_index: 3
--------

Question: What celestial body has a diameter of 864 , 000 miles ?
class_name: Location 
class_index: 4
--------

Question: What is the average time to kiss somene ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What does CPR stand for ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What was the education system in the 1960 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a pointsettia to turn red ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What character in The Beverly Hillbillies has the given names Daisy Moses ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What celestial body has a diameter of 864 , 000 miles ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the average time to kiss somene ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does CPR stand for ?\nYour output:"}], 'model': 'gemma-7b-it', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 23:45:59 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'323'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'15000'), (b'x-ratelimit-remaining-requests', b'14349'), (b'x-ratelimit-remaining-tokens', b'12825'), (b'x-ratelimit-reset-requests', b'5m5.543s'), (b'x-ratelimit-reset-tokens', b'8.698s'), (b'x-request-id', b'req_01hz3by2gkek3b0611fvxzphnv'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ba5c7cdd86984c-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What was the education system in the 1960 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a pointsettia to turn red ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What character in The Beverly Hillbillies has the given names Daisy Moses ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What celestial body has a diameter of 864 , 000 miles ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the average time to kiss somene ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does CPR stand for ?\nYour output:"}], 'model': 'gemma-7b-it', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 23:46:02 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'15000'), (b'x-ratelimit-remaining-requests', b'14348'), (b'x-ratelimit-remaining-tokens', b'12946'), (b'x-ratelimit-reset-requests', b'5m9.468999999s'), (b'x-ratelimit-reset-tokens', b'8.215999999s'), (b'x-request-id', b'req_01hz3by4hee09rbk08vnyy54pp'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ba5c89cc68984c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```yaml
thought: The acronym CPR stands for Cardiopulmonary Resuscitation.
class_name: Abbreviation
class_index: 0
```
data: {'text': 'What kind of gas is in a fluorescent bulb ?', 'coarse_label': 1, 'fine_label': 18}
task_input: What kind of gas is in a fluorescent bulb ?, corse_label: 1
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What kind of gas is in a fluorescent bulb ?', 'examples_str': "Question: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What was the education system in the 1960 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a pointsettia to turn red ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What character in The Beverly Hillbillies has the given names Daisy Moses ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What celestial body has a diameter of 864 , 000 miles ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the average time to kiss somene ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CNN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What was the education system in the 1960 's ?
class_name: Entity 
class_index: 1
--------

Question: How do you get a pointsettia to turn red ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What character in The Beverly Hillbillies has the given names Daisy Moses ?
class_name: Human being 
class_index: 3
--------

Question: What celestial body has a diameter of 864 , 000 miles ?
class_name: Location 
class_index: 4
--------

Question: What is the average time to kiss somene ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What kind of gas is in a fluorescent bulb ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What was the education system in the 1960 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a pointsettia to turn red ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What character in The Beverly Hillbillies has the given names Daisy Moses ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What celestial body has a diameter of 864 , 000 miles ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the average time to kiss somene ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What kind of gas is in a fluorescent bulb ?\nYour output:"}], 'model': 'gemma-7b-it', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 23:46:02 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'323'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'15000'), (b'x-ratelimit-remaining-requests', b'14348'), (b'x-ratelimit-remaining-tokens', b'12969'), (b'x-ratelimit-reset-requests', b'5m11.574s'), (b'x-ratelimit-reset-tokens', b'8.122999999s'), (b'x-request-id', b'req_01hz3by4ysf2h8p3yxm2428yqn'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ba5c8c7db4984c-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What was the education system in the 1960 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a pointsettia to turn red ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What character in The Beverly Hillbillies has the given names Daisy Moses ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What celestial body has a diameter of 864 , 000 miles ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the average time to kiss somene ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What kind of gas is in a fluorescent bulb ?\nYour output:"}], 'model': 'gemma-7b-it', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 23:46:04 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'15000'), (b'x-ratelimit-remaining-requests', b'14347'), (b'x-ratelimit-remaining-tokens', b'13084'), (b'x-ratelimit-reset-requests', b'5m15.5s'), (b'x-ratelimit-reset-tokens', b'7.661s'), (b'x-request-id', b'req_01hz3by6zkfasb72488s752s1v'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ba5c996c7a984c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```yaml
thought: The question seeks to identify the type of gas present in a fluorescent bulb.
class_name: Abbreviation
class_index: 0
```
data: {'text': 'What is a group of turkeys called ?', 'coarse_label': 1, 'fine_label': 2}
task_input: What is a group of turkeys called ?, corse_label: 1
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What is a group of turkeys called ?', 'examples_str': "Question: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What was the education system in the 1960 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a pointsettia to turn red ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What character in The Beverly Hillbillies has the given names Daisy Moses ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What celestial body has a diameter of 864 , 000 miles ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the average time to kiss somene ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CNN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What was the education system in the 1960 's ?
class_name: Entity 
class_index: 1
--------

Question: How do you get a pointsettia to turn red ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What character in The Beverly Hillbillies has the given names Daisy Moses ?
class_name: Human being 
class_index: 3
--------

Question: What celestial body has a diameter of 864 , 000 miles ?
class_name: Location 
class_index: 4
--------

Question: What is the average time to kiss somene ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What is a group of turkeys called ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What was the education system in the 1960 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a pointsettia to turn red ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What character in The Beverly Hillbillies has the given names Daisy Moses ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What celestial body has a diameter of 864 , 000 miles ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the average time to kiss somene ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is a group of turkeys called ?\nYour output:"}], 'model': 'gemma-7b-it', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 23:46:04 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'329'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'15000'), (b'x-ratelimit-remaining-requests', b'14347'), (b'x-ratelimit-remaining-tokens', b'13129'), (b'x-ratelimit-reset-requests', b'5m17.474s'), (b'x-ratelimit-reset-tokens', b'7.481s'), (b'x-request-id', b'req_01hz3by7g2en0tyzrynr7j2pkw'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ba5c9cbe2f984c-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What was the education system in the 1960 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a pointsettia to turn red ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What character in The Beverly Hillbillies has the given names Daisy Moses ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What celestial body has a diameter of 864 , 000 miles ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the average time to kiss somene ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is a group of turkeys called ?\nYour output:"}], 'model': 'gemma-7b-it', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 23:46:07 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'15000'), (b'x-ratelimit-remaining-requests', b'14346'), (b'x-ratelimit-remaining-tokens', b'13243'), (b'x-ratelimit-reset-requests', b'5m21.412999999s'), (b'x-ratelimit-reset-tokens', b'7.025s'), (b'x-request-id', b'req_01hz3by9gfep4895ttrj2f2x5e'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ba5ca99c55984c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```yaml
thought: The question is inquiring about a collective noun for turkeys.
class_name: Abbreviation
class_index: 0
```
data: {'text': 'What is the only artery that carries blue blood from the heart to the lungs ?', 'coarse_label': 1, 'fine_label': 3}
task_input: What is the only artery that carries blue blood from the heart to the lungs ?, corse_label: 1
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What is the only artery that carries blue blood from the heart to the lungs ?', 'examples_str': "Question: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What was the education system in the 1960 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a pointsettia to turn red ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What character in The Beverly Hillbillies has the given names Daisy Moses ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What celestial body has a diameter of 864 , 000 miles ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the average time to kiss somene ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CNN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What was the education system in the 1960 's ?
class_name: Entity 
class_index: 1
--------

Question: How do you get a pointsettia to turn red ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What character in The Beverly Hillbillies has the given names Daisy Moses ?
class_name: Human being 
class_index: 3
--------

Question: What celestial body has a diameter of 864 , 000 miles ?
class_name: Location 
class_index: 4
--------

Question: What is the average time to kiss somene ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What is the only artery that carries blue blood from the heart to the lungs ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What was the education system in the 1960 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a pointsettia to turn red ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What character in The Beverly Hillbillies has the given names Daisy Moses ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What celestial body has a diameter of 864 , 000 miles ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the average time to kiss somene ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is the only artery that carries blue blood from the heart to the lungs ?\nYour output:"}], 'model': 'gemma-7b-it', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 23:46:07 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'323'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'15000'), (b'x-ratelimit-remaining-requests', b'14346'), (b'x-ratelimit-remaining-tokens', b'13291'), (b'x-ratelimit-reset-requests', b'5m23.478s'), (b'x-ratelimit-reset-tokens', b'6.835s'), (b'x-request-id', b'req_01hz3bya0te269wh6z5nzc12t7'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ba5cacddb6984c-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What was the education system in the 1960 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a pointsettia to turn red ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What character in The Beverly Hillbillies has the given names Daisy Moses ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What celestial body has a diameter of 864 , 000 miles ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the average time to kiss somene ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is the only artery that carries blue blood from the heart to the lungs ?\nYour output:"}], 'model': 'gemma-7b-it', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 23:46:10 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'15000'), (b'x-ratelimit-remaining-requests', b'14345'), (b'x-ratelimit-remaining-tokens', b'13395'), (b'x-ratelimit-reset-requests', b'5m27.416999999s'), (b'x-ratelimit-reset-tokens', b'6.418s'), (b'x-request-id', b'req_01hz3byc16eyrtvgtcparp8682'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ba5cb9bb69984c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```yaml
thought: The question seeks to identify the name of an artery that carries deoxygenated blood from the heart to the lungs.
class_name: Abbreviation
class_index: 0
```
data: {'text': 'What gasses are in the troposphere ?', 'coarse_label': 1, 'fine_label': 18}
task_input: What gasses are in the troposphere ?, corse_label: 1
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What gasses are in the troposphere ?', 'examples_str': "Question: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What was the education system in the 1960 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a pointsettia to turn red ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What character in The Beverly Hillbillies has the given names Daisy Moses ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What celestial body has a diameter of 864 , 000 miles ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the average time to kiss somene ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CNN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What was the education system in the 1960 's ?
class_name: Entity 
class_index: 1
--------

Question: How do you get a pointsettia to turn red ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What character in The Beverly Hillbillies has the given names Daisy Moses ?
class_name: Human being 
class_index: 3
--------

Question: What celestial body has a diameter of 864 , 000 miles ?
class_name: Location 
class_index: 4
--------

Question: What is the average time to kiss somene ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What gasses are in the troposphere ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What was the education system in the 1960 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a pointsettia to turn red ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What character in The Beverly Hillbillies has the given names Daisy Moses ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What celestial body has a diameter of 864 , 000 miles ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the average time to kiss somene ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What gasses are in the troposphere ?\nYour output:"}], 'model': 'gemma-7b-it', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 23:46:10 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'323'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'15000'), (b'x-ratelimit-remaining-requests', b'14345'), (b'x-ratelimit-remaining-tokens', b'13436'), (b'x-ratelimit-reset-requests', b'5m29.466s'), (b'x-ratelimit-reset-tokens', b'6.256s'), (b'x-request-id', b'req_01hz3bychte0f8cy3x195x057z'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ba5cbd1d13984c-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What was the education system in the 1960 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a pointsettia to turn red ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What character in The Beverly Hillbillies has the given names Daisy Moses ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What celestial body has a diameter of 864 , 000 miles ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the average time to kiss somene ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What gasses are in the troposphere ?\nYour output:"}], 'model': 'gemma-7b-it', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 23:46:13 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'15000'), (b'x-ratelimit-remaining-requests', b'14344'), (b'x-ratelimit-remaining-tokens', b'13551'), (b'x-ratelimit-reset-requests', b'5m33.4s'), (b'x-ratelimit-reset-tokens', b'5.794s'), (b'x-request-id', b'req_01hz3byejee0a86307secehy77'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ba5cc9eba8984c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```yaml
thought: The question inquires about the composition of a specific atmospheric layer.
class_name: Description and abstract concept
class_index: 2
```
data: {'text': "What does `` Sitting Shiva '' mean ?", 'coarse_label': 2, 'fine_label': 24}
task_input: What does `` Sitting Shiva '' mean ?, corse_label: 2
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': "What does `` Sitting Shiva '' mean ?", 'examples_str': "Question: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What was the education system in the 1960 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a pointsettia to turn red ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What character in The Beverly Hillbillies has the given names Daisy Moses ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What celestial body has a diameter of 864 , 000 miles ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the average time to kiss somene ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CNN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What was the education system in the 1960 's ?
class_name: Entity 
class_index: 1
--------

Question: How do you get a pointsettia to turn red ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What character in The Beverly Hillbillies has the given names Daisy Moses ?
class_name: Human being 
class_index: 3
--------

Question: What celestial body has a diameter of 864 , 000 miles ?
class_name: Location 
class_index: 4
--------

Question: What is the average time to kiss somene ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What does `` Sitting Shiva '' mean ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What was the education system in the 1960 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a pointsettia to turn red ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What character in The Beverly Hillbillies has the given names Daisy Moses ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What celestial body has a diameter of 864 , 000 miles ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the average time to kiss somene ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does `` Sitting Shiva '' mean ?\nYour output:"}], 'model': 'gemma-7b-it', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 23:46:13 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'329'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'15000'), (b'x-ratelimit-remaining-requests', b'14344'), (b'x-ratelimit-remaining-tokens', b'13705'), (b'x-ratelimit-reset-requests', b'5m35.028999999s'), (b'x-ratelimit-reset-tokens', b'5.177s'), (b'x-request-id', b'req_01hz3byfgvffxaaw9ze12af8qd'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ba5cd01f1d984c-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What was the education system in the 1960 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a pointsettia to turn red ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What character in The Beverly Hillbillies has the given names Daisy Moses ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What celestial body has a diameter of 864 , 000 miles ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the average time to kiss somene ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does `` Sitting Shiva '' mean ?\nYour output:"}], 'model': 'gemma-7b-it', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 23:46:16 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'15000'), (b'x-ratelimit-remaining-requests', b'14343'), (b'x-ratelimit-remaining-tokens', b'13821'), (b'x-ratelimit-reset-requests', b'5m38.964s'), (b'x-ratelimit-reset-tokens', b'4.715s'), (b'x-request-id', b'req_01hz3byhhcen1av8pp9442mxt1'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ba5cdcfe04984c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```yaml
thought: The phrase "Sitting Shiva" refers to a state of deep meditation or contemplation.
class_name: Description and abstract concept
class_index: 2
```
data: {'text': 'What is Wimbledon ?', 'coarse_label': 2, 'fine_label': 24}
task_input: What is Wimbledon ?, corse_label: 2
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What is Wimbledon ?', 'examples_str': "Question: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What was the education system in the 1960 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a pointsettia to turn red ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What character in The Beverly Hillbillies has the given names Daisy Moses ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What celestial body has a diameter of 864 , 000 miles ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the average time to kiss somene ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CNN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What was the education system in the 1960 's ?
class_name: Entity 
class_index: 1
--------

Question: How do you get a pointsettia to turn red ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What character in The Beverly Hillbillies has the given names Daisy Moses ?
class_name: Human being 
class_index: 3
--------

Question: What celestial body has a diameter of 864 , 000 miles ?
class_name: Location 
class_index: 4
--------

Question: What is the average time to kiss somene ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What is Wimbledon ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What was the education system in the 1960 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a pointsettia to turn red ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What character in The Beverly Hillbillies has the given names Daisy Moses ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What celestial body has a diameter of 864 , 000 miles ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the average time to kiss somene ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is Wimbledon ?\nYour output:"}], 'model': 'gemma-7b-it', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 23:46:16 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'322'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'1'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'15000'), (b'x-ratelimit-remaining-requests', b'14343'), (b'x-ratelimit-remaining-tokens', b'14060'), (b'x-ratelimit-reset-requests', b'5m40.683s'), (b'x-ratelimit-reset-tokens', b'3.759s'), (b'x-request-id', b'req_01hz3byjthfmct13ahradq00kw'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ba5ce53a17984c-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 1.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What was the education system in the 1960 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a pointsettia to turn red ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What character in The Beverly Hillbillies has the given names Daisy Moses ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What celestial body has a diameter of 864 , 000 miles ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the average time to kiss somene ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is Wimbledon ?\nYour output:"}], 'model': 'gemma-7b-it', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 23:46:17 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'15000'), (b'x-ratelimit-remaining-requests', b'14342'), (b'x-ratelimit-remaining-tokens', b'13929'), (b'x-ratelimit-reset-requests', b'5m45.617999999s'), (b'x-ratelimit-reset-tokens', b'4.282s'), (b'x-request-id', b'req_01hz3bykvvfmx9d5b3dz10cxe6'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ba5cebddc0984c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```yaml
thought: Wimbledon is a tennis tournament.
class_name: Event
class_index: 2
```
data: {'text': 'What is strep throat ?', 'coarse_label': 2, 'fine_label': 24}
task_input: What is strep throat ?, corse_label: 2
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What is strep throat ?', 'examples_str': "Question: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What was the education system in the 1960 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a pointsettia to turn red ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What character in The Beverly Hillbillies has the given names Daisy Moses ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What celestial body has a diameter of 864 , 000 miles ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the average time to kiss somene ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CNN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What was the education system in the 1960 's ?
class_name: Entity 
class_index: 1
--------

Question: How do you get a pointsettia to turn red ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What character in The Beverly Hillbillies has the given names Daisy Moses ?
class_name: Human being 
class_index: 3
--------

Question: What celestial body has a diameter of 864 , 000 miles ?
class_name: Location 
class_index: 4
--------

Question: What is the average time to kiss somene ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What is strep throat ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What was the education system in the 1960 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a pointsettia to turn red ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What character in The Beverly Hillbillies has the given names Daisy Moses ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What celestial body has a diameter of 864 , 000 miles ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the average time to kiss somene ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is strep throat ?\nYour output:"}], 'model': 'gemma-7b-it', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 23:46:18 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'323'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'15000'), (b'x-ratelimit-remaining-requests', b'14342'), (b'x-ratelimit-remaining-tokens', b'13970'), (b'x-ratelimit-reset-requests', b'5m47.529s'), (b'x-ratelimit-reset-tokens', b'4.119s'), (b'x-request-id', b'req_01hz3bymakffxrf99nag79b4jr'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ba5ceedf2d984c-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What was the education system in the 1960 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a pointsettia to turn red ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What character in The Beverly Hillbillies has the given names Daisy Moses ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What celestial body has a diameter of 864 , 000 miles ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the average time to kiss somene ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is strep throat ?\nYour output:"}], 'model': 'gemma-7b-it', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 23:46:20 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'15000'), (b'x-ratelimit-remaining-requests', b'14341'), (b'x-ratelimit-remaining-tokens', b'14092'), (b'x-ratelimit-reset-requests', b'5m51.448s'), (b'x-ratelimit-reset-tokens', b'3.631s'), (b'x-request-id', b'req_01hz3bypbkes290g9wgm5v9n9k'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ba5cfbce1b984c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```yaml
thought: The term "strep throat" refers to a bacterial infection of the throat.
class_name: Description and abstract concept
class_index: 2
```
data: {'text': 'What is the effect of acid rain ?', 'coarse_label': 2, 'fine_label': 25}
task_input: What is the effect of acid rain ?, corse_label: 2
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What is the effect of acid rain ?', 'examples_str': "Question: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What was the education system in the 1960 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a pointsettia to turn red ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What character in The Beverly Hillbillies has the given names Daisy Moses ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What celestial body has a diameter of 864 , 000 miles ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the average time to kiss somene ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CNN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What was the education system in the 1960 's ?
class_name: Entity 
class_index: 1
--------

Question: How do you get a pointsettia to turn red ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What character in The Beverly Hillbillies has the given names Daisy Moses ?
class_name: Human being 
class_index: 3
--------

Question: What celestial body has a diameter of 864 , 000 miles ?
class_name: Location 
class_index: 4
--------

Question: What is the average time to kiss somene ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What is the effect of acid rain ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What was the education system in the 1960 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a pointsettia to turn red ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What character in The Beverly Hillbillies has the given names Daisy Moses ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What celestial body has a diameter of 864 , 000 miles ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the average time to kiss somene ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is the effect of acid rain ?\nYour output:"}], 'model': 'gemma-7b-it', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 23:46:20 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'323'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'15000'), (b'x-ratelimit-remaining-requests', b'14341'), (b'x-ratelimit-remaining-tokens', b'14120'), (b'x-ratelimit-reset-requests', b'5m53.524s'), (b'x-ratelimit-reset-tokens', b'3.519s'), (b'x-request-id', b'req_01hz3byptheys8h5gyh0s75pem'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ba5cfecfa5984c-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What was the education system in the 1960 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a pointsettia to turn red ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What character in The Beverly Hillbillies has the given names Daisy Moses ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What celestial body has a diameter of 864 , 000 miles ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the average time to kiss somene ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is the effect of acid rain ?\nYour output:"}], 'model': 'gemma-7b-it', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 23:46:23 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'15000'), (b'x-ratelimit-remaining-requests', b'14340'), (b'x-ratelimit-remaining-tokens', b'14236'), (b'x-ratelimit-reset-requests', b'5m57.457999999s'), (b'x-ratelimit-reset-tokens', b'3.054s'), (b'x-request-id', b'req_01hz3byrv3e0fs16agw6r6jjh0'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ba5d0bafa4984c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```yaml
thought: The effect of acid rain on the environment.
class_name: Description and abstract concept
class_index: 2
```
data: {'text': 'Who is a German philosopher ?', 'coarse_label': 3, 'fine_label': 29}
task_input: Who is a German philosopher ?, corse_label: 3
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'Who is a German philosopher ?', 'examples_str': "Question: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What was the education system in the 1960 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a pointsettia to turn red ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What character in The Beverly Hillbillies has the given names Daisy Moses ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What celestial body has a diameter of 864 , 000 miles ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the average time to kiss somene ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CNN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What was the education system in the 1960 's ?
class_name: Entity 
class_index: 1
--------

Question: How do you get a pointsettia to turn red ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What character in The Beverly Hillbillies has the given names Daisy Moses ?
class_name: Human being 
class_index: 3
--------

Question: What celestial body has a diameter of 864 , 000 miles ?
class_name: Location 
class_index: 4
--------

Question: What is the average time to kiss somene ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Who is a German philosopher ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What was the education system in the 1960 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a pointsettia to turn red ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What character in The Beverly Hillbillies has the given names Daisy Moses ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What celestial body has a diameter of 864 , 000 miles ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the average time to kiss somene ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Who is a German philosopher ?\nYour output:"}], 'model': 'gemma-7b-it', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 23:46:23 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'323'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'15000'), (b'x-ratelimit-remaining-requests', b'14340'), (b'x-ratelimit-remaining-tokens', b'14257'), (b'x-ratelimit-reset-requests', b'5m59.584s'), (b'x-ratelimit-reset-tokens', b'2.972s'), (b'x-request-id', b'req_01hz3bys84en1vkde3tpy6jpfj'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ba5d0e593d984c-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What was the education system in the 1960 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a pointsettia to turn red ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What character in The Beverly Hillbillies has the given names Daisy Moses ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What celestial body has a diameter of 864 , 000 miles ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the average time to kiss somene ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Who is a German philosopher ?\nYour output:"}], 'model': 'gemma-7b-it', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 23:46:25 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'15000'), (b'x-ratelimit-remaining-requests', b'14339'), (b'x-ratelimit-remaining-tokens', b'14372'), (b'x-ratelimit-reset-requests', b'6m3.524999999s'), (b'x-ratelimit-reset-tokens', b'2.51s'), (b'x-request-id', b'req_01hz3byv8ffmdb6nchr0s6vmkp'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ba5d1b3806984c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```yaml
thought: The question inquires about a specific individual who is a German philosopher.
class_name: Human being
class_index: 3
```
data: {'text': 'Who painted the ceiling of the Sistine Chapel ?', 'coarse_label': 3, 'fine_label': 29}
task_input: Who painted the ceiling of the Sistine Chapel ?, corse_label: 3
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'Who painted the ceiling of the Sistine Chapel ?', 'examples_str': "Question: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What was the education system in the 1960 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a pointsettia to turn red ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What character in The Beverly Hillbillies has the given names Daisy Moses ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What celestial body has a diameter of 864 , 000 miles ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the average time to kiss somene ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CNN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What was the education system in the 1960 's ?
class_name: Entity 
class_index: 1
--------

Question: How do you get a pointsettia to turn red ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What character in The Beverly Hillbillies has the given names Daisy Moses ?
class_name: Human being 
class_index: 3
--------

Question: What celestial body has a diameter of 864 , 000 miles ?
class_name: Location 
class_index: 4
--------

Question: What is the average time to kiss somene ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Who painted the ceiling of the Sistine Chapel ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What was the education system in the 1960 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a pointsettia to turn red ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What character in The Beverly Hillbillies has the given names Daisy Moses ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What celestial body has a diameter of 864 , 000 miles ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the average time to kiss somene ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Who painted the ceiling of the Sistine Chapel ?\nYour output:"}], 'model': 'gemma-7b-it', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 23:46:25 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'323'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'15000'), (b'x-ratelimit-remaining-requests', b'14339'), (b'x-ratelimit-remaining-tokens', b'14435'), (b'x-ratelimit-reset-requests', b'6m5.403999999s'), (b'x-ratelimit-reset-tokens', b'2.259s'), (b'x-request-id', b'req_01hz3byvv4fmda7w7vbwpn9azg'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ba5d1eea36984c-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What was the education system in the 1960 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a pointsettia to turn red ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What character in The Beverly Hillbillies has the given names Daisy Moses ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What celestial body has a diameter of 864 , 000 miles ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the average time to kiss somene ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Who painted the ceiling of the Sistine Chapel ?\nYour output:"}], 'model': 'gemma-7b-it', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 23:46:28 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'15000'), (b'x-ratelimit-remaining-requests', b'14338'), (b'x-ratelimit-remaining-tokens', b'14546'), (b'x-ratelimit-reset-requests', b'6m9.343s'), (b'x-ratelimit-reset-tokens', b'1.815s'), (b'x-request-id', b'req_01hz3byxvgeystvejdq88eb0xa'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ba5d2bc95a984c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```yaml
thought: The question inquires about the identity of the artist who painted the ceiling of the Sistine Chapel.
class_name: Human being
class_index: 3
```
data: {'text': 'Who developed the vaccination against polio ?', 'coarse_label': 3, 'fine_label': 29}
task_input: Who developed the vaccination against polio ?, corse_label: 3
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'Who developed the vaccination against polio ?', 'examples_str': "Question: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What was the education system in the 1960 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a pointsettia to turn red ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What character in The Beverly Hillbillies has the given names Daisy Moses ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What celestial body has a diameter of 864 , 000 miles ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the average time to kiss somene ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CNN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What was the education system in the 1960 's ?
class_name: Entity 
class_index: 1
--------

Question: How do you get a pointsettia to turn red ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What character in The Beverly Hillbillies has the given names Daisy Moses ?
class_name: Human being 
class_index: 3
--------

Question: What celestial body has a diameter of 864 , 000 miles ?
class_name: Location 
class_index: 4
--------

Question: What is the average time to kiss somene ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Who developed the vaccination against polio ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What was the education system in the 1960 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a pointsettia to turn red ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What character in The Beverly Hillbillies has the given names Daisy Moses ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What celestial body has a diameter of 864 , 000 miles ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the average time to kiss somene ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Who developed the vaccination against polio ?\nYour output:"}], 'model': 'gemma-7b-it', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 23:46:28 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'323'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'15000'), (b'x-ratelimit-remaining-requests', b'14338'), (b'x-ratelimit-remaining-tokens', b'14520'), (b'x-ratelimit-reset-requests', b'6m11.377s'), (b'x-ratelimit-reset-tokens', b'1.92s'), (b'x-request-id', b'req_01hz3byyf0enx9k9qj5b8f0tnw'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ba5d2fbb63984c-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What was the education system in the 1960 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a pointsettia to turn red ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What character in The Beverly Hillbillies has the given names Daisy Moses ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What celestial body has a diameter of 864 , 000 miles ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the average time to kiss somene ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Who developed the vaccination against polio ?\nYour output:"}], 'model': 'gemma-7b-it', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 23:46:30 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'15000'), (b'x-ratelimit-remaining-requests', b'14337'), (b'x-ratelimit-remaining-tokens', b'14597'), (b'x-ratelimit-reset-requests', b'6m15.310999999s'), (b'x-ratelimit-reset-tokens', b'1.612s'), (b'x-request-id', b'req_01hz3bz0fjfmxr7pzrq5ev78jz'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ba5d3c9abd984c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```yaml
thought: The question seeks to identify the inventor of the polio vaccination.
class_name: Human being
class_index: 3
```
data: {'text': 'What French ruler was defeated at the battle of Waterloo ?', 'coarse_label': 3, 'fine_label': 29}
task_input: What French ruler was defeated at the battle of Waterloo ?, corse_label: 3
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What French ruler was defeated at the battle of Waterloo ?', 'examples_str': "Question: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What was the education system in the 1960 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a pointsettia to turn red ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What character in The Beverly Hillbillies has the given names Daisy Moses ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What celestial body has a diameter of 864 , 000 miles ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the average time to kiss somene ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CNN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What was the education system in the 1960 's ?
class_name: Entity 
class_index: 1
--------

Question: How do you get a pointsettia to turn red ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What character in The Beverly Hillbillies has the given names Daisy Moses ?
class_name: Human being 
class_index: 3
--------

Question: What celestial body has a diameter of 864 , 000 miles ?
class_name: Location 
class_index: 4
--------

Question: What is the average time to kiss somene ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What French ruler was defeated at the battle of Waterloo ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What was the education system in the 1960 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a pointsettia to turn red ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What character in The Beverly Hillbillies has the given names Daisy Moses ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What celestial body has a diameter of 864 , 000 miles ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the average time to kiss somene ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What French ruler was defeated at the battle of Waterloo ?\nYour output:"}], 'model': 'gemma-7b-it', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 23:46:31 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'323'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'15000'), (b'x-ratelimit-remaining-requests', b'14337'), (b'x-ratelimit-remaining-tokens', b'14535'), (b'x-ratelimit-reset-requests', b'6m17.503999999s'), (b'x-ratelimit-reset-tokens', b'1.86s'), (b'x-request-id', b'req_01hz3bz0z3fpj88v1ygq6s9q6k'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ba5d3fbc99984c-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What was the education system in the 1960 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a pointsettia to turn red ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What character in The Beverly Hillbillies has the given names Daisy Moses ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What celestial body has a diameter of 864 , 000 miles ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the average time to kiss somene ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What French ruler was defeated at the battle of Waterloo ?\nYour output:"}], 'model': 'gemma-7b-it', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 23:46:33 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'15000'), (b'x-ratelimit-remaining-requests', b'14336'), (b'x-ratelimit-remaining-tokens', b'14593'), (b'x-ratelimit-reset-requests', b'6m21.433s'), (b'x-ratelimit-reset-tokens', b'1.628s'), (b'x-request-id', b'req_01hz3bz2ztffy9ym61g7qwnqct'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ba5d4cab3c984c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```yaml
thought: The question seeks to identify the name of a French ruler who was defeated at the Battle of Waterloo.
class_name: Entity
class_index: 1
```
data: {'text': 'What is the deepest lake in the US ?', 'coarse_label': 4, 'fine_label': 35}
task_input: What is the deepest lake in the US ?, corse_label: 4
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What is the deepest lake in the US ?', 'examples_str': "Question: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What was the education system in the 1960 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a pointsettia to turn red ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What character in The Beverly Hillbillies has the given names Daisy Moses ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What celestial body has a diameter of 864 , 000 miles ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the average time to kiss somene ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CNN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What was the education system in the 1960 's ?
class_name: Entity 
class_index: 1
--------

Question: How do you get a pointsettia to turn red ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What character in The Beverly Hillbillies has the given names Daisy Moses ?
class_name: Human being 
class_index: 3
--------

Question: What celestial body has a diameter of 864 , 000 miles ?
class_name: Location 
class_index: 4
--------

Question: What is the average time to kiss somene ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What is the deepest lake in the US ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What was the education system in the 1960 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a pointsettia to turn red ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What character in The Beverly Hillbillies has the given names Daisy Moses ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What celestial body has a diameter of 864 , 000 miles ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the average time to kiss somene ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is the deepest lake in the US ?\nYour output:"}], 'model': 'gemma-7b-it', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 23:46:33 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'323'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'15000'), (b'x-ratelimit-remaining-requests', b'14336'), (b'x-ratelimit-remaining-tokens', b'14524'), (b'x-ratelimit-reset-requests', b'6m23.551999999s'), (b'x-ratelimit-reset-tokens', b'1.902s'), (b'x-request-id', b'req_01hz3bz3dtffy9mmbnahzhyjgh'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ba5d4f7d64984c-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What was the education system in the 1960 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a pointsettia to turn red ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What character in The Beverly Hillbillies has the given names Daisy Moses ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What celestial body has a diameter of 864 , 000 miles ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the average time to kiss somene ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is the deepest lake in the US ?\nYour output:"}], 'model': 'gemma-7b-it', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 23:46:35 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'15000'), (b'x-ratelimit-remaining-requests', b'14335'), (b'x-ratelimit-remaining-tokens', b'14599'), (b'x-ratelimit-reset-requests', b'6m27.493s'), (b'x-ratelimit-reset-tokens', b'1.604s'), (b'x-request-id', b'req_01hz3bz5e6enx8sf9e8nx12y2b'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ba5d5c5c76984c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```yaml
thought: The question inquires about the deepest lake in the United States.
class_name: Location
class_index: 4
```
data: {'text': 'Where is Milan ?', 'coarse_label': 4, 'fine_label': 32}
task_input: Where is Milan ?, corse_label: 4
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'Where is Milan ?', 'examples_str': "Question: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What was the education system in the 1960 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a pointsettia to turn red ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What character in The Beverly Hillbillies has the given names Daisy Moses ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What celestial body has a diameter of 864 , 000 miles ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the average time to kiss somene ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CNN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What was the education system in the 1960 's ?
class_name: Entity 
class_index: 1
--------

Question: How do you get a pointsettia to turn red ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What character in The Beverly Hillbillies has the given names Daisy Moses ?
class_name: Human being 
class_index: 3
--------

Question: What celestial body has a diameter of 864 , 000 miles ?
class_name: Location 
class_index: 4
--------

Question: What is the average time to kiss somene ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Where is Milan ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What was the education system in the 1960 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a pointsettia to turn red ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What character in The Beverly Hillbillies has the given names Daisy Moses ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What celestial body has a diameter of 864 , 000 miles ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the average time to kiss somene ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Where is Milan ?\nYour output:"}], 'model': 'gemma-7b-it', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 23:46:36 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'323'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'15000'), (b'x-ratelimit-remaining-requests', b'14335'), (b'x-ratelimit-remaining-tokens', b'14549'), (b'x-ratelimit-reset-requests', b'6m29.500999999s'), (b'x-ratelimit-reset-tokens', b'1.803s'), (b'x-request-id', b'req_01hz3bz5xsenxaj7hv19j1yv51'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ba5d5f7e3c984c-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What was the education system in the 1960 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a pointsettia to turn red ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What character in The Beverly Hillbillies has the given names Daisy Moses ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What celestial body has a diameter of 864 , 000 miles ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the average time to kiss somene ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Where is Milan ?\nYour output:"}], 'model': 'gemma-7b-it', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 23:46:38 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'15000'), (b'x-ratelimit-remaining-requests', b'14334'), (b'x-ratelimit-remaining-tokens', b'14604'), (b'x-ratelimit-reset-requests', b'6m33.425999999s'), (b'x-ratelimit-reset-tokens', b'1.584s'), (b'x-request-id', b'req_01hz3bz7ynfmy8qx9w25rfp2fr'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ba5d6c6de6984c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```yaml
thought: Where is Milan ?
class_name: Location
class_index: 4
```
data: {'text': 'What is the rainiest place on Earth ?', 'coarse_label': 4, 'fine_label': 35}
task_input: What is the rainiest place on Earth ?, corse_label: 4
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What is the rainiest place on Earth ?', 'examples_str': "Question: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What was the education system in the 1960 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a pointsettia to turn red ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What character in The Beverly Hillbillies has the given names Daisy Moses ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What celestial body has a diameter of 864 , 000 miles ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the average time to kiss somene ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CNN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What was the education system in the 1960 's ?
class_name: Entity 
class_index: 1
--------

Question: How do you get a pointsettia to turn red ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What character in The Beverly Hillbillies has the given names Daisy Moses ?
class_name: Human being 
class_index: 3
--------

Question: What celestial body has a diameter of 864 , 000 miles ?
class_name: Location 
class_index: 4
--------

Question: What is the average time to kiss somene ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What is the rainiest place on Earth ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What was the education system in the 1960 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a pointsettia to turn red ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What character in The Beverly Hillbillies has the given names Daisy Moses ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What celestial body has a diameter of 864 , 000 miles ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the average time to kiss somene ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is the rainiest place on Earth ?\nYour output:"}], 'model': 'gemma-7b-it', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 23:46:38 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'323'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'15000'), (b'x-ratelimit-remaining-requests', b'14334'), (b'x-ratelimit-remaining-tokens', b'14541'), (b'x-ratelimit-reset-requests', b'6m35.572s'), (b'x-ratelimit-reset-tokens', b'1.835s'), (b'x-request-id', b'req_01hz3bz8c2f2jtvkr5xw9npjyp'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ba5d6f1f56984c-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What was the education system in the 1960 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a pointsettia to turn red ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What character in The Beverly Hillbillies has the given names Daisy Moses ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What celestial body has a diameter of 864 , 000 miles ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the average time to kiss somene ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is the rainiest place on Earth ?\nYour output:"}], 'model': 'gemma-7b-it', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 23:46:41 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'15000'), (b'x-ratelimit-remaining-requests', b'14333'), (b'x-ratelimit-remaining-tokens', b'14599'), (b'x-ratelimit-reset-requests', b'6m39.514999999s'), (b'x-ratelimit-reset-tokens', b'1.604s'), (b'x-request-id', b'req_01hz3bzacaes38s3893srt1m3f'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ba5d7bfeb2984c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```yaml
thought: The question inquires about the most rainy location on Earth.
class_name: Location
class_index: 4
```
data: {'text': 'Where is the Little League Museum ?', 'coarse_label': 4, 'fine_label': 35}
task_input: Where is the Little League Museum ?, corse_label: 4
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'Where is the Little League Museum ?', 'examples_str': "Question: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What was the education system in the 1960 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a pointsettia to turn red ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What character in The Beverly Hillbillies has the given names Daisy Moses ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What celestial body has a diameter of 864 , 000 miles ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the average time to kiss somene ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CNN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What was the education system in the 1960 's ?
class_name: Entity 
class_index: 1
--------

Question: How do you get a pointsettia to turn red ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What character in The Beverly Hillbillies has the given names Daisy Moses ?
class_name: Human being 
class_index: 3
--------

Question: What celestial body has a diameter of 864 , 000 miles ?
class_name: Location 
class_index: 4
--------

Question: What is the average time to kiss somene ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Where is the Little League Museum ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What was the education system in the 1960 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a pointsettia to turn red ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What character in The Beverly Hillbillies has the given names Daisy Moses ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What celestial body has a diameter of 864 , 000 miles ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the average time to kiss somene ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Where is the Little League Museum ?\nYour output:"}], 'model': 'gemma-7b-it', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 23:46:41 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'329'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'15000'), (b'x-ratelimit-remaining-requests', b'14333'), (b'x-ratelimit-remaining-tokens', b'14552'), (b'x-ratelimit-reset-requests', b'6m41.342999999s'), (b'x-ratelimit-reset-tokens', b'1.79s'), (b'x-request-id', b'req_01hz3bzb0wfxcv173jnkbv1q7z'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ba5d8018d3984c-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What was the education system in the 1960 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a pointsettia to turn red ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What character in The Beverly Hillbillies has the given names Daisy Moses ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What celestial body has a diameter of 864 , 000 miles ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the average time to kiss somene ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Where is the Little League Museum ?\nYour output:"}], 'model': 'gemma-7b-it', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 23:46:44 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'15000'), (b'x-ratelimit-remaining-requests', b'14332'), (b'x-ratelimit-remaining-tokens', b'14599'), (b'x-ratelimit-reset-requests', b'6m45.282s'), (b'x-ratelimit-reset-tokens', b'1.604s'), (b'x-request-id', b'req_01hz3bzd19ep6azfgd9p3nvxr2'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ba5d8ce800984c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```yaml
thought: The question inquires about the physical location of the Little League Museum.
class_name: Location
class_index: 4
```
data: {'text': 'How many hearts does an octopus have ?', 'coarse_label': 5, 'fine_label': 38}
task_input: How many hearts does an octopus have ?, corse_label: 5
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'How many hearts does an octopus have ?', 'examples_str': "Question: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What was the education system in the 1960 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a pointsettia to turn red ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What character in The Beverly Hillbillies has the given names Daisy Moses ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What celestial body has a diameter of 864 , 000 miles ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the average time to kiss somene ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CNN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What was the education system in the 1960 's ?
class_name: Entity 
class_index: 1
--------

Question: How do you get a pointsettia to turn red ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What character in The Beverly Hillbillies has the given names Daisy Moses ?
class_name: Human being 
class_index: 3
--------

Question: What celestial body has a diameter of 864 , 000 miles ?
class_name: Location 
class_index: 4
--------

Question: What is the average time to kiss somene ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: How many hearts does an octopus have ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What was the education system in the 1960 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a pointsettia to turn red ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What character in The Beverly Hillbillies has the given names Daisy Moses ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What celestial body has a diameter of 864 , 000 miles ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the average time to kiss somene ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: How many hearts does an octopus have ?\nYour output:"}], 'model': 'gemma-7b-it', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 23:46:44 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'322'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'1'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'15000'), (b'x-ratelimit-remaining-requests', b'14332'), (b'x-ratelimit-remaining-tokens', b'14540'), (b'x-ratelimit-reset-requests', b'6m46.575s'), (b'x-ratelimit-reset-tokens', b'1.839s'), (b'x-request-id', b'req_01hz3bzedvew8a75jvcw0tfpc7'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ba5d95dc07984c-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 1.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What was the education system in the 1960 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a pointsettia to turn red ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What character in The Beverly Hillbillies has the given names Daisy Moses ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What celestial body has a diameter of 864 , 000 miles ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the average time to kiss somene ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: How many hearts does an octopus have ?\nYour output:"}], 'model': 'gemma-7b-it', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 23:46:46 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'15000'), (b'x-ratelimit-remaining-requests', b'14331'), (b'x-ratelimit-remaining-tokens', b'14402'), (b'x-ratelimit-reset-requests', b'6m51.519999999s'), (b'x-ratelimit-reset-tokens', b'2.392s'), (b'x-request-id', b'req_01hz3bzfesf2k8thgaq4mnqw6x'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ba5d9c7f46984c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```yaml
thought: How many hearts does an octopus have ?
class_name: Numeric value
class_index: 5
```
data: {'text': 'For how long is an elephant pregnant ?', 'coarse_label': 5, 'fine_label': 44}
task_input: For how long is an elephant pregnant ?, corse_label: 5
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'For how long is an elephant pregnant ?', 'examples_str': "Question: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What was the education system in the 1960 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a pointsettia to turn red ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What character in The Beverly Hillbillies has the given names Daisy Moses ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What celestial body has a diameter of 864 , 000 miles ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the average time to kiss somene ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CNN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What was the education system in the 1960 's ?
class_name: Entity 
class_index: 1
--------

Question: How do you get a pointsettia to turn red ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What character in The Beverly Hillbillies has the given names Daisy Moses ?
class_name: Human being 
class_index: 3
--------

Question: What celestial body has a diameter of 864 , 000 miles ?
class_name: Location 
class_index: 4
--------

Question: What is the average time to kiss somene ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: For how long is an elephant pregnant ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What was the education system in the 1960 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a pointsettia to turn red ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What character in The Beverly Hillbillies has the given names Daisy Moses ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What celestial body has a diameter of 864 , 000 miles ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the average time to kiss somene ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: For how long is an elephant pregnant ?\nYour output:"}], 'model': 'gemma-7b-it', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 23:46:46 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'323'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'15000'), (b'x-ratelimit-remaining-requests', b'14331'), (b'x-ratelimit-remaining-tokens', b'14469'), (b'x-ratelimit-reset-requests', b'6m53.414s'), (b'x-ratelimit-reset-tokens', b'2.121s'), (b'x-request-id', b'req_01hz3bzg15eb2s1n0kbcpqer34'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ba5da02957984c-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What was the education system in the 1960 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a pointsettia to turn red ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What character in The Beverly Hillbillies has the given names Daisy Moses ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What celestial body has a diameter of 864 , 000 miles ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the average time to kiss somene ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: For how long is an elephant pregnant ?\nYour output:"}], 'model': 'gemma-7b-it', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 23:46:51 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'15000'), (b'x-ratelimit-remaining-requests', b'14330'), (b'x-ratelimit-remaining-tokens', b'14583'), (b'x-ratelimit-reset-requests', b'6m57.351999999s'), (b'x-ratelimit-reset-tokens', b'1.667s'), (b'x-request-id', b'req_01hz3bzj1kfpk81tdf4tzcvmmb'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ba5dad0810984c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```yaml
thought: The question seeks to inquire about the duration of an elephant's gestation period.
class_name: Numeric value
class_index: 5
```
data: {'text': 'How much of an apple is water ?', 'coarse_label': 5, 'fine_label': 38}
task_input: How much of an apple is water ?, corse_label: 5
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'How much of an apple is water ?', 'examples_str': "Question: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What was the education system in the 1960 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a pointsettia to turn red ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What character in The Beverly Hillbillies has the given names Daisy Moses ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What celestial body has a diameter of 864 , 000 miles ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the average time to kiss somene ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CNN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What was the education system in the 1960 's ?
class_name: Entity 
class_index: 1
--------

Question: How do you get a pointsettia to turn red ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What character in The Beverly Hillbillies has the given names Daisy Moses ?
class_name: Human being 
class_index: 3
--------

Question: What celestial body has a diameter of 864 , 000 miles ?
class_name: Location 
class_index: 4
--------

Question: What is the average time to kiss somene ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: How much of an apple is water ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What was the education system in the 1960 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a pointsettia to turn red ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What character in The Beverly Hillbillies has the given names Daisy Moses ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What celestial body has a diameter of 864 , 000 miles ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the average time to kiss somene ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: How much of an apple is water ?\nYour output:"}], 'model': 'gemma-7b-it', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 23:46:52 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'15000'), (b'x-ratelimit-remaining-requests', b'14329'), (b'x-ratelimit-remaining-tokens', b'14128'), (b'x-ratelimit-reset-requests', b'7m2.63s'), (b'x-ratelimit-reset-tokens', b'3.488s'), (b'x-request-id', b'req_01hz3bznayep6tev5yd97xyt1a'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ba5dc20b45984c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```yaml
thought: The question seeks a numerical value representing the proportion of an apple that is water.
class_name: Numeric value
class_index: 5
```
data: {'text': 'How many pounds in a ton ?', 'coarse_label': 5, 'fine_label': 38}
task_input: How many pounds in a ton ?, corse_label: 5
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'How many pounds in a ton ?', 'examples_str': "Question: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What was the education system in the 1960 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a pointsettia to turn red ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What character in The Beverly Hillbillies has the given names Daisy Moses ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What celestial body has a diameter of 864 , 000 miles ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the average time to kiss somene ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CNN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What was the education system in the 1960 's ?
class_name: Entity 
class_index: 1
--------

Question: How do you get a pointsettia to turn red ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What character in The Beverly Hillbillies has the given names Daisy Moses ?
class_name: Human being 
class_index: 3
--------

Question: What celestial body has a diameter of 864 , 000 miles ?
class_name: Location 
class_index: 4
--------

Question: What is the average time to kiss somene ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: How many pounds in a ton ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What was the education system in the 1960 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a pointsettia to turn red ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What character in The Beverly Hillbillies has the given names Daisy Moses ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What celestial body has a diameter of 864 , 000 miles ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the average time to kiss somene ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: How many pounds in a ton ?\nYour output:"}], 'model': 'gemma-7b-it', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 23:46:52 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'323'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'15000'), (b'x-ratelimit-remaining-requests', b'14329'), (b'x-ratelimit-remaining-tokens', b'14143'), (b'x-ratelimit-reset-requests', b'7m5.582s'), (b'x-ratelimit-reset-tokens', b'3.425s'), (b'x-request-id', b'req_01hz3bznr1ep6rvm8k41knz54b'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ba5dc4bc94984c-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What was the education system in the 1960 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a pointsettia to turn red ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What character in The Beverly Hillbillies has the given names Daisy Moses ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What celestial body has a diameter of 864 , 000 miles ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the average time to kiss somene ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: How many pounds in a ton ?\nYour output:"}], 'model': 'gemma-7b-it', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 23:46:54 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'15000'), (b'x-ratelimit-remaining-requests', b'14328'), (b'x-ratelimit-remaining-tokens', b'14258'), (b'x-ratelimit-reset-requests', b'7m9.527999999s'), (b'x-ratelimit-reset-tokens', b'2.967s'), (b'x-request-id', b'req_01hz3bzqr7e0h9j0kq8bg65h0x'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ba5dd18afd984c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```yaml
thought: The question seeks to quantify a conversion between units of weight.
class_name: Numeric value
class_index: 5
```
responses: [0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 3, 3, 3, 1, 4, 4, 4, 4, 5, 5, 5, 5], targets: [0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5]
num_invalid: 0
Preds tensor: tensor([[1., 0., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0.],
        [0., 0., 1., 0., 0., 0.],
        [0., 0., 1., 0., 0., 0.],
        [0., 0., 1., 0., 0., 0.],
        [0., 0., 1., 0., 0., 0.],
        [0., 0., 1., 0., 0., 0.],
        [0., 0., 0., 1., 0., 0.],
        [0., 0., 0., 1., 0., 0.],
        [0., 0., 0., 1., 0., 0.],
        [0., 1., 0., 0., 0., 0.],
        [0., 0., 0., 0., 1., 0.],
        [0., 0., 0., 0., 1., 0.],
        [0., 0., 0., 0., 1., 0.],
        [0., 0., 0., 0., 1., 0.],
        [0., 0., 0., 0., 0., 1.],
        [0., 0., 0., 0., 0., 1.],
        [0., 0., 0., 0., 0., 1.],
        [0., 0., 0., 0., 0., 1.]])
Targets tensor: tensor([0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5])
Test Accuracy Start: 0.792, F1: 0.746, score: 1.188, weights_per_class: [0.5789470259763677, 1000000.0, 0.5294114825730161, 0.6222218317653215, 0.499999750000125, 0.499999750000125]
step: 0
train_batch: {'text': ['How was the Kennedy money made ?', 'How many characters are in the Chinese alphabet ?', 'Who wrote The Ugly Duckling ?', "When did Spielberg direct `` Jaws '' ?", 'What is the abbreviation of the National Bureau of Investigation ?', 'What does the word affiant mean ?', 'What does BTU mean ?', 'Where can I find a case on Individuals with Disabilities Education Act of 1991 ?', 'How do I know how much money to save for retirement ?', 'What is the acronym for the National Bureau of Investigation ?'], 'coarse_label': tensor([2, 5, 3, 5, 0, 2, 0, 4, 2, 0]), 'fine_label': tensor([26, 38, 29, 39,  0, 24,  1, 35, 26,  0])}
before random_replace: [Sample(index=28, data={'text': 'What does CNN stand for ?', 'coarse_label': 0, 'fine_label': 1}), Sample(index=587, data={'text': "What was the education system in the 1960 's ?", 'coarse_label': 1, 'fine_label': 13}), Sample(index=215, data={'text': 'How do you get a pointsettia to turn red ?', 'coarse_label': 2, 'fine_label': 26}), Sample(index=200, data={'text': 'What character in The Beverly Hillbillies has the given names Daisy Moses ?', 'coarse_label': 3, 'fine_label': 29}), Sample(index=397, data={'text': 'What celestial body has a diameter of 864 , 000 miles ?', 'coarse_label': 4, 'fine_label': 35}), Sample(index=412, data={'text': 'What is the average time to kiss somene ?', 'coarse_label': 5, 'fine_label': 44})]
after random_replace: [Sample(index=28, data={'text': 'What does CNN stand for ?', 'coarse_label': 0, 'fine_label': 1}), Sample(index=583, data={'text': 'What color is the eight-ball in pocket billiards ?', 'coarse_label': 1, 'fine_label': 4}), Sample(index=215, data={'text': 'How do you get a pointsettia to turn red ?', 'coarse_label': 2, 'fine_label': 26}), Sample(index=200, data={'text': 'What character in The Beverly Hillbillies has the given names Daisy Moses ?', 'coarse_label': 3, 'fine_label': 29}), Sample(index=397, data={'text': 'What celestial body has a diameter of 864 , 000 miles ?', 'coarse_label': 4, 'fine_label': 35}), Sample(index=412, data={'text': 'What is the average time to kiss somene ?', 'coarse_label': 5, 'fine_label': 44})]
data: {'text': 'What does pH stand for ?', 'coarse_label': 0, 'fine_label': 1}
task_input: What does pH stand for ?, corse_label: 0
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What does pH stand for ?', 'examples_str': 'Question: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What color is the eight-ball in pocket billiards ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a pointsettia to turn red ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What character in The Beverly Hillbillies has the given names Daisy Moses ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What celestial body has a diameter of 864 , 000 miles ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the average time to kiss somene ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CNN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What color is the eight-ball in pocket billiards ?
class_name: Entity 
class_index: 1
--------

Question: How do you get a pointsettia to turn red ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What character in The Beverly Hillbillies has the given names Daisy Moses ?
class_name: Human being 
class_index: 3
--------

Question: What celestial body has a diameter of 864 , 000 miles ?
class_name: Location 
class_index: 4
--------

Question: What is the average time to kiss somene ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What does pH stand for ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What color is the eight-ball in pocket billiards ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a pointsettia to turn red ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What character in The Beverly Hillbillies has the given names Daisy Moses ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What celestial body has a diameter of 864 , 000 miles ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the average time to kiss somene ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does pH stand for ?\nYour output:'}], 'model': 'gemma-7b-it', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 23:46:54 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'329'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'15000'), (b'x-ratelimit-remaining-requests', b'14328'), (b'x-ratelimit-remaining-tokens', b'14307'), (b'x-ratelimit-reset-requests', b'7m11.463999999s'), (b'x-ratelimit-reset-tokens', b'2.771s'), (b'x-request-id', b'req_01hz3bzr90en2s9rbc2yh02hsm'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ba5dd4eca2984c-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What color is the eight-ball in pocket billiards ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a pointsettia to turn red ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What character in The Beverly Hillbillies has the given names Daisy Moses ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What celestial body has a diameter of 864 , 000 miles ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the average time to kiss somene ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does pH stand for ?\nYour output:'}], 'model': 'gemma-7b-it', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 23:46:57 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'15000'), (b'x-ratelimit-remaining-requests', b'14327'), (b'x-ratelimit-remaining-tokens', b'14421'), (b'x-ratelimit-reset-requests', b'7m15.410999999s'), (b'x-ratelimit-reset-tokens', b'2.314s'), (b'x-request-id', b'req_01hz3bzt94eb38f21ya9g9s8vq'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ba5de1bb0c984c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```yaml
thought: What does pH stand for ?
class_name: Abbreviation
class_index: 0
```
data: {'text': 'What does HIV stand for ?', 'coarse_label': 0, 'fine_label': 1}
task_input: What does HIV stand for ?, corse_label: 0
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What does HIV stand for ?', 'examples_str': 'Question: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What color is the eight-ball in pocket billiards ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a pointsettia to turn red ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What character in The Beverly Hillbillies has the given names Daisy Moses ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What celestial body has a diameter of 864 , 000 miles ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the average time to kiss somene ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CNN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What color is the eight-ball in pocket billiards ?
class_name: Entity 
class_index: 1
--------

Question: How do you get a pointsettia to turn red ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What character in The Beverly Hillbillies has the given names Daisy Moses ?
class_name: Human being 
class_index: 3
--------

Question: What celestial body has a diameter of 864 , 000 miles ?
class_name: Location 
class_index: 4
--------

Question: What is the average time to kiss somene ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What does HIV stand for ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What color is the eight-ball in pocket billiards ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a pointsettia to turn red ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What character in The Beverly Hillbillies has the given names Daisy Moses ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What celestial body has a diameter of 864 , 000 miles ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the average time to kiss somene ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does HIV stand for ?\nYour output:'}], 'model': 'gemma-7b-it', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 23:46:57 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'323'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'15000'), (b'x-ratelimit-remaining-requests', b'14327'), (b'x-ratelimit-remaining-tokens', b'14510'), (b'x-ratelimit-reset-requests', b'7m17.344999999s'), (b'x-ratelimit-reset-tokens', b'1.96s'), (b'x-request-id', b'req_01hz3bztxneytrkahh1a73am9h'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ba5de5ddb6984c-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What color is the eight-ball in pocket billiards ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a pointsettia to turn red ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What character in The Beverly Hillbillies has the given names Daisy Moses ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What celestial body has a diameter of 864 , 000 miles ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the average time to kiss somene ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does HIV stand for ?\nYour output:'}], 'model': 'gemma-7b-it', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 23:47:00 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'15000'), (b'x-ratelimit-remaining-requests', b'14326'), (b'x-ratelimit-remaining-tokens', b'14601'), (b'x-ratelimit-reset-requests', b'7m21.285s'), (b'x-ratelimit-reset-tokens', b'1.596s'), (b'x-request-id', b'req_01hz3bzwy1fxdac5cmvbbz16hf'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ba5df2abeb984c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```yaml
thought: What does HIV stand for ?
class_name: Abbreviation
class_index: 0
```
data: {'text': 'What does NECROSIS mean ?', 'coarse_label': 0, 'fine_label': 1}
task_input: What does NECROSIS mean ?, corse_label: 0
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What does NECROSIS mean ?', 'examples_str': 'Question: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What color is the eight-ball in pocket billiards ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a pointsettia to turn red ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What character in The Beverly Hillbillies has the given names Daisy Moses ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What celestial body has a diameter of 864 , 000 miles ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the average time to kiss somene ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CNN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What color is the eight-ball in pocket billiards ?
class_name: Entity 
class_index: 1
--------

Question: How do you get a pointsettia to turn red ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What character in The Beverly Hillbillies has the given names Daisy Moses ?
class_name: Human being 
class_index: 3
--------

Question: What celestial body has a diameter of 864 , 000 miles ?
class_name: Location 
class_index: 4
--------

Question: What is the average time to kiss somene ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What does NECROSIS mean ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What color is the eight-ball in pocket billiards ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a pointsettia to turn red ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What character in The Beverly Hillbillies has the given names Daisy Moses ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What celestial body has a diameter of 864 , 000 miles ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the average time to kiss somene ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does NECROSIS mean ?\nYour output:'}], 'model': 'gemma-7b-it', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 23:47:00 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'323'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'15000'), (b'x-ratelimit-remaining-requests', b'14326'), (b'x-ratelimit-remaining-tokens', b'14548'), (b'x-ratelimit-reset-requests', b'7m23.497999999s'), (b'x-ratelimit-reset-tokens', b'1.805s'), (b'x-request-id', b'req_01hz3bzxdsfavvz1f4jbgbmhzf'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ba5df5dd31984c-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What color is the eight-ball in pocket billiards ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a pointsettia to turn red ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What character in The Beverly Hillbillies has the given names Daisy Moses ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What celestial body has a diameter of 864 , 000 miles ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the average time to kiss somene ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does NECROSIS mean ?\nYour output:'}], 'model': 'gemma-7b-it', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 23:47:02 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'15000'), (b'x-ratelimit-remaining-requests', b'14325'), (b'x-ratelimit-remaining-tokens', b'14601'), (b'x-ratelimit-reset-requests', b'7m27.438s'), (b'x-ratelimit-reset-tokens', b'1.596s'), (b'x-request-id', b'req_01hz3bzze4eny9ap1q12d7565s'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ba5e02bb7d984c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```yaml
thought: What does NECROSIS mean ?
class_name: Abbreviation
class_index: 0
```
data: {'text': 'What is the abbreviation of the International Olympic Committee ?', 'coarse_label': 0, 'fine_label': 0}
task_input: What is the abbreviation of the International Olympic Committee ?, corse_label: 0
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What is the abbreviation of the International Olympic Committee ?', 'examples_str': 'Question: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What color is the eight-ball in pocket billiards ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a pointsettia to turn red ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What character in The Beverly Hillbillies has the given names Daisy Moses ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What celestial body has a diameter of 864 , 000 miles ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the average time to kiss somene ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CNN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What color is the eight-ball in pocket billiards ?
class_name: Entity 
class_index: 1
--------

Question: How do you get a pointsettia to turn red ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What character in The Beverly Hillbillies has the given names Daisy Moses ?
class_name: Human being 
class_index: 3
--------

Question: What celestial body has a diameter of 864 , 000 miles ?
class_name: Location 
class_index: 4
--------

Question: What is the average time to kiss somene ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What is the abbreviation of the International Olympic Committee ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What color is the eight-ball in pocket billiards ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a pointsettia to turn red ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What character in The Beverly Hillbillies has the given names Daisy Moses ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What celestial body has a diameter of 864 , 000 miles ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the average time to kiss somene ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is the abbreviation of the International Olympic Committee ?\nYour output:'}], 'model': 'gemma-7b-it', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 23:47:02 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'323'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'15000'), (b'x-ratelimit-remaining-requests', b'14325'), (b'x-ratelimit-remaining-tokens', b'14562'), (b'x-ratelimit-reset-requests', b'7m29.495999999s'), (b'x-ratelimit-reset-tokens', b'1.749s'), (b'x-request-id', b'req_01hz3bzzxxes4acqxcbr12khmy'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ba5e05ed15984c-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What color is the eight-ball in pocket billiards ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a pointsettia to turn red ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What character in The Beverly Hillbillies has the given names Daisy Moses ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What celestial body has a diameter of 864 , 000 miles ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the average time to kiss somene ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is the abbreviation of the International Olympic Committee ?\nYour output:'}], 'model': 'gemma-7b-it', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 23:47:05 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'15000'), (b'x-ratelimit-remaining-requests', b'14324'), (b'x-ratelimit-remaining-tokens', b'14591'), (b'x-ratelimit-reset-requests', b'7m33.432s'), (b'x-ratelimit-reset-tokens', b'1.636s'), (b'x-request-id', b'req_01hz3c01ydenybhx2tf2erzt7t'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ba5e12cb6a984c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```yaml
thought: The question is inquiring about the abbreviation of the International Olympic Committee.
class_name: Abbreviation
class_index: 0
```
data: {'text': 'What color was the hundred billionth crayon made by Crayola ?', 'coarse_label': 1, 'fine_label': 4}
task_input: What color was the hundred billionth crayon made by Crayola ?, corse_label: 1
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What color was the hundred billionth crayon made by Crayola ?', 'examples_str': 'Question: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What color is the eight-ball in pocket billiards ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a pointsettia to turn red ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What character in The Beverly Hillbillies has the given names Daisy Moses ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What celestial body has a diameter of 864 , 000 miles ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the average time to kiss somene ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CNN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What color is the eight-ball in pocket billiards ?
class_name: Entity 
class_index: 1
--------

Question: How do you get a pointsettia to turn red ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What character in The Beverly Hillbillies has the given names Daisy Moses ?
class_name: Human being 
class_index: 3
--------

Question: What celestial body has a diameter of 864 , 000 miles ?
class_name: Location 
class_index: 4
--------

Question: What is the average time to kiss somene ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What color was the hundred billionth crayon made by Crayola ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What color is the eight-ball in pocket billiards ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a pointsettia to turn red ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What character in The Beverly Hillbillies has the given names Daisy Moses ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What celestial body has a diameter of 864 , 000 miles ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the average time to kiss somene ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What color was the hundred billionth crayon made by Crayola ?\nYour output:'}], 'model': 'gemma-7b-it', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 23:47:05 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'323'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'15000'), (b'x-ratelimit-remaining-requests', b'14324'), (b'x-ratelimit-remaining-tokens', b'14532'), (b'x-ratelimit-reset-requests', b'7m35.487s'), (b'x-ratelimit-reset-tokens', b'1.872s'), (b'x-request-id', b'req_01hz3c02efeny9j62jh68qhq8j'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ba5e15fcf1984c-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What color is the eight-ball in pocket billiards ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a pointsettia to turn red ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What character in The Beverly Hillbillies has the given names Daisy Moses ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What celestial body has a diameter of 864 , 000 miles ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the average time to kiss somene ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What color was the hundred billionth crayon made by Crayola ?\nYour output:'}], 'model': 'gemma-7b-it', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 23:47:07 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'15000'), (b'x-ratelimit-remaining-requests', b'14323'), (b'x-ratelimit-remaining-tokens', b'14592'), (b'x-ratelimit-reset-requests', b'7m39.419999999s'), (b'x-ratelimit-reset-tokens', b'1.632s'), (b'x-request-id', b'req_01hz3c04f2e298g7j9btydys18'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ba5e22eb33984c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```yaml
thought: The question seeks to inquire about the color of a specific crayon.
class_name: Abbreviation
class_index: 0
```
data: {'text': 'What is a fear of drinking ?', 'coarse_label': 1, 'fine_label': 7}
task_input: What is a fear of drinking ?, corse_label: 1
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What is a fear of drinking ?', 'examples_str': 'Question: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What color is the eight-ball in pocket billiards ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a pointsettia to turn red ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What character in The Beverly Hillbillies has the given names Daisy Moses ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What celestial body has a diameter of 864 , 000 miles ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the average time to kiss somene ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CNN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What color is the eight-ball in pocket billiards ?
class_name: Entity 
class_index: 1
--------

Question: How do you get a pointsettia to turn red ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What character in The Beverly Hillbillies has the given names Daisy Moses ?
class_name: Human being 
class_index: 3
--------

Question: What celestial body has a diameter of 864 , 000 miles ?
class_name: Location 
class_index: 4
--------

Question: What is the average time to kiss somene ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What is a fear of drinking ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What color is the eight-ball in pocket billiards ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a pointsettia to turn red ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What character in The Beverly Hillbillies has the given names Daisy Moses ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What celestial body has a diameter of 864 , 000 miles ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the average time to kiss somene ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is a fear of drinking ?\nYour output:'}], 'model': 'gemma-7b-it', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 23:47:08 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'329'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'15000'), (b'x-ratelimit-remaining-requests', b'14323'), (b'x-ratelimit-remaining-tokens', b'14534'), (b'x-ratelimit-reset-requests', b'7m41.324s'), (b'x-ratelimit-reset-tokens', b'1.863s'), (b'x-request-id', b'req_01hz3c0547ep7b6y1z56t99p5h'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ba5e272d12984c-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What color is the eight-ball in pocket billiards ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a pointsettia to turn red ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What character in The Beverly Hillbillies has the given names Daisy Moses ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What celestial body has a diameter of 864 , 000 miles ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the average time to kiss somene ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is a fear of drinking ?\nYour output:'}], 'model': 'gemma-7b-it', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 23:47:10 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'15000'), (b'x-ratelimit-remaining-requests', b'14322'), (b'x-ratelimit-remaining-tokens', b'14600'), (b'x-ratelimit-reset-requests', b'7m45.261999999s'), (b'x-ratelimit-reset-tokens', b'1.6s'), (b'x-request-id', b'req_01hz3c074nf2m81q7039ef95t6'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ba5e340b76984c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```yaml
thought: The question seeks to inquire about a specific term and its definition.
class_name: Abbreviation
class_index: 0
```
data: {'text': "What 's the word for broken glass or sharp rocks embedded in cement on top of a wall ?", 'coarse_label': 1, 'fine_label': 23}
task_input: What 's the word for broken glass or sharp rocks embedded in cement on top of a wall ?, corse_label: 1
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': "What 's the word for broken glass or sharp rocks embedded in cement on top of a wall ?", 'examples_str': 'Question: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What color is the eight-ball in pocket billiards ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a pointsettia to turn red ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What character in The Beverly Hillbillies has the given names Daisy Moses ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What celestial body has a diameter of 864 , 000 miles ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the average time to kiss somene ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CNN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What color is the eight-ball in pocket billiards ?
class_name: Entity 
class_index: 1
--------

Question: How do you get a pointsettia to turn red ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What character in The Beverly Hillbillies has the given names Daisy Moses ?
class_name: Human being 
class_index: 3
--------

Question: What celestial body has a diameter of 864 , 000 miles ?
class_name: Location 
class_index: 4
--------

Question: What is the average time to kiss somene ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What 's the word for broken glass or sharp rocks embedded in cement on top of a wall ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What color is the eight-ball in pocket billiards ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a pointsettia to turn red ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What character in The Beverly Hillbillies has the given names Daisy Moses ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What celestial body has a diameter of 864 , 000 miles ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the average time to kiss somene ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What 's the word for broken glass or sharp rocks embedded in cement on top of a wall ?\nYour output:"}], 'model': 'gemma-7b-it', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 23:47:10 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'323'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'15000'), (b'x-ratelimit-remaining-requests', b'14322'), (b'x-ratelimit-remaining-tokens', b'14539'), (b'x-ratelimit-reset-requests', b'7m47.505999999s'), (b'x-ratelimit-reset-tokens', b'1.844s'), (b'x-request-id', b'req_01hz3c07m4eb4apr9zpb8g3x3n'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ba5e372d01984c-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What color is the eight-ball in pocket billiards ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a pointsettia to turn red ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What character in The Beverly Hillbillies has the given names Daisy Moses ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What celestial body has a diameter of 864 , 000 miles ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the average time to kiss somene ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What 's the word for broken glass or sharp rocks embedded in cement on top of a wall ?\nYour output:"}], 'model': 'gemma-7b-it', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 23:47:13 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'15000'), (b'x-ratelimit-remaining-requests', b'14321'), (b'x-ratelimit-remaining-tokens', b'14585'), (b'x-ratelimit-reset-requests', b'7m51.443s'), (b'x-ratelimit-reset-tokens', b'1.66s'), (b'x-request-id', b'req_01hz3c09mke0d8tqvgeg1jzh7k'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ba5e440bb8984c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```yaml
thought: The question is inquiring about a specific term referring to broken glass or sharp rocks embedded in cement.
class_name: Abbreviation
class_index: 0
```
data: {'text': 'What are the top vegetable crops in the world ?', 'coarse_label': 1, 'fine_label': 9}
task_input: What are the top vegetable crops in the world ?, corse_label: 1
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What are the top vegetable crops in the world ?', 'examples_str': 'Question: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What color is the eight-ball in pocket billiards ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a pointsettia to turn red ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What character in The Beverly Hillbillies has the given names Daisy Moses ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What celestial body has a diameter of 864 , 000 miles ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the average time to kiss somene ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CNN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What color is the eight-ball in pocket billiards ?
class_name: Entity 
class_index: 1
--------

Question: How do you get a pointsettia to turn red ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What character in The Beverly Hillbillies has the given names Daisy Moses ?
class_name: Human being 
class_index: 3
--------

Question: What celestial body has a diameter of 864 , 000 miles ?
class_name: Location 
class_index: 4
--------

Question: What is the average time to kiss somene ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What are the top vegetable crops in the world ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What color is the eight-ball in pocket billiards ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a pointsettia to turn red ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What character in The Beverly Hillbillies has the given names Daisy Moses ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What celestial body has a diameter of 864 , 000 miles ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the average time to kiss somene ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What are the top vegetable crops in the world ?\nYour output:'}], 'model': 'gemma-7b-it', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 23:47:13 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'323'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'15000'), (b'x-ratelimit-remaining-requests', b'14321'), (b'x-ratelimit-remaining-tokens', b'14532'), (b'x-ratelimit-reset-requests', b'7m53.498999999s'), (b'x-ratelimit-reset-tokens', b'1.872s'), (b'x-request-id', b'req_01hz3c0a49eb4b66dm1th440aq'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ba5e472d52984c-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What color is the eight-ball in pocket billiards ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a pointsettia to turn red ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What character in The Beverly Hillbillies has the given names Daisy Moses ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What celestial body has a diameter of 864 , 000 miles ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the average time to kiss somene ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What are the top vegetable crops in the world ?\nYour output:'}], 'model': 'gemma-7b-it', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 23:47:15 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'15000'), (b'x-ratelimit-remaining-requests', b'14320'), (b'x-ratelimit-remaining-tokens', b'14595'), (b'x-ratelimit-reset-requests', b'7m57.426999999s'), (b'x-ratelimit-reset-tokens', b'1.62s'), (b'x-request-id', b'req_01hz3c0c51ep7rhk493xpk81nr'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ba5e541dab984c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```yaml
thought: The question seeks a list of the most cultivated vegetable crops globally.
class_name: Abbreviation
class_index: 0
```
data: {'text': 'Why did the Anglican church split from the Vatican ?', 'coarse_label': 2, 'fine_label': 27}
task_input: Why did the Anglican church split from the Vatican ?, corse_label: 2
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'Why did the Anglican church split from the Vatican ?', 'examples_str': 'Question: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What color is the eight-ball in pocket billiards ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a pointsettia to turn red ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What character in The Beverly Hillbillies has the given names Daisy Moses ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What celestial body has a diameter of 864 , 000 miles ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the average time to kiss somene ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CNN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What color is the eight-ball in pocket billiards ?
class_name: Entity 
class_index: 1
--------

Question: How do you get a pointsettia to turn red ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What character in The Beverly Hillbillies has the given names Daisy Moses ?
class_name: Human being 
class_index: 3
--------

Question: What celestial body has a diameter of 864 , 000 miles ?
class_name: Location 
class_index: 4
--------

Question: What is the average time to kiss somene ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Why did the Anglican church split from the Vatican ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What color is the eight-ball in pocket billiards ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a pointsettia to turn red ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What character in The Beverly Hillbillies has the given names Daisy Moses ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What celestial body has a diameter of 864 , 000 miles ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the average time to kiss somene ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Why did the Anglican church split from the Vatican ?\nYour output:'}], 'model': 'gemma-7b-it', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 23:47:15 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'323'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'15000'), (b'x-ratelimit-remaining-requests', b'14320'), (b'x-ratelimit-remaining-tokens', b'14527'), (b'x-ratelimit-reset-requests', b'7m59.532s'), (b'x-ratelimit-reset-tokens', b'1.892s'), (b'x-request-id', b'req_01hz3c0ckpfg0btfygc1jckew7'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ba5e570f3a984c-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What color is the eight-ball in pocket billiards ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a pointsettia to turn red ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What character in The Beverly Hillbillies has the given names Daisy Moses ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What celestial body has a diameter of 864 , 000 miles ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the average time to kiss somene ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Why did the Anglican church split from the Vatican ?\nYour output:'}], 'model': 'gemma-7b-it', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 23:47:18 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'15000'), (b'x-ratelimit-remaining-requests', b'14319'), (b'x-ratelimit-remaining-tokens', b'14594'), (b'x-ratelimit-reset-requests', b'8m3.478999999s'), (b'x-ratelimit-reset-tokens', b'1.624s'), (b'x-request-id', b'req_01hz3c0ektfawr174vgqxs9w6g'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ba5e63dd8c984c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```yaml
thought: The question seeks to understand the historical separation between two religious institutions.
class_name: Description and abstract concept
class_index: 2
```
data: {'text': 'How do I find info about rice importers in the world ?', 'coarse_label': 2, 'fine_label': 26}
task_input: How do I find info about rice importers in the world ?, corse_label: 2
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'How do I find info about rice importers in the world ?', 'examples_str': 'Question: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What color is the eight-ball in pocket billiards ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a pointsettia to turn red ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What character in The Beverly Hillbillies has the given names Daisy Moses ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What celestial body has a diameter of 864 , 000 miles ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the average time to kiss somene ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CNN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What color is the eight-ball in pocket billiards ?
class_name: Entity 
class_index: 1
--------

Question: How do you get a pointsettia to turn red ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What character in The Beverly Hillbillies has the given names Daisy Moses ?
class_name: Human being 
class_index: 3
--------

Question: What celestial body has a diameter of 864 , 000 miles ?
class_name: Location 
class_index: 4
--------

Question: What is the average time to kiss somene ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: How do I find info about rice importers in the world ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What color is the eight-ball in pocket billiards ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a pointsettia to turn red ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What character in The Beverly Hillbillies has the given names Daisy Moses ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What celestial body has a diameter of 864 , 000 miles ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the average time to kiss somene ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: How do I find info about rice importers in the world ?\nYour output:'}], 'model': 'gemma-7b-it', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 23:47:18 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'323'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'15000'), (b'x-ratelimit-remaining-requests', b'14319'), (b'x-ratelimit-remaining-tokens', b'14527'), (b'x-ratelimit-reset-requests', b'8m5.306s'), (b'x-ratelimit-reset-tokens', b'1.892s'), (b'x-request-id', b'req_01hz3c0f9hen4ac220c9k2w828'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ba5e683f92984c-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What color is the eight-ball in pocket billiards ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a pointsettia to turn red ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What character in The Beverly Hillbillies has the given names Daisy Moses ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What celestial body has a diameter of 864 , 000 miles ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the average time to kiss somene ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: How do I find info about rice importers in the world ?\nYour output:'}], 'model': 'gemma-7b-it', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 23:47:21 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'15000'), (b'x-ratelimit-remaining-requests', b'14318'), (b'x-ratelimit-remaining-tokens', b'14593'), (b'x-ratelimit-reset-requests', b'8m9.238s'), (b'x-ratelimit-reset-tokens', b'1.628s'), (b'x-request-id', b'req_01hz3c0ha6eb4vj7my6q03bjwf'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ba5e752eb5984c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```yaml
thought: The question seeks to retrieve information about a specific group of rice importers globally.
class_name: Description and abstract concept
class_index: 2
```
data: {'text': "What 's a water funnel ?", 'coarse_label': 2, 'fine_label': 24}
task_input: What 's a water funnel ?, corse_label: 2
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': "What 's a water funnel ?", 'examples_str': 'Question: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What color is the eight-ball in pocket billiards ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a pointsettia to turn red ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What character in The Beverly Hillbillies has the given names Daisy Moses ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What celestial body has a diameter of 864 , 000 miles ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the average time to kiss somene ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CNN stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What color is the eight-ball in pocket billiards ?
class_name: Entity 
class_index: 1
--------

Question: How do you get a pointsettia to turn red ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What character in The Beverly Hillbillies has the given names Daisy Moses ?
class_name: Human being 
class_index: 3
--------

Question: What celestial body has a diameter of 864 , 000 miles ?
class_name: Location 
class_index: 4
--------

Question: What is the average time to kiss somene ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What 's a water funnel ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What color is the eight-ball in pocket billiards ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a pointsettia to turn red ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What character in The Beverly Hillbillies has the given names Daisy Moses ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What celestial body has a diameter of 864 , 000 miles ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the average time to kiss somene ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What 's a water funnel ?\nYour output:"}], 'model': 'gemma-7b-it', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 23:47:21 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'322'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'15000'), (b'x-ratelimit-remaining-requests', b'14318'), (b'x-ratelimit-remaining-tokens', b'14550'), (b'x-ratelimit-reset-requests', b'8m11.27s'), (b'x-ratelimit-reset-tokens', b'1.8s'), (b'x-request-id', b'req_01hz3c0j10en4ax4xtw29rp6d6'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ba5e79b8fb984c-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CNN stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What color is the eight-ball in pocket billiards ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: How do you get a pointsettia to turn red ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What character in The Beverly Hillbillies has the given names Daisy Moses ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What celestial body has a diameter of 864 , 000 miles ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the average time to kiss somene ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What 's a water funnel ?\nYour output:"}], 'model': 'gemma-7b-it', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 23:47:27 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'15000'), (b'x-ratelimit-remaining-requests', b'14317'), (b'x-ratelimit-remaining-tokens', b'14601'), (b'x-ratelimit-reset-requests', b'8m15.211999999s'), (b'x-ratelimit-reset-tokens', b'1.596s'), (b'x-request-id', b'req_01hz3c0m1aeyvst40089zj4kcg'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ba5e868fa2984c-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```yaml
thought: "What 's a water funnel ?". 
class_name: Description and abstract concept
class_index: 2
```
