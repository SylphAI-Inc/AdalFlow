DatasetDict({
    train: Dataset({
        features: ['text', 'coarse_label', 'fine_label'],
        num_rows: 5452
    })
    test: Dataset({
        features: ['text', 'coarse_label', 'fine_label'],
        num_rows: 500
    })
})
Train example: {'text': 'How did serfdom develop in and then leave Russia ?', 'coarse_label': 2, 'fine_label': 26}
Test example: {'text': 'How far is it from Denver to Aspen ?', 'coarse_label': 5, 'fine_label': 40}
INFO:core.prompt_builder:Prompt has variables: ['classes']
INFO:core.prompt_builder:Prompt has variables: ['schema', 'example']
DEBUG:use_cases.classification.task:output_str: Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

DEBUG:httpx:load_ssl_context verify=True cert=None trust_env=True http2=False
DEBUG:httpx:load_verify_locations cafile='/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/certifi/cacert.pem'
INFO:core.prompt_builder:Prompt has variables: ['task_desc_str', 'input_label', 'input', 'output_format_str', 'examples_str']
data: None, requires_opt: True
Registered parameter examples_str with value Parameter: None
INFO:core.prompt_builder:Prompt has variables: ['output', 'description', 'input', 'label']
module: Prompt(
  template: You are a classifier. Given a Question, you need to classify it into one of the following classes:
  Format: class_index. class_name, class_description
  {% for class in classes %}
  {{loop.index-1}}. {{class.label}}, {{class.desc}}
  {% endfor %}
  , preset_prompt_kwargs: {'classes': [{'label': 'ABBR', 'desc': 'Abbreviation'}, {'label': 'ENTY', 'desc': 'Entity'}, {'label': 'DESC', 'desc': 'Description and abstract concept'}, {'label': 'HUM', 'desc': 'Human being'}, {'label': 'LOC', 'desc': 'Location'}, {'label': 'NUM', 'desc': 'Numeric value'}]}, prompt_variables: ['classes']
)    
module: Generator(
  model_kwargs={'model': 'llama3-8b-8192', 'temperature': 0.0, 'top_p': 1, 'frequency_penalty': 0, 'presence_penalty': 0, 'n': 1}, model_type=ModelType.LLM
  (model_client): GroqAPIClient()
  (system_prompt): Prompt(
    template: {# task desc #}
    {% if task_desc_str %}
    {{task_desc_str}}
    {% endif %}
    {%if output_format_str %}
    <OUTPUT_FORMAT>
    {{output_format_str}}
    </OUTPUT_FORMAT>
    {% endif %}
    {# example #}
    {% if examples_str %}
    <EXAMPLES>
    {#{% for example in examples_str %}#}
    {{examples_str}}
    {#{% endfor %}#}
    </EXAMPLES>
    {% endif %}
    {{input_label}}: {{input}}
    Your output:
    , preset_prompt_kwargs: {'task_desc_str': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n', 'output_format_str': 'Your output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n', 'input_label': 'Question'}, prompt_variables: ['task_desc_str', 'input_label', 'input', 'output_format_str', 'examples_str']
  )
  (output_processors): Sequential(
    (0): YAMLOutputParser(
      data_class_for_yaml=<class 'use_cases.classification.prompt.OutputFormat'>
      (yaml_output_format_prompt): Prompt(
        template: Your output should be formatted as a standard YAML instance with the following schema:
        ```
        {{schema}}
        ```
        {% if example %}
        Here is an example:
        ```
        {{example}}
        ```
        {% endif %}
        
        -Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
        -Follow the YAML formatting conventions with an indent of 2 spaces. 
        -Quote the string values properly.
        , prompt_variables: ['schema', 'example']
      )
      (output_processors): YAMLParser()
    )
    (1): <lambda>Component()
  )
)    
module: GroqAPIClient()    
module: Prompt(
  template: {# task desc #}
  {% if task_desc_str %}
  {{task_desc_str}}
  {% endif %}
  {%if output_format_str %}
  <OUTPUT_FORMAT>
  {{output_format_str}}
  </OUTPUT_FORMAT>
  {% endif %}
  {# example #}
  {% if examples_str %}
  <EXAMPLES>
  {#{% for example in examples_str %}#}
  {{examples_str}}
  {#{% endfor %}#}
  </EXAMPLES>
  {% endif %}
  {{input_label}}: {{input}}
  Your output:
  , preset_prompt_kwargs: {'task_desc_str': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n', 'output_format_str': 'Your output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n', 'input_label': 'Question'}, prompt_variables: ['task_desc_str', 'input_label', 'input', 'output_format_str', 'examples_str']
)    
module: Sequential(
  (0): YAMLOutputParser(
    data_class_for_yaml=<class 'use_cases.classification.prompt.OutputFormat'>
    (yaml_output_format_prompt): Prompt(
      template: Your output should be formatted as a standard YAML instance with the following schema:
      ```
      {{schema}}
      ```
      {% if example %}
      Here is an example:
      ```
      {{example}}
      ```
      {% endif %}
      
      -Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
      -Follow the YAML formatting conventions with an indent of 2 spaces. 
      -Quote the string values properly.
      , prompt_variables: ['schema', 'example']
    )
    (output_processors): YAMLParser()
  )
  (1): <lambda>Component()
)    
module: YAMLOutputParser(
  data_class_for_yaml=<class 'use_cases.classification.prompt.OutputFormat'>
  (yaml_output_format_prompt): Prompt(
    template: Your output should be formatted as a standard YAML instance with the following schema:
    ```
    {{schema}}
    ```
    {% if example %}
    Here is an example:
    ```
    {{example}}
    ```
    {% endif %}
    
    -Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
    -Follow the YAML formatting conventions with an indent of 2 spaces. 
    -Quote the string values properly.
    , prompt_variables: ['schema', 'example']
  )
  (output_processors): YAMLParser()
)    
module: Prompt(
  template: Your output should be formatted as a standard YAML instance with the following schema:
  ```
  {{schema}}
  ```
  {% if example %}
  Here is an example:
  ```
  {{example}}
  ```
  {% endif %}
  
  -Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
  -Follow the YAML formatting conventions with an indent of 2 spaces. 
  -Quote the string values properly.
  , prompt_variables: ['schema', 'example']
)    
module: YAMLParser()    
module: <lambda>Component()    
params: {'generator.examples_str': Parameter: None}
few_shot_optimizer: <optimizer.optimizer.BootstrapFewShot object at 0x165b13990>
few_shot_state_dict: None
step: 0
train_batch: {'text': ['Why are peanut butter cookies topped with crisscrosses ?', 'What was the minimum wage in 1991 ?', "Who was the author of `` John Brown 's Body '' ?", 'What tragedy befell the city of Dogtown in 1899 ?', 'How long ago did the Anglican church part from the Vatican ?', 'Where does the Santa Fe Trail begin and end ?'], 'coarse_label': tensor([2, 5, 3, 1, 5, 4]), 'fine_label': tensor([27, 41, 29,  8, 44, 35])}
task_input: Why are peanut butter cookies topped with crisscrosses ?, corse_label: 2
types: <class 'str'>, <class 'torch.Tensor'>
prompt_kwargs: {'input': 'Why are peanut butter cookies topped with crisscrosses ?', 'examples_str': 'Question: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does HIV stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What does a chef coddle eggs in ?
class_name: Entity 
class_index: 1
--------

Question: What do the red-and-white stripes on a barbershop pole stand for ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who used AuH2O as an election slogan ?
class_name: Human being 
class_index: 3
--------

Question: In what part of the world is Mozambique ?
class_name: Location 
class_index: 4
--------

Question: How many American actors were nominated for the best actor Oscar for 1983 ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Why are peanut butter cookies topped with crisscrosses ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Why are peanut butter cookies topped with crisscrosses ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.connection:connect_tcp.started host='api.groq.com' port=443 local_address=None timeout=5.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x165b1dbd0>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x165bfbb60> server_hostname='api.groq.com' timeout=5.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x165c88550>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 03:48:40 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14353'), (b'x-ratelimit-remaining-tokens', b'29995'), (b'x-ratelimit-reset-requests', b'4m37.587999999s'), (b'x-ratelimit-reset-tokens', b'10ms'), (b'x-request-id', b'req_01hyyn0z8pfptbe8pdj70a3zwk'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=01DazL5pc8W8ybshWxd0c7pXWgub7HG3MUBjEzQ7FO8-1716868120-1.0.1.1-VJdD5hlKbrjdRbnf2bjb94WTNO0grWlesYEksD1pOoJS8t704j8ZyPuexgKx0dWKYNQFEM6dqxpM5PKnbHXL_A; path=/; expires=Tue, 28-May-24 04:18:40 GMT; domain=.groq.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab4534ce7c9e52-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the purpose or meaning behind a specific design element in peanut butter cookies, which is a descriptive concept.
class_name: DESC
class_index: 2
```
task_input: What was the minimum wage in 1991 ?, corse_label: 5
types: <class 'str'>, <class 'torch.Tensor'>
prompt_kwargs: {'input': 'What was the minimum wage in 1991 ?', 'examples_str': 'Question: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does HIV stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What does a chef coddle eggs in ?
class_name: Entity 
class_index: 1
--------

Question: What do the red-and-white stripes on a barbershop pole stand for ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who used AuH2O as an election slogan ?
class_name: Human being 
class_index: 3
--------

Question: In what part of the world is Mozambique ?
class_name: Location 
class_index: 4
--------

Question: How many American actors were nominated for the best actor Oscar for 1983 ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What was the minimum wage in 1991 ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What was the minimum wage in 1991 ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 03:48:40 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14352'), (b'x-ratelimit-remaining-tokens', b'29588'), (b'x-ratelimit-reset-requests', b'4m47.693s'), (b'x-ratelimit-reset-tokens', b'824ms'), (b'x-request-id', b'req_01hyyn0zk5ft1tq0688hxvvajv'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab4536e8119e52-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking for a specific piece of information, a numeric value, which is the minimum wage in 1991.
class_name: NUM
class_index: 5
task_input: Who was the author of `` John Brown 's Body '' ?, corse_label: 3
types: <class 'str'>, <class 'torch.Tensor'>
prompt_kwargs: {'input': "Who was the author of `` John Brown 's Body '' ?", 'examples_str': 'Question: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does HIV stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What does a chef coddle eggs in ?
class_name: Entity 
class_index: 1
--------

Question: What do the red-and-white stripes on a barbershop pole stand for ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who used AuH2O as an election slogan ?
class_name: Human being 
class_index: 3
--------

Question: In what part of the world is Mozambique ?
class_name: Location 
class_index: 4
--------

Question: How many American actors were nominated for the best actor Oscar for 1983 ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Who was the author of `` John Brown 's Body '' ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Who was the author of `` John Brown 's Body '' ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 03:48:40 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14351'), (b'x-ratelimit-remaining-tokens', b'29314'), (b'x-ratelimit-reset-requests', b'4m53.666999999s'), (b'x-ratelimit-reset-tokens', b'1.372s'), (b'x-request-id', b'req_01hyyn0zxkfmtsh2pws9mt1t36'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab4538e99a9e52-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the author of a specific book, which is a characteristic of a human being.
class_name: HUM
class_index: 3
task_input: What tragedy befell the city of Dogtown in 1899 ?, corse_label: 1
types: <class 'str'>, <class 'torch.Tensor'>
prompt_kwargs: {'input': 'What tragedy befell the city of Dogtown in 1899 ?', 'examples_str': 'Question: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does HIV stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What does a chef coddle eggs in ?
class_name: Entity 
class_index: 1
--------

Question: What do the red-and-white stripes on a barbershop pole stand for ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who used AuH2O as an election slogan ?
class_name: Human being 
class_index: 3
--------

Question: In what part of the world is Mozambique ?
class_name: Location 
class_index: 4
--------

Question: How many American actors were nominated for the best actor Oscar for 1983 ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What tragedy befell the city of Dogtown in 1899 ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What tragedy befell the city of Dogtown in 1899 ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 03:48:41 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14350'), (b'x-ratelimit-remaining-tokens', b'29021'), (b'x-ratelimit-reset-requests', b'4m59.705s'), (b'x-ratelimit-reset-tokens', b'1.958s'), (b'x-request-id', b'req_01hyyn106tfrwb91yxcbp966x3'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab453adb169e52-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about a historical event, specifically a tragedy that occurred in a city called Dogtown in 1899.
class_name: Location
class_index: 4
task_input: How long ago did the Anglican church part from the Vatican ?, corse_label: 5
types: <class 'str'>, <class 'torch.Tensor'>
prompt_kwargs: {'input': 'How long ago did the Anglican church part from the Vatican ?', 'examples_str': 'Question: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does HIV stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What does a chef coddle eggs in ?
class_name: Entity 
class_index: 1
--------

Question: What do the red-and-white stripes on a barbershop pole stand for ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who used AuH2O as an election slogan ?
class_name: Human being 
class_index: 3
--------

Question: In what part of the world is Mozambique ?
class_name: Location 
class_index: 4
--------

Question: How many American actors were nominated for the best actor Oscar for 1983 ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: How long ago did the Anglican church part from the Vatican ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: How long ago did the Anglican church part from the Vatican ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 03:48:41 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14349'), (b'x-ratelimit-remaining-tokens', b'28729'), (b'x-ratelimit-reset-requests', b'5m5.694s'), (b'x-ratelimit-reset-tokens', b'2.542s'), (b'x-request-id', b'req_01hyyn10gef4mbvg3k9sw4dkzg'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab453ccc769e52-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the time elapsed since the Anglican church parted from the Vatican, which is a historical event with a specific duration.
class_name: Description and abstract concept
class_index: 2
task_input: Where does the Santa Fe Trail begin and end ?, corse_label: 4
types: <class 'str'>, <class 'torch.Tensor'>
prompt_kwargs: {'input': 'Where does the Santa Fe Trail begin and end ?', 'examples_str': 'Question: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does HIV stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What does a chef coddle eggs in ?
class_name: Entity 
class_index: 1
--------

Question: What do the red-and-white stripes on a barbershop pole stand for ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who used AuH2O as an election slogan ?
class_name: Human being 
class_index: 3
--------

Question: In what part of the world is Mozambique ?
class_name: Location 
class_index: 4
--------

Question: How many American actors were nominated for the best actor Oscar for 1983 ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Where does the Santa Fe Trail begin and end ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Where does the Santa Fe Trail begin and end ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 03:48:41 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14348'), (b'x-ratelimit-remaining-tokens', b'28484'), (b'x-ratelimit-reset-requests', b'5m11.591s'), (b'x-ratelimit-reset-tokens', b'3.032s'), (b'x-request-id', b'req_01hyyn10x8fjga2eeec3r84gbz'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab453f5e609e52-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question asks about the starting and ending points of the Santa Fe Trail, which is a location-based question.
class_name: Location
class_index: 4
responses: [2, 5, 3, 4, 2, 4], targets: [2, 5, 3, 1, 5, 4]
num_invalid: 0
Preds tensor: tensor([[0., 0., 1., 0., 0., 0.],
        [0., 0., 0., 0., 0., 1.],
        [0., 0., 0., 1., 0., 0.],
        [0., 0., 0., 0., 1., 0.],
        [0., 0., 1., 0., 0., 0.],
        [0., 0., 0., 0., 1., 0.]])
Targets tensor: tensor([2, 5, 3, 1, 5, 4])
Eval Accuracy 0 0: 0.667, F1: 0.6
task_input: Why are peanut butter cookies topped with crisscrosses ?, corse_label: 2
types: <class 'str'>, <class 'torch.Tensor'>
prompt_kwargs: {'input': 'Why are peanut butter cookies topped with crisscrosses ?', 'examples_str': 'Question: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does HIV stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What does a chef coddle eggs in ?
class_name: Entity 
class_index: 1
--------

Question: What do the red-and-white stripes on a barbershop pole stand for ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who used AuH2O as an election slogan ?
class_name: Human being 
class_index: 3
--------

Question: In what part of the world is Mozambique ?
class_name: Location 
class_index: 4
--------

Question: How many American actors were nominated for the best actor Oscar for 1983 ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Why are peanut butter cookies topped with crisscrosses ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Why are peanut butter cookies topped with crisscrosses ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 03:48:42 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14347'), (b'x-ratelimit-remaining-tokens', b'28225'), (b'x-ratelimit-reset-requests', b'5m17.641s'), (b'x-ratelimit-reset-tokens', b'3.549s'), (b'x-request-id', b'req_01hyyn118gf27rsxmmre3h85ee'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab454198749e52-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the purpose or meaning behind a specific design element in peanut butter cookies, which is a descriptive concept.
class_name: DESC
class_index: 2
```
task_input: What was the minimum wage in 1991 ?, corse_label: 5
types: <class 'str'>, <class 'torch.Tensor'>
prompt_kwargs: {'input': 'What was the minimum wage in 1991 ?', 'examples_str': 'Question: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does HIV stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What does a chef coddle eggs in ?
class_name: Entity 
class_index: 1
--------

Question: What do the red-and-white stripes on a barbershop pole stand for ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who used AuH2O as an election slogan ?
class_name: Human being 
class_index: 3
--------

Question: In what part of the world is Mozambique ?
class_name: Location 
class_index: 4
--------

Question: How many American actors were nominated for the best actor Oscar for 1983 ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What was the minimum wage in 1991 ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What was the minimum wage in 1991 ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 03:48:42 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14346'), (b'x-ratelimit-remaining-tokens', b'27958'), (b'x-ratelimit-reset-requests', b'5m23.646s'), (b'x-ratelimit-reset-tokens', b'4.083999999s'), (b'x-request-id', b'req_01hyyn11knft1r25f7k4vsqq9v'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab4543d9f89e52-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking for a specific piece of information, a numeric value, which is the minimum wage in 1991.
class_name: NUM
class_index: 5
task_input: Who was the author of `` John Brown 's Body '' ?, corse_label: 3
types: <class 'str'>, <class 'torch.Tensor'>
prompt_kwargs: {'input': "Who was the author of `` John Brown 's Body '' ?", 'examples_str': 'Question: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does HIV stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What does a chef coddle eggs in ?
class_name: Entity 
class_index: 1
--------

Question: What do the red-and-white stripes on a barbershop pole stand for ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who used AuH2O as an election slogan ?
class_name: Human being 
class_index: 3
--------

Question: In what part of the world is Mozambique ?
class_name: Location 
class_index: 4
--------

Question: How many American actors were nominated for the best actor Oscar for 1983 ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Who was the author of `` John Brown 's Body '' ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Who was the author of `` John Brown 's Body '' ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 03:48:42 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14345'), (b'x-ratelimit-remaining-tokens', b'27703'), (b'x-ratelimit-reset-requests', b'5m29.629s'), (b'x-ratelimit-reset-tokens', b'4.594s'), (b'x-request-id', b'req_01hyyn11z7evw9qnzjxd4nn0r4'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab45462bb09e52-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the author of a specific book, which is a human being.
class_name: HUM
class_index: 3
task_input: What tragedy befell the city of Dogtown in 1899 ?, corse_label: 1
types: <class 'str'>, <class 'torch.Tensor'>
prompt_kwargs: {'input': 'What tragedy befell the city of Dogtown in 1899 ?', 'examples_str': 'Question: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does HIV stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What does a chef coddle eggs in ?
class_name: Entity 
class_index: 1
--------

Question: What do the red-and-white stripes on a barbershop pole stand for ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who used AuH2O as an election slogan ?
class_name: Human being 
class_index: 3
--------

Question: In what part of the world is Mozambique ?
class_name: Location 
class_index: 4
--------

Question: How many American actors were nominated for the best actor Oscar for 1983 ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What tragedy befell the city of Dogtown in 1899 ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What tragedy befell the city of Dogtown in 1899 ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 03:48:43 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14344'), (b'x-ratelimit-remaining-tokens', b'27407'), (b'x-ratelimit-reset-requests', b'5m35.715999999s'), (b'x-ratelimit-reset-tokens', b'5.186s'), (b'x-request-id', b'req_01hyyn1286f27ras1haq7hcx5s'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab4547ecec9e52-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about a historical event, specifically a tragedy that occurred in a city called Dogtown in 1899.
class_name: Location
class_index: 4
task_input: How long ago did the Anglican church part from the Vatican ?, corse_label: 5
types: <class 'str'>, <class 'torch.Tensor'>
prompt_kwargs: {'input': 'How long ago did the Anglican church part from the Vatican ?', 'examples_str': 'Question: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does HIV stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What does a chef coddle eggs in ?
class_name: Entity 
class_index: 1
--------

Question: What do the red-and-white stripes on a barbershop pole stand for ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who used AuH2O as an election slogan ?
class_name: Human being 
class_index: 3
--------

Question: In what part of the world is Mozambique ?
class_name: Location 
class_index: 4
--------

Question: How many American actors were nominated for the best actor Oscar for 1983 ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: How long ago did the Anglican church part from the Vatican ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: How long ago did the Anglican church part from the Vatican ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 03:48:43 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14343'), (b'x-ratelimit-remaining-tokens', b'27097'), (b'x-ratelimit-reset-requests', b'5m41.728999999s'), (b'x-ratelimit-reset-tokens', b'5.805s'), (b'x-request-id', b'req_01hyyn12gpfjgbvxfea85h5qdb'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab4549ae029e52-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the time elapsed since the Anglican church parted from the Vatican, which is a historical event with a specific duration.
class_name: Description and abstract concept
class_index: 2
task_input: Where does the Santa Fe Trail begin and end ?, corse_label: 4
types: <class 'str'>, <class 'torch.Tensor'>
prompt_kwargs: {'input': 'Where does the Santa Fe Trail begin and end ?', 'examples_str': 'Question: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.
Question: What does HIV stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What does a chef coddle eggs in ?
class_name: Entity 
class_index: 1
--------

Question: What do the red-and-white stripes on a barbershop pole stand for ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who used AuH2O as an election slogan ?
class_name: Human being 
class_index: 3
--------

Question: In what part of the world is Mozambique ?
class_name: Location 
class_index: 4
--------

Question: How many American actors were nominated for the best actor Oscar for 1983 ?
class_name: Numeric value 
class_index: 5
--------
</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does HIV stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What does a chef coddle eggs in ?
class_name: Entity 
class_index: 1
--------

Question: What do the red-and-white stripes on a barbershop pole stand for ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who used AuH2O as an election slogan ?
class_name: Human being 
class_index: 3
--------

Question: In what part of the world is Mozambique ?
class_name: Location 
class_index: 4
--------

Question: How many American actors were nominated for the best actor Oscar for 1983 ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Where does the Santa Fe Trail begin and end ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Where does the Santa Fe Trail begin and end ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 03:48:43 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14342'), (b'x-ratelimit-remaining-tokens', b'26806'), (b'x-ratelimit-reset-requests', b'5m47.683s'), (b'x-ratelimit-reset-tokens', b'6.387s'), (b'x-request-id', b'req_01hyyn12ref1ssm8vxs882svsd'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab454b2fa29e52-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question asks about the starting and ending points of the Santa Fe Trail, which is a location-based question.
class_name: Location
class_index: 4
responses: [2, 5, 3, 4, 2, 4], targets: [2, 5, 3, 1, 5, 4]
num_invalid: 0
Preds tensor: tensor([[0., 0., 1., 0., 0., 0.],
        [0., 0., 0., 0., 0., 1.],
        [0., 0., 0., 1., 0., 0.],
        [0., 0., 0., 0., 1., 0.],
        [0., 0., 1., 0., 0., 0.],
        [0., 0., 0., 0., 1., 0.]])
Targets tensor: tensor([2, 5, 3, 1, 5, 4])
Eval Accuracy 0 1: 0.667, F1: 0.6
step: 1
train_batch: {'text': ['What two vessels fought the first sea battle between iron-covered ships ?', 'Where can I find a review of Nightmare on Elm Street in a film journal ?', 'Which Japanese car maker had its biggest percentage of sale in the domestic market ?', "Who 's the lead singer of the Led Zeppelin band ?", 'The major league baseball team in Pittsburgh is called what ?', 'What makes popcorn pop ?'], 'coarse_label': tensor([1, 4, 3, 3, 3, 2]), 'fine_label': tensor([22, 35, 28, 29, 28, 27])}
task_input: What two vessels fought the first sea battle between iron-covered ships ?, corse_label: 1
types: <class 'str'>, <class 'torch.Tensor'>
prompt_kwargs: {'input': 'What two vessels fought the first sea battle between iron-covered ships ?', 'examples_str': 'Question: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does HIV stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What does a chef coddle eggs in ?
class_name: Entity 
class_index: 1
--------

Question: What do the red-and-white stripes on a barbershop pole stand for ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who used AuH2O as an election slogan ?
class_name: Human being 
class_index: 3
--------

Question: In what part of the world is Mozambique ?
class_name: Location 
class_index: 4
--------

Question: How many American actors were nominated for the best actor Oscar for 1983 ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What two vessels fought the first sea battle between iron-covered ships ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What two vessels fought the first sea battle between iron-covered ships ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 03:48:43 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14341'), (b'x-ratelimit-remaining-tokens', b'26513'), (b'x-ratelimit-reset-requests', b'5m53.709999999s'), (b'x-ratelimit-reset-tokens', b'6.973s'), (b'x-request-id', b'req_01hyyn133nfjya4tpv12j9t150'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab454d69e49e52-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about a historical event involving naval vessels, which suggests it's a descriptive passage about a specific event.
class_name: Description and abstract concept
class_index: 2
task_input: Where can I find a review of Nightmare on Elm Street in a film journal ?, corse_label: 4
types: <class 'str'>, <class 'torch.Tensor'>
prompt_kwargs: {'input': 'Where can I find a review of Nightmare on Elm Street in a film journal ?', 'examples_str': 'Question: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does HIV stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What does a chef coddle eggs in ?
class_name: Entity 
class_index: 1
--------

Question: What do the red-and-white stripes on a barbershop pole stand for ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who used AuH2O as an election slogan ?
class_name: Human being 
class_index: 3
--------

Question: In what part of the world is Mozambique ?
class_name: Location 
class_index: 4
--------

Question: How many American actors were nominated for the best actor Oscar for 1983 ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Where can I find a review of Nightmare on Elm Street in a film journal ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Where can I find a review of Nightmare on Elm Street in a film journal ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 03:48:44 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14340'), (b'x-ratelimit-remaining-tokens', b'26223'), (b'x-ratelimit-reset-requests', b'5m59.688s'), (b'x-ratelimit-reset-tokens', b'7.553s'), (b'x-request-id', b'req_01hyyn13defqwtmra04c801w16'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab454f5b6c9e52-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is asking about the location of a review of a film, which is a specific piece of information that can be found in a physical or digital location.
class_name: Location
class_index: 4
```
task_input: Which Japanese car maker had its biggest percentage of sale in the domestic market ?, corse_label: 3
types: <class 'str'>, <class 'torch.Tensor'>
prompt_kwargs: {'input': 'Which Japanese car maker had its biggest percentage of sale in the domestic market ?', 'examples_str': 'Question: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does HIV stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What does a chef coddle eggs in ?
class_name: Entity 
class_index: 1
--------

Question: What do the red-and-white stripes on a barbershop pole stand for ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who used AuH2O as an election slogan ?
class_name: Human being 
class_index: 3
--------

Question: In what part of the world is Mozambique ?
class_name: Location 
class_index: 4
--------

Question: How many American actors were nominated for the best actor Oscar for 1983 ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Which Japanese car maker had its biggest percentage of sale in the domestic market ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Which Japanese car maker had its biggest percentage of sale in the domestic market ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 03:48:44 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14339'), (b'x-ratelimit-remaining-tokens', b'25924'), (b'x-ratelimit-reset-requests', b'6m5.687s'), (b'x-ratelimit-reset-tokens', b'8.151s'), (b'x-request-id', b'req_01hyyn13q8evfvnhzm88m0st51'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab45515d169e52-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is about a specific Japanese car maker, which is a type of entity, and it's asking about its sales in the domestic market, which is a numeric value.
class_name: NUM
class_index: 5
task_input: Who 's the lead singer of the Led Zeppelin band ?, corse_label: 3
types: <class 'str'>, <class 'torch.Tensor'>
prompt_kwargs: {'input': "Who 's the lead singer of the Led Zeppelin band ?", 'examples_str': 'Question: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does HIV stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What does a chef coddle eggs in ?
class_name: Entity 
class_index: 1
--------

Question: What do the red-and-white stripes on a barbershop pole stand for ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who used AuH2O as an election slogan ?
class_name: Human being 
class_index: 3
--------

Question: In what part of the world is Mozambique ?
class_name: Location 
class_index: 4
--------

Question: How many American actors were nominated for the best actor Oscar for 1983 ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Who 's the lead singer of the Led Zeppelin band ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Who 's the lead singer of the Led Zeppelin band ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 03:48:44 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14338'), (b'x-ratelimit-remaining-tokens', b'25614'), (b'x-ratelimit-reset-requests', b'6m11.707999999s'), (b'x-ratelimit-reset-tokens', b'8.771s'), (b'x-request-id', b'req_01hyyn140devxa6v8fqdqt0y6v'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab45532e869e52-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the lead singer of a specific band, which is a characteristic of a human being.
class_name: HUM
class_index: 3
task_input: The major league baseball team in Pittsburgh is called what ?, corse_label: 3
types: <class 'str'>, <class 'torch.Tensor'>
prompt_kwargs: {'input': 'The major league baseball team in Pittsburgh is called what ?', 'examples_str': 'Question: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does HIV stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What does a chef coddle eggs in ?
class_name: Entity 
class_index: 1
--------

Question: What do the red-and-white stripes on a barbershop pole stand for ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who used AuH2O as an election slogan ?
class_name: Human being 
class_index: 3
--------

Question: In what part of the world is Mozambique ?
class_name: Location 
class_index: 4
--------

Question: How many American actors were nominated for the best actor Oscar for 1983 ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: The major league baseball team in Pittsburgh is called what ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: The major league baseball team in Pittsburgh is called what ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 03:48:45 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14337'), (b'x-ratelimit-remaining-tokens', b'25327'), (b'x-ratelimit-reset-requests', b'6m17.69s'), (b'x-ratelimit-reset-tokens', b'9.345s'), (b'x-request-id', b'req_01hyyn14a4fxf92y53qkac3cd9'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab455528039e52-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking for the name of a sports team, which is a specific entity.
class_name: ENTY
class_index: 1
task_input: What makes popcorn pop ?, corse_label: 2
types: <class 'str'>, <class 'torch.Tensor'>
prompt_kwargs: {'input': 'What makes popcorn pop ?', 'examples_str': 'Question: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does HIV stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What does a chef coddle eggs in ?
class_name: Entity 
class_index: 1
--------

Question: What do the red-and-white stripes on a barbershop pole stand for ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who used AuH2O as an election slogan ?
class_name: Human being 
class_index: 3
--------

Question: In what part of the world is Mozambique ?
class_name: Location 
class_index: 4
--------

Question: How many American actors were nominated for the best actor Oscar for 1983 ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What makes popcorn pop ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What makes popcorn pop ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 03:48:45 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14336'), (b'x-ratelimit-remaining-tokens', b'25045'), (b'x-ratelimit-reset-requests', b'6m23.693s'), (b'x-ratelimit-reset-tokens', b'9.909s'), (b'x-request-id', b'req_01hyyn14ktf1sv4y92cz8qzc67'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab455709719e52-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the process of popcorn popping, which is a natural phenomenon, so it's not a specific entity or location.
class_name: Description and abstract concept
class_index: 2
```
responses: [2, 4, 5, 3, 1, 2], targets: [1, 4, 3, 3, 3, 2]
num_invalid: 0
Preds tensor: tensor([[0., 0., 1., 0., 0., 0.],
        [0., 0., 0., 0., 1., 0.],
        [0., 0., 0., 0., 0., 1.],
        [0., 0., 0., 1., 0., 0.],
        [0., 1., 0., 0., 0., 0.],
        [0., 0., 1., 0., 0., 0.]])
Targets tensor: tensor([1, 4, 3, 3, 3, 2])
Eval Accuracy 1 0: 0.5, F1: 0.433
task_input: What two vessels fought the first sea battle between iron-covered ships ?, corse_label: 1
types: <class 'str'>, <class 'torch.Tensor'>
prompt_kwargs: {'input': 'What two vessels fought the first sea battle between iron-covered ships ?', 'examples_str': 'Question: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does HIV stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What does a chef coddle eggs in ?
class_name: Entity 
class_index: 1
--------

Question: What do the red-and-white stripes on a barbershop pole stand for ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who used AuH2O as an election slogan ?
class_name: Human being 
class_index: 3
--------

Question: In what part of the world is Mozambique ?
class_name: Location 
class_index: 4
--------

Question: How many American actors were nominated for the best actor Oscar for 1983 ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What two vessels fought the first sea battle between iron-covered ships ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What two vessels fought the first sea battle between iron-covered ships ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 03:48:45 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14335'), (b'x-ratelimit-remaining-tokens', b'24755'), (b'x-ratelimit-reset-requests', b'6m29.695s'), (b'x-ratelimit-reset-tokens', b'10.489s'), (b'x-request-id', b'req_01hyyn14xbevx888yxfzch5m1k'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab4558fafa9e52-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about a historical event involving naval vessels, which suggests it's a descriptive passage about a specific event.
class_name: Description and abstract concept
class_index: 2
task_input: Where can I find a review of Nightmare on Elm Street in a film journal ?, corse_label: 4
types: <class 'str'>, <class 'torch.Tensor'>
prompt_kwargs: {'input': 'Where can I find a review of Nightmare on Elm Street in a film journal ?', 'examples_str': 'Question: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does HIV stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What does a chef coddle eggs in ?
class_name: Entity 
class_index: 1
--------

Question: What do the red-and-white stripes on a barbershop pole stand for ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who used AuH2O as an election slogan ?
class_name: Human being 
class_index: 3
--------

Question: In what part of the world is Mozambique ?
class_name: Location 
class_index: 4
--------

Question: How many American actors were nominated for the best actor Oscar for 1983 ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Where can I find a review of Nightmare on Elm Street in a film journal ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Where can I find a review of Nightmare on Elm Street in a film journal ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 03:48:46 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14334'), (b'x-ratelimit-remaining-tokens', b'24441'), (b'x-ratelimit-reset-requests', b'6m35.737s'), (b'x-ratelimit-reset-tokens', b'11.117s'), (b'x-request-id', b'req_01hyyn155mevw8mxch26amvmap'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab455a9c759e52-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is asking about the location of a review of a film, which is a specific piece of information that can be found in a physical or digital location.
class_name: Location
class_index: 4
```
task_input: Which Japanese car maker had its biggest percentage of sale in the domestic market ?, corse_label: 3
types: <class 'str'>, <class 'torch.Tensor'>
prompt_kwargs: {'input': 'Which Japanese car maker had its biggest percentage of sale in the domestic market ?', 'examples_str': 'Question: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does HIV stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What does a chef coddle eggs in ?
class_name: Entity 
class_index: 1
--------

Question: What do the red-and-white stripes on a barbershop pole stand for ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who used AuH2O as an election slogan ?
class_name: Human being 
class_index: 3
--------

Question: In what part of the world is Mozambique ?
class_name: Location 
class_index: 4
--------

Question: How many American actors were nominated for the best actor Oscar for 1983 ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Which Japanese car maker had its biggest percentage of sale in the domestic market ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Which Japanese car maker had its biggest percentage of sale in the domestic market ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 03:48:46 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14333'), (b'x-ratelimit-remaining-tokens', b'24161'), (b'x-ratelimit-reset-requests', b'6m41.648s'), (b'x-ratelimit-reset-tokens', b'11.677s'), (b'x-request-id', b'req_01hyyn15gjf6sbmqskp08p19we'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab455cce469e52-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is about a specific Japanese car maker, which is a type of entity, and it's asking about its sales in the domestic market, which is a numeric value.
class_name: NUM
class_index: 5
task_input: Who 's the lead singer of the Led Zeppelin band ?, corse_label: 3
types: <class 'str'>, <class 'torch.Tensor'>
prompt_kwargs: {'input': "Who 's the lead singer of the Led Zeppelin band ?", 'examples_str': 'Question: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does HIV stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What does a chef coddle eggs in ?
class_name: Entity 
class_index: 1
--------

Question: What do the red-and-white stripes on a barbershop pole stand for ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who used AuH2O as an election slogan ?
class_name: Human being 
class_index: 3
--------

Question: In what part of the world is Mozambique ?
class_name: Location 
class_index: 4
--------

Question: How many American actors were nominated for the best actor Oscar for 1983 ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Who 's the lead singer of the Led Zeppelin band ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Who 's the lead singer of the Led Zeppelin band ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 03:48:46 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14332'), (b'x-ratelimit-remaining-tokens', b'23910'), (b'x-ratelimit-reset-requests', b'6m47.591s'), (b'x-ratelimit-reset-tokens', b'12.18s'), (b'x-request-id', b'req_01hyyn15xcfamty4zcnje60chq'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab455f58a99e52-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the lead singer of a specific band, which is a characteristic of a human being.
class_name: HUM
class_index: 3
task_input: The major league baseball team in Pittsburgh is called what ?, corse_label: 3
types: <class 'str'>, <class 'torch.Tensor'>
prompt_kwargs: {'input': 'The major league baseball team in Pittsburgh is called what ?', 'examples_str': 'Question: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does HIV stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What does a chef coddle eggs in ?
class_name: Entity 
class_index: 1
--------

Question: What do the red-and-white stripes on a barbershop pole stand for ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who used AuH2O as an election slogan ?
class_name: Human being 
class_index: 3
--------

Question: In what part of the world is Mozambique ?
class_name: Location 
class_index: 4
--------

Question: How many American actors were nominated for the best actor Oscar for 1983 ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: The major league baseball team in Pittsburgh is called what ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: The major league baseball team in Pittsburgh is called what ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 03:48:47 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14331'), (b'x-ratelimit-remaining-tokens', b'23620'), (b'x-ratelimit-reset-requests', b'6m53.697s'), (b'x-ratelimit-reset-tokens', b'12.759s'), (b'x-request-id', b'req_01hyyn166we5j832qvtdzcj9w7'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab45614a0f9e52-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking for the name of a sports team, which is a specific entity.
class_name: ENTY
class_index: 1
task_input: What makes popcorn pop ?, corse_label: 2
types: <class 'str'>, <class 'torch.Tensor'>
prompt_kwargs: {'input': 'What makes popcorn pop ?', 'examples_str': 'Question: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does HIV stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What does a chef coddle eggs in ?
class_name: Entity 
class_index: 1
--------

Question: What do the red-and-white stripes on a barbershop pole stand for ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who used AuH2O as an election slogan ?
class_name: Human being 
class_index: 3
--------

Question: In what part of the world is Mozambique ?
class_name: Location 
class_index: 4
--------

Question: How many American actors were nominated for the best actor Oscar for 1983 ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What makes popcorn pop ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What makes popcorn pop ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 03:48:47 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14330'), (b'x-ratelimit-remaining-tokens', b'23332'), (b'x-ratelimit-reset-requests', b'6m59.705s'), (b'x-ratelimit-reset-tokens', b'13.336s'), (b'x-request-id', b'req_01hyyn16g6evg8rsv8y75dsvwm'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab45631b959e52-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the process of popcorn popping, which is a natural phenomenon, so it's not a specific entity or location.
class_name: Description and abstract concept
class_index: 2
```
responses: [2, 4, 5, 3, 1, 2], targets: [1, 4, 3, 3, 3, 2]
num_invalid: 0
Preds tensor: tensor([[0., 0., 1., 0., 0., 0.],
        [0., 0., 0., 0., 1., 0.],
        [0., 0., 0., 0., 0., 1.],
        [0., 0., 0., 1., 0., 0.],
        [0., 1., 0., 0., 0., 0.],
        [0., 0., 1., 0., 0., 0.]])
Targets tensor: tensor([1, 4, 3, 3, 3, 2])
Eval Accuracy 1 1: 0.5, F1: 0.433
step: 2
train_batch: {'text': ['How does rabies spread ?', 'How do I start a web based business ?', 'Who are the presidents of Mexico and Indonesia ?', 'Why do men snore ?', 'Who was Camp David named for ?', 'What is the main ingredient of yogurt ?'], 'coarse_label': tensor([2, 2, 3, 2, 3, 1]), 'fine_label': tensor([26, 26, 29, 27, 29, 18])}
task_input: How does rabies spread ?, corse_label: 2
types: <class 'str'>, <class 'torch.Tensor'>
prompt_kwargs: {'input': 'How does rabies spread ?', 'examples_str': 'Question: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does HIV stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What does a chef coddle eggs in ?
class_name: Entity 
class_index: 1
--------

Question: What do the red-and-white stripes on a barbershop pole stand for ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who used AuH2O as an election slogan ?
class_name: Human being 
class_index: 3
--------

Question: In what part of the world is Mozambique ?
class_name: Location 
class_index: 4
--------

Question: How many American actors were nominated for the best actor Oscar for 1983 ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: How does rabies spread ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: How does rabies spread ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 03:48:47 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14329'), (b'x-ratelimit-remaining-tokens', b'23047'), (b'x-ratelimit-reset-requests', b'7m5.682s'), (b'x-ratelimit-reset-tokens', b'13.905s'), (b'x-request-id', b'req_01hyyn16t5fmva8wzjg1n73n41'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab45652da09e52-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the spread of rabies, which is a biological process, and the answer will likely involve a description of the transmission of the disease.
class_name: Description and abstract concept
class_index: 2
task_input: How do I start a web based business ?, corse_label: 2
types: <class 'str'>, <class 'torch.Tensor'>
prompt_kwargs: {'input': 'How do I start a web based business ?', 'examples_str': 'Question: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does HIV stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What does a chef coddle eggs in ?
class_name: Entity 
class_index: 1
--------

Question: What do the red-and-white stripes on a barbershop pole stand for ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who used AuH2O as an election slogan ?
class_name: Human being 
class_index: 3
--------

Question: In what part of the world is Mozambique ?
class_name: Location 
class_index: 4
--------

Question: How many American actors were nominated for the best actor Oscar for 1983 ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: How do I start a web based business ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: How do I start a web based business ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 03:48:48 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14328'), (b'x-ratelimit-remaining-tokens', b'22757'), (b'x-ratelimit-reset-requests', b'7m11.687s'), (b'x-ratelimit-reset-tokens', b'14.486s'), (b'x-request-id', b'req_01hyyn173zf6sbd1fpg2dwxy3a'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab45670f049e52-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is about starting a web-based business, which is a general concept and not a specific entity or location, so it's classified as a description and abstract concept.
class_name: DESC
class_index: 2
```
task_input: Who are the presidents of Mexico and Indonesia ?, corse_label: 3
types: <class 'str'>, <class 'torch.Tensor'>
prompt_kwargs: {'input': 'Who are the presidents of Mexico and Indonesia ?', 'examples_str': 'Question: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does HIV stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What does a chef coddle eggs in ?
class_name: Entity 
class_index: 1
--------

Question: What do the red-and-white stripes on a barbershop pole stand for ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who used AuH2O as an election slogan ?
class_name: Human being 
class_index: 3
--------

Question: In what part of the world is Mozambique ?
class_name: Location 
class_index: 4
--------

Question: How many American actors were nominated for the best actor Oscar for 1983 ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Who are the presidents of Mexico and Indonesia ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Who are the presidents of Mexico and Indonesia ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 03:48:48 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14327'), (b'x-ratelimit-remaining-tokens', b'22436'), (b'x-ratelimit-reset-requests', b'7m17.741s'), (b'x-ratelimit-reset-tokens', b'15.127s'), (b'x-request-id', b'req_01hyyn17c3fqxappersakewtmb'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab4568b8269e52-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question asks about the presidents of two countries, which are typically represented by human beings.
class_name: HUM
class_index: 3
task_input: Why do men snore ?, corse_label: 2
types: <class 'str'>, <class 'torch.Tensor'>
prompt_kwargs: {'input': 'Why do men snore ?', 'examples_str': 'Question: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does HIV stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What does a chef coddle eggs in ?
class_name: Entity 
class_index: 1
--------

Question: What do the red-and-white stripes on a barbershop pole stand for ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who used AuH2O as an election slogan ?
class_name: Human being 
class_index: 3
--------

Question: In what part of the world is Mozambique ?
class_name: Location 
class_index: 4
--------

Question: How many American actors were nominated for the best actor Oscar for 1983 ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Why do men snore ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Why do men snore ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 03:48:48 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14326'), (b'x-ratelimit-remaining-tokens', b'22124'), (b'x-ratelimit-reset-requests', b'7m23.758s'), (b'x-ratelimit-reset-tokens', b'15.752s'), (b'x-request-id', b'req_01hyyn17kpfptvwbeq2bss3xxp'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab456a39499e52-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is about a general phenomenon or behavior, and the answer is not a specific entity or location.
class_name: Description and abstract concept
class_index: 2
task_input: Who was Camp David named for ?, corse_label: 3
types: <class 'str'>, <class 'torch.Tensor'>
prompt_kwargs: {'input': 'Who was Camp David named for ?', 'examples_str': 'Question: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does HIV stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What does a chef coddle eggs in ?
class_name: Entity 
class_index: 1
--------

Question: What do the red-and-white stripes on a barbershop pole stand for ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who used AuH2O as an election slogan ?
class_name: Human being 
class_index: 3
--------

Question: In what part of the world is Mozambique ?
class_name: Location 
class_index: 4
--------

Question: How many American actors were nominated for the best actor Oscar for 1983 ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Who was Camp David named for ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Who was Camp David named for ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 03:48:48 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14325'), (b'x-ratelimit-remaining-tokens', b'21839'), (b'x-ratelimit-reset-requests', b'7m29.698s'), (b'x-ratelimit-reset-tokens', b'16.322s'), (b'x-request-id', b'req_01hyyn17x6fxfakj9sadra06es'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab456c2ac79e52-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the origin of a name, which is a common trait of human beings.
class_name: HUM
class_index: 3
task_input: What is the main ingredient of yogurt ?, corse_label: 1
types: <class 'str'>, <class 'torch.Tensor'>
prompt_kwargs: {'input': 'What is the main ingredient of yogurt ?', 'examples_str': 'Question: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does HIV stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What does a chef coddle eggs in ?
class_name: Entity 
class_index: 1
--------

Question: What do the red-and-white stripes on a barbershop pole stand for ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who used AuH2O as an election slogan ?
class_name: Human being 
class_index: 3
--------

Question: In what part of the world is Mozambique ?
class_name: Location 
class_index: 4
--------

Question: How many American actors were nominated for the best actor Oscar for 1983 ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What is the main ingredient of yogurt ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is the main ingredient of yogurt ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 03:48:49 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14324'), (b'x-ratelimit-remaining-tokens', b'21557'), (b'x-ratelimit-reset-requests', b'7m35.695s'), (b'x-ratelimit-reset-tokens', b'16.885s'), (b'x-request-id', b'req_01hyyn186qfptt8smhy871s5ef'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab456e0c339e52-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the main ingredient of yogurt, which is a descriptive concept.
class_name: DESC
class_index: 2
```
responses: [2, 2, 3, 2, 3, 2], targets: [2, 2, 3, 2, 3, 1]
num_invalid: 0
Preds tensor: tensor([[0., 0., 1., 0., 0., 0.],
        [0., 0., 1., 0., 0., 0.],
        [0., 0., 0., 1., 0., 0.],
        [0., 0., 1., 0., 0., 0.],
        [0., 0., 0., 1., 0., 0.],
        [0., 0., 1., 0., 0., 0.]])
Targets tensor: tensor([2, 2, 3, 2, 3, 1])
Eval Accuracy 2 0: 0.833, F1: 0.619
task_input: How does rabies spread ?, corse_label: 2
types: <class 'str'>, <class 'torch.Tensor'>
prompt_kwargs: {'input': 'How does rabies spread ?', 'examples_str': 'Question: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does HIV stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What does a chef coddle eggs in ?
class_name: Entity 
class_index: 1
--------

Question: What do the red-and-white stripes on a barbershop pole stand for ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who used AuH2O as an election slogan ?
class_name: Human being 
class_index: 3
--------

Question: In what part of the world is Mozambique ?
class_name: Location 
class_index: 4
--------

Question: How many American actors were nominated for the best actor Oscar for 1983 ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: How does rabies spread ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: How does rabies spread ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 03:48:49 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14324'), (b'x-ratelimit-remaining-tokens', b'21288'), (b'x-ratelimit-reset-requests', b'7m35.681s'), (b'x-ratelimit-reset-tokens', b'17.423s'), (b'x-request-id', b'req_01hyyn18gpe5jassbpv0a2ty53'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab45700dd79e52-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: How does rabies spread ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 03:48:51 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14323'), (b'x-ratelimit-remaining-tokens', b'22317'), (b'x-ratelimit-reset-requests', b'7m39.614s'), (b'x-ratelimit-reset-tokens', b'15.365s'), (b'x-request-id', b'req_01hyyn1ahafqx883zh897p8xaf'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab457cf80f9e52-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the spread of rabies, which is a biological process, and the answer will likely involve a description of the transmission of the disease.
class_name: Description and abstract concept
class_index: 2
task_input: How do I start a web based business ?, corse_label: 2
types: <class 'str'>, <class 'torch.Tensor'>
prompt_kwargs: {'input': 'How do I start a web based business ?', 'examples_str': 'Question: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does HIV stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What does a chef coddle eggs in ?
class_name: Entity 
class_index: 1
--------

Question: What do the red-and-white stripes on a barbershop pole stand for ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who used AuH2O as an election slogan ?
class_name: Human being 
class_index: 3
--------

Question: In what part of the world is Mozambique ?
class_name: Location 
class_index: 4
--------

Question: How many American actors were nominated for the best actor Oscar for 1983 ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: How do I start a web based business ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: How do I start a web based business ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 03:48:51 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14323'), (b'x-ratelimit-remaining-tokens', b'22068'), (b'x-ratelimit-reset-requests', b'7m41.614999999s'), (b'x-ratelimit-reset-tokens', b'15.864s'), (b'x-request-id', b'req_01hyyn1axbf4mvmpw630myrjt7'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab457f59a39e52-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: How do I start a web based business ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 03:48:54 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14322'), (b'x-ratelimit-remaining-tokens', b'23092'), (b'x-ratelimit-reset-requests', b'7m45.557s'), (b'x-ratelimit-reset-tokens', b'13.816s'), (b'x-request-id', b'req_01hyyn1cxnfjgr22b6q1vfs0dv'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab458c3af09e52-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is about starting a web-based business, which is a general concept and not a specific entity or location, so it's classified as a description and abstract concept.
class_name: DESC
class_index: 2
```
task_input: Who are the presidents of Mexico and Indonesia ?, corse_label: 3
types: <class 'str'>, <class 'torch.Tensor'>
prompt_kwargs: {'input': 'Who are the presidents of Mexico and Indonesia ?', 'examples_str': 'Question: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does HIV stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What does a chef coddle eggs in ?
class_name: Entity 
class_index: 1
--------

Question: What do the red-and-white stripes on a barbershop pole stand for ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who used AuH2O as an election slogan ?
class_name: Human being 
class_index: 3
--------

Question: In what part of the world is Mozambique ?
class_name: Location 
class_index: 4
--------

Question: How many American actors were nominated for the best actor Oscar for 1983 ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Who are the presidents of Mexico and Indonesia ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Who are the presidents of Mexico and Indonesia ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 03:48:54 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14322'), (b'x-ratelimit-remaining-tokens', b'22791'), (b'x-ratelimit-reset-requests', b'7m47.708999999s'), (b'x-ratelimit-reset-tokens', b'14.417s'), (b'x-request-id', b'req_01hyyn1d6rfmvrp1bwvtfw1hf8'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab458e0c4e9e52-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Who are the presidents of Mexico and Indonesia ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 03:48:56 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14321'), (b'x-ratelimit-remaining-tokens', b'23815'), (b'x-ratelimit-reset-requests', b'7m51.652s'), (b'x-ratelimit-reset-tokens', b'12.369s'), (b'x-request-id', b'req_01hyyn1f70fn1vpmyrq51yfmpv'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab459aee869e52-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question asks about the presidents of two countries, which are typically represented by human beings.
class_name: HUM
class_index: 3
task_input: Why do men snore ?, corse_label: 2
types: <class 'str'>, <class 'torch.Tensor'>
prompt_kwargs: {'input': 'Why do men snore ?', 'examples_str': 'Question: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does HIV stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What does a chef coddle eggs in ?
class_name: Entity 
class_index: 1
--------

Question: What do the red-and-white stripes on a barbershop pole stand for ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who used AuH2O as an election slogan ?
class_name: Human being 
class_index: 3
--------

Question: In what part of the world is Mozambique ?
class_name: Location 
class_index: 4
--------

Question: How many American actors were nominated for the best actor Oscar for 1983 ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Why do men snore ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Why do men snore ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 03:48:56 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'325'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14321'), (b'x-ratelimit-remaining-tokens', b'23531'), (b'x-ratelimit-reset-requests', b'7m53.709999999s'), (b'x-ratelimit-reset-tokens', b'12.938s'), (b'x-request-id', b'req_01hyyn1fg2f8fa66j4ppnzzx1j'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab459cbfff9e52-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Why do men snore ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 03:48:58 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14320'), (b'x-ratelimit-remaining-tokens', b'24559'), (b'x-ratelimit-reset-requests', b'7m57.643s'), (b'x-ratelimit-reset-tokens', b'10.881s'), (b'x-request-id', b'req_01hyyn1hgqevgvff89a665gbm8'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab45a9997a9e52-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is about a general phenomenon or behavior, and the answer is not a specific entity or location.
class_name: Description and abstract concept
class_index: 2
task_input: Who was Camp David named for ?, corse_label: 3
types: <class 'str'>, <class 'torch.Tensor'>
prompt_kwargs: {'input': 'Who was Camp David named for ?', 'examples_str': 'Question: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does HIV stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What does a chef coddle eggs in ?
class_name: Entity 
class_index: 1
--------

Question: What do the red-and-white stripes on a barbershop pole stand for ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who used AuH2O as an election slogan ?
class_name: Human being 
class_index: 3
--------

Question: In what part of the world is Mozambique ?
class_name: Location 
class_index: 4
--------

Question: How many American actors were nominated for the best actor Oscar for 1983 ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Who was Camp David named for ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Who was Camp David named for ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 03:48:58 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14320'), (b'x-ratelimit-remaining-tokens', b'24270'), (b'x-ratelimit-reset-requests', b'7m59.717999999s'), (b'x-ratelimit-reset-tokens', b'11.459s'), (b'x-request-id', b'req_01hyyn1hsjf4mrcsc339s7yvhc'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab45ab5ad39e52-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Who was Camp David named for ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 03:49:01 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14319'), (b'x-ratelimit-remaining-tokens', b'25298'), (b'x-ratelimit-reset-requests', b'8m3.651s'), (b'x-ratelimit-reset-tokens', b'9.403s'), (b'x-request-id', b'req_01hyyn1kt5fmvrdg6fcytmyhrw'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab45b85bff9e52-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the origin of a name, which is a common trait of human beings.
class_name: HUM
class_index: 3
task_input: What is the main ingredient of yogurt ?, corse_label: 1
types: <class 'str'>, <class 'torch.Tensor'>
prompt_kwargs: {'input': 'What is the main ingredient of yogurt ?', 'examples_str': 'Question: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does HIV stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What does a chef coddle eggs in ?
class_name: Entity 
class_index: 1
--------

Question: What do the red-and-white stripes on a barbershop pole stand for ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who used AuH2O as an election slogan ?
class_name: Human being 
class_index: 3
--------

Question: In what part of the world is Mozambique ?
class_name: Location 
class_index: 4
--------

Question: How many American actors were nominated for the best actor Oscar for 1983 ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What is the main ingredient of yogurt ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is the main ingredient of yogurt ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 03:49:01 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14319'), (b'x-ratelimit-remaining-tokens', b'25012'), (b'x-ratelimit-reset-requests', b'8m5.714999999s'), (b'x-ratelimit-reset-tokens', b'9.975s'), (b'x-request-id', b'req_01hyyn1m2zfy39ppw3zndc10d8'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab45ba0d319e52-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is the main ingredient of yogurt ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 03:49:03 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14318'), (b'x-ratelimit-remaining-tokens', b'26036'), (b'x-ratelimit-reset-requests', b'8m9.657s'), (b'x-ratelimit-reset-tokens', b'7.927s'), (b'x-request-id', b'req_01hyyn1p3beja8wb9ttzw6cceh'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab45c6fec69e52-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the main ingredient of yogurt, which is a descriptive concept.
class_name: DESC
class_index: 2
```
responses: [2, 2, 3, 2, 3, 2], targets: [2, 2, 3, 2, 3, 1]
num_invalid: 0
Preds tensor: tensor([[0., 0., 1., 0., 0., 0.],
        [0., 0., 1., 0., 0., 0.],
        [0., 0., 0., 1., 0., 0.],
        [0., 0., 1., 0., 0., 0.],
        [0., 0., 0., 1., 0., 0.],
        [0., 0., 1., 0., 0., 0.]])
Targets tensor: tensor([2, 2, 3, 2, 3, 1])
Eval Accuracy 2 1: 0.833, F1: 0.619
step: 3
train_batch: {'text': ['What is the difference between a bachelor and a 1 bedroom apartment ?', 'What are the Twin Cities ?', 'How many propellers helped power the plane the Wright brothers flew into history ?', 'Why did the Anglican church split from the Vatican ?', 'What are other ways of getting stretch marks besides pregnancy , weight loss , and weight lifting ?', 'What program do I need to run a .tbk file ?'], 'coarse_label': tensor([2, 2, 5, 2, 1, 1]), 'fine_label': tensor([25, 24, 38, 27, 20,  5])}
task_input: What is the difference between a bachelor and a 1 bedroom apartment ?, corse_label: 2
types: <class 'str'>, <class 'torch.Tensor'>
prompt_kwargs: {'input': 'What is the difference between a bachelor and a 1 bedroom apartment ?', 'examples_str': 'Question: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does HIV stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What does a chef coddle eggs in ?
class_name: Entity 
class_index: 1
--------

Question: What do the red-and-white stripes on a barbershop pole stand for ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who used AuH2O as an election slogan ?
class_name: Human being 
class_index: 3
--------

Question: In what part of the world is Mozambique ?
class_name: Location 
class_index: 4
--------

Question: How many American actors were nominated for the best actor Oscar for 1983 ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What is the difference between a bachelor and a 1 bedroom apartment ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is the difference between a bachelor and a 1 bedroom apartment ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 03:49:03 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14318'), (b'x-ratelimit-remaining-tokens', b'25772'), (b'x-ratelimit-reset-requests', b'8m11.671999999s'), (b'x-ratelimit-reset-tokens', b'8.455s'), (b'x-request-id', b'req_01hyyn1pdneja9jp2xyc2c9hds'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab45c908299e52-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is the difference between a bachelor and a 1 bedroom apartment ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 03:49:05 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14317'), (b'x-ratelimit-remaining-tokens', b'26799'), (b'x-ratelimit-reset-requests', b'8m15.607s'), (b'x-ratelimit-reset-tokens', b'6.401s'), (b'x-request-id', b'req_01hyyn1re4eh28z6t913tme2j1'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab45d5eb059e52-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the difference between two types of apartments, which is a descriptive concept.
class_name: Description and abstract concept
class_index: 2
```
task_input: What are the Twin Cities ?, corse_label: 2
types: <class 'str'>, <class 'torch.Tensor'>
prompt_kwargs: {'input': 'What are the Twin Cities ?', 'examples_str': 'Question: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does HIV stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What does a chef coddle eggs in ?
class_name: Entity 
class_index: 1
--------

Question: What do the red-and-white stripes on a barbershop pole stand for ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who used AuH2O as an election slogan ?
class_name: Human being 
class_index: 3
--------

Question: In what part of the world is Mozambique ?
class_name: Location 
class_index: 4
--------

Question: How many American actors were nominated for the best actor Oscar for 1983 ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What are the Twin Cities ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What are the Twin Cities ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 03:49:05 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14317'), (b'x-ratelimit-remaining-tokens', b'26498'), (b'x-ratelimit-reset-requests', b'8m17.724999999s'), (b'x-ratelimit-reset-tokens', b'7.004s'), (b'x-request-id', b'req_01hyyn1rptf1ttsema8z9y8v8m'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab45d7ac8a9e52-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What are the Twin Cities ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 03:49:08 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14316'), (b'x-ratelimit-remaining-tokens', b'27524'), (b'x-ratelimit-reset-requests', b'8m21.663s'), (b'x-ratelimit-reset-tokens', b'4.952s'), (b'x-request-id', b'req_01hyyn1tq8fanvf6gq0gyxbfcr'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab45e48e619e52-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the names of two cities, which are typically referred to as the "Twin Cities".
class_name: Entity
class_index: 1
task_input: How many propellers helped power the plane the Wright brothers flew into history ?, corse_label: 5
types: <class 'str'>, <class 'torch.Tensor'>
prompt_kwargs: {'input': 'How many propellers helped power the plane the Wright brothers flew into history ?', 'examples_str': 'Question: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does HIV stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What does a chef coddle eggs in ?
class_name: Entity 
class_index: 1
--------

Question: What do the red-and-white stripes on a barbershop pole stand for ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who used AuH2O as an election slogan ?
class_name: Human being 
class_index: 3
--------

Question: In what part of the world is Mozambique ?
class_name: Location 
class_index: 4
--------

Question: How many American actors were nominated for the best actor Oscar for 1983 ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: How many propellers helped power the plane the Wright brothers flew into history ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: How many propellers helped power the plane the Wright brothers flew into history ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 03:49:08 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14316'), (b'x-ratelimit-remaining-tokens', b'27217'), (b'x-ratelimit-reset-requests', b'8m23.755s'), (b'x-ratelimit-reset-tokens', b'5.566s'), (b'x-request-id', b'req_01hyyn1tyyfanrk1ay3apdtaz4'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab45e61fa39e52-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: How many propellers helped power the plane the Wright brothers flew into history ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 03:49:10 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14315'), (b'x-ratelimit-remaining-tokens', b'28242'), (b'x-ratelimit-reset-requests', b'8m27.693999999s'), (b'x-ratelimit-reset-tokens', b'3.515s'), (b'x-request-id', b'req_01hyyn1wzbfrxt6acq0b74nm5z'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab45f2e9279e52-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is asking about the number of propellers used by the Wright brothers in their historic flight, which is a specific numeric value.
class_name: NUM
class_index: 5
task_input: Why did the Anglican church split from the Vatican ?, corse_label: 2
types: <class 'str'>, <class 'torch.Tensor'>
prompt_kwargs: {'input': 'Why did the Anglican church split from the Vatican ?', 'examples_str': 'Question: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does HIV stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What does a chef coddle eggs in ?
class_name: Entity 
class_index: 1
--------

Question: What do the red-and-white stripes on a barbershop pole stand for ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who used AuH2O as an election slogan ?
class_name: Human being 
class_index: 3
--------

Question: In what part of the world is Mozambique ?
class_name: Location 
class_index: 4
--------

Question: How many American actors were nominated for the best actor Oscar for 1983 ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Why did the Anglican church split from the Vatican ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Why did the Anglican church split from the Vatican ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 03:49:10 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14315'), (b'x-ratelimit-remaining-tokens', b'27972'), (b'x-ratelimit-reset-requests', b'8m29.653999999s'), (b'x-ratelimit-reset-tokens', b'4.054999999s'), (b'x-request-id', b'req_01hyyn1xa6fjz8c2cr4rwwc0wq'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab45f51acc9e52-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Why did the Anglican church split from the Vatican ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 03:49:12 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14314'), (b'x-ratelimit-remaining-tokens', b'28995'), (b'x-ratelimit-reset-requests', b'8m33.598s'), (b'x-ratelimit-reset-tokens', b'2.009s'), (b'x-request-id', b'req_01hyyn1zaef1vawht8e8aqg0hb'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab4601fd129e52-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is about the historical event of the Anglican church splitting from the Vatican, which is an abstract concept.
class_name: DESC
class_index: 2
```
task_input: What are other ways of getting stretch marks besides pregnancy , weight loss , and weight lifting ?, corse_label: 1
types: <class 'str'>, <class 'torch.Tensor'>
prompt_kwargs: {'input': 'What are other ways of getting stretch marks besides pregnancy , weight loss , and weight lifting ?', 'examples_str': 'Question: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does HIV stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What does a chef coddle eggs in ?
class_name: Entity 
class_index: 1
--------

Question: What do the red-and-white stripes on a barbershop pole stand for ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who used AuH2O as an election slogan ?
class_name: Human being 
class_index: 3
--------

Question: In what part of the world is Mozambique ?
class_name: Location 
class_index: 4
--------

Question: How many American actors were nominated for the best actor Oscar for 1983 ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What are other ways of getting stretch marks besides pregnancy , weight loss , and weight lifting ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What are other ways of getting stretch marks besides pregnancy , weight loss , and weight lifting ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 03:49:12 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'332'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14314'), (b'x-ratelimit-remaining-tokens', b'28694'), (b'x-ratelimit-reset-requests', b'8m35.730999999s'), (b'x-ratelimit-reset-tokens', b'2.612s'), (b'x-request-id', b'req_01hyyn1zjxfn2vpnr6bwdb3ev4'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab4603ae4d9e52-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What are other ways of getting stretch marks besides pregnancy , weight loss , and weight lifting ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 03:49:15 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14313'), (b'x-ratelimit-remaining-tokens', b'29715'), (b'x-ratelimit-reset-requests', b'8m39.677999999s'), (b'x-ratelimit-reset-tokens', b'570ms'), (b'x-request-id', b'req_01hyyn21k1f8gawg3ck8rh79sa'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab461078419e52-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about various ways to get stretch marks, which are physical marks on the skin, and the options provided are all related to physical changes in the body.
class_name: Description and abstract concept
class_index: 2
task_input: What program do I need to run a .tbk file ?, corse_label: 1
types: <class 'str'>, <class 'torch.Tensor'>
prompt_kwargs: {'input': 'What program do I need to run a .tbk file ?', 'examples_str': 'Question: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does HIV stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What does a chef coddle eggs in ?
class_name: Entity 
class_index: 1
--------

Question: What do the red-and-white stripes on a barbershop pole stand for ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who used AuH2O as an election slogan ?
class_name: Human being 
class_index: 3
--------

Question: In what part of the world is Mozambique ?
class_name: Location 
class_index: 4
--------

Question: How many American actors were nominated for the best actor Oscar for 1983 ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What program do I need to run a .tbk file ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What program do I need to run a .tbk file ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 03:49:15 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14313'), (b'x-ratelimit-remaining-tokens', b'29421'), (b'x-ratelimit-reset-requests', b'8m41.675999999s'), (b'x-ratelimit-reset-tokens', b'1.157s'), (b'x-request-id', b'req_01hyyn21x6fy48xqgcnqh2270h'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab461289e69e52-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What program do I need to run a .tbk file ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 03:49:18 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14312'), (b'x-ratelimit-remaining-tokens', b'29995'), (b'x-ratelimit-reset-requests', b'8m45.618999999s'), (b'x-ratelimit-reset-tokens', b'10ms'), (b'x-request-id', b'req_01hyyn23xdeapv7pnbks7e42jk'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab461f6bb69e52-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is asking about a specific program needed to run a file type, which is a specific piece of software.
class_name: Entity
class_index: 1
responses: [2, 1, 5, 2, 2, 1], targets: [2, 2, 5, 2, 1, 1]
num_invalid: 0
Preds tensor: tensor([[0., 0., 1., 0., 0., 0.],
        [0., 1., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 1.],
        [0., 0., 1., 0., 0., 0.],
        [0., 0., 1., 0., 0., 0.],
        [0., 1., 0., 0., 0., 0.]])
Targets tensor: tensor([2, 2, 5, 2, 1, 1])
Eval Accuracy 3 0: 0.667, F1: 0.722
task_input: What is the difference between a bachelor and a 1 bedroom apartment ?, corse_label: 2
types: <class 'str'>, <class 'torch.Tensor'>
prompt_kwargs: {'input': 'What is the difference between a bachelor and a 1 bedroom apartment ?', 'examples_str': 'Question: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does HIV stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What does a chef coddle eggs in ?
class_name: Entity 
class_index: 1
--------

Question: What do the red-and-white stripes on a barbershop pole stand for ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who used AuH2O as an election slogan ?
class_name: Human being 
class_index: 3
--------

Question: In what part of the world is Mozambique ?
class_name: Location 
class_index: 4
--------

Question: How many American actors were nominated for the best actor Oscar for 1983 ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What is the difference between a bachelor and a 1 bedroom apartment ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is the difference between a bachelor and a 1 bedroom apartment ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 03:49:18 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14312'), (b'x-ratelimit-remaining-tokens', b'29589'), (b'x-ratelimit-reset-requests', b'8m47.209s'), (b'x-ratelimit-reset-tokens', b'822ms'), (b'x-request-id', b'req_01hyyn24p7f1vvb1qet1t0a5gk'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab46245ff49e52-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is the difference between a bachelor and a 1 bedroom apartment ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 03:49:20 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14311'), (b'x-ratelimit-remaining-tokens', b'29995'), (b'x-ratelimit-reset-requests', b'8m51.141999999s'), (b'x-ratelimit-reset-tokens', b'10ms'), (b'x-request-id', b'req_01hyyn26pte5kv5q3kvywwmdtm'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab46312a339e52-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the difference between two types of apartments, which is a descriptive concept.
class_name: Description and abstract concept
class_index: 2
```
task_input: What are the Twin Cities ?, corse_label: 2
types: <class 'str'>, <class 'torch.Tensor'>
prompt_kwargs: {'input': 'What are the Twin Cities ?', 'examples_str': 'Question: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does HIV stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What does a chef coddle eggs in ?
class_name: Entity 
class_index: 1
--------

Question: What do the red-and-white stripes on a barbershop pole stand for ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who used AuH2O as an election slogan ?
class_name: Human being 
class_index: 3
--------

Question: In what part of the world is Mozambique ?
class_name: Location 
class_index: 4
--------

Question: How many American actors were nominated for the best actor Oscar for 1983 ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What are the Twin Cities ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What are the Twin Cities ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 03:49:20 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14311'), (b'x-ratelimit-remaining-tokens', b'29581'), (b'x-ratelimit-reset-requests', b'8m53.733s'), (b'x-ratelimit-reset-tokens', b'837ms'), (b'x-request-id', b'req_01hyyn26z6evhr2f79fey3g6kt'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab4632fb689e52-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What are the Twin Cities ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 03:49:22 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14310'), (b'x-ratelimit-remaining-tokens', b'29995'), (b'x-ratelimit-reset-requests', b'8m57.673999999s'), (b'x-ratelimit-reset-tokens', b'10ms'), (b'x-request-id', b'req_01hyyn28zhfn3ax3f2eam13z05'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab463fcd789e52-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the names of two cities, which are typically referred to as the "Twin Cities".
class_name: Entity
class_index: 1
task_input: How many propellers helped power the plane the Wright brothers flew into history ?, corse_label: 5
types: <class 'str'>, <class 'torch.Tensor'>
prompt_kwargs: {'input': 'How many propellers helped power the plane the Wright brothers flew into history ?', 'examples_str': 'Question: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does HIV stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What does a chef coddle eggs in ?
class_name: Entity 
class_index: 1
--------

Question: What do the red-and-white stripes on a barbershop pole stand for ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who used AuH2O as an election slogan ?
class_name: Human being 
class_index: 3
--------

Question: In what part of the world is Mozambique ?
class_name: Location 
class_index: 4
--------

Question: How many American actors were nominated for the best actor Oscar for 1983 ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: How many propellers helped power the plane the Wright brothers flew into history ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: How many propellers helped power the plane the Wright brothers flew into history ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 03:49:22 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'325'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14310'), (b'x-ratelimit-remaining-tokens', b'29640'), (b'x-ratelimit-reset-requests', b'8m59.659999999s'), (b'x-ratelimit-reset-tokens', b'719ms'), (b'x-request-id', b'req_01hyyn29a6evyrqmsw26zj7yja'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab4641ef6a9e52-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: How many propellers helped power the plane the Wright brothers flew into history ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 03:49:25 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14309'), (b'x-ratelimit-remaining-tokens', b'29995'), (b'x-ratelimit-reset-requests', b'9m3.605s'), (b'x-ratelimit-reset-tokens', b'10ms'), (b'x-request-id', b'req_01hyyn2badfxh80nh7kg89ck2b'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab464ec9169e52-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is asking about the number of propellers used by the Wright brothers in their historic flight, which is a specific numeric value.
class_name: NUM
class_index: 5
task_input: Why did the Anglican church split from the Vatican ?, corse_label: 2
types: <class 'str'>, <class 'torch.Tensor'>
prompt_kwargs: {'input': 'Why did the Anglican church split from the Vatican ?', 'examples_str': 'Question: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does HIV stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What does a chef coddle eggs in ?
class_name: Entity 
class_index: 1
--------

Question: What do the red-and-white stripes on a barbershop pole stand for ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who used AuH2O as an election slogan ?
class_name: Human being 
class_index: 3
--------

Question: In what part of the world is Mozambique ?
class_name: Location 
class_index: 4
--------

Question: How many American actors were nominated for the best actor Oscar for 1983 ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Why did the Anglican church split from the Vatican ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Why did the Anglican church split from the Vatican ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 03:49:25 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14309'), (b'x-ratelimit-remaining-tokens', b'29592'), (b'x-ratelimit-reset-requests', b'9m5.703s'), (b'x-ratelimit-reset-tokens', b'816ms'), (b'x-request-id', b'req_01hyyn2bkqevjaar9qc92hw5ya'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab46509ac49e52-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Why did the Anglican church split from the Vatican ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 03:49:27 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14308'), (b'x-ratelimit-remaining-tokens', b'29995'), (b'x-ratelimit-reset-requests', b'9m9.645s'), (b'x-ratelimit-reset-tokens', b'10ms'), (b'x-request-id', b'req_01hyyn2dm0fy4vhv0d5ynxm5y2'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab465d7dbd9e52-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is about the historical event of the Anglican church splitting from the Vatican, which is an abstract concept.
class_name: DESC
class_index: 2
```
task_input: What are other ways of getting stretch marks besides pregnancy , weight loss , and weight lifting ?, corse_label: 1
types: <class 'str'>, <class 'torch.Tensor'>
prompt_kwargs: {'input': 'What are other ways of getting stretch marks besides pregnancy , weight loss , and weight lifting ?', 'examples_str': 'Question: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does HIV stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What does a chef coddle eggs in ?
class_name: Entity 
class_index: 1
--------

Question: What do the red-and-white stripes on a barbershop pole stand for ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who used AuH2O as an election slogan ?
class_name: Human being 
class_index: 3
--------

Question: In what part of the world is Mozambique ?
class_name: Location 
class_index: 4
--------

Question: How many American actors were nominated for the best actor Oscar for 1983 ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What are other ways of getting stretch marks besides pregnancy , weight loss , and weight lifting ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What are other ways of getting stretch marks besides pregnancy , weight loss , and weight lifting ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 03:49:27 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'324'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14308'), (b'x-ratelimit-remaining-tokens', b'29611'), (b'x-ratelimit-reset-requests', b'9m11.7s'), (b'x-ratelimit-reset-tokens', b'777ms'), (b'x-request-id', b'req_01hyyn2dxdf4pa477azwnvsqrq'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab465f5f5f9e52-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What are other ways of getting stretch marks besides pregnancy , weight loss , and weight lifting ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 03:49:29 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14307'), (b'x-ratelimit-remaining-tokens', b'29995'), (b'x-ratelimit-reset-requests', b'9m15.645s'), (b'x-ratelimit-reset-tokens', b'10ms'), (b'x-request-id', b'req_01hyyn2fxmf6vbgehwbf6z20d7'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab466c3a729e52-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about various ways to get stretch marks, which are physical marks on the skin, and the options provided are all related to physical changes in the body.
class_name: Description and abstract concept
class_index: 2
task_input: What program do I need to run a .tbk file ?, corse_label: 1
types: <class 'str'>, <class 'torch.Tensor'>
prompt_kwargs: {'input': 'What program do I need to run a .tbk file ?', 'examples_str': 'Question: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does HIV stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What does a chef coddle eggs in ?
class_name: Entity 
class_index: 1
--------

Question: What do the red-and-white stripes on a barbershop pole stand for ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who used AuH2O as an election slogan ?
class_name: Human being 
class_index: 3
--------

Question: In what part of the world is Mozambique ?
class_name: Location 
class_index: 4
--------

Question: How many American actors were nominated for the best actor Oscar for 1983 ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What program do I need to run a .tbk file ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What program do I need to run a .tbk file ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 03:49:29 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14307'), (b'x-ratelimit-remaining-tokens', b'29588'), (b'x-ratelimit-reset-requests', b'9m17.696s'), (b'x-ratelimit-reset-tokens', b'824ms'), (b'x-request-id', b'req_01hyyn2g75fpwt6qqbkvbng2ve'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab466e1bfd9e52-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What program do I need to run a .tbk file ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 03:49:32 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14306'), (b'x-ratelimit-remaining-tokens', b'29995'), (b'x-ratelimit-reset-requests', b'9m21.628999999s'), (b'x-ratelimit-reset-tokens', b'10ms'), (b'x-request-id', b'req_01hyyn2j7revja4s7pvn1jgkv0'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab467b0da39e52-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is asking about a specific program needed to run a file type, which is a specific piece of software.
class_name: Entity
class_index: 1
responses: [2, 1, 5, 2, 2, 1], targets: [2, 2, 5, 2, 1, 1]
num_invalid: 0
Preds tensor: tensor([[0., 0., 1., 0., 0., 0.],
        [0., 1., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 1.],
        [0., 0., 1., 0., 0., 0.],
        [0., 0., 1., 0., 0., 0.],
        [0., 1., 0., 0., 0., 0.]])
Targets tensor: tensor([2, 2, 5, 2, 1, 1])
Eval Accuracy 3 1: 0.667, F1: 0.722
data: {'text': 'How far is it from Denver to Aspen ?', 'coarse_label': 5, 'fine_label': 40}
task_input: How far is it from Denver to Aspen ?, corse_label: 5
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'How far is it from Denver to Aspen ?', 'examples_str': 'Question: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does HIV stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What does a chef coddle eggs in ?
class_name: Entity 
class_index: 1
--------

Question: What do the red-and-white stripes on a barbershop pole stand for ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who used AuH2O as an election slogan ?
class_name: Human being 
class_index: 3
--------

Question: In what part of the world is Mozambique ?
class_name: Location 
class_index: 4
--------

Question: How many American actors were nominated for the best actor Oscar for 1983 ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: How far is it from Denver to Aspen ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: How far is it from Denver to Aspen ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 03:49:32 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14306'), (b'x-ratelimit-remaining-tokens', b'29613'), (b'x-ratelimit-reset-requests', b'9m23.704s'), (b'x-ratelimit-reset-tokens', b'774ms'), (b'x-request-id', b'req_01hyyn2jh1fk0rpgkz8ndwnkn9'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab467ceee69e52-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: How far is it from Denver to Aspen ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 03:49:34 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14305'), (b'x-ratelimit-remaining-tokens', b'29995'), (b'x-ratelimit-reset-requests', b'9m27.635999999s'), (b'x-ratelimit-reset-tokens', b'10ms'), (b'x-request-id', b'req_01hyyn2mhnejcbhvf88ym1zyr7'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab4689c8dc9e52-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the distance between two cities, which is a numeric value.
class_name: NUM
class_index: 5
data: {'text': 'What county is Modesto , California in ?', 'coarse_label': 4, 'fine_label': 32}
task_input: What county is Modesto , California in ?, corse_label: 4
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What county is Modesto , California in ?', 'examples_str': 'Question: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does HIV stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What does a chef coddle eggs in ?
class_name: Entity 
class_index: 1
--------

Question: What do the red-and-white stripes on a barbershop pole stand for ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who used AuH2O as an election slogan ?
class_name: Human being 
class_index: 3
--------

Question: In what part of the world is Mozambique ?
class_name: Location 
class_index: 4
--------

Question: How many American actors were nominated for the best actor Oscar for 1983 ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What county is Modesto , California in ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What county is Modesto , California in ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 03:49:34 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14305'), (b'x-ratelimit-remaining-tokens', b'29634'), (b'x-ratelimit-reset-requests', b'9m29.623999999s'), (b'x-ratelimit-reset-tokens', b'731ms'), (b'x-request-id', b'req_01hyyn2mxee5mtewvh6xvj634x'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab468c2a4e9e52-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What county is Modesto , California in ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 03:49:37 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14304'), (b'x-ratelimit-remaining-tokens', b'29995'), (b'x-ratelimit-reset-requests', b'9m33.565999999s'), (b'x-ratelimit-reset-tokens', b'10ms'), (b'x-request-id', b'req_01hyyn2pxpejj8sy64dzdaz9mt'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab46990bcf9e52-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the location of Modesto, California, which is a specific geographic location.
class_name: Location
class_index: 4
data: {'text': 'Who was Galileo ?', 'coarse_label': 3, 'fine_label': 31}
task_input: Who was Galileo ?, corse_label: 3
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'Who was Galileo ?', 'examples_str': 'Question: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does HIV stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What does a chef coddle eggs in ?
class_name: Entity 
class_index: 1
--------

Question: What do the red-and-white stripes on a barbershop pole stand for ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who used AuH2O as an election slogan ?
class_name: Human being 
class_index: 3
--------

Question: In what part of the world is Mozambique ?
class_name: Location 
class_index: 4
--------

Question: How many American actors were nominated for the best actor Oscar for 1983 ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Who was Galileo ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Who was Galileo ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 03:49:37 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'325'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14304'), (b'x-ratelimit-remaining-tokens', b'29611'), (b'x-ratelimit-reset-requests', b'9m35.69s'), (b'x-ratelimit-reset-tokens', b'777ms'), (b'x-request-id', b'req_01hyyn2q7ff6vsqge20vc6sf58'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab469afd7b9e52-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Who was Galileo ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 03:49:39 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14303'), (b'x-ratelimit-remaining-tokens', b'29995'), (b'x-ratelimit-reset-requests', b'9m39.622999999s'), (b'x-ratelimit-reset-tokens', b'10ms'), (b'x-request-id', b'req_01hyyn2s82f6vv09f9r9e4qzk0'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab46a7ef6c9e52-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is asking about a historical figure, Galileo, which is a human being.
class_name: HUM
class_index: 3
```
data: {'text': 'What is an atom ?', 'coarse_label': 2, 'fine_label': 24}
task_input: What is an atom ?, corse_label: 2
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What is an atom ?', 'examples_str': 'Question: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does HIV stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What does a chef coddle eggs in ?
class_name: Entity 
class_index: 1
--------

Question: What do the red-and-white stripes on a barbershop pole stand for ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who used AuH2O as an election slogan ?
class_name: Human being 
class_index: 3
--------

Question: In what part of the world is Mozambique ?
class_name: Location 
class_index: 4
--------

Question: How many American actors were nominated for the best actor Oscar for 1983 ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What is an atom ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is an atom ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 03:49:39 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14303'), (b'x-ratelimit-remaining-tokens', b'29623'), (b'x-ratelimit-reset-requests', b'9m41.631s'), (b'x-ratelimit-reset-tokens', b'753ms'), (b'x-request-id', b'req_01hyyn2skmf8h9w5d7b2cjqkf6'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab46aa39219e52-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is an atom ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 03:49:41 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14302'), (b'x-ratelimit-remaining-tokens', b'29995'), (b'x-ratelimit-reset-requests', b'9m45.566999999s'), (b'x-ratelimit-reset-tokens', b'10ms'), (b'x-request-id', b'req_01hyyn2vm4fjk9ddmsnvc8yya4'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab46b71b119e52-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is asking about the definition or meaning of an atom, which is an abstract concept.
class_name: DESC
class_index: 2
```
data: {'text': 'When did Hawaii become a state ?', 'coarse_label': 5, 'fine_label': 39}
task_input: When did Hawaii become a state ?, corse_label: 5
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'When did Hawaii become a state ?', 'examples_str': 'Question: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does HIV stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What does a chef coddle eggs in ?
class_name: Entity 
class_index: 1
--------

Question: What do the red-and-white stripes on a barbershop pole stand for ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who used AuH2O as an election slogan ?
class_name: Human being 
class_index: 3
--------

Question: In what part of the world is Mozambique ?
class_name: Location 
class_index: 4
--------

Question: How many American actors were nominated for the best actor Oscar for 1983 ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: When did Hawaii become a state ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: When did Hawaii become a state ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 03:49:41 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14302'), (b'x-ratelimit-remaining-tokens', b'29608'), (b'x-ratelimit-reset-requests', b'9m47.7s'), (b'x-ratelimit-reset-tokens', b'783ms'), (b'x-request-id', b'req_01hyyn2vxge5mt6ncy0nkpknjm'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab46b8fc7c9e52-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: When did Hawaii become a state ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 03:49:44 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14301'), (b'x-ratelimit-remaining-tokens', b'29995'), (b'x-ratelimit-reset-requests', b'9m51.632999999s'), (b'x-ratelimit-reset-tokens', b'10ms'), (b'x-request-id', b'req_01hyyn2xy4f4qb7mwqffexp7r6'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab46c5eea29e52-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about a specific event in history, which is a descriptive concept.
class_name: DESC
class_index: 2
```
data: {'text': 'How tall is the Sears Building ?', 'coarse_label': 5, 'fine_label': 40}
task_input: How tall is the Sears Building ?, corse_label: 5
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'How tall is the Sears Building ?', 'examples_str': 'Question: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does HIV stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What does a chef coddle eggs in ?
class_name: Entity 
class_index: 1
--------

Question: What do the red-and-white stripes on a barbershop pole stand for ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who used AuH2O as an election slogan ?
class_name: Human being 
class_index: 3
--------

Question: In what part of the world is Mozambique ?
class_name: Location 
class_index: 4
--------

Question: How many American actors were nominated for the best actor Oscar for 1983 ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: How tall is the Sears Building ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: How tall is the Sears Building ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 03:49:44 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14301'), (b'x-ratelimit-remaining-tokens', b'29620'), (b'x-ratelimit-reset-requests', b'9m53.712999999s'), (b'x-ratelimit-reset-tokens', b'760ms'), (b'x-request-id', b'req_01hyyn2y74f8hs88m96w50snm2'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab46c7b82a9e52-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: How tall is the Sears Building ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 03:49:46 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14300'), (b'x-ratelimit-remaining-tokens', b'29995'), (b'x-ratelimit-reset-requests', b'9m57.651s'), (b'x-ratelimit-reset-tokens', b'10ms'), (b'x-request-id', b'req_01hyyn307geb2ampy32x7knx9x'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab46d49a1f9e52-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question asks about the height of a specific building, which is a measurable value.
class_name: NUM
class_index: 5
data: {'text': 'George Bush purchased a small interest in which baseball team ?', 'coarse_label': 3, 'fine_label': 28}
task_input: George Bush purchased a small interest in which baseball team ?, corse_label: 3
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'George Bush purchased a small interest in which baseball team ?', 'examples_str': 'Question: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does HIV stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What does a chef coddle eggs in ?
class_name: Entity 
class_index: 1
--------

Question: What do the red-and-white stripes on a barbershop pole stand for ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who used AuH2O as an election slogan ?
class_name: Human being 
class_index: 3
--------

Question: In what part of the world is Mozambique ?
class_name: Location 
class_index: 4
--------

Question: How many American actors were nominated for the best actor Oscar for 1983 ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: George Bush purchased a small interest in which baseball team ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: George Bush purchased a small interest in which baseball team ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 03:49:46 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14300'), (b'x-ratelimit-remaining-tokens', b'29606'), (b'x-ratelimit-reset-requests', b'9m59.711999999s'), (b'x-ratelimit-reset-tokens', b'788ms'), (b'x-request-id', b'req_01hyyn30gkeh4at2heswnj5vxr'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab46d66c2f9e52-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: George Bush purchased a small interest in which baseball team ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 03:49:48 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14299'), (b'x-ratelimit-remaining-tokens', b'29995'), (b'x-ratelimit-reset-requests', b'10m3.647s'), (b'x-ratelimit-reset-tokens', b'10ms'), (b'x-request-id', b'req_01hyyn32h4evza6ea5q0x1yc8b'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab46e34f389e52-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: George Bush is a human being, and the question is asking about his involvement in a baseball team, which is a specific entity.
class_name: HUM
class_index: 3
data: {'text': "What is Australia 's national flower ?", 'coarse_label': 1, 'fine_label': 14}
task_input: What is Australia 's national flower ?, corse_label: 1
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': "What is Australia 's national flower ?", 'examples_str': 'Question: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does HIV stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What does a chef coddle eggs in ?
class_name: Entity 
class_index: 1
--------

Question: What do the red-and-white stripes on a barbershop pole stand for ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who used AuH2O as an election slogan ?
class_name: Human being 
class_index: 3
--------

Question: In what part of the world is Mozambique ?
class_name: Location 
class_index: 4
--------

Question: How many American actors were nominated for the best actor Oscar for 1983 ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What is Australia 's national flower ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is Australia 's national flower ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 03:49:49 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14299'), (b'x-ratelimit-remaining-tokens', b'29590'), (b'x-ratelimit-reset-requests', b'10m5.713999999s'), (b'x-ratelimit-reset-tokens', b'820ms'), (b'x-request-id', b'req_01hyyn32t3e5n83dyewzbctqxd'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab46e518b19e52-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is Australia 's national flower ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 03:49:51 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14298'), (b'x-ratelimit-remaining-tokens', b'29995'), (b'x-ratelimit-reset-requests', b'10m9.658s'), (b'x-ratelimit-reset-tokens', b'10ms'), (b'x-request-id', b'req_01hyyn34tbejjr9meyffez6bna'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab46f1fa889e52-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the national flower of Australia, which is a specific piece of information.
class_name: DESC
class_index: 2
```
data: {'text': 'Why does the moon turn orange ?', 'coarse_label': 2, 'fine_label': 27}
task_input: Why does the moon turn orange ?, corse_label: 2
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'Why does the moon turn orange ?', 'examples_str': 'Question: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does HIV stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What does a chef coddle eggs in ?
class_name: Entity 
class_index: 1
--------

Question: What do the red-and-white stripes on a barbershop pole stand for ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who used AuH2O as an election slogan ?
class_name: Human being 
class_index: 3
--------

Question: In what part of the world is Mozambique ?
class_name: Location 
class_index: 4
--------

Question: How many American actors were nominated for the best actor Oscar for 1983 ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Why does the moon turn orange ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Why does the moon turn orange ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 03:49:51 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14298'), (b'x-ratelimit-remaining-tokens', b'29593'), (b'x-ratelimit-reset-requests', b'10m11.757s'), (b'x-ratelimit-reset-tokens', b'814ms'), (b'x-request-id', b'req_01hyyn351zfxjakkxxenwmw4hs'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab46f37b969e52-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Why does the moon turn orange ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 03:49:53 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14297'), (b'x-ratelimit-remaining-tokens', b'29995'), (b'x-ratelimit-reset-requests', b'10m15.693999999s'), (b'x-ratelimit-reset-tokens', b'10ms'), (b'x-request-id', b'req_01hyyn372ef4qvt3bh7ke22nyx'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab47006d0c9e52-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the moon's color change, which is a natural phenomenon, so it's related to a description or concept.
class_name: DESC
class_index: 2
```
data: {'text': 'What is autism ?', 'coarse_label': 2, 'fine_label': 24}
task_input: What is autism ?, corse_label: 2
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What is autism ?', 'examples_str': 'Question: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does HIV stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What does a chef coddle eggs in ?
class_name: Entity 
class_index: 1
--------

Question: What do the red-and-white stripes on a barbershop pole stand for ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who used AuH2O as an election slogan ?
class_name: Human being 
class_index: 3
--------

Question: In what part of the world is Mozambique ?
class_name: Location 
class_index: 4
--------

Question: How many American actors were nominated for the best actor Oscar for 1983 ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What is autism ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is autism ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 03:49:53 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14297'), (b'x-ratelimit-remaining-tokens', b'29623'), (b'x-ratelimit-reset-requests', b'10m17.651s'), (b'x-ratelimit-reset-tokens', b'753ms'), (b'x-request-id', b'req_01hyyn37dcf2arec4x1e5rdfzc'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab47029e6b9e52-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is autism ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 03:49:56 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14296'), (b'x-ratelimit-remaining-tokens', b'29995'), (b'x-ratelimit-reset-requests', b'10m21.589s'), (b'x-ratelimit-reset-tokens', b'10ms'), (b'x-request-id', b'req_01hyyn39dtfr0rg33kd8dhy9ne'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab470f7fd49e52-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is asking about a specific condition or disorder, which is typically described in a medical or psychological context.
class_name: Description and abstract concept
class_index: 2
```
data: {'text': 'What city had a world fair in 1900 ?', 'coarse_label': 4, 'fine_label': 32}
task_input: What city had a world fair in 1900 ?, corse_label: 4
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What city had a world fair in 1900 ?', 'examples_str': 'Question: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does HIV stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What does a chef coddle eggs in ?
class_name: Entity 
class_index: 1
--------

Question: What do the red-and-white stripes on a barbershop pole stand for ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who used AuH2O as an election slogan ?
class_name: Human being 
class_index: 3
--------

Question: In what part of the world is Mozambique ?
class_name: Location 
class_index: 4
--------

Question: How many American actors were nominated for the best actor Oscar for 1983 ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What city had a world fair in 1900 ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What city had a world fair in 1900 ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 03:49:56 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14296'), (b'x-ratelimit-remaining-tokens', b'29603'), (b'x-ratelimit-reset-requests', b'10m23.705s'), (b'x-ratelimit-reset-tokens', b'793ms'), (b'x-request-id', b'req_01hyyn39q2fpyaygb3rs6byw4z'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab471149399e52-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What city had a world fair in 1900 ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 03:49:58 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14295'), (b'x-ratelimit-remaining-tokens', b'29995'), (b'x-ratelimit-reset-requests', b'10m27.647s'), (b'x-ratelimit-reset-tokens', b'10ms'), (b'x-request-id', b'req_01hyyn3bqcfmz813m5brmqh6hk'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab471e2aa99e52-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about a specific city that hosted a world fair in 1900, which suggests a specific location.
class_name: Location
class_index: 4
data: {'text': "What person 's head is on a dime ?", 'coarse_label': 3, 'fine_label': 29}
task_input: What person 's head is on a dime ?, corse_label: 3
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': "What person 's head is on a dime ?", 'examples_str': 'Question: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does HIV stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What does a chef coddle eggs in ?
class_name: Entity 
class_index: 1
--------

Question: What do the red-and-white stripes on a barbershop pole stand for ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who used AuH2O as an election slogan ?
class_name: Human being 
class_index: 3
--------

Question: In what part of the world is Mozambique ?
class_name: Location 
class_index: 4
--------

Question: How many American actors were nominated for the best actor Oscar for 1983 ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What person 's head is on a dime ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What person 's head is on a dime ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 03:49:58 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'332'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14295'), (b'x-ratelimit-remaining-tokens', b'29647'), (b'x-ratelimit-reset-requests', b'10m29.604999999s'), (b'x-ratelimit-reset-tokens', b'706ms'), (b'x-request-id', b'req_01hyyn3c3qf4qvjhq9hqrr8mb6'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab4720aca99e52-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What person 's head is on a dime ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 03:50:00 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14294'), (b'x-ratelimit-remaining-tokens', b'29995'), (b'x-ratelimit-reset-requests', b'10m33.54s'), (b'x-ratelimit-reset-tokens', b'10ms'), (b'x-request-id', b'req_01hyyn3e48ew0t4055h5fygt4c'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab472d8ee69e52-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about a person's head being on a dime, which is a common idiomatic expression.
class_name: Human being
class_index: 3
data: {'text': 'What is the average weight of a Yellow Labrador ?', 'coarse_label': 5, 'fine_label': 49}
task_input: What is the average weight of a Yellow Labrador ?, corse_label: 5
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What is the average weight of a Yellow Labrador ?', 'examples_str': 'Question: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does HIV stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What does a chef coddle eggs in ?
class_name: Entity 
class_index: 1
--------

Question: What do the red-and-white stripes on a barbershop pole stand for ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who used AuH2O as an election slogan ?
class_name: Human being 
class_index: 3
--------

Question: In what part of the world is Mozambique ?
class_name: Location 
class_index: 4
--------

Question: How many American actors were nominated for the best actor Oscar for 1983 ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What is the average weight of a Yellow Labrador ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is the average weight of a Yellow Labrador ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 03:50:00 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14294'), (b'x-ratelimit-remaining-tokens', b'29614'), (b'x-ratelimit-reset-requests', b'10m35.705999999s'), (b'x-ratelimit-reset-tokens', b'772ms'), (b'x-request-id', b'req_01hyyn3edffjm9zvs4c3mpsfb4'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab472f682e9e52-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is the average weight of a Yellow Labrador ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 03:50:03 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14293'), (b'x-ratelimit-remaining-tokens', b'29995'), (b'x-ratelimit-reset-requests', b'10m39.641999999s'), (b'x-ratelimit-reset-tokens', b'10ms'), (b'x-request-id', b'req_01hyyn3gdxev9swt2xtzbn4xaz'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab473c49769e52-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking for a specific numerical value, which is the average weight of a Yellow Labrador.
class_name: Numeric value
class_index: 5
```
data: {'text': 'Who was the first man to fly across the Pacific Ocean ?', 'coarse_label': 3, 'fine_label': 29}
task_input: Who was the first man to fly across the Pacific Ocean ?, corse_label: 3
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'Who was the first man to fly across the Pacific Ocean ?', 'examples_str': 'Question: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does HIV stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What does a chef coddle eggs in ?
class_name: Entity 
class_index: 1
--------

Question: What do the red-and-white stripes on a barbershop pole stand for ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who used AuH2O as an election slogan ?
class_name: Human being 
class_index: 3
--------

Question: In what part of the world is Mozambique ?
class_name: Location 
class_index: 4
--------

Question: How many American actors were nominated for the best actor Oscar for 1983 ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Who was the first man to fly across the Pacific Ocean ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Who was the first man to fly across the Pacific Ocean ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 03:50:03 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14293'), (b'x-ratelimit-remaining-tokens', b'29595'), (b'x-ratelimit-reset-requests', b'10m41.744s'), (b'x-ratelimit-reset-tokens', b'809ms'), (b'x-request-id', b'req_01hyyn3gp0ejdb6r2cnjdqw6a8'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab473ddabe9e52-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Who was the first man to fly across the Pacific Ocean ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 03:50:05 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14292'), (b'x-ratelimit-remaining-tokens', b'29995'), (b'x-ratelimit-reset-requests', b'10m45.679999999s'), (b'x-ratelimit-reset-tokens', b'10ms'), (b'x-request-id', b'req_01hyyn3jpgfxkbec8np2p7mhyw'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab474acd429e52-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is asking about a historical event and a person, which is a common combination in human history.
class_name: Human being
class_index: 3
data: {'text': 'When did Idaho become a state ?', 'coarse_label': 5, 'fine_label': 39}
task_input: When did Idaho become a state ?, corse_label: 5
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'When did Idaho become a state ?', 'examples_str': 'Question: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does HIV stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What does a chef coddle eggs in ?
class_name: Entity 
class_index: 1
--------

Question: What do the red-and-white stripes on a barbershop pole stand for ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who used AuH2O as an election slogan ?
class_name: Human being 
class_index: 3
--------

Question: In what part of the world is Mozambique ?
class_name: Location 
class_index: 4
--------

Question: How many American actors were nominated for the best actor Oscar for 1983 ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: When did Idaho become a state ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: When did Idaho become a state ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 03:50:05 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'325'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14292'), (b'x-ratelimit-remaining-tokens', b'29593'), (b'x-ratelimit-reset-requests', b'10m47.679s'), (b'x-ratelimit-reset-tokens', b'813ms'), (b'x-request-id', b'req_01hyyn3k0jfarsnzwj9zhjgdax'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab474cced79e52-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: When did Idaho become a state ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 03:50:07 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14291'), (b'x-ratelimit-remaining-tokens', b'29995'), (b'x-ratelimit-reset-requests', b'10m51.621999999s'), (b'x-ratelimit-reset-tokens', b'10ms'), (b'x-request-id', b'req_01hyyn3n0vf1yrp3rrn8ggycyk'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab4759a96b9e52-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about a specific date in the past, which is a numeric value.
class_name: NUM
class_index: 5
data: {'text': 'What is the life expectancy for crickets ?', 'coarse_label': 5, 'fine_label': 43}
task_input: What is the life expectancy for crickets ?, corse_label: 5
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What is the life expectancy for crickets ?', 'examples_str': 'Question: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does HIV stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What does a chef coddle eggs in ?
class_name: Entity 
class_index: 1
--------

Question: What do the red-and-white stripes on a barbershop pole stand for ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who used AuH2O as an election slogan ?
class_name: Human being 
class_index: 3
--------

Question: In what part of the world is Mozambique ?
class_name: Location 
class_index: 4
--------

Question: How many American actors were nominated for the best actor Oscar for 1983 ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What is the life expectancy for crickets ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is the life expectancy for crickets ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 03:50:08 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14291'), (b'x-ratelimit-remaining-tokens', b'29649'), (b'x-ratelimit-reset-requests', b'10m53.596s'), (b'x-ratelimit-reset-tokens', b'701ms'), (b'x-request-id', b'req_01hyyn3ndgf8js985ayfd7eb5a'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab475c2b689e52-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is the life expectancy for crickets ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 03:50:10 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14290'), (b'x-ratelimit-remaining-tokens', b'29995'), (b'x-ratelimit-reset-requests', b'10m57.532999999s'), (b'x-ratelimit-reset-tokens', b'10ms'), (b'x-request-id', b'req_01hyyn3qdyew088ps53a1qqyqp'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab47691cda9e52-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the life expectancy of crickets, which is a specific numerical value.
class_name: NUM
class_index: 5
data: {'text': 'What metal has the highest melting point ?', 'coarse_label': 1, 'fine_label': 18}
task_input: What metal has the highest melting point ?, corse_label: 1
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What metal has the highest melting point ?', 'examples_str': 'Question: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does HIV stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What does a chef coddle eggs in ?
class_name: Entity 
class_index: 1
--------

Question: What do the red-and-white stripes on a barbershop pole stand for ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who used AuH2O as an election slogan ?
class_name: Human being 
class_index: 3
--------

Question: In what part of the world is Mozambique ?
class_name: Location 
class_index: 4
--------

Question: How many American actors were nominated for the best actor Oscar for 1983 ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What metal has the highest melting point ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What metal has the highest melting point ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 03:50:10 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14290'), (b'x-ratelimit-remaining-tokens', b'29597'), (b'x-ratelimit-reset-requests', b'10m59.752s'), (b'x-ratelimit-reset-tokens', b'806ms'), (b'x-request-id', b'req_01hyyn3qnrew0rj3ew8f59czer'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab476aae4e9e52-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What metal has the highest melting point ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 03:50:12 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14289'), (b'x-ratelimit-remaining-tokens', b'29995'), (b'x-ratelimit-reset-requests', b'11m3.675999999s'), (b'x-ratelimit-reset-tokens', b'10ms'), (b'x-request-id', b'req_01hyyn3spkfpyr8a1vbmkr1dgw'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab477789939e52-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is asking about a physical property of a metal, which is a numeric value.
class_name: NUM
class_index: 5
data: {'text': 'Who developed the vaccination against polio ?', 'coarse_label': 3, 'fine_label': 29}
task_input: Who developed the vaccination against polio ?, corse_label: 3
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'Who developed the vaccination against polio ?', 'examples_str': 'Question: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does HIV stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What does a chef coddle eggs in ?
class_name: Entity 
class_index: 1
--------

Question: What do the red-and-white stripes on a barbershop pole stand for ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who used AuH2O as an election slogan ?
class_name: Human being 
class_index: 3
--------

Question: In what part of the world is Mozambique ?
class_name: Location 
class_index: 4
--------

Question: How many American actors were nominated for the best actor Oscar for 1983 ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Who developed the vaccination against polio ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Who developed the vaccination against polio ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 03:50:12 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14289'), (b'x-ratelimit-remaining-tokens', b'29655'), (b'x-ratelimit-reset-requests', b'11m5.575s'), (b'x-ratelimit-reset-tokens', b'689ms'), (b'x-request-id', b'req_01hyyn3t3we01txyp4mwfnapkz'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab477a4c139e52-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Who developed the vaccination against polio ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 03:50:15 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14288'), (b'x-ratelimit-remaining-tokens', b'29995'), (b'x-ratelimit-reset-requests', b'11m9.515999999s'), (b'x-ratelimit-reset-tokens', b'10ms'), (b'x-request-id', b'req_01hyyn3w48fjmt8rwk1jqr7xt7'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab47872ef29e52-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is asking about a person who developed a vaccination, which is a human being.
class_name: HUM
class_index: 3
data: {'text': 'What is epilepsy ?', 'coarse_label': 2, 'fine_label': 24}
task_input: What is epilepsy ?, corse_label: 2
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What is epilepsy ?', 'examples_str': 'Question: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does HIV stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What does a chef coddle eggs in ?
class_name: Entity 
class_index: 1
--------

Question: What do the red-and-white stripes on a barbershop pole stand for ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who used AuH2O as an election slogan ?
class_name: Human being 
class_index: 3
--------

Question: In what part of the world is Mozambique ?
class_name: Location 
class_index: 4
--------

Question: How many American actors were nominated for the best actor Oscar for 1983 ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What is epilepsy ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is epilepsy ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 03:50:15 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'325'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14288'), (b'x-ratelimit-remaining-tokens', b'29594'), (b'x-ratelimit-reset-requests', b'11m11.728999999s'), (b'x-ratelimit-reset-tokens', b'811ms'), (b'x-request-id', b'req_01hyyn3wcsfk2szayxre2j6p42'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab4788d84c9e52-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is epilepsy ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 03:50:17 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14287'), (b'x-ratelimit-remaining-tokens', b'29995'), (b'x-ratelimit-reset-requests', b'11m15.671999999s'), (b'x-ratelimit-reset-tokens', b'10ms'), (b'x-request-id', b'req_01hyyn3yd2evmappxdketve08p'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab4795bac59e52-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is asking about a medical condition, which is a description and abstract concept.
class_name: DESC
class_index: 2
data: {'text': 'What year did the Titanic sink ?', 'coarse_label': 5, 'fine_label': 39}
task_input: What year did the Titanic sink ?, corse_label: 5
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What year did the Titanic sink ?', 'examples_str': 'Question: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does HIV stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What does a chef coddle eggs in ?
class_name: Entity 
class_index: 1
--------

Question: What do the red-and-white stripes on a barbershop pole stand for ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who used AuH2O as an election slogan ?
class_name: Human being 
class_index: 3
--------

Question: In what part of the world is Mozambique ?
class_name: Location 
class_index: 4
--------

Question: How many American actors were nominated for the best actor Oscar for 1983 ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What year did the Titanic sink ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What year did the Titanic sink ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 28 May 2024 03:50:17 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14287'), (b'x-ratelimit-remaining-tokens', b'29598'), (b'x-ratelimit-reset-requests', b'11m17.766999999s'), (b'x-ratelimit-reset-tokens', b'803ms'), (b'x-request-id', b'req_01hyyn3ymceb498k3d38sn6m77'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab47972be39e52-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does HIV stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What does a chef coddle eggs in ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What do the red-and-white stripes on a barbershop pole stand for ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who used AuH2O as an election slogan ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many American actors were nominated for the best actor Oscar for 1983 ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What year did the Titanic sink ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 28 May 2024 03:50:19 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'14286'), (b'x-ratelimit-remaining-tokens', b'29995'), (b'x-ratelimit-reset-requests', b'11m21.709s'), (b'x-ratelimit-reset-tokens', b'10ms'), (b'x-request-id', b'req_01hyyn40mpe02ae0rr5xd7dh9k'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88ab47a40cea9e52-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking for a specific year, which is a numeric value.
class_name: NUM
class_index: 5
responses: [5, 4, 3, 2, 2, 5, 3, 2, 2, 2, 4, 3, 5, 3, 5, 5, 5, 3, 2, 5], targets: [5, 4, 3, 2, 5, 5, 3, 1, 2, 2, 4, 3, 5, 3, 5, 5, 1, 3, 2, 5]
num_invalid: 0
Preds tensor: tensor([[0., 0., 0., 0., 0., 1.],
        [0., 0., 0., 0., 1., 0.],
        [0., 0., 0., 1., 0., 0.],
        [0., 0., 1., 0., 0., 0.],
        [0., 0., 1., 0., 0., 0.],
        [0., 0., 0., 0., 0., 1.],
        [0., 0., 0., 1., 0., 0.],
        [0., 0., 1., 0., 0., 0.],
        [0., 0., 1., 0., 0., 0.],
        [0., 0., 1., 0., 0., 0.],
        [0., 0., 0., 0., 1., 0.],
        [0., 0., 0., 1., 0., 0.],
        [0., 0., 0., 0., 0., 1.],
        [0., 0., 0., 1., 0., 0.],
        [0., 0., 0., 0., 0., 1.],
        [0., 0., 0., 0., 0., 1.],
        [0., 0., 0., 0., 0., 1.],
        [0., 0., 0., 1., 0., 0.],
        [0., 0., 1., 0., 0., 0.],
        [0., 0., 0., 0., 0., 1.]])
Targets tensor: tensor([5, 4, 3, 2, 5, 5, 3, 1, 2, 2, 4, 3, 5, 3, 5, 5, 1, 3, 2, 5])
Eval Accuracy: 0.85, F1: 0.731
