DatasetDict({
    train: Dataset({
        features: ['text', 'coarse_label', 'fine_label'],
        num_rows: 5452
    })
    test: Dataset({
        features: ['text', 'coarse_label', 'fine_label'],
        num_rows: 500
    })
})
Train example: {'text': 'How did serfdom develop in and then leave Russia ?', 'coarse_label': 2, 'fine_label': 26}
Test example: {'text': 'How far is it from Denver to Aspen ?', 'coarse_label': 5, 'fine_label': 40}
INFO:core.prompt_builder:Prompt has variables: ['classes']
INFO:core.prompt_builder:Prompt has variables: ['example', 'schema']
DEBUG:use_cases.classification.task:output_str: Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

DEBUG:httpx:load_ssl_context verify=True cert=None trust_env=True http2=False
DEBUG:httpx:load_verify_locations cafile='/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/certifi/cacert.pem'
INFO:core.prompt_builder:Prompt has variables: ['output_format_str', 'examples_str', 'input_label', 'input', 'task_desc_str']
data: None, requires_opt: True
Registered parameter examples_str with value Parameter: None
INFO:core.prompt_builder:Prompt has variables: ['description', 'label', 'output', 'input']
module: Prompt(
  template: You are a classifier. Given a Question, you need to classify it into one of the following classes:
  Format: class_index. class_name, class_description
  {% for class in classes %}
  {{loop.index-1}}. {{class.label}}, {{class.desc}}
  {% endfor %}
  , preset_prompt_kwargs: {'classes': [{'label': 'ABBR', 'desc': 'Abbreviation'}, {'label': 'ENTY', 'desc': 'Entity'}, {'label': 'DESC', 'desc': 'Description and abstract concept'}, {'label': 'HUM', 'desc': 'Human being'}, {'label': 'LOC', 'desc': 'Location'}, {'label': 'NUM', 'desc': 'Numeric value'}]}, prompt_variables: ['classes']
)    
module: Generator(
  model_kwargs={'model': 'llama3-8b-8192', 'temperature': 0.0, 'top_p': 1, 'frequency_penalty': 0, 'presence_penalty': 0, 'n': 1}, model_type=ModelType.LLM
  (model_client): GroqAPIClient()
  (system_prompt): Prompt(
    template: {# task desc #}
    {% if task_desc_str %}
    {{task_desc_str}}
    {% endif %}
    {%if output_format_str %}
    <OUTPUT_FORMAT>
    {{output_format_str}}
    </OUTPUT_FORMAT>
    {% endif %}
    {# example #}
    {% if examples_str %}
    <EXAMPLES>
    {#{% for example in examples_str %}#}
    {{examples_str}}
    {#{% endfor %}#}
    </EXAMPLES>
    {% endif %}
    {{input_label}}: {{input}}
    Your output:
    , preset_prompt_kwargs: {'task_desc_str': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n', 'output_format_str': 'Your output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n', 'input_label': 'Question'}, prompt_variables: ['output_format_str', 'examples_str', 'input_label', 'input', 'task_desc_str']
  )
  (output_processors): Sequential(
    (0): YAMLOutputParser(
      data_class_for_yaml=<class 'use_cases.classification.prompt.OutputFormat'>
      (yaml_output_format_prompt): Prompt(
        template: Your output should be formatted as a standard YAML instance with the following schema:
        ```
        {{schema}}
        ```
        {% if example %}
        Here is an example:
        ```
        {{example}}
        ```
        {% endif %}
        
        -Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
        -Follow the YAML formatting conventions with an indent of 2 spaces. 
        -Quote the string values properly.
        , prompt_variables: ['example', 'schema']
      )
      (output_processors): YAMLParser()
    )
    (1): <lambda>Component()
  )
)    
module: GroqAPIClient()    
module: Prompt(
  template: {# task desc #}
  {% if task_desc_str %}
  {{task_desc_str}}
  {% endif %}
  {%if output_format_str %}
  <OUTPUT_FORMAT>
  {{output_format_str}}
  </OUTPUT_FORMAT>
  {% endif %}
  {# example #}
  {% if examples_str %}
  <EXAMPLES>
  {#{% for example in examples_str %}#}
  {{examples_str}}
  {#{% endfor %}#}
  </EXAMPLES>
  {% endif %}
  {{input_label}}: {{input}}
  Your output:
  , preset_prompt_kwargs: {'task_desc_str': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n', 'output_format_str': 'Your output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n', 'input_label': 'Question'}, prompt_variables: ['output_format_str', 'examples_str', 'input_label', 'input', 'task_desc_str']
)    
module: Sequential(
  (0): YAMLOutputParser(
    data_class_for_yaml=<class 'use_cases.classification.prompt.OutputFormat'>
    (yaml_output_format_prompt): Prompt(
      template: Your output should be formatted as a standard YAML instance with the following schema:
      ```
      {{schema}}
      ```
      {% if example %}
      Here is an example:
      ```
      {{example}}
      ```
      {% endif %}
      
      -Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
      -Follow the YAML formatting conventions with an indent of 2 spaces. 
      -Quote the string values properly.
      , prompt_variables: ['example', 'schema']
    )
    (output_processors): YAMLParser()
  )
  (1): <lambda>Component()
)    
module: YAMLOutputParser(
  data_class_for_yaml=<class 'use_cases.classification.prompt.OutputFormat'>
  (yaml_output_format_prompt): Prompt(
    template: Your output should be formatted as a standard YAML instance with the following schema:
    ```
    {{schema}}
    ```
    {% if example %}
    Here is an example:
    ```
    {{example}}
    ```
    {% endif %}
    
    -Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
    -Follow the YAML formatting conventions with an indent of 2 spaces. 
    -Quote the string values properly.
    , prompt_variables: ['example', 'schema']
  )
  (output_processors): YAMLParser()
)    
module: Prompt(
  template: Your output should be formatted as a standard YAML instance with the following schema:
  ```
  {{schema}}
  ```
  {% if example %}
  Here is an example:
  ```
  {{example}}
  ```
  {% endif %}
  
  -Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
  -Follow the YAML formatting conventions with an indent of 2 spaces. 
  -Quote the string values properly.
  , prompt_variables: ['example', 'schema']
)    
module: YAMLParser()    
module: <lambda>Component()    
params: {'generator.examples_str': Parameter: None}
few_shot_optimizer: <optim.optimizer.BootstrapFewShot object at 0x148fc90d0>
few_shot_state_dict: None
data: {'text': 'What does U.S.S.R. stand for ?', 'coarse_label': 0, 'fine_label': 1}
task_input: What does U.S.S.R. stand for ?, corse_label: 0
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What does U.S.S.R. stand for ?', 'examples_str': "Question: What is the abbreviation of General Motors ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What movie did Madilyn Kahn star in with Gene Wilder ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What does e=mc2 mean ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who claimed he killed 4 , 280 buffalo as food for the crew building the Kansas Pacific Railway ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What constellation represents a hunter with club and shield ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What year was Janet Jackson 's first album released ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is the abbreviation of General Motors ?
class_name: Abbreviation 
class_index: 0
--------

Question: What movie did Madilyn Kahn star in with Gene Wilder ?
class_name: Entity 
class_index: 1
--------

Question: What does e=mc2 mean ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who claimed he killed 4 , 280 buffalo as food for the crew building the Kansas Pacific Railway ?
class_name: Human being 
class_index: 3
--------

Question: What constellation represents a hunter with club and shield ?
class_name: Location 
class_index: 4
--------

Question: What year was Janet Jackson 's first album released ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What does U.S.S.R. stand for ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the abbreviation of General Motors ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What movie did Madilyn Kahn star in with Gene Wilder ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What does e=mc2 mean ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who claimed he killed 4 , 280 buffalo as food for the crew building the Kansas Pacific Railway ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What constellation represents a hunter with club and shield ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What year was Janet Jackson 's first album released ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does U.S.S.R. stand for ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.connection:connect_tcp.started host='api.groq.com' port=443 local_address=None timeout=5.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x148bd8290>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x148cb7410> server_hostname='api.groq.com' timeout=5.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x1485b7bd0>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:58:27 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12694'), (b'x-ratelimit-remaining-tokens', b'29591'), (b'x-ratelimit-reset-requests', b'2h50m30.054s'), (b'x-ratelimit-reset-tokens', b'818ms'), (b'x-request-id', b'req_01hz0xp14se1rbmkgft898j62t'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=jJxWeF5OpClzbt0ZUxXiR4NpSjOVAUt.zIyjDHBT9p4-1716944307-1.0.1.1-gLZboW5filG7CHAxYO5r8KAUORO_iaY8pNryHYghK1uG2TMsYoXb3V2tmS9SyIEpTBY.OKFReNkBdhZRep_0Yg; path=/; expires=Wed, 29-May-24 01:28:27 GMT; domain=.groq.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28940a9247ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking for the abbreviation of U.S.S.R.
class_name: "ABBR"
class_index: 0
```
data: {'text': 'What is the abbreviated form of the National Bureau of Investigation ?', 'coarse_label': 0, 'fine_label': 0}
task_input: What is the abbreviated form of the National Bureau of Investigation ?, corse_label: 0
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What is the abbreviated form of the National Bureau of Investigation ?', 'examples_str': "Question: What is the abbreviation of General Motors ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What movie did Madilyn Kahn star in with Gene Wilder ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What does e=mc2 mean ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who claimed he killed 4 , 280 buffalo as food for the crew building the Kansas Pacific Railway ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What constellation represents a hunter with club and shield ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What year was Janet Jackson 's first album released ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is the abbreviation of General Motors ?
class_name: Abbreviation 
class_index: 0
--------

Question: What movie did Madilyn Kahn star in with Gene Wilder ?
class_name: Entity 
class_index: 1
--------

Question: What does e=mc2 mean ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who claimed he killed 4 , 280 buffalo as food for the crew building the Kansas Pacific Railway ?
class_name: Human being 
class_index: 3
--------

Question: What constellation represents a hunter with club and shield ?
class_name: Location 
class_index: 4
--------

Question: What year was Janet Jackson 's first album released ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What is the abbreviated form of the National Bureau of Investigation ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the abbreviation of General Motors ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What movie did Madilyn Kahn star in with Gene Wilder ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What does e=mc2 mean ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who claimed he killed 4 , 280 buffalo as food for the crew building the Kansas Pacific Railway ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What constellation represents a hunter with club and shield ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What year was Janet Jackson 's first album released ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is the abbreviated form of the National Bureau of Investigation ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:58:27 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12693'), (b'x-ratelimit-remaining-tokens', b'29210'), (b'x-ratelimit-reset-requests', b'2h50m41.686s'), (b'x-ratelimit-reset-tokens', b'1.579s'), (b'x-request-id', b'req_01hz0xp1eme1rr1pe8zyd4rq5r'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28942dac97ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking for the abbreviated form of the National Bureau of Investigation, which is typically represented by the acronym FBI.
class_name: ABBR
class_index: 0
data: {'text': "What do the letters ZIP stand for in the phrase `` ZIP code '' ?", 'coarse_label': 0, 'fine_label': 1}
task_input: What do the letters ZIP stand for in the phrase `` ZIP code '' ?, corse_label: 0
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': "What do the letters ZIP stand for in the phrase `` ZIP code '' ?", 'examples_str': "Question: What is the abbreviation of General Motors ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What movie did Madilyn Kahn star in with Gene Wilder ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What does e=mc2 mean ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who claimed he killed 4 , 280 buffalo as food for the crew building the Kansas Pacific Railway ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What constellation represents a hunter with club and shield ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What year was Janet Jackson 's first album released ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is the abbreviation of General Motors ?
class_name: Abbreviation 
class_index: 0
--------

Question: What movie did Madilyn Kahn star in with Gene Wilder ?
class_name: Entity 
class_index: 1
--------

Question: What does e=mc2 mean ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who claimed he killed 4 , 280 buffalo as food for the crew building the Kansas Pacific Railway ?
class_name: Human being 
class_index: 3
--------

Question: What constellation represents a hunter with club and shield ?
class_name: Location 
class_index: 4
--------

Question: What year was Janet Jackson 's first album released ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What do the letters ZIP stand for in the phrase `` ZIP code '' ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the abbreviation of General Motors ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What movie did Madilyn Kahn star in with Gene Wilder ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What does e=mc2 mean ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who claimed he killed 4 , 280 buffalo as food for the crew building the Kansas Pacific Railway ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What constellation represents a hunter with club and shield ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What year was Janet Jackson 's first album released ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What do the letters ZIP stand for in the phrase `` ZIP code '' ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:58:28 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12692'), (b'x-ratelimit-remaining-tokens', b'28890'), (b'x-ratelimit-reset-requests', b'2h50m47.751s'), (b'x-ratelimit-reset-tokens', b'2.219s'), (b'x-request-id', b'req_01hz0xp1peeymtefg3yhmbtc01'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b289446c047ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the meaning of the letters "ZIP" in the phrase "ZIP code", which is an abbreviation.
class_name: ABBR
class_index: 0
data: {'text': 'What does VCR stand for ?', 'coarse_label': 0, 'fine_label': 1}
task_input: What does VCR stand for ?, corse_label: 0
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What does VCR stand for ?', 'examples_str': "Question: What is the abbreviation of General Motors ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What movie did Madilyn Kahn star in with Gene Wilder ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What does e=mc2 mean ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who claimed he killed 4 , 280 buffalo as food for the crew building the Kansas Pacific Railway ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What constellation represents a hunter with club and shield ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What year was Janet Jackson 's first album released ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is the abbreviation of General Motors ?
class_name: Abbreviation 
class_index: 0
--------

Question: What movie did Madilyn Kahn star in with Gene Wilder ?
class_name: Entity 
class_index: 1
--------

Question: What does e=mc2 mean ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who claimed he killed 4 , 280 buffalo as food for the crew building the Kansas Pacific Railway ?
class_name: Human being 
class_index: 3
--------

Question: What constellation represents a hunter with club and shield ?
class_name: Location 
class_index: 4
--------

Question: What year was Janet Jackson 's first album released ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What does VCR stand for ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the abbreviation of General Motors ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What movie did Madilyn Kahn star in with Gene Wilder ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What does e=mc2 mean ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who claimed he killed 4 , 280 buffalo as food for the crew building the Kansas Pacific Railway ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What constellation represents a hunter with club and shield ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What year was Janet Jackson 's first album released ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does VCR stand for ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:58:28 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12691'), (b'x-ratelimit-remaining-tokens', b'28593'), (b'x-ratelimit-reset-requests', b'2h50m53.713999999s'), (b'x-ratelimit-reset-tokens', b'2.813s'), (b'x-request-id', b'req_01hz0xp1zdeymrmy2hdmy9j7k0'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b289462d767ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking for the abbreviation of VCR, which is a common abbreviation for Video Cassette Recorder.
class_name: ABBR
class_index: 0
data: {'text': 'What sport can a free-legged pacer compete in ?', 'coarse_label': 1, 'fine_label': 17}
task_input: What sport can a free-legged pacer compete in ?, corse_label: 1
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What sport can a free-legged pacer compete in ?', 'examples_str': "Question: What is the abbreviation of General Motors ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What movie did Madilyn Kahn star in with Gene Wilder ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What does e=mc2 mean ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who claimed he killed 4 , 280 buffalo as food for the crew building the Kansas Pacific Railway ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What constellation represents a hunter with club and shield ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What year was Janet Jackson 's first album released ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is the abbreviation of General Motors ?
class_name: Abbreviation 
class_index: 0
--------

Question: What movie did Madilyn Kahn star in with Gene Wilder ?
class_name: Entity 
class_index: 1
--------

Question: What does e=mc2 mean ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who claimed he killed 4 , 280 buffalo as food for the crew building the Kansas Pacific Railway ?
class_name: Human being 
class_index: 3
--------

Question: What constellation represents a hunter with club and shield ?
class_name: Location 
class_index: 4
--------

Question: What year was Janet Jackson 's first album released ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What sport can a free-legged pacer compete in ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the abbreviation of General Motors ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What movie did Madilyn Kahn star in with Gene Wilder ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What does e=mc2 mean ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who claimed he killed 4 , 280 buffalo as food for the crew building the Kansas Pacific Railway ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What constellation represents a hunter with club and shield ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What year was Janet Jackson 's first album released ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What sport can a free-legged pacer compete in ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:58:28 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12690'), (b'x-ratelimit-remaining-tokens', b'28263'), (b'x-ratelimit-reset-requests', b'2h50m59.771999999s'), (b'x-ratelimit-reset-tokens', b'3.473s'), (b'x-request-id', b'req_01hz0xp26jfaq91vg5amq1e347'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b289479e787ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is about a specific sport that a pacer can participate in, which is a type of horse.
class_name: HUM
class_index: 3
data: {'text': 'What was originally defined as one 1-millionth of the distance from the equator to the Pole ?', 'coarse_label': 1, 'fine_label': 21}
task_input: What was originally defined as one 1-millionth of the distance from the equator to the Pole ?, corse_label: 1
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What was originally defined as one 1-millionth of the distance from the equator to the Pole ?', 'examples_str': "Question: What is the abbreviation of General Motors ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What movie did Madilyn Kahn star in with Gene Wilder ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What does e=mc2 mean ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who claimed he killed 4 , 280 buffalo as food for the crew building the Kansas Pacific Railway ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What constellation represents a hunter with club and shield ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What year was Janet Jackson 's first album released ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is the abbreviation of General Motors ?
class_name: Abbreviation 
class_index: 0
--------

Question: What movie did Madilyn Kahn star in with Gene Wilder ?
class_name: Entity 
class_index: 1
--------

Question: What does e=mc2 mean ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who claimed he killed 4 , 280 buffalo as food for the crew building the Kansas Pacific Railway ?
class_name: Human being 
class_index: 3
--------

Question: What constellation represents a hunter with club and shield ?
class_name: Location 
class_index: 4
--------

Question: What year was Janet Jackson 's first album released ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What was originally defined as one 1-millionth of the distance from the equator to the Pole ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the abbreviation of General Motors ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What movie did Madilyn Kahn star in with Gene Wilder ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What does e=mc2 mean ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who claimed he killed 4 , 280 buffalo as food for the crew building the Kansas Pacific Railway ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What constellation represents a hunter with club and shield ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What year was Janet Jackson 's first album released ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What was originally defined as one 1-millionth of the distance from the equator to the Pole ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:58:28 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12689'), (b'x-ratelimit-remaining-tokens', b'27922'), (b'x-ratelimit-reset-requests', b'2h51m5.774999999s'), (b'x-ratelimit-reset-tokens', b'4.155999999s'), (b'x-request-id', b'req_01hz0xp2dmftn9tgprfyb1dr7h'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b289490fd47ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is asking about a specific unit of measurement, which is a numeric value.
class_name: NUM
class_index: 5
data: {'text': 'What fuel do airplanes use ?', 'coarse_label': 1, 'fine_label': 18}
task_input: What fuel do airplanes use ?, corse_label: 1
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What fuel do airplanes use ?', 'examples_str': "Question: What is the abbreviation of General Motors ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What movie did Madilyn Kahn star in with Gene Wilder ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What does e=mc2 mean ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who claimed he killed 4 , 280 buffalo as food for the crew building the Kansas Pacific Railway ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What constellation represents a hunter with club and shield ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What year was Janet Jackson 's first album released ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is the abbreviation of General Motors ?
class_name: Abbreviation 
class_index: 0
--------

Question: What movie did Madilyn Kahn star in with Gene Wilder ?
class_name: Entity 
class_index: 1
--------

Question: What does e=mc2 mean ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who claimed he killed 4 , 280 buffalo as food for the crew building the Kansas Pacific Railway ?
class_name: Human being 
class_index: 3
--------

Question: What constellation represents a hunter with club and shield ?
class_name: Location 
class_index: 4
--------

Question: What year was Janet Jackson 's first album released ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What fuel do airplanes use ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the abbreviation of General Motors ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What movie did Madilyn Kahn star in with Gene Wilder ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What does e=mc2 mean ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who claimed he killed 4 , 280 buffalo as food for the crew building the Kansas Pacific Railway ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What constellation represents a hunter with club and shield ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What year was Janet Jackson 's first album released ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What fuel do airplanes use ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:58:29 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12688'), (b'x-ratelimit-remaining-tokens', b'27607'), (b'x-ratelimit-reset-requests', b'2h51m11.768999999s'), (b'x-ratelimit-reset-tokens', b'4.785s'), (b'x-request-id', b'req_01hz0xp2mte9r9t18m9cazcnrq'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b2894a78e97ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the fuel used by airplanes, which is a specific type of substance.
class_name: NUM
class_index: 5
data: {'text': 'On what T.V. show could Tom Terrific be found ?', 'coarse_label': 1, 'fine_label': 5}
task_input: On what T.V. show could Tom Terrific be found ?, corse_label: 1
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'On what T.V. show could Tom Terrific be found ?', 'examples_str': "Question: What is the abbreviation of General Motors ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What movie did Madilyn Kahn star in with Gene Wilder ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What does e=mc2 mean ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who claimed he killed 4 , 280 buffalo as food for the crew building the Kansas Pacific Railway ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What constellation represents a hunter with club and shield ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What year was Janet Jackson 's first album released ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is the abbreviation of General Motors ?
class_name: Abbreviation 
class_index: 0
--------

Question: What movie did Madilyn Kahn star in with Gene Wilder ?
class_name: Entity 
class_index: 1
--------

Question: What does e=mc2 mean ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who claimed he killed 4 , 280 buffalo as food for the crew building the Kansas Pacific Railway ?
class_name: Human being 
class_index: 3
--------

Question: What constellation represents a hunter with club and shield ?
class_name: Location 
class_index: 4
--------

Question: What year was Janet Jackson 's first album released ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: On what T.V. show could Tom Terrific be found ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the abbreviation of General Motors ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What movie did Madilyn Kahn star in with Gene Wilder ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What does e=mc2 mean ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who claimed he killed 4 , 280 buffalo as food for the crew building the Kansas Pacific Railway ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What constellation represents a hunter with club and shield ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What year was Janet Jackson 's first album released ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: On what T.V. show could Tom Terrific be found ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:58:29 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12687'), (b'x-ratelimit-remaining-tokens', b'27282'), (b'x-ratelimit-reset-requests', b'2h51m17.775999999s'), (b'x-ratelimit-reset-tokens', b'5.435s'), (b'x-request-id', b'req_01hz0xp2vvezatvbwg6wg8emcd'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b2894bd9e17ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is about a TV show, which is a type of location, and Tom Terrific is a character, which is a human being.
class_name: Location
class_index: 4
data: {'text': 'How do you select wine ?', 'coarse_label': 2, 'fine_label': 26}
task_input: How do you select wine ?, corse_label: 2
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'How do you select wine ?', 'examples_str': "Question: What is the abbreviation of General Motors ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What movie did Madilyn Kahn star in with Gene Wilder ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What does e=mc2 mean ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who claimed he killed 4 , 280 buffalo as food for the crew building the Kansas Pacific Railway ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What constellation represents a hunter with club and shield ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What year was Janet Jackson 's first album released ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is the abbreviation of General Motors ?
class_name: Abbreviation 
class_index: 0
--------

Question: What movie did Madilyn Kahn star in with Gene Wilder ?
class_name: Entity 
class_index: 1
--------

Question: What does e=mc2 mean ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who claimed he killed 4 , 280 buffalo as food for the crew building the Kansas Pacific Railway ?
class_name: Human being 
class_index: 3
--------

Question: What constellation represents a hunter with club and shield ?
class_name: Location 
class_index: 4
--------

Question: What year was Janet Jackson 's first album released ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: How do you select wine ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the abbreviation of General Motors ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What movie did Madilyn Kahn star in with Gene Wilder ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What does e=mc2 mean ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who claimed he killed 4 , 280 buffalo as food for the crew building the Kansas Pacific Railway ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What constellation represents a hunter with club and shield ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What year was Janet Jackson 's first album released ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: How do you select wine ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:58:29 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12686'), (b'x-ratelimit-remaining-tokens', b'26962'), (b'x-ratelimit-reset-requests', b'2h51m23.751s'), (b'x-ratelimit-reset-tokens', b'6.076s'), (b'x-request-id', b'req_01hz0xp33nfdzvvkn2d4qdrc0q'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b2894d6b237ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is about a process or a method, which is related to wine, so it's likely about a description or an abstract concept.
class_name: DESC
class_index: 2
```
data: {'text': "What are some children 's rights ?", 'coarse_label': 2, 'fine_label': 25}
task_input: What are some children 's rights ?, corse_label: 2
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': "What are some children 's rights ?", 'examples_str': "Question: What is the abbreviation of General Motors ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What movie did Madilyn Kahn star in with Gene Wilder ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What does e=mc2 mean ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who claimed he killed 4 , 280 buffalo as food for the crew building the Kansas Pacific Railway ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What constellation represents a hunter with club and shield ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What year was Janet Jackson 's first album released ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is the abbreviation of General Motors ?
class_name: Abbreviation 
class_index: 0
--------

Question: What movie did Madilyn Kahn star in with Gene Wilder ?
class_name: Entity 
class_index: 1
--------

Question: What does e=mc2 mean ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who claimed he killed 4 , 280 buffalo as food for the crew building the Kansas Pacific Railway ?
class_name: Human being 
class_index: 3
--------

Question: What constellation represents a hunter with club and shield ?
class_name: Location 
class_index: 4
--------

Question: What year was Janet Jackson 's first album released ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What are some children 's rights ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the abbreviation of General Motors ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What movie did Madilyn Kahn star in with Gene Wilder ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What does e=mc2 mean ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who claimed he killed 4 , 280 buffalo as food for the crew building the Kansas Pacific Railway ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What constellation represents a hunter with club and shield ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What year was Janet Jackson 's first album released ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What are some children 's rights ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:58:29 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12685'), (b'x-ratelimit-remaining-tokens', b'26631'), (b'x-ratelimit-reset-requests', b'2h51m29.767999999s'), (b'x-ratelimit-reset-tokens', b'6.737s'), (b'x-request-id', b'req_01hz0xp3aye9r80cpkcd1397x3'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b2894eec747ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the rights of children, which is an abstract concept, so it falls under the category of Description and abstract concept.
class_name: "Description and abstract concept"
class_index: 2
data: {'text': 'What are some fun things to do in Cozumel , Mexico for teenagers ?', 'coarse_label': 2, 'fine_label': 25}
task_input: What are some fun things to do in Cozumel , Mexico for teenagers ?, corse_label: 2
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What are some fun things to do in Cozumel , Mexico for teenagers ?', 'examples_str': "Question: What is the abbreviation of General Motors ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What movie did Madilyn Kahn star in with Gene Wilder ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What does e=mc2 mean ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who claimed he killed 4 , 280 buffalo as food for the crew building the Kansas Pacific Railway ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What constellation represents a hunter with club and shield ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What year was Janet Jackson 's first album released ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is the abbreviation of General Motors ?
class_name: Abbreviation 
class_index: 0
--------

Question: What movie did Madilyn Kahn star in with Gene Wilder ?
class_name: Entity 
class_index: 1
--------

Question: What does e=mc2 mean ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who claimed he killed 4 , 280 buffalo as food for the crew building the Kansas Pacific Railway ?
class_name: Human being 
class_index: 3
--------

Question: What constellation represents a hunter with club and shield ?
class_name: Location 
class_index: 4
--------

Question: What year was Janet Jackson 's first album released ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What are some fun things to do in Cozumel , Mexico for teenagers ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the abbreviation of General Motors ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What movie did Madilyn Kahn star in with Gene Wilder ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What does e=mc2 mean ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who claimed he killed 4 , 280 buffalo as food for the crew building the Kansas Pacific Railway ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What constellation represents a hunter with club and shield ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What year was Janet Jackson 's first album released ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What are some fun things to do in Cozumel , Mexico for teenagers ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:58:30 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12684'), (b'x-ratelimit-remaining-tokens', b'26352'), (b'x-ratelimit-reset-requests', b'2h51m35.648s'), (b'x-ratelimit-reset-tokens', b'7.296s'), (b'x-request-id', b'req_01hz0xp3nyerprh5b87wb3f3tq'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b289511e2a7ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about activities to do in a specific location, which is a common query for travel planning.
class_name: Location
class_index: 4
data: {'text': 'What does hazmat stand for ?', 'coarse_label': 2, 'fine_label': 24}
task_input: What does hazmat stand for ?, corse_label: 2
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What does hazmat stand for ?', 'examples_str': "Question: What is the abbreviation of General Motors ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What movie did Madilyn Kahn star in with Gene Wilder ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What does e=mc2 mean ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who claimed he killed 4 , 280 buffalo as food for the crew building the Kansas Pacific Railway ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What constellation represents a hunter with club and shield ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What year was Janet Jackson 's first album released ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is the abbreviation of General Motors ?
class_name: Abbreviation 
class_index: 0
--------

Question: What movie did Madilyn Kahn star in with Gene Wilder ?
class_name: Entity 
class_index: 1
--------

Question: What does e=mc2 mean ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who claimed he killed 4 , 280 buffalo as food for the crew building the Kansas Pacific Railway ?
class_name: Human being 
class_index: 3
--------

Question: What constellation represents a hunter with club and shield ?
class_name: Location 
class_index: 4
--------

Question: What year was Janet Jackson 's first album released ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What does hazmat stand for ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the abbreviation of General Motors ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What movie did Madilyn Kahn star in with Gene Wilder ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What does e=mc2 mean ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who claimed he killed 4 , 280 buffalo as food for the crew building the Kansas Pacific Railway ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What constellation represents a hunter with club and shield ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What year was Janet Jackson 's first album released ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does hazmat stand for ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:58:30 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12683'), (b'x-ratelimit-remaining-tokens', b'26054'), (b'x-ratelimit-reset-requests', b'2h51m41.719999999s'), (b'x-ratelimit-reset-tokens', b'7.892s'), (b'x-request-id', b'req_01hz0xp3yqfz5tsscsae4e6kz9'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28952df487ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking for the abbreviation of a term, which is a common use case for abbreviations.
class_name: ABBR
class_index: 0
data: {'text': "Who is the nebbish that is Marvel 's official mascot ?", 'coarse_label': 3, 'fine_label': 29}
task_input: Who is the nebbish that is Marvel 's official mascot ?, corse_label: 3
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': "Who is the nebbish that is Marvel 's official mascot ?", 'examples_str': "Question: What is the abbreviation of General Motors ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What movie did Madilyn Kahn star in with Gene Wilder ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What does e=mc2 mean ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who claimed he killed 4 , 280 buffalo as food for the crew building the Kansas Pacific Railway ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What constellation represents a hunter with club and shield ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What year was Janet Jackson 's first album released ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is the abbreviation of General Motors ?
class_name: Abbreviation 
class_index: 0
--------

Question: What movie did Madilyn Kahn star in with Gene Wilder ?
class_name: Entity 
class_index: 1
--------

Question: What does e=mc2 mean ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who claimed he killed 4 , 280 buffalo as food for the crew building the Kansas Pacific Railway ?
class_name: Human being 
class_index: 3
--------

Question: What constellation represents a hunter with club and shield ?
class_name: Location 
class_index: 4
--------

Question: What year was Janet Jackson 's first album released ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Who is the nebbish that is Marvel 's official mascot ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the abbreviation of General Motors ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What movie did Madilyn Kahn star in with Gene Wilder ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What does e=mc2 mean ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who claimed he killed 4 , 280 buffalo as food for the crew building the Kansas Pacific Railway ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What constellation represents a hunter with club and shield ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What year was Janet Jackson 's first album released ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Who is the nebbish that is Marvel 's official mascot ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:58:30 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12682'), (b'x-ratelimit-remaining-tokens', b'25771'), (b'x-ratelimit-reset-requests', b'2h51m47.677s'), (b'x-ratelimit-reset-tokens', b'8.457s'), (b'x-request-id', b'req_01hz0xp48vfaqrhh2b110zgjjd'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28954d9247ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is asking about a character in the Marvel universe, which is a human being.
class_name: HUM
class_index: 3
```
data: {'text': 'What Japanese electronics company was named for a coastal city northeast of Tokyo ?', 'coarse_label': 3, 'fine_label': 28}
task_input: What Japanese electronics company was named for a coastal city northeast of Tokyo ?, corse_label: 3
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What Japanese electronics company was named for a coastal city northeast of Tokyo ?', 'examples_str': "Question: What is the abbreviation of General Motors ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What movie did Madilyn Kahn star in with Gene Wilder ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What does e=mc2 mean ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who claimed he killed 4 , 280 buffalo as food for the crew building the Kansas Pacific Railway ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What constellation represents a hunter with club and shield ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What year was Janet Jackson 's first album released ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is the abbreviation of General Motors ?
class_name: Abbreviation 
class_index: 0
--------

Question: What movie did Madilyn Kahn star in with Gene Wilder ?
class_name: Entity 
class_index: 1
--------

Question: What does e=mc2 mean ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who claimed he killed 4 , 280 buffalo as food for the crew building the Kansas Pacific Railway ?
class_name: Human being 
class_index: 3
--------

Question: What constellation represents a hunter with club and shield ?
class_name: Location 
class_index: 4
--------

Question: What year was Janet Jackson 's first album released ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What Japanese electronics company was named for a coastal city northeast of Tokyo ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the abbreviation of General Motors ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What movie did Madilyn Kahn star in with Gene Wilder ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What does e=mc2 mean ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who claimed he killed 4 , 280 buffalo as food for the crew building the Kansas Pacific Railway ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What constellation represents a hunter with club and shield ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What year was Janet Jackson 's first album released ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What Japanese electronics company was named for a coastal city northeast of Tokyo ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:58:31 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12681'), (b'x-ratelimit-remaining-tokens', b'25475'), (b'x-ratelimit-reset-requests', b'2h51m53.693s'), (b'x-ratelimit-reset-tokens', b'9.05s'), (b'x-request-id', b'req_01hz0xp4jferqb9z6k02z9wcfz'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28956caab7ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about a company, which is often represented by its abbreviation.
class_name: ABBR
class_index: 0
```
data: {'text': 'Who was Maria Theresa ?', 'coarse_label': 3, 'fine_label': 31}
task_input: Who was Maria Theresa ?, corse_label: 3
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'Who was Maria Theresa ?', 'examples_str': "Question: What is the abbreviation of General Motors ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What movie did Madilyn Kahn star in with Gene Wilder ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What does e=mc2 mean ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who claimed he killed 4 , 280 buffalo as food for the crew building the Kansas Pacific Railway ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What constellation represents a hunter with club and shield ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What year was Janet Jackson 's first album released ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is the abbreviation of General Motors ?
class_name: Abbreviation 
class_index: 0
--------

Question: What movie did Madilyn Kahn star in with Gene Wilder ?
class_name: Entity 
class_index: 1
--------

Question: What does e=mc2 mean ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who claimed he killed 4 , 280 buffalo as food for the crew building the Kansas Pacific Railway ?
class_name: Human being 
class_index: 3
--------

Question: What constellation represents a hunter with club and shield ?
class_name: Location 
class_index: 4
--------

Question: What year was Janet Jackson 's first album released ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Who was Maria Theresa ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the abbreviation of General Motors ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What movie did Madilyn Kahn star in with Gene Wilder ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What does e=mc2 mean ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who claimed he killed 4 , 280 buffalo as food for the crew building the Kansas Pacific Railway ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What constellation represents a hunter with club and shield ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What year was Janet Jackson 's first album released ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Who was Maria Theresa ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:58:31 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12680'), (b'x-ratelimit-remaining-tokens', b'25196'), (b'x-ratelimit-reset-requests', b'2h51m59.705999999s'), (b'x-ratelimit-reset-tokens', b'9.608s'), (b'x-request-id', b'req_01hz0xp4vpeymr0zwrhy9jsf6x'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28958ac187ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is about a historical figure, Maria Theresa, which is a human being.
class_name: HUM
class_index: 3
```
data: {'text': "What was the name of the director of the movie `` Jaws '' ?", 'coarse_label': 3, 'fine_label': 29}
task_input: What was the name of the director of the movie `` Jaws '' ?, corse_label: 3
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': "What was the name of the director of the movie `` Jaws '' ?", 'examples_str': "Question: What is the abbreviation of General Motors ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What movie did Madilyn Kahn star in with Gene Wilder ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What does e=mc2 mean ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who claimed he killed 4 , 280 buffalo as food for the crew building the Kansas Pacific Railway ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What constellation represents a hunter with club and shield ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What year was Janet Jackson 's first album released ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is the abbreviation of General Motors ?
class_name: Abbreviation 
class_index: 0
--------

Question: What movie did Madilyn Kahn star in with Gene Wilder ?
class_name: Entity 
class_index: 1
--------

Question: What does e=mc2 mean ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who claimed he killed 4 , 280 buffalo as food for the crew building the Kansas Pacific Railway ?
class_name: Human being 
class_index: 3
--------

Question: What constellation represents a hunter with club and shield ?
class_name: Location 
class_index: 4
--------

Question: What year was Janet Jackson 's first album released ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What was the name of the director of the movie `` Jaws '' ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the abbreviation of General Motors ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What movie did Madilyn Kahn star in with Gene Wilder ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What does e=mc2 mean ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who claimed he killed 4 , 280 buffalo as food for the crew building the Kansas Pacific Railway ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What constellation represents a hunter with club and shield ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What year was Janet Jackson 's first album released ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What was the name of the director of the movie `` Jaws '' ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:58:31 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12679'), (b'x-ratelimit-remaining-tokens', b'24879'), (b'x-ratelimit-reset-requests', b'2h52m5.748s'), (b'x-ratelimit-reset-tokens', b'10.241s'), (b'x-request-id', b'req_01hz0xp53ke8w8bm8v5jbssjsa'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b2895a3d487ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking for the name of the director of a specific movie, which is a piece of information about a person, so it's likely to be a human being.
class_name: HUM
class_index: 3
data: {'text': 'Which area produces the least acidic coffee ?', 'coarse_label': 4, 'fine_label': 35}
task_input: Which area produces the least acidic coffee ?, corse_label: 4
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'Which area produces the least acidic coffee ?', 'examples_str': "Question: What is the abbreviation of General Motors ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What movie did Madilyn Kahn star in with Gene Wilder ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What does e=mc2 mean ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who claimed he killed 4 , 280 buffalo as food for the crew building the Kansas Pacific Railway ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What constellation represents a hunter with club and shield ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What year was Janet Jackson 's first album released ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is the abbreviation of General Motors ?
class_name: Abbreviation 
class_index: 0
--------

Question: What movie did Madilyn Kahn star in with Gene Wilder ?
class_name: Entity 
class_index: 1
--------

Question: What does e=mc2 mean ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who claimed he killed 4 , 280 buffalo as food for the crew building the Kansas Pacific Railway ?
class_name: Human being 
class_index: 3
--------

Question: What constellation represents a hunter with club and shield ?
class_name: Location 
class_index: 4
--------

Question: What year was Janet Jackson 's first album released ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Which area produces the least acidic coffee ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the abbreviation of General Motors ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What movie did Madilyn Kahn star in with Gene Wilder ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What does e=mc2 mean ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who claimed he killed 4 , 280 buffalo as food for the crew building the Kansas Pacific Railway ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What constellation represents a hunter with club and shield ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What year was Janet Jackson 's first album released ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Which area produces the least acidic coffee ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:58:31 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12678'), (b'x-ratelimit-remaining-tokens', b'24550'), (b'x-ratelimit-reset-requests', b'2h52m11.748s'), (b'x-ratelimit-reset-tokens', b'10.9s'), (b'x-request-id', b'req_01hz0xp5bffaq8gwjpdpg7c0my'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b2895bce757ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is about a specific topic, and it's asking about the least acidic coffee, which is a descriptive concept.
class_name: DESC
class_index: 2
data: {'text': 'What ocean is the largest in the world ?', 'coarse_label': 4, 'fine_label': 35}
task_input: What ocean is the largest in the world ?, corse_label: 4
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What ocean is the largest in the world ?', 'examples_str': "Question: What is the abbreviation of General Motors ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What movie did Madilyn Kahn star in with Gene Wilder ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What does e=mc2 mean ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who claimed he killed 4 , 280 buffalo as food for the crew building the Kansas Pacific Railway ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What constellation represents a hunter with club and shield ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What year was Janet Jackson 's first album released ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is the abbreviation of General Motors ?
class_name: Abbreviation 
class_index: 0
--------

Question: What movie did Madilyn Kahn star in with Gene Wilder ?
class_name: Entity 
class_index: 1
--------

Question: What does e=mc2 mean ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who claimed he killed 4 , 280 buffalo as food for the crew building the Kansas Pacific Railway ?
class_name: Human being 
class_index: 3
--------

Question: What constellation represents a hunter with club and shield ?
class_name: Location 
class_index: 4
--------

Question: What year was Janet Jackson 's first album released ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What ocean is the largest in the world ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the abbreviation of General Motors ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What movie did Madilyn Kahn star in with Gene Wilder ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What does e=mc2 mean ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who claimed he killed 4 , 280 buffalo as food for the crew building the Kansas Pacific Railway ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What constellation represents a hunter with club and shield ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What year was Janet Jackson 's first album released ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What ocean is the largest in the world ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:58:32 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12677'), (b'x-ratelimit-remaining-tokens', b'24235'), (b'x-ratelimit-reset-requests', b'2h52m17.752s'), (b'x-ratelimit-reset-tokens', b'11.529s'), (b'x-request-id', b'req_01hz0xp5k9es1aam3a10pnkh3p'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b2895d5fa97ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the largest ocean in the world, which is a geographic location.
class_name: LOC
class_index: 4
```
data: {'text': "What South American capital is the world 's highest ?", 'coarse_label': 4, 'fine_label': 32}
task_input: What South American capital is the world 's highest ?, corse_label: 4
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': "What South American capital is the world 's highest ?", 'examples_str': "Question: What is the abbreviation of General Motors ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What movie did Madilyn Kahn star in with Gene Wilder ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What does e=mc2 mean ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who claimed he killed 4 , 280 buffalo as food for the crew building the Kansas Pacific Railway ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What constellation represents a hunter with club and shield ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What year was Janet Jackson 's first album released ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is the abbreviation of General Motors ?
class_name: Abbreviation 
class_index: 0
--------

Question: What movie did Madilyn Kahn star in with Gene Wilder ?
class_name: Entity 
class_index: 1
--------

Question: What does e=mc2 mean ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who claimed he killed 4 , 280 buffalo as food for the crew building the Kansas Pacific Railway ?
class_name: Human being 
class_index: 3
--------

Question: What constellation represents a hunter with club and shield ?
class_name: Location 
class_index: 4
--------

Question: What year was Janet Jackson 's first album released ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What South American capital is the world 's highest ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the abbreviation of General Motors ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What movie did Madilyn Kahn star in with Gene Wilder ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What does e=mc2 mean ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who claimed he killed 4 , 280 buffalo as food for the crew building the Kansas Pacific Railway ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What constellation represents a hunter with club and shield ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What year was Janet Jackson 's first album released ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What South American capital is the world 's highest ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:58:32 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12676'), (b'x-ratelimit-remaining-tokens', b'23920'), (b'x-ratelimit-reset-requests', b'2h52m23.751s'), (b'x-ratelimit-reset-tokens', b'12.159s'), (b'x-request-id', b'req_01hz0xp5v3enwatrybax8r3w18'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b2895ee8ef7ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the capital of a country, which is typically a location.
class_name: LOC
class_index: 4
data: {'text': 'What North American city boasts the biggest Polish population ?', 'coarse_label': 4, 'fine_label': 32}
task_input: What North American city boasts the biggest Polish population ?, corse_label: 4
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What North American city boasts the biggest Polish population ?', 'examples_str': "Question: What is the abbreviation of General Motors ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What movie did Madilyn Kahn star in with Gene Wilder ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What does e=mc2 mean ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who claimed he killed 4 , 280 buffalo as food for the crew building the Kansas Pacific Railway ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What constellation represents a hunter with club and shield ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What year was Janet Jackson 's first album released ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is the abbreviation of General Motors ?
class_name: Abbreviation 
class_index: 0
--------

Question: What movie did Madilyn Kahn star in with Gene Wilder ?
class_name: Entity 
class_index: 1
--------

Question: What does e=mc2 mean ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who claimed he killed 4 , 280 buffalo as food for the crew building the Kansas Pacific Railway ?
class_name: Human being 
class_index: 3
--------

Question: What constellation represents a hunter with club and shield ?
class_name: Location 
class_index: 4
--------

Question: What year was Janet Jackson 's first album released ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What North American city boasts the biggest Polish population ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the abbreviation of General Motors ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What movie did Madilyn Kahn star in with Gene Wilder ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What does e=mc2 mean ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who claimed he killed 4 , 280 buffalo as food for the crew building the Kansas Pacific Railway ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What constellation represents a hunter with club and shield ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What year was Janet Jackson 's first album released ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What North American city boasts the biggest Polish population ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:58:32 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12675'), (b'x-ratelimit-remaining-tokens', b'23758'), (b'x-ratelimit-reset-requests', b'2h52m29.448999999s'), (b'x-ratelimit-reset-tokens', b'12.484s'), (b'x-request-id', b'req_01hz0xp6caew5a4n6es74thwvr'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b289625b707ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is about a city, which is a location, and it's asking about a specific city with a notable characteristic.
class_name: Location
class_index: 4
data: {'text': "Independent silversmith 's account for what percentage of silver production ?", 'coarse_label': 5, 'fine_label': 45}
task_input: Independent silversmith 's account for what percentage of silver production ?, corse_label: 5
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': "Independent silversmith 's account for what percentage of silver production ?", 'examples_str': "Question: What is the abbreviation of General Motors ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What movie did Madilyn Kahn star in with Gene Wilder ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What does e=mc2 mean ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who claimed he killed 4 , 280 buffalo as food for the crew building the Kansas Pacific Railway ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What constellation represents a hunter with club and shield ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What year was Janet Jackson 's first album released ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is the abbreviation of General Motors ?
class_name: Abbreviation 
class_index: 0
--------

Question: What movie did Madilyn Kahn star in with Gene Wilder ?
class_name: Entity 
class_index: 1
--------

Question: What does e=mc2 mean ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who claimed he killed 4 , 280 buffalo as food for the crew building the Kansas Pacific Railway ?
class_name: Human being 
class_index: 3
--------

Question: What constellation represents a hunter with club and shield ?
class_name: Location 
class_index: 4
--------

Question: What year was Janet Jackson 's first album released ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Independent silversmith 's account for what percentage of silver production ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the abbreviation of General Motors ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What movie did Madilyn Kahn star in with Gene Wilder ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What does e=mc2 mean ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who claimed he killed 4 , 280 buffalo as food for the crew building the Kansas Pacific Railway ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What constellation represents a hunter with club and shield ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What year was Janet Jackson 's first album released ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Independent silversmith 's account for what percentage of silver production ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:58:33 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12674'), (b'x-ratelimit-remaining-tokens', b'23460'), (b'x-ratelimit-reset-requests', b'2h52m35.701s'), (b'x-ratelimit-reset-tokens', b'13.079s'), (b'x-request-id', b'req_01hz0xp6npenwa21fkfycnsh3n'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b289643cfe7ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about a percentage of silver production, which is a numeric value.
class_name: NUM
class_index: 5
```
data: {'text': 'How old is the universe ?', 'coarse_label': 5, 'fine_label': 44}
task_input: How old is the universe ?, corse_label: 5
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'How old is the universe ?', 'examples_str': "Question: What is the abbreviation of General Motors ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What movie did Madilyn Kahn star in with Gene Wilder ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What does e=mc2 mean ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who claimed he killed 4 , 280 buffalo as food for the crew building the Kansas Pacific Railway ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What constellation represents a hunter with club and shield ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What year was Janet Jackson 's first album released ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is the abbreviation of General Motors ?
class_name: Abbreviation 
class_index: 0
--------

Question: What movie did Madilyn Kahn star in with Gene Wilder ?
class_name: Entity 
class_index: 1
--------

Question: What does e=mc2 mean ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who claimed he killed 4 , 280 buffalo as food for the crew building the Kansas Pacific Railway ?
class_name: Human being 
class_index: 3
--------

Question: What constellation represents a hunter with club and shield ?
class_name: Location 
class_index: 4
--------

Question: What year was Janet Jackson 's first album released ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: How old is the universe ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the abbreviation of General Motors ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What movie did Madilyn Kahn star in with Gene Wilder ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What does e=mc2 mean ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who claimed he killed 4 , 280 buffalo as food for the crew building the Kansas Pacific Railway ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What constellation represents a hunter with club and shield ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What year was Janet Jackson 's first album released ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: How old is the universe ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:58:33 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12673'), (b'x-ratelimit-remaining-tokens', b'23157'), (b'x-ratelimit-reset-requests', b'2h52m41.75s'), (b'x-ratelimit-reset-tokens', b'13.686s'), (b'x-request-id', b'req_01hz0xp6xgevtv6kq8k9e26qs9'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28965ce277ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is asking about the age of the universe, which is a fundamental concept in physics and astronomy, and is often described in terms of years.
class_name: Description and abstract concept
class_index: 2
data: {'text': 'When was the Hoover Dam constructed ?', 'coarse_label': 5, 'fine_label': 39}
task_input: When was the Hoover Dam constructed ?, corse_label: 5
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'When was the Hoover Dam constructed ?', 'examples_str': "Question: What is the abbreviation of General Motors ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What movie did Madilyn Kahn star in with Gene Wilder ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What does e=mc2 mean ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who claimed he killed 4 , 280 buffalo as food for the crew building the Kansas Pacific Railway ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What constellation represents a hunter with club and shield ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What year was Janet Jackson 's first album released ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is the abbreviation of General Motors ?
class_name: Abbreviation 
class_index: 0
--------

Question: What movie did Madilyn Kahn star in with Gene Wilder ?
class_name: Entity 
class_index: 1
--------

Question: What does e=mc2 mean ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who claimed he killed 4 , 280 buffalo as food for the crew building the Kansas Pacific Railway ?
class_name: Human being 
class_index: 3
--------

Question: What constellation represents a hunter with club and shield ?
class_name: Location 
class_index: 4
--------

Question: What year was Janet Jackson 's first album released ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: When was the Hoover Dam constructed ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the abbreviation of General Motors ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What movie did Madilyn Kahn star in with Gene Wilder ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What does e=mc2 mean ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who claimed he killed 4 , 280 buffalo as food for the crew building the Kansas Pacific Railway ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What constellation represents a hunter with club and shield ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What year was Janet Jackson 's first album released ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: When was the Hoover Dam constructed ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:58:33 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12672'), (b'x-ratelimit-remaining-tokens', b'22839'), (b'x-ratelimit-reset-requests', b'2h52m47.735s'), (b'x-ratelimit-reset-tokens', b'14.321s'), (b'x-request-id', b'req_01hz0xp75tfe09pg1wxz40mf7x'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b289677f587ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about a specific event in history, which is a descriptive concept.
class_name: DESC
class_index: 2
```
data: {'text': 'At what age did Rossini stop writing opera ?', 'coarse_label': 5, 'fine_label': 44}
task_input: At what age did Rossini stop writing opera ?, corse_label: 5
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'At what age did Rossini stop writing opera ?', 'examples_str': "Question: What is the abbreviation of General Motors ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What movie did Madilyn Kahn star in with Gene Wilder ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What does e=mc2 mean ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who claimed he killed 4 , 280 buffalo as food for the crew building the Kansas Pacific Railway ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What constellation represents a hunter with club and shield ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What year was Janet Jackson 's first album released ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is the abbreviation of General Motors ?
class_name: Abbreviation 
class_index: 0
--------

Question: What movie did Madilyn Kahn star in with Gene Wilder ?
class_name: Entity 
class_index: 1
--------

Question: What does e=mc2 mean ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who claimed he killed 4 , 280 buffalo as food for the crew building the Kansas Pacific Railway ?
class_name: Human being 
class_index: 3
--------

Question: What constellation represents a hunter with club and shield ?
class_name: Location 
class_index: 4
--------

Question: What year was Janet Jackson 's first album released ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: At what age did Rossini stop writing opera ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the abbreviation of General Motors ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What movie did Madilyn Kahn star in with Gene Wilder ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What does e=mc2 mean ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who claimed he killed 4 , 280 buffalo as food for the crew building the Kansas Pacific Railway ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What constellation represents a hunter with club and shield ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What year was Janet Jackson 's first album released ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: At what age did Rossini stop writing opera ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:58:34 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12671'), (b'x-ratelimit-remaining-tokens', b'22556'), (b'x-ratelimit-reset-requests', b'2h52m53.695s'), (b'x-ratelimit-reset-tokens', b'14.887s'), (b'x-request-id', b'req_01hz0xp7fce1rshsww0325mc5n'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b2896968c27ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the age of a specific person, which is a characteristic often associated with humans.
class_name: HUM
class_index: 3
responses: [0, 0, 0, 0, 3, 5, 5, 4, 2, 2, 4, 0, 3, 0, 3, 3, 2, 4, 4, 4, 5, 2, 2, 3], targets: [0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5]
num_invalid: 0
Preds tensor: tensor([[1., 0., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0.],
        [0., 0., 0., 1., 0., 0.],
        [0., 0., 0., 0., 0., 1.],
        [0., 0., 0., 0., 0., 1.],
        [0., 0., 0., 0., 1., 0.],
        [0., 0., 1., 0., 0., 0.],
        [0., 0., 1., 0., 0., 0.],
        [0., 0., 0., 0., 1., 0.],
        [1., 0., 0., 0., 0., 0.],
        [0., 0., 0., 1., 0., 0.],
        [1., 0., 0., 0., 0., 0.],
        [0., 0., 0., 1., 0., 0.],
        [0., 0., 0., 1., 0., 0.],
        [0., 0., 1., 0., 0., 0.],
        [0., 0., 0., 0., 1., 0.],
        [0., 0., 0., 0., 1., 0.],
        [0., 0., 0., 0., 1., 0.],
        [0., 0., 0., 0., 0., 1.],
        [0., 0., 1., 0., 0., 0.],
        [0., 0., 1., 0., 0., 0.],
        [0., 0., 0., 1., 0., 0.]])
Targets tensor: tensor([0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5])
Eval Accuracy Start: 0.542, F1: 0.477, score: 1.0190000000000001
data: {'text': 'What does I.V. stand for ?', 'coarse_label': 0, 'fine_label': 1}
task_input: What does I.V. stand for ?, corse_label: 0
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What does I.V. stand for ?', 'examples_str': "Question: What is the abbreviation of General Motors ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What movie did Madilyn Kahn star in with Gene Wilder ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What does e=mc2 mean ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who claimed he killed 4 , 280 buffalo as food for the crew building the Kansas Pacific Railway ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What constellation represents a hunter with club and shield ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What year was Janet Jackson 's first album released ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is the abbreviation of General Motors ?
class_name: Abbreviation 
class_index: 0
--------

Question: What movie did Madilyn Kahn star in with Gene Wilder ?
class_name: Entity 
class_index: 1
--------

Question: What does e=mc2 mean ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who claimed he killed 4 , 280 buffalo as food for the crew building the Kansas Pacific Railway ?
class_name: Human being 
class_index: 3
--------

Question: What constellation represents a hunter with club and shield ?
class_name: Location 
class_index: 4
--------

Question: What year was Janet Jackson 's first album released ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What does I.V. stand for ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the abbreviation of General Motors ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What movie did Madilyn Kahn star in with Gene Wilder ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What does e=mc2 mean ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who claimed he killed 4 , 280 buffalo as food for the crew building the Kansas Pacific Railway ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What constellation represents a hunter with club and shield ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What year was Janet Jackson 's first album released ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does I.V. stand for ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:58:34 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12670'), (b'x-ratelimit-remaining-tokens', b'22268'), (b'x-ratelimit-reset-requests', b'2h52m59.706999999s'), (b'x-ratelimit-reset-tokens', b'15.464s'), (b'x-request-id', b'req_01hz0xp7rje9r9pwyyg8gcqgy7'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b2896b3a437ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the abbreviation of I.V.
class_name: ABBR
class_index: 0
```
data: {'text': 'What is the abbreviation for Texas ?', 'coarse_label': 0, 'fine_label': 0}
task_input: What is the abbreviation for Texas ?, corse_label: 0
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What is the abbreviation for Texas ?', 'examples_str': "Question: What is the abbreviation of General Motors ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What movie did Madilyn Kahn star in with Gene Wilder ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What does e=mc2 mean ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who claimed he killed 4 , 280 buffalo as food for the crew building the Kansas Pacific Railway ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What constellation represents a hunter with club and shield ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What year was Janet Jackson 's first album released ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is the abbreviation of General Motors ?
class_name: Abbreviation 
class_index: 0
--------

Question: What movie did Madilyn Kahn star in with Gene Wilder ?
class_name: Entity 
class_index: 1
--------

Question: What does e=mc2 mean ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who claimed he killed 4 , 280 buffalo as food for the crew building the Kansas Pacific Railway ?
class_name: Human being 
class_index: 3
--------

Question: What constellation represents a hunter with club and shield ?
class_name: Location 
class_index: 4
--------

Question: What year was Janet Jackson 's first album released ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What is the abbreviation for Texas ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the abbreviation of General Motors ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What movie did Madilyn Kahn star in with Gene Wilder ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What does e=mc2 mean ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who claimed he killed 4 , 280 buffalo as food for the crew building the Kansas Pacific Railway ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What constellation represents a hunter with club and shield ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What year was Janet Jackson 's first album released ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is the abbreviation for Texas ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:58:34 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12669'), (b'x-ratelimit-remaining-tokens', b'21957'), (b'x-ratelimit-reset-requests', b'2h53m5.754s'), (b'x-ratelimit-reset-tokens', b'16.085999999s'), (b'x-request-id', b'req_01hz0xp809fh4bnjyn2jb7ra7p'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b2896cbb697ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking for the abbreviation of a state, which is a common abbreviation.
class_name: ABBR
class_index: 0
data: {'text': 'What does the technical term ISDN mean ?', 'coarse_label': 0, 'fine_label': 1}
task_input: What does the technical term ISDN mean ?, corse_label: 0
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What does the technical term ISDN mean ?', 'examples_str': "Question: What is the abbreviation of General Motors ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What movie did Madilyn Kahn star in with Gene Wilder ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What does e=mc2 mean ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who claimed he killed 4 , 280 buffalo as food for the crew building the Kansas Pacific Railway ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What constellation represents a hunter with club and shield ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What year was Janet Jackson 's first album released ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is the abbreviation of General Motors ?
class_name: Abbreviation 
class_index: 0
--------

Question: What movie did Madilyn Kahn star in with Gene Wilder ?
class_name: Entity 
class_index: 1
--------

Question: What does e=mc2 mean ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who claimed he killed 4 , 280 buffalo as food for the crew building the Kansas Pacific Railway ?
class_name: Human being 
class_index: 3
--------

Question: What constellation represents a hunter with club and shield ?
class_name: Location 
class_index: 4
--------

Question: What year was Janet Jackson 's first album released ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What does the technical term ISDN mean ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the abbreviation of General Motors ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What movie did Madilyn Kahn star in with Gene Wilder ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What does e=mc2 mean ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who claimed he killed 4 , 280 buffalo as food for the crew building the Kansas Pacific Railway ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What constellation represents a hunter with club and shield ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What year was Janet Jackson 's first album released ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does the technical term ISDN mean ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:58:34 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12668'), (b'x-ratelimit-remaining-tokens', b'21641'), (b'x-ratelimit-reset-requests', b'2h53m11.762999999s'), (b'x-ratelimit-reset-tokens', b'16.716999999s'), (b'x-request-id', b'req_01hz0xp87qeexv4xjenbd8gewf'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b2896e3c7a7ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is asking about the meaning of a technical term, which is an abstract concept.
class_name: DESC
class_index: 2
```
data: {'text': 'What is TMJ ?', 'coarse_label': 0, 'fine_label': 1}
task_input: What is TMJ ?, corse_label: 0
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What is TMJ ?', 'examples_str': "Question: What is the abbreviation of General Motors ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What movie did Madilyn Kahn star in with Gene Wilder ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What does e=mc2 mean ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who claimed he killed 4 , 280 buffalo as food for the crew building the Kansas Pacific Railway ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What constellation represents a hunter with club and shield ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What year was Janet Jackson 's first album released ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is the abbreviation of General Motors ?
class_name: Abbreviation 
class_index: 0
--------

Question: What movie did Madilyn Kahn star in with Gene Wilder ?
class_name: Entity 
class_index: 1
--------

Question: What does e=mc2 mean ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who claimed he killed 4 , 280 buffalo as food for the crew building the Kansas Pacific Railway ?
class_name: Human being 
class_index: 3
--------

Question: What constellation represents a hunter with club and shield ?
class_name: Location 
class_index: 4
--------

Question: What year was Janet Jackson 's first album released ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What is TMJ ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the abbreviation of General Motors ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What movie did Madilyn Kahn star in with Gene Wilder ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What does e=mc2 mean ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who claimed he killed 4 , 280 buffalo as food for the crew building the Kansas Pacific Railway ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What constellation represents a hunter with club and shield ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What year was Janet Jackson 's first album released ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is TMJ ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:58:35 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12667'), (b'x-ratelimit-remaining-tokens', b'21338'), (b'x-ratelimit-reset-requests', b'2h53m17.747s'), (b'x-ratelimit-reset-tokens', b'17.324s'), (b'x-request-id', b'req_01hz0xp8fnfaqba5yb0fjqkccc'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b2896fcdb27ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about a specific term, which is likely an abbreviation.
class_name: ABBR
class_index: 0
data: {'text': 'What is the most popular sport in Japan ?', 'coarse_label': 1, 'fine_label': 17}
task_input: What is the most popular sport in Japan ?, corse_label: 1
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What is the most popular sport in Japan ?', 'examples_str': "Question: What is the abbreviation of General Motors ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What movie did Madilyn Kahn star in with Gene Wilder ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What does e=mc2 mean ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who claimed he killed 4 , 280 buffalo as food for the crew building the Kansas Pacific Railway ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What constellation represents a hunter with club and shield ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What year was Janet Jackson 's first album released ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is the abbreviation of General Motors ?
class_name: Abbreviation 
class_index: 0
--------

Question: What movie did Madilyn Kahn star in with Gene Wilder ?
class_name: Entity 
class_index: 1
--------

Question: What does e=mc2 mean ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who claimed he killed 4 , 280 buffalo as food for the crew building the Kansas Pacific Railway ?
class_name: Human being 
class_index: 3
--------

Question: What constellation represents a hunter with club and shield ?
class_name: Location 
class_index: 4
--------

Question: What year was Janet Jackson 's first album released ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What is the most popular sport in Japan ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the abbreviation of General Motors ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What movie did Madilyn Kahn star in with Gene Wilder ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What does e=mc2 mean ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who claimed he killed 4 , 280 buffalo as food for the crew building the Kansas Pacific Railway ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What constellation represents a hunter with club and shield ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What year was Janet Jackson 's first album released ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is the most popular sport in Japan ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:58:35 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12666'), (b'x-ratelimit-remaining-tokens', b'21011'), (b'x-ratelimit-reset-requests', b'2h53m23.779999999s'), (b'x-ratelimit-reset-tokens', b'17.978s'), (b'x-request-id', b'req_01hz0xp8pjfh4a77hh34mdt9fx'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b289713eb67ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the most popular sport in Japan, which is a general fact or concept, and not a specific entity or value.
class_name: Description and abstract concept
class_index: 2
data: {'text': 'What is a group of frogs called ?', 'coarse_label': 1, 'fine_label': 2}
task_input: What is a group of frogs called ?, corse_label: 1
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What is a group of frogs called ?', 'examples_str': "Question: What is the abbreviation of General Motors ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What movie did Madilyn Kahn star in with Gene Wilder ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What does e=mc2 mean ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who claimed he killed 4 , 280 buffalo as food for the crew building the Kansas Pacific Railway ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What constellation represents a hunter with club and shield ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What year was Janet Jackson 's first album released ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is the abbreviation of General Motors ?
class_name: Abbreviation 
class_index: 0
--------

Question: What movie did Madilyn Kahn star in with Gene Wilder ?
class_name: Entity 
class_index: 1
--------

Question: What does e=mc2 mean ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who claimed he killed 4 , 280 buffalo as food for the crew building the Kansas Pacific Railway ?
class_name: Human being 
class_index: 3
--------

Question: What constellation represents a hunter with club and shield ?
class_name: Location 
class_index: 4
--------

Question: What year was Janet Jackson 's first album released ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What is a group of frogs called ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the abbreviation of General Motors ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What movie did Madilyn Kahn star in with Gene Wilder ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What does e=mc2 mean ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who claimed he killed 4 , 280 buffalo as food for the crew building the Kansas Pacific Railway ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What constellation represents a hunter with club and shield ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What year was Janet Jackson 's first album released ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is a group of frogs called ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:58:35 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12665'), (b'x-ratelimit-remaining-tokens', b'20699'), (b'x-ratelimit-reset-requests', b'2h53m29.733s'), (b'x-ratelimit-reset-tokens', b'18.602s'), (b'x-request-id', b'req_01hz0xp8yyfzjaebdz28kg29ep'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28972e8237ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is asking about a collective noun for a group of frogs, which is a descriptive term.
class_name: Description and abstract concept
class_index: 2
data: {'text': 'What is the only artery that carries blue blood from the heart to the lungs ?', 'coarse_label': 1, 'fine_label': 3}
task_input: What is the only artery that carries blue blood from the heart to the lungs ?, corse_label: 1
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What is the only artery that carries blue blood from the heart to the lungs ?', 'examples_str': "Question: What is the abbreviation of General Motors ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What movie did Madilyn Kahn star in with Gene Wilder ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What does e=mc2 mean ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who claimed he killed 4 , 280 buffalo as food for the crew building the Kansas Pacific Railway ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What constellation represents a hunter with club and shield ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What year was Janet Jackson 's first album released ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is the abbreviation of General Motors ?
class_name: Abbreviation 
class_index: 0
--------

Question: What movie did Madilyn Kahn star in with Gene Wilder ?
class_name: Entity 
class_index: 1
--------

Question: What does e=mc2 mean ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who claimed he killed 4 , 280 buffalo as food for the crew building the Kansas Pacific Railway ?
class_name: Human being 
class_index: 3
--------

Question: What constellation represents a hunter with club and shield ?
class_name: Location 
class_index: 4
--------

Question: What year was Janet Jackson 's first album released ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What is the only artery that carries blue blood from the heart to the lungs ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the abbreviation of General Motors ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What movie did Madilyn Kahn star in with Gene Wilder ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What does e=mc2 mean ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who claimed he killed 4 , 280 buffalo as food for the crew building the Kansas Pacific Railway ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What constellation represents a hunter with club and shield ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What year was Janet Jackson 's first album released ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is the only artery that carries blue blood from the heart to the lungs ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 00:58:35 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12665'), (b'x-ratelimit-remaining-tokens', b'20786'), (b'x-ratelimit-reset-requests', b'2h53m29.766999999s'), (b'x-ratelimit-reset-tokens', b'18.428s'), (b'x-request-id', b'req_01hz0xp968erqb9bynh0ntytae'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b2897459537ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the abbreviation of General Motors ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What movie did Madilyn Kahn star in with Gene Wilder ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What does e=mc2 mean ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who claimed he killed 4 , 280 buffalo as food for the crew building the Kansas Pacific Railway ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What constellation represents a hunter with club and shield ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What year was Janet Jackson 's first album released ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is the only artery that carries blue blood from the heart to the lungs ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:58:37 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12664'), (b'x-ratelimit-remaining-tokens', b'21397'), (b'x-ratelimit-reset-requests', b'2h53m33.702s'), (b'x-ratelimit-reset-tokens', b'17.205s'), (b'x-request-id', b'req_01hz0xpb6sfaqvmxfkbpycg7t9'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b289814b0a7ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is about a specific biological fact, and the answer is a specific artery.
class_name: Entity
class_index: 1
data: {'text': 'What are the two houses of the Legislative branch ?', 'coarse_label': 1, 'fine_label': 13}
task_input: What are the two houses of the Legislative branch ?, corse_label: 1
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What are the two houses of the Legislative branch ?', 'examples_str': "Question: What is the abbreviation of General Motors ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What movie did Madilyn Kahn star in with Gene Wilder ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What does e=mc2 mean ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who claimed he killed 4 , 280 buffalo as food for the crew building the Kansas Pacific Railway ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What constellation represents a hunter with club and shield ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What year was Janet Jackson 's first album released ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is the abbreviation of General Motors ?
class_name: Abbreviation 
class_index: 0
--------

Question: What movie did Madilyn Kahn star in with Gene Wilder ?
class_name: Entity 
class_index: 1
--------

Question: What does e=mc2 mean ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who claimed he killed 4 , 280 buffalo as food for the crew building the Kansas Pacific Railway ?
class_name: Human being 
class_index: 3
--------

Question: What constellation represents a hunter with club and shield ?
class_name: Location 
class_index: 4
--------

Question: What year was Janet Jackson 's first album released ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What are the two houses of the Legislative branch ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the abbreviation of General Motors ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What movie did Madilyn Kahn star in with Gene Wilder ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What does e=mc2 mean ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who claimed he killed 4 , 280 buffalo as food for the crew building the Kansas Pacific Railway ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What constellation represents a hunter with club and shield ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What year was Janet Jackson 's first album released ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What are the two houses of the Legislative branch ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 00:58:37 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12664'), (b'x-ratelimit-remaining-tokens', b'21495'), (b'x-ratelimit-reset-requests', b'2h53m35.765999999s'), (b'x-ratelimit-reset-tokens', b'17.01s'), (b'x-request-id', b'req_01hz0xpbe4ehs91vyq2wfb4srp'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28982bc167ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the abbreviation of General Motors ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What movie did Madilyn Kahn star in with Gene Wilder ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What does e=mc2 mean ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who claimed he killed 4 , 280 buffalo as food for the crew building the Kansas Pacific Railway ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What constellation represents a hunter with club and shield ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What year was Janet Jackson 's first album released ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What are the two houses of the Legislative branch ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:58:40 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12663'), (b'x-ratelimit-remaining-tokens', b'22112'), (b'x-ratelimit-reset-requests', b'2h53m39.703s'), (b'x-ratelimit-reset-tokens', b'15.776s'), (b'x-request-id', b'req_01hz0xpdekezrtps125qkcgtrx'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b2898f9e447ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the structure of the Legislative branch, which is an abstract concept.
class_name: DESC
class_index: 2
```
data: {'text': 'What is an obtuse angle ?', 'coarse_label': 2, 'fine_label': 24}
task_input: What is an obtuse angle ?, corse_label: 2
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What is an obtuse angle ?', 'examples_str': "Question: What is the abbreviation of General Motors ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What movie did Madilyn Kahn star in with Gene Wilder ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What does e=mc2 mean ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who claimed he killed 4 , 280 buffalo as food for the crew building the Kansas Pacific Railway ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What constellation represents a hunter with club and shield ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What year was Janet Jackson 's first album released ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is the abbreviation of General Motors ?
class_name: Abbreviation 
class_index: 0
--------

Question: What movie did Madilyn Kahn star in with Gene Wilder ?
class_name: Entity 
class_index: 1
--------

Question: What does e=mc2 mean ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who claimed he killed 4 , 280 buffalo as food for the crew building the Kansas Pacific Railway ?
class_name: Human being 
class_index: 3
--------

Question: What constellation represents a hunter with club and shield ?
class_name: Location 
class_index: 4
--------

Question: What year was Janet Jackson 's first album released ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What is an obtuse angle ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the abbreviation of General Motors ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What movie did Madilyn Kahn star in with Gene Wilder ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What does e=mc2 mean ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who claimed he killed 4 , 280 buffalo as food for the crew building the Kansas Pacific Railway ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What constellation represents a hunter with club and shield ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What year was Janet Jackson 's first album released ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is an obtuse angle ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 00:58:40 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12663'), (b'x-ratelimit-remaining-tokens', b'22200'), (b'x-ratelimit-reset-requests', b'2h53m41.774999999s'), (b'x-ratelimit-reset-tokens', b'15.599s'), (b'x-request-id', b'req_01hz0xpdnnerqv2ck2tx75832r'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b289910f507ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the abbreviation of General Motors ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What movie did Madilyn Kahn star in with Gene Wilder ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What does e=mc2 mean ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who claimed he killed 4 , 280 buffalo as food for the crew building the Kansas Pacific Railway ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What constellation represents a hunter with club and shield ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What year was Janet Jackson 's first album released ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is an obtuse angle ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:58:42 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12662'), (b'x-ratelimit-remaining-tokens', b'22833'), (b'x-ratelimit-reset-requests', b'2h53m45.694s'), (b'x-ratelimit-reset-tokens', b'14.334s'), (b'x-request-id', b'req_01hz0xpfppfdrraw3rq5tkf0fj'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b2899e0a677ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is asking about the definition of an obtuse angle, which is a geometric concept.
class_name: Description and abstract concept
class_index: 2
data: {'text': 'What is metabolism ?', 'coarse_label': 2, 'fine_label': 24}
task_input: What is metabolism ?, corse_label: 2
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What is metabolism ?', 'examples_str': "Question: What is the abbreviation of General Motors ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What movie did Madilyn Kahn star in with Gene Wilder ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What does e=mc2 mean ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who claimed he killed 4 , 280 buffalo as food for the crew building the Kansas Pacific Railway ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What constellation represents a hunter with club and shield ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What year was Janet Jackson 's first album released ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is the abbreviation of General Motors ?
class_name: Abbreviation 
class_index: 0
--------

Question: What movie did Madilyn Kahn star in with Gene Wilder ?
class_name: Entity 
class_index: 1
--------

Question: What does e=mc2 mean ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who claimed he killed 4 , 280 buffalo as food for the crew building the Kansas Pacific Railway ?
class_name: Human being 
class_index: 3
--------

Question: What constellation represents a hunter with club and shield ?
class_name: Location 
class_index: 4
--------

Question: What year was Janet Jackson 's first album released ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What is metabolism ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the abbreviation of General Motors ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What movie did Madilyn Kahn star in with Gene Wilder ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What does e=mc2 mean ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who claimed he killed 4 , 280 buffalo as food for the crew building the Kansas Pacific Railway ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What constellation represents a hunter with club and shield ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What year was Janet Jackson 's first album released ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is metabolism ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 00:58:42 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12662'), (b'x-ratelimit-remaining-tokens', b'22944'), (b'x-ratelimit-reset-requests', b'2h53m47.719999999s'), (b'x-ratelimit-reset-tokens', b'14.111s'), (b'x-request-id', b'req_01hz0xpfzfenwvxvwt10gpj2yt'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b2899fcbd27ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the abbreviation of General Motors ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What movie did Madilyn Kahn star in with Gene Wilder ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What does e=mc2 mean ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who claimed he killed 4 , 280 buffalo as food for the crew building the Kansas Pacific Railway ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What constellation represents a hunter with club and shield ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What year was Janet Jackson 's first album released ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is metabolism ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:58:44 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12661'), (b'x-ratelimit-remaining-tokens', b'23570'), (b'x-ratelimit-reset-requests', b'2h53m51.655s'), (b'x-ratelimit-reset-tokens', b'12.859s'), (b'x-request-id', b'req_01hz0xpj00far85f8429cdqstw'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b289acad897ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is asking about a general concept or idea, which is typically described or defined.
class_name: Description and abstract concept
class_index: 2
data: {'text': 'What is phenylalanine ?', 'coarse_label': 2, 'fine_label': 24}
task_input: What is phenylalanine ?, corse_label: 2
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What is phenylalanine ?', 'examples_str': "Question: What is the abbreviation of General Motors ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What movie did Madilyn Kahn star in with Gene Wilder ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What does e=mc2 mean ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who claimed he killed 4 , 280 buffalo as food for the crew building the Kansas Pacific Railway ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What constellation represents a hunter with club and shield ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What year was Janet Jackson 's first album released ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is the abbreviation of General Motors ?
class_name: Abbreviation 
class_index: 0
--------

Question: What movie did Madilyn Kahn star in with Gene Wilder ?
class_name: Entity 
class_index: 1
--------

Question: What does e=mc2 mean ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who claimed he killed 4 , 280 buffalo as food for the crew building the Kansas Pacific Railway ?
class_name: Human being 
class_index: 3
--------

Question: What constellation represents a hunter with club and shield ?
class_name: Location 
class_index: 4
--------

Question: What year was Janet Jackson 's first album released ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What is phenylalanine ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the abbreviation of General Motors ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What movie did Madilyn Kahn star in with Gene Wilder ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What does e=mc2 mean ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who claimed he killed 4 , 280 buffalo as food for the crew building the Kansas Pacific Railway ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What constellation represents a hunter with club and shield ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What year was Janet Jackson 's first album released ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is phenylalanine ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 00:58:44 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12661'), (b'x-ratelimit-remaining-tokens', b'23662'), (b'x-ratelimit-reset-requests', b'2h53m53.762999999s'), (b'x-ratelimit-reset-tokens', b'12.675s'), (b'x-request-id', b'req_01hz0xpj7ee7qs2x43haq9cbex'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b289ae2e9a7ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the abbreviation of General Motors ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What movie did Madilyn Kahn star in with Gene Wilder ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What does e=mc2 mean ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who claimed he killed 4 , 280 buffalo as food for the crew building the Kansas Pacific Railway ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What constellation represents a hunter with club and shield ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What year was Janet Jackson 's first album released ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is phenylalanine ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:58:47 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12660'), (b'x-ratelimit-remaining-tokens', b'24288'), (b'x-ratelimit-reset-requests', b'2h53m57.698s'), (b'x-ratelimit-reset-tokens', b'11.423s'), (b'x-request-id', b'req_01hz0xpm80ftnrj8m444s13zad'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b289bb08d17ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is asking about a chemical compound, which is a type of abstract concept.
class_name: DESC
class_index: 2
data: {'text': 'What are triglycerides ?', 'coarse_label': 2, 'fine_label': 24}
task_input: What are triglycerides ?, corse_label: 2
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What are triglycerides ?', 'examples_str': "Question: What is the abbreviation of General Motors ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What movie did Madilyn Kahn star in with Gene Wilder ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What does e=mc2 mean ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who claimed he killed 4 , 280 buffalo as food for the crew building the Kansas Pacific Railway ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What constellation represents a hunter with club and shield ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What year was Janet Jackson 's first album released ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is the abbreviation of General Motors ?
class_name: Abbreviation 
class_index: 0
--------

Question: What movie did Madilyn Kahn star in with Gene Wilder ?
class_name: Entity 
class_index: 1
--------

Question: What does e=mc2 mean ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who claimed he killed 4 , 280 buffalo as food for the crew building the Kansas Pacific Railway ?
class_name: Human being 
class_index: 3
--------

Question: What constellation represents a hunter with club and shield ?
class_name: Location 
class_index: 4
--------

Question: What year was Janet Jackson 's first album released ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What are triglycerides ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the abbreviation of General Motors ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What movie did Madilyn Kahn star in with Gene Wilder ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What does e=mc2 mean ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who claimed he killed 4 , 280 buffalo as food for the crew building the Kansas Pacific Railway ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What constellation represents a hunter with club and shield ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What year was Janet Jackson 's first album released ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What are triglycerides ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 00:58:47 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12660'), (b'x-ratelimit-remaining-tokens', b'24391'), (b'x-ratelimit-reset-requests', b'2h53m59.745s'), (b'x-ratelimit-reset-tokens', b'11.218s'), (b'x-request-id', b'req_01hz0xpmfzew58827ea6em9f63'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b289bcaa197ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the abbreviation of General Motors ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What movie did Madilyn Kahn star in with Gene Wilder ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What does e=mc2 mean ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who claimed he killed 4 , 280 buffalo as food for the crew building the Kansas Pacific Railway ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What constellation represents a hunter with club and shield ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What year was Janet Jackson 's first album released ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What are triglycerides ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:58:49 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12659'), (b'x-ratelimit-remaining-tokens', b'25021'), (b'x-ratelimit-reset-requests', b'2h54m3.669s'), (b'x-ratelimit-reset-tokens', b'9.957s'), (b'x-request-id', b'req_01hz0xppgvfg9t5s0b2ga8rnf7'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b289c9abd77ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is asking about a concept or idea, which is typically described or defined in a scientific or medical context.
class_name: Description and abstract concept
class_index: 2
data: {'text': "What person 's head is on a dime ?", 'coarse_label': 3, 'fine_label': 29}
task_input: What person 's head is on a dime ?, corse_label: 3
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': "What person 's head is on a dime ?", 'examples_str': "Question: What is the abbreviation of General Motors ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What movie did Madilyn Kahn star in with Gene Wilder ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What does e=mc2 mean ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who claimed he killed 4 , 280 buffalo as food for the crew building the Kansas Pacific Railway ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What constellation represents a hunter with club and shield ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What year was Janet Jackson 's first album released ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is the abbreviation of General Motors ?
class_name: Abbreviation 
class_index: 0
--------

Question: What movie did Madilyn Kahn star in with Gene Wilder ?
class_name: Entity 
class_index: 1
--------

Question: What does e=mc2 mean ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who claimed he killed 4 , 280 buffalo as food for the crew building the Kansas Pacific Railway ?
class_name: Human being 
class_index: 3
--------

Question: What constellation represents a hunter with club and shield ?
class_name: Location 
class_index: 4
--------

Question: What year was Janet Jackson 's first album released ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What person 's head is on a dime ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the abbreviation of General Motors ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What movie did Madilyn Kahn star in with Gene Wilder ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What does e=mc2 mean ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who claimed he killed 4 , 280 buffalo as food for the crew building the Kansas Pacific Railway ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What constellation represents a hunter with club and shield ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What year was Janet Jackson 's first album released ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What person 's head is on a dime ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 00:58:49 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12659'), (b'x-ratelimit-remaining-tokens', b'25172'), (b'x-ratelimit-reset-requests', b'2h54m5.635s'), (b'x-ratelimit-reset-tokens', b'9.656s'), (b'x-request-id', b'req_01hz0xppw9fdsbyng05e7f4thy'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b289cbfd837ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the abbreviation of General Motors ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What movie did Madilyn Kahn star in with Gene Wilder ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What does e=mc2 mean ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who claimed he killed 4 , 280 buffalo as food for the crew building the Kansas Pacific Railway ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What constellation represents a hunter with club and shield ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What year was Janet Jackson 's first album released ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What person 's head is on a dime ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:58:51 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12658'), (b'x-ratelimit-remaining-tokens', b'25789'), (b'x-ratelimit-reset-requests', b'2h54m9.580999999s'), (b'x-ratelimit-reset-tokens', b'8.422s'), (b'x-request-id', b'req_01hz0xprwfevv9y2mcjjs4bj9c'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b289d8cf257ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about a person, specifically whose head is on a dime.
class_name: Human being
class_index: 3
data: {'text': 'What chain store is headquartered in Bentonville , Arkansas ?', 'coarse_label': 3, 'fine_label': 28}
task_input: What chain store is headquartered in Bentonville , Arkansas ?, corse_label: 3
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What chain store is headquartered in Bentonville , Arkansas ?', 'examples_str': "Question: What is the abbreviation of General Motors ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What movie did Madilyn Kahn star in with Gene Wilder ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What does e=mc2 mean ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who claimed he killed 4 , 280 buffalo as food for the crew building the Kansas Pacific Railway ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What constellation represents a hunter with club and shield ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What year was Janet Jackson 's first album released ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is the abbreviation of General Motors ?
class_name: Abbreviation 
class_index: 0
--------

Question: What movie did Madilyn Kahn star in with Gene Wilder ?
class_name: Entity 
class_index: 1
--------

Question: What does e=mc2 mean ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who claimed he killed 4 , 280 buffalo as food for the crew building the Kansas Pacific Railway ?
class_name: Human being 
class_index: 3
--------

Question: What constellation represents a hunter with club and shield ?
class_name: Location 
class_index: 4
--------

Question: What year was Janet Jackson 's first album released ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What chain store is headquartered in Bentonville , Arkansas ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the abbreviation of General Motors ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What movie did Madilyn Kahn star in with Gene Wilder ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What does e=mc2 mean ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who claimed he killed 4 , 280 buffalo as food for the crew building the Kansas Pacific Railway ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What constellation represents a hunter with club and shield ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What year was Janet Jackson 's first album released ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What chain store is headquartered in Bentonville , Arkansas ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 00:58:51 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12658'), (b'x-ratelimit-remaining-tokens', b'25911'), (b'x-ratelimit-reset-requests', b'2h54m11.705s'), (b'x-ratelimit-reset-tokens', b'8.177s'), (b'x-request-id', b'req_01hz0xps5qeq3bksh65c27japp'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b289daa8c57ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the abbreviation of General Motors ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What movie did Madilyn Kahn star in with Gene Wilder ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What does e=mc2 mean ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who claimed he killed 4 , 280 buffalo as food for the crew building the Kansas Pacific Railway ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What constellation represents a hunter with club and shield ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What year was Janet Jackson 's first album released ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What chain store is headquartered in Bentonville , Arkansas ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:58:54 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12657'), (b'x-ratelimit-remaining-tokens', b'26526'), (b'x-ratelimit-reset-requests', b'2h54m15.643s'), (b'x-ratelimit-reset-tokens', b'6.948s'), (b'x-request-id', b'req_01hz0xpv65ew5tfnn10kf2my5m'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b289e78a257ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about a specific chain store, which is typically represented by its name or abbreviation.
class_name: ABBR
class_index: 0
data: {'text': 'Who invented the instant Polaroid camera ?', 'coarse_label': 3, 'fine_label': 29}
task_input: Who invented the instant Polaroid camera ?, corse_label: 3
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'Who invented the instant Polaroid camera ?', 'examples_str': "Question: What is the abbreviation of General Motors ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What movie did Madilyn Kahn star in with Gene Wilder ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What does e=mc2 mean ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who claimed he killed 4 , 280 buffalo as food for the crew building the Kansas Pacific Railway ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What constellation represents a hunter with club and shield ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What year was Janet Jackson 's first album released ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is the abbreviation of General Motors ?
class_name: Abbreviation 
class_index: 0
--------

Question: What movie did Madilyn Kahn star in with Gene Wilder ?
class_name: Entity 
class_index: 1
--------

Question: What does e=mc2 mean ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who claimed he killed 4 , 280 buffalo as food for the crew building the Kansas Pacific Railway ?
class_name: Human being 
class_index: 3
--------

Question: What constellation represents a hunter with club and shield ?
class_name: Location 
class_index: 4
--------

Question: What year was Janet Jackson 's first album released ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Who invented the instant Polaroid camera ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the abbreviation of General Motors ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What movie did Madilyn Kahn star in with Gene Wilder ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What does e=mc2 mean ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who claimed he killed 4 , 280 buffalo as food for the crew building the Kansas Pacific Railway ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What constellation represents a hunter with club and shield ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What year was Janet Jackson 's first album released ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Who invented the instant Polaroid camera ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 00:58:54 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12657'), (b'x-ratelimit-remaining-tokens', b'26622'), (b'x-ratelimit-reset-requests', b'2h54m17.758s'), (b'x-ratelimit-reset-tokens', b'6.755s'), (b'x-request-id', b'req_01hz0xpvdrfartgn3z8bybs9vj'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b289e90bc17ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the abbreviation of General Motors ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What movie did Madilyn Kahn star in with Gene Wilder ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What does e=mc2 mean ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who claimed he killed 4 , 280 buffalo as food for the crew building the Kansas Pacific Railway ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What constellation represents a hunter with club and shield ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What year was Janet Jackson 's first album released ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Who invented the instant Polaroid camera ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:58:56 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12656'), (b'x-ratelimit-remaining-tokens', b'27240'), (b'x-ratelimit-reset-requests', b'2h54m21.7s'), (b'x-ratelimit-reset-tokens', b'5.52s'), (b'x-request-id', b'req_01hz0xpxe2e8xrshhe4a31sr1r'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b289f5de917ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question asks about the inventor of the instant Polaroid camera, which is a specific person, so it's likely to be a human being.
class_name: HUM
class_index: 3
data: {'text': "Who wrote `` The Divine Comedy '' ?", 'coarse_label': 3, 'fine_label': 29}
task_input: Who wrote `` The Divine Comedy '' ?, corse_label: 3
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': "Who wrote `` The Divine Comedy '' ?", 'examples_str': "Question: What is the abbreviation of General Motors ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What movie did Madilyn Kahn star in with Gene Wilder ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What does e=mc2 mean ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who claimed he killed 4 , 280 buffalo as food for the crew building the Kansas Pacific Railway ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What constellation represents a hunter with club and shield ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What year was Janet Jackson 's first album released ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is the abbreviation of General Motors ?
class_name: Abbreviation 
class_index: 0
--------

Question: What movie did Madilyn Kahn star in with Gene Wilder ?
class_name: Entity 
class_index: 1
--------

Question: What does e=mc2 mean ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who claimed he killed 4 , 280 buffalo as food for the crew building the Kansas Pacific Railway ?
class_name: Human being 
class_index: 3
--------

Question: What constellation represents a hunter with club and shield ?
class_name: Location 
class_index: 4
--------

Question: What year was Janet Jackson 's first album released ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Who wrote `` The Divine Comedy '' ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the abbreviation of General Motors ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What movie did Madilyn Kahn star in with Gene Wilder ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What does e=mc2 mean ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who claimed he killed 4 , 280 buffalo as food for the crew building the Kansas Pacific Railway ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What constellation represents a hunter with club and shield ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What year was Janet Jackson 's first album released ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Who wrote `` The Divine Comedy '' ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 00:58:56 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12656'), (b'x-ratelimit-remaining-tokens', b'27334'), (b'x-ratelimit-reset-requests', b'2h54m23.745s'), (b'x-ratelimit-reset-tokens', b'5.332s'), (b'x-request-id', b'req_01hz0xpxp3fzk8hxd5c35a2zwj'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b289f77fca7ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the abbreviation of General Motors ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What movie did Madilyn Kahn star in with Gene Wilder ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What does e=mc2 mean ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who claimed he killed 4 , 280 buffalo as food for the crew building the Kansas Pacific Railway ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What constellation represents a hunter with club and shield ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What year was Janet Jackson 's first album released ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Who wrote `` The Divine Comedy '' ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:58:58 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12655'), (b'x-ratelimit-remaining-tokens', b'27956'), (b'x-ratelimit-reset-requests', b'2h54m27.680999999s'), (b'x-ratelimit-reset-tokens', b'4.088s'), (b'x-request-id', b'req_01hz0xpzpke9sr81zcgwgjrx2n'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28a045a787ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the author of a famous book, which is typically a human being.
class_name: HUM
class_index: 3
```
data: {'text': 'Where is the Orinoco River ?', 'coarse_label': 4, 'fine_label': 35}
task_input: Where is the Orinoco River ?, corse_label: 4
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'Where is the Orinoco River ?', 'examples_str': "Question: What is the abbreviation of General Motors ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What movie did Madilyn Kahn star in with Gene Wilder ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What does e=mc2 mean ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who claimed he killed 4 , 280 buffalo as food for the crew building the Kansas Pacific Railway ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What constellation represents a hunter with club and shield ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What year was Janet Jackson 's first album released ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is the abbreviation of General Motors ?
class_name: Abbreviation 
class_index: 0
--------

Question: What movie did Madilyn Kahn star in with Gene Wilder ?
class_name: Entity 
class_index: 1
--------

Question: What does e=mc2 mean ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who claimed he killed 4 , 280 buffalo as food for the crew building the Kansas Pacific Railway ?
class_name: Human being 
class_index: 3
--------

Question: What constellation represents a hunter with club and shield ?
class_name: Location 
class_index: 4
--------

Question: What year was Janet Jackson 's first album released ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Where is the Orinoco River ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the abbreviation of General Motors ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What movie did Madilyn Kahn star in with Gene Wilder ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What does e=mc2 mean ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who claimed he killed 4 , 280 buffalo as food for the crew building the Kansas Pacific Railway ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What constellation represents a hunter with club and shield ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What year was Janet Jackson 's first album released ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Where is the Orinoco River ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 00:58:58 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12655'), (b'x-ratelimit-remaining-tokens', b'28053'), (b'x-ratelimit-reset-requests', b'2h54m29.75s'), (b'x-ratelimit-reset-tokens', b'3.894s'), (b'x-request-id', b'req_01hz0xpzyefzkbdx2n40gapd41'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28a05fbdc7ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the abbreviation of General Motors ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What movie did Madilyn Kahn star in with Gene Wilder ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What does e=mc2 mean ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who claimed he killed 4 , 280 buffalo as food for the crew building the Kansas Pacific Railway ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What constellation represents a hunter with club and shield ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What year was Janet Jackson 's first album released ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Where is the Orinoco River ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:59:01 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12654'), (b'x-ratelimit-remaining-tokens', b'28676'), (b'x-ratelimit-reset-requests', b'2h54m33.684999999s'), (b'x-ratelimit-reset-tokens', b'2.647s'), (b'x-request-id', b'req_01hz0xq1yzfgaa74k5e5bwwv5m'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28a12ee8b7ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking for the location of the Orinoco River, which is a geographical feature.
class_name: Location
class_index: 4
data: {'text': 'Where are the Rocky Mountains ?', 'coarse_label': 4, 'fine_label': 34}
task_input: Where are the Rocky Mountains ?, corse_label: 4
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'Where are the Rocky Mountains ?', 'examples_str': "Question: What is the abbreviation of General Motors ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What movie did Madilyn Kahn star in with Gene Wilder ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What does e=mc2 mean ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who claimed he killed 4 , 280 buffalo as food for the crew building the Kansas Pacific Railway ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What constellation represents a hunter with club and shield ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What year was Janet Jackson 's first album released ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is the abbreviation of General Motors ?
class_name: Abbreviation 
class_index: 0
--------

Question: What movie did Madilyn Kahn star in with Gene Wilder ?
class_name: Entity 
class_index: 1
--------

Question: What does e=mc2 mean ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who claimed he killed 4 , 280 buffalo as food for the crew building the Kansas Pacific Railway ?
class_name: Human being 
class_index: 3
--------

Question: What constellation represents a hunter with club and shield ?
class_name: Location 
class_index: 4
--------

Question: What year was Janet Jackson 's first album released ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Where are the Rocky Mountains ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the abbreviation of General Motors ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What movie did Madilyn Kahn star in with Gene Wilder ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What does e=mc2 mean ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who claimed he killed 4 , 280 buffalo as food for the crew building the Kansas Pacific Railway ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What constellation represents a hunter with club and shield ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What year was Janet Jackson 's first album released ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Where are the Rocky Mountains ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 00:59:01 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12654'), (b'x-ratelimit-remaining-tokens', b'28762'), (b'x-ratelimit-reset-requests', b'2h54m35.775999999s'), (b'x-ratelimit-reset-tokens', b'2.476s'), (b'x-request-id', b'req_01hz0xq260e9sr6yamn5rfc4sk'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28a144fc57ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the abbreviation of General Motors ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What movie did Madilyn Kahn star in with Gene Wilder ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What does e=mc2 mean ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who claimed he killed 4 , 280 buffalo as food for the crew building the Kansas Pacific Railway ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What constellation represents a hunter with club and shield ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What year was Janet Jackson 's first album released ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Where are the Rocky Mountains ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:59:03 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12653'), (b'x-ratelimit-remaining-tokens', b'29379'), (b'x-ratelimit-reset-requests', b'2h54m39.723s'), (b'x-ratelimit-reset-tokens', b'1.241s'), (b'x-request-id', b'req_01hz0xq465fe1v4dxpzqjmdw66'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28a211b1d7ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking for the location of the Rocky Mountains, which is a geographical feature.
class_name: Location
class_index: 4
data: {'text': 'What continent is Egypt on ?', 'coarse_label': 4, 'fine_label': 35}
task_input: What continent is Egypt on ?, corse_label: 4
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What continent is Egypt on ?', 'examples_str': "Question: What is the abbreviation of General Motors ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What movie did Madilyn Kahn star in with Gene Wilder ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What does e=mc2 mean ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who claimed he killed 4 , 280 buffalo as food for the crew building the Kansas Pacific Railway ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What constellation represents a hunter with club and shield ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What year was Janet Jackson 's first album released ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is the abbreviation of General Motors ?
class_name: Abbreviation 
class_index: 0
--------

Question: What movie did Madilyn Kahn star in with Gene Wilder ?
class_name: Entity 
class_index: 1
--------

Question: What does e=mc2 mean ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who claimed he killed 4 , 280 buffalo as food for the crew building the Kansas Pacific Railway ?
class_name: Human being 
class_index: 3
--------

Question: What constellation represents a hunter with club and shield ?
class_name: Location 
class_index: 4
--------

Question: What year was Janet Jackson 's first album released ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What continent is Egypt on ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the abbreviation of General Motors ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What movie did Madilyn Kahn star in with Gene Wilder ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What does e=mc2 mean ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who claimed he killed 4 , 280 buffalo as food for the crew building the Kansas Pacific Railway ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What constellation represents a hunter with club and shield ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What year was Janet Jackson 's first album released ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What continent is Egypt on ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 00:59:03 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12653'), (b'x-ratelimit-remaining-tokens', b'29496'), (b'x-ratelimit-reset-requests', b'2h54m41.719999999s'), (b'x-ratelimit-reset-tokens', b'1.008s'), (b'x-request-id', b'req_01hz0xq4exfe1vaky47b53vf32'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28a22ec747ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the abbreviation of General Motors ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What movie did Madilyn Kahn star in with Gene Wilder ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What does e=mc2 mean ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who claimed he killed 4 , 280 buffalo as food for the crew building the Kansas Pacific Railway ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What constellation represents a hunter with club and shield ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What year was Janet Jackson 's first album released ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What continent is Egypt on ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:59:05 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12652'), (b'x-ratelimit-remaining-tokens', b'29591'), (b'x-ratelimit-reset-requests', b'2h54m45.652s'), (b'x-ratelimit-reset-tokens', b'818ms'), (b'x-request-id', b'req_01hz0xq6fjes2tdw5ktsr5ysgp'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28a2fcf137ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the geographical location of Egypt, which is typically classified as a continent.
class_name: LOC
class_index: 4
data: {'text': 'In Poland , where do most people live ?', 'coarse_label': 4, 'fine_label': 35}
task_input: In Poland , where do most people live ?, corse_label: 4
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'In Poland , where do most people live ?', 'examples_str': "Question: What is the abbreviation of General Motors ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What movie did Madilyn Kahn star in with Gene Wilder ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What does e=mc2 mean ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who claimed he killed 4 , 280 buffalo as food for the crew building the Kansas Pacific Railway ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What constellation represents a hunter with club and shield ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What year was Janet Jackson 's first album released ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is the abbreviation of General Motors ?
class_name: Abbreviation 
class_index: 0
--------

Question: What movie did Madilyn Kahn star in with Gene Wilder ?
class_name: Entity 
class_index: 1
--------

Question: What does e=mc2 mean ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who claimed he killed 4 , 280 buffalo as food for the crew building the Kansas Pacific Railway ?
class_name: Human being 
class_index: 3
--------

Question: What constellation represents a hunter with club and shield ?
class_name: Location 
class_index: 4
--------

Question: What year was Janet Jackson 's first album released ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: In Poland , where do most people live ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the abbreviation of General Motors ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What movie did Madilyn Kahn star in with Gene Wilder ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What does e=mc2 mean ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who claimed he killed 4 , 280 buffalo as food for the crew building the Kansas Pacific Railway ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What constellation represents a hunter with club and shield ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What year was Janet Jackson 's first album released ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: In Poland , where do most people live ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 00:59:05 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12652'), (b'x-ratelimit-remaining-tokens', b'29593'), (b'x-ratelimit-reset-requests', b'2h54m47.775999999s'), (b'x-ratelimit-reset-tokens', b'813ms'), (b'x-request-id', b'req_01hz0xq6pkeq3rf81z2ntjbryx'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28a3138447ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the abbreviation of General Motors ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What movie did Madilyn Kahn star in with Gene Wilder ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What does e=mc2 mean ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who claimed he killed 4 , 280 buffalo as food for the crew building the Kansas Pacific Railway ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What constellation represents a hunter with club and shield ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What year was Janet Jackson 's first album released ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: In Poland , where do most people live ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:59:08 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12651'), (b'x-ratelimit-remaining-tokens', b'29589'), (b'x-ratelimit-reset-requests', b'2h54m51.721s'), (b'x-ratelimit-reset-tokens', b'822ms'), (b'x-request-id', b'req_01hz0xq8ptfh5vp38s861pdc3s'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28a3e0a117ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the location of where most people live in Poland, which is a specific geographic location.
class_name: Location
class_index: 4
data: {'text': 'What is the gestation period for a cat ?', 'coarse_label': 5, 'fine_label': 44}
task_input: What is the gestation period for a cat ?, corse_label: 5
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What is the gestation period for a cat ?', 'examples_str': "Question: What is the abbreviation of General Motors ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What movie did Madilyn Kahn star in with Gene Wilder ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What does e=mc2 mean ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who claimed he killed 4 , 280 buffalo as food for the crew building the Kansas Pacific Railway ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What constellation represents a hunter with club and shield ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What year was Janet Jackson 's first album released ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is the abbreviation of General Motors ?
class_name: Abbreviation 
class_index: 0
--------

Question: What movie did Madilyn Kahn star in with Gene Wilder ?
class_name: Entity 
class_index: 1
--------

Question: What does e=mc2 mean ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who claimed he killed 4 , 280 buffalo as food for the crew building the Kansas Pacific Railway ?
class_name: Human being 
class_index: 3
--------

Question: What constellation represents a hunter with club and shield ?
class_name: Location 
class_index: 4
--------

Question: What year was Janet Jackson 's first album released ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What is the gestation period for a cat ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the abbreviation of General Motors ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What movie did Madilyn Kahn star in with Gene Wilder ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What does e=mc2 mean ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who claimed he killed 4 , 280 buffalo as food for the crew building the Kansas Pacific Railway ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What constellation represents a hunter with club and shield ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What year was Janet Jackson 's first album released ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is the gestation period for a cat ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 00:59:08 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12651'), (b'x-ratelimit-remaining-tokens', b'29592'), (b'x-ratelimit-reset-requests', b'2h54m53.742s'), (b'x-ratelimit-reset-tokens', b'815ms'), (b'x-request-id', b'req_01hz0xq8yxftpv07sg3jjeaz35'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28a3fab4c7ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the abbreviation of General Motors ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What movie did Madilyn Kahn star in with Gene Wilder ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What does e=mc2 mean ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who claimed he killed 4 , 280 buffalo as food for the crew building the Kansas Pacific Railway ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What constellation represents a hunter with club and shield ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What year was Janet Jackson 's first album released ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is the gestation period for a cat ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:59:10 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12650'), (b'x-ratelimit-remaining-tokens', b'29588'), (b'x-ratelimit-reset-requests', b'2h54m57.680999999s'), (b'x-ratelimit-reset-tokens', b'824ms'), (b'x-request-id', b'req_01hz0xqazafgrbhjnf9efah29e'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28a4c8daa7ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the duration of a biological process, which is a characteristic often associated with numeric values.
class_name: "Numeric value"
class_index: 5
data: {'text': 'How fast is the speed of light ?', 'coarse_label': 5, 'fine_label': 46}
task_input: How fast is the speed of light ?, corse_label: 5
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'How fast is the speed of light ?', 'examples_str': "Question: What is the abbreviation of General Motors ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What movie did Madilyn Kahn star in with Gene Wilder ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What does e=mc2 mean ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who claimed he killed 4 , 280 buffalo as food for the crew building the Kansas Pacific Railway ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What constellation represents a hunter with club and shield ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What year was Janet Jackson 's first album released ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is the abbreviation of General Motors ?
class_name: Abbreviation 
class_index: 0
--------

Question: What movie did Madilyn Kahn star in with Gene Wilder ?
class_name: Entity 
class_index: 1
--------

Question: What does e=mc2 mean ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who claimed he killed 4 , 280 buffalo as food for the crew building the Kansas Pacific Railway ?
class_name: Human being 
class_index: 3
--------

Question: What constellation represents a hunter with club and shield ?
class_name: Location 
class_index: 4
--------

Question: What year was Janet Jackson 's first album released ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: How fast is the speed of light ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the abbreviation of General Motors ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What movie did Madilyn Kahn star in with Gene Wilder ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What does e=mc2 mean ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who claimed he killed 4 , 280 buffalo as food for the crew building the Kansas Pacific Railway ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What constellation represents a hunter with club and shield ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What year was Janet Jackson 's first album released ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: How fast is the speed of light ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 00:59:10 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12650'), (b'x-ratelimit-remaining-tokens', b'29582'), (b'x-ratelimit-reset-requests', b'2h54m59.777999999s'), (b'x-ratelimit-reset-tokens', b'835ms'), (b'x-request-id', b'req_01hz0xqb68fh5vxygxmz3m3mza'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28a4dfec17ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the abbreviation of General Motors ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What movie did Madilyn Kahn star in with Gene Wilder ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What does e=mc2 mean ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who claimed he killed 4 , 280 buffalo as food for the crew building the Kansas Pacific Railway ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What constellation represents a hunter with club and shield ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What year was Janet Jackson 's first album released ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: How fast is the speed of light ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:59:12 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12649'), (b'x-ratelimit-remaining-tokens', b'29590'), (b'x-ratelimit-reset-requests', b'2h55m3.716s'), (b'x-ratelimit-reset-tokens', b'820ms'), (b'x-request-id', b'req_01hz0xqd6qes3rd4ny83f5795x'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28a5ad95f7ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about a physical constant, which is a fundamental concept in physics.
class_name: Description and abstract concept
class_index: 2
data: {'text': 'What date was Dwight D. Eisenhower born ?', 'coarse_label': 5, 'fine_label': 39}
task_input: What date was Dwight D. Eisenhower born ?, corse_label: 5
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What date was Dwight D. Eisenhower born ?', 'examples_str': "Question: What is the abbreviation of General Motors ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What movie did Madilyn Kahn star in with Gene Wilder ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What does e=mc2 mean ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who claimed he killed 4 , 280 buffalo as food for the crew building the Kansas Pacific Railway ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What constellation represents a hunter with club and shield ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What year was Janet Jackson 's first album released ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is the abbreviation of General Motors ?
class_name: Abbreviation 
class_index: 0
--------

Question: What movie did Madilyn Kahn star in with Gene Wilder ?
class_name: Entity 
class_index: 1
--------

Question: What does e=mc2 mean ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who claimed he killed 4 , 280 buffalo as food for the crew building the Kansas Pacific Railway ?
class_name: Human being 
class_index: 3
--------

Question: What constellation represents a hunter with club and shield ?
class_name: Location 
class_index: 4
--------

Question: What year was Janet Jackson 's first album released ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What date was Dwight D. Eisenhower born ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the abbreviation of General Motors ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What movie did Madilyn Kahn star in with Gene Wilder ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What does e=mc2 mean ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who claimed he killed 4 , 280 buffalo as food for the crew building the Kansas Pacific Railway ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What constellation represents a hunter with club and shield ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What year was Janet Jackson 's first album released ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What date was Dwight D. Eisenhower born ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 00:59:12 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12649'), (b'x-ratelimit-remaining-tokens', b'29596'), (b'x-ratelimit-reset-requests', b'2h55m5.764999999s'), (b'x-ratelimit-reset-tokens', b'807ms'), (b'x-request-id', b'req_01hz0xqde3fa8rvt94x1yjprfr'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28a5c5af97ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the abbreviation of General Motors ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What movie did Madilyn Kahn star in with Gene Wilder ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What does e=mc2 mean ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who claimed he killed 4 , 280 buffalo as food for the crew building the Kansas Pacific Railway ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What constellation represents a hunter with club and shield ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What year was Janet Jackson 's first album released ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What date was Dwight D. Eisenhower born ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:59:14 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12648'), (b'x-ratelimit-remaining-tokens', b'29588'), (b'x-ratelimit-reset-requests', b'2h55m9.71s'), (b'x-ratelimit-reset-tokens', b'824ms'), (b'x-request-id', b'req_01hz0xqfeaehttgj8bm15sq44h'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28a692dfb7ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking for a specific date of birth, which is a numeric value.
class_name: Numeric value
class_index: 5
```
data: {'text': 'How much of an apple is water ?', 'coarse_label': 5, 'fine_label': 38}
task_input: How much of an apple is water ?, corse_label: 5
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'How much of an apple is water ?', 'examples_str': "Question: What is the abbreviation of General Motors ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What movie did Madilyn Kahn star in with Gene Wilder ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What does e=mc2 mean ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who claimed he killed 4 , 280 buffalo as food for the crew building the Kansas Pacific Railway ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What constellation represents a hunter with club and shield ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What year was Janet Jackson 's first album released ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What is the abbreviation of General Motors ?
class_name: Abbreviation 
class_index: 0
--------

Question: What movie did Madilyn Kahn star in with Gene Wilder ?
class_name: Entity 
class_index: 1
--------

Question: What does e=mc2 mean ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who claimed he killed 4 , 280 buffalo as food for the crew building the Kansas Pacific Railway ?
class_name: Human being 
class_index: 3
--------

Question: What constellation represents a hunter with club and shield ?
class_name: Location 
class_index: 4
--------

Question: What year was Janet Jackson 's first album released ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: How much of an apple is water ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the abbreviation of General Motors ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What movie did Madilyn Kahn star in with Gene Wilder ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What does e=mc2 mean ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who claimed he killed 4 , 280 buffalo as food for the crew building the Kansas Pacific Railway ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What constellation represents a hunter with club and shield ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What year was Janet Jackson 's first album released ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: How much of an apple is water ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 00:59:15 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12648'), (b'x-ratelimit-remaining-tokens', b'29636'), (b'x-ratelimit-reset-requests', b'2h55m11.658999999s'), (b'x-ratelimit-reset-tokens', b'728ms'), (b'x-request-id', b'req_01hz0xqfs0fe283dvmz68k5agx'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28a6b4fda7ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What is the abbreviation of General Motors ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What movie did Madilyn Kahn star in with Gene Wilder ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What does e=mc2 mean ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who claimed he killed 4 , 280 buffalo as food for the crew building the Kansas Pacific Railway ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What constellation represents a hunter with club and shield ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What year was Janet Jackson 's first album released ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: How much of an apple is water ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:59:17 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12647'), (b'x-ratelimit-remaining-tokens', b'29591'), (b'x-ratelimit-reset-requests', b'2h55m15.591s'), (b'x-ratelimit-reset-tokens', b'818ms'), (b'x-request-id', b'req_01hz0xqhsmfvcscw17snxcykx8'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28a783a717ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is asking about the percentage of water in an apple, which is a descriptive concept.
class_name: DESC
class_index: 2
```
responses: [0, 0, 2, 0, 2, 2, 1, 2, 2, 2, 2, 2, 3, 0, 3, 3, 4, 4, 4, 4, 5, 2, 5, 2], targets: [0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5]
num_invalid: 0
Preds tensor: tensor([[1., 0., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0.],
        [0., 0., 1., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0.],
        [0., 0., 1., 0., 0., 0.],
        [0., 0., 1., 0., 0., 0.],
        [0., 1., 0., 0., 0., 0.],
        [0., 0., 1., 0., 0., 0.],
        [0., 0., 1., 0., 0., 0.],
        [0., 0., 1., 0., 0., 0.],
        [0., 0., 1., 0., 0., 0.],
        [0., 0., 1., 0., 0., 0.],
        [0., 0., 0., 1., 0., 0.],
        [1., 0., 0., 0., 0., 0.],
        [0., 0., 0., 1., 0., 0.],
        [0., 0., 0., 1., 0., 0.],
        [0., 0., 0., 0., 1., 0.],
        [0., 0., 0., 0., 1., 0.],
        [0., 0., 0., 0., 1., 0.],
        [0., 0., 0., 0., 1., 0.],
        [0., 0., 0., 0., 0., 1.],
        [0., 0., 1., 0., 0., 0.],
        [0., 0., 0., 0., 0., 1.],
        [0., 0., 1., 0., 0., 0.]])
Targets tensor: tensor([0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5])
Test Accuracy Start: 0.708, F1: 0.708, score: 1.0190000000000001
step: 0
train_batch: {'text': ["What continent 's name appears on the upper left corner of a Budweiser label ?", "Who makes the `` Die Hard '' car battery ?", 'Whose biography by Maurice Zolotow is titled Shooting Star ?', "Who was President Cleveland 's wife ?", 'Who is Shirley MacLaine ?', 'What is IOC an abbreviation of ?', 'Why were red M&Ms discontinued then brought back ?', 'How was the Kennedy money made ?', "Who was Tiny Tim 's father ?", 'What is a fear of stings ?'], 'coarse_label': tensor([4, 3, 3, 3, 3, 0, 2, 2, 3, 1]), 'fine_label': tensor([35, 29, 29, 29, 31,  1, 27, 26, 29,  7])}
before random_replace: [Sample(index=2533, data={'text': 'What is the abbreviation of General Motors ?', 'coarse_label': 0, 'fine_label': 0}), Sample(index=1800, data={'text': 'What movie did Madilyn Kahn star in with Gene Wilder ?', 'coarse_label': 1, 'fine_label': 5}), Sample(index=153, data={'text': 'What does e=mc2 mean ?', 'coarse_label': 2, 'fine_label': 24}), Sample(index=1071, data={'text': 'Who claimed he killed 4 , 280 buffalo as food for the crew building the Kansas Pacific Railway ?', 'coarse_label': 3, 'fine_label': 29}), Sample(index=350, data={'text': 'What constellation represents a hunter with club and shield ?', 'coarse_label': 4, 'fine_label': 35}), Sample(index=1633, data={'text': "What year was Janet Jackson 's first album released ?", 'coarse_label': 5, 'fine_label': 39})]
after random_replace: [Sample(index=24, data={'text': 'What does CPR stand for ?', 'coarse_label': 0, 'fine_label': 1}), Sample(index=1967, data={'text': 'What is the zodiac sign for August 14 ?', 'coarse_label': 1, 'fine_label': 19}), Sample(index=2431, data={'text': "What is the origin of the term `` The Brooklyn Side '' in bowling ?", 'coarse_label': 2, 'fine_label': 25}), Sample(index=28, data={'text': "What tennis player has the nickname `` Nasty '' ?", 'coarse_label': 3, 'fine_label': 29}), Sample(index=1977, data={'text': 'In what part of the world is Mozambique ?', 'coarse_label': 4, 'fine_label': 35}), Sample(index=1900, data={'text': 'How many continents are there ?', 'coarse_label': 5, 'fine_label': 38})]
data: {'text': 'What does U.S.S.R. stand for ?', 'coarse_label': 0, 'fine_label': 1}
task_input: What does U.S.S.R. stand for ?, corse_label: 0
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What does U.S.S.R. stand for ?', 'examples_str': "Question: What does CPR stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the zodiac sign for August 14 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the term `` The Brooklyn Side '' in bowling ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What tennis player has the nickname `` Nasty '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many continents are there ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CPR stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is the zodiac sign for August 14 ?
class_name: Entity 
class_index: 1
--------

Question: What is the origin of the term `` The Brooklyn Side '' in bowling ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What tennis player has the nickname `` Nasty '' ?
class_name: Human being 
class_index: 3
--------

Question: In what part of the world is Mozambique ?
class_name: Location 
class_index: 4
--------

Question: How many continents are there ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What does U.S.S.R. stand for ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CPR stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the zodiac sign for August 14 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the term `` The Brooklyn Side '' in bowling ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What tennis player has the nickname `` Nasty '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many continents are there ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does U.S.S.R. stand for ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 00:59:17 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12647'), (b'x-ratelimit-remaining-tokens', b'29615'), (b'x-ratelimit-reset-requests', b'2h55m17.724999999s'), (b'x-ratelimit-reset-tokens', b'770ms'), (b'x-request-id', b'req_01hz0xqj28ftqb94pj8a5gnsy8'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28a79cb897ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CPR stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the zodiac sign for August 14 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the term `` The Brooklyn Side '' in bowling ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What tennis player has the nickname `` Nasty '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many continents are there ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does U.S.S.R. stand for ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:59:19 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12646'), (b'x-ratelimit-remaining-tokens', b'29610'), (b'x-ratelimit-reset-requests', b'2h55m21.664s'), (b'x-ratelimit-reset-tokens', b'780ms'), (b'x-request-id', b'req_01hz0xqm2neq4r0870pae4vq46'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28a86de4a7ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking for the meaning of an abbreviation, which is a common use case for abbreviations.
class_name: ABBR
class_index: 0
data: {'text': 'What is the abbreviated form of the National Bureau of Investigation ?', 'coarse_label': 0, 'fine_label': 0}
task_input: What is the abbreviated form of the National Bureau of Investigation ?, corse_label: 0
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What is the abbreviated form of the National Bureau of Investigation ?', 'examples_str': "Question: What does CPR stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the zodiac sign for August 14 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the term `` The Brooklyn Side '' in bowling ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What tennis player has the nickname `` Nasty '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many continents are there ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CPR stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is the zodiac sign for August 14 ?
class_name: Entity 
class_index: 1
--------

Question: What is the origin of the term `` The Brooklyn Side '' in bowling ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What tennis player has the nickname `` Nasty '' ?
class_name: Human being 
class_index: 3
--------

Question: In what part of the world is Mozambique ?
class_name: Location 
class_index: 4
--------

Question: How many continents are there ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What is the abbreviated form of the National Bureau of Investigation ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CPR stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the zodiac sign for August 14 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the term `` The Brooklyn Side '' in bowling ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What tennis player has the nickname `` Nasty '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many continents are there ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is the abbreviated form of the National Bureau of Investigation ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 00:59:19 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12646'), (b'x-ratelimit-remaining-tokens', b'29597'), (b'x-ratelimit-reset-requests', b'2h55m23.752s'), (b'x-ratelimit-reset-tokens', b'805ms'), (b'x-request-id', b'req_01hz0xqmaee8ytjacwpkva9vqx'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28a886f607ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CPR stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the zodiac sign for August 14 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the term `` The Brooklyn Side '' in bowling ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What tennis player has the nickname `` Nasty '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many continents are there ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is the abbreviated form of the National Bureau of Investigation ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:59:22 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12645'), (b'x-ratelimit-remaining-tokens', b'29600'), (b'x-ratelimit-reset-requests', b'2h55m27.683999999s'), (b'x-ratelimit-reset-tokens', b'800ms'), (b'x-request-id', b'req_01hz0xqpb2fdt97a04tj3agb0k'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28a954a347ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking for the abbreviated form of a specific organization, which is a common use case for abbreviations.
class_name: ABBR
class_index: 0
data: {'text': "What do the letters ZIP stand for in the phrase `` ZIP code '' ?", 'coarse_label': 0, 'fine_label': 1}
task_input: What do the letters ZIP stand for in the phrase `` ZIP code '' ?, corse_label: 0
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': "What do the letters ZIP stand for in the phrase `` ZIP code '' ?", 'examples_str': "Question: What does CPR stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the zodiac sign for August 14 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the term `` The Brooklyn Side '' in bowling ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What tennis player has the nickname `` Nasty '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many continents are there ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CPR stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is the zodiac sign for August 14 ?
class_name: Entity 
class_index: 1
--------

Question: What is the origin of the term `` The Brooklyn Side '' in bowling ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What tennis player has the nickname `` Nasty '' ?
class_name: Human being 
class_index: 3
--------

Question: In what part of the world is Mozambique ?
class_name: Location 
class_index: 4
--------

Question: How many continents are there ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What do the letters ZIP stand for in the phrase `` ZIP code '' ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CPR stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the zodiac sign for August 14 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the term `` The Brooklyn Side '' in bowling ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What tennis player has the nickname `` Nasty '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many continents are there ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What do the letters ZIP stand for in the phrase `` ZIP code '' ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 00:59:22 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12645'), (b'x-ratelimit-remaining-tokens', b'29638'), (b'x-ratelimit-reset-requests', b'2h55m29.653999999s'), (b'x-ratelimit-reset-tokens', b'724ms'), (b'x-request-id', b'req_01hz0xqpnxfgbtw7q1f22kr51r'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28a977bda7ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CPR stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the zodiac sign for August 14 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the term `` The Brooklyn Side '' in bowling ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What tennis player has the nickname `` Nasty '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many continents are there ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What do the letters ZIP stand for in the phrase `` ZIP code '' ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:59:24 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12644'), (b'x-ratelimit-remaining-tokens', b'29602'), (b'x-ratelimit-reset-requests', b'2h55m33.603s'), (b'x-ratelimit-reset-tokens', b'796ms'), (b'x-request-id', b'req_01hz0xqrp0fdt8yctc78b3n9tf'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28aa44e477ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the meaning of the letters ZIP in the phrase "ZIP code", which is an abbreviation.
class_name: ABBR
class_index: 0
data: {'text': 'What does VCR stand for ?', 'coarse_label': 0, 'fine_label': 1}
task_input: What does VCR stand for ?, corse_label: 0
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What does VCR stand for ?', 'examples_str': "Question: What does CPR stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the zodiac sign for August 14 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the term `` The Brooklyn Side '' in bowling ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What tennis player has the nickname `` Nasty '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many continents are there ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CPR stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is the zodiac sign for August 14 ?
class_name: Entity 
class_index: 1
--------

Question: What is the origin of the term `` The Brooklyn Side '' in bowling ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What tennis player has the nickname `` Nasty '' ?
class_name: Human being 
class_index: 3
--------

Question: In what part of the world is Mozambique ?
class_name: Location 
class_index: 4
--------

Question: How many continents are there ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What does VCR stand for ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CPR stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the zodiac sign for August 14 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the term `` The Brooklyn Side '' in bowling ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What tennis player has the nickname `` Nasty '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many continents are there ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does VCR stand for ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 00:59:24 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12644'), (b'x-ratelimit-remaining-tokens', b'29616'), (b'x-ratelimit-reset-requests', b'2h55m35.697s'), (b'x-ratelimit-reset-tokens', b'767ms'), (b'x-request-id', b'req_01hz0xqrzgevxsr500wdmy3na5'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28aa6382b7ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CPR stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the zodiac sign for August 14 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the term `` The Brooklyn Side '' in bowling ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What tennis player has the nickname `` Nasty '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many continents are there ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does VCR stand for ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:59:26 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12643'), (b'x-ratelimit-remaining-tokens', b'29612'), (b'x-ratelimit-reset-requests', b'2h55m39.634999999s'), (b'x-ratelimit-reset-tokens', b'776ms'), (b'x-request-id', b'req_01hz0xqtzyfzmr2199m0ytwrr7'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28ab31a717ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking for the abbreviation of VCR, which is a common acronym.
class_name: ABBR
class_index: 0
data: {'text': 'What sport can a free-legged pacer compete in ?', 'coarse_label': 1, 'fine_label': 17}
task_input: What sport can a free-legged pacer compete in ?, corse_label: 1
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What sport can a free-legged pacer compete in ?', 'examples_str': "Question: What does CPR stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the zodiac sign for August 14 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the term `` The Brooklyn Side '' in bowling ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What tennis player has the nickname `` Nasty '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many continents are there ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CPR stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is the zodiac sign for August 14 ?
class_name: Entity 
class_index: 1
--------

Question: What is the origin of the term `` The Brooklyn Side '' in bowling ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What tennis player has the nickname `` Nasty '' ?
class_name: Human being 
class_index: 3
--------

Question: In what part of the world is Mozambique ?
class_name: Location 
class_index: 4
--------

Question: How many continents are there ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What sport can a free-legged pacer compete in ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CPR stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the zodiac sign for August 14 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the term `` The Brooklyn Side '' in bowling ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What tennis player has the nickname `` Nasty '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many continents are there ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What sport can a free-legged pacer compete in ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 00:59:26 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12643'), (b'x-ratelimit-remaining-tokens', b'29610'), (b'x-ratelimit-reset-requests', b'2h55m41.782s'), (b'x-ratelimit-reset-tokens', b'779ms'), (b'x-request-id', b'req_01hz0xqv6sfqfttee51p1d0bzc'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28ab47b877ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CPR stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the zodiac sign for August 14 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the term `` The Brooklyn Side '' in bowling ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What tennis player has the nickname `` Nasty '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many continents are there ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What sport can a free-legged pacer compete in ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:59:29 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12642'), (b'x-ratelimit-remaining-tokens', b'29606'), (b'x-ratelimit-reset-requests', b'2h55m45.71s'), (b'x-ratelimit-reset-tokens', b'788ms'), (b'x-request-id', b'req_01hz0xqx7hfass927r5mysvh50'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28ac15e1c7ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is about a specific sport, and the term "free-legged pacer" is likely an abbreviation or a term used in that sport.
class_name: ABBR
class_index: 0
data: {'text': 'What was originally defined as one 1-millionth of the distance from the equator to the Pole ?', 'coarse_label': 1, 'fine_label': 21}
task_input: What was originally defined as one 1-millionth of the distance from the equator to the Pole ?, corse_label: 1
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What was originally defined as one 1-millionth of the distance from the equator to the Pole ?', 'examples_str': "Question: What does CPR stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the zodiac sign for August 14 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the term `` The Brooklyn Side '' in bowling ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What tennis player has the nickname `` Nasty '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many continents are there ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CPR stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is the zodiac sign for August 14 ?
class_name: Entity 
class_index: 1
--------

Question: What is the origin of the term `` The Brooklyn Side '' in bowling ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What tennis player has the nickname `` Nasty '' ?
class_name: Human being 
class_index: 3
--------

Question: In what part of the world is Mozambique ?
class_name: Location 
class_index: 4
--------

Question: How many continents are there ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What was originally defined as one 1-millionth of the distance from the equator to the Pole ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CPR stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the zodiac sign for August 14 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the term `` The Brooklyn Side '' in bowling ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What tennis player has the nickname `` Nasty '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many continents are there ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What was originally defined as one 1-millionth of the distance from the equator to the Pole ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 00:59:29 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12642'), (b'x-ratelimit-remaining-tokens', b'29591'), (b'x-ratelimit-reset-requests', b'2h55m47.762999999s'), (b'x-ratelimit-reset-tokens', b'818ms'), (b'x-request-id', b'req_01hz0xqxezeq5an8s5jzxcahyq'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28ac2ef4f7ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CPR stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the zodiac sign for August 14 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the term `` The Brooklyn Side '' in bowling ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What tennis player has the nickname `` Nasty '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many continents are there ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What was originally defined as one 1-millionth of the distance from the equator to the Pole ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:59:31 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12641'), (b'x-ratelimit-remaining-tokens', b'29595'), (b'x-ratelimit-reset-requests', b'2h55m51.698s'), (b'x-ratelimit-reset-tokens', b'810ms'), (b'x-request-id', b'req_01hz0xqzfge8zb3kb1h8rb895m'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28acfca107ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is asking about a specific unit of measurement, which is a numeric value.
class_name: NUM
class_index: 5
data: {'text': 'What fuel do airplanes use ?', 'coarse_label': 1, 'fine_label': 18}
task_input: What fuel do airplanes use ?, corse_label: 1
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What fuel do airplanes use ?', 'examples_str': "Question: What does CPR stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the zodiac sign for August 14 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the term `` The Brooklyn Side '' in bowling ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What tennis player has the nickname `` Nasty '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many continents are there ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CPR stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is the zodiac sign for August 14 ?
class_name: Entity 
class_index: 1
--------

Question: What is the origin of the term `` The Brooklyn Side '' in bowling ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What tennis player has the nickname `` Nasty '' ?
class_name: Human being 
class_index: 3
--------

Question: In what part of the world is Mozambique ?
class_name: Location 
class_index: 4
--------

Question: How many continents are there ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What fuel do airplanes use ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CPR stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the zodiac sign for August 14 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the term `` The Brooklyn Side '' in bowling ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What tennis player has the nickname `` Nasty '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many continents are there ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What fuel do airplanes use ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 00:59:31 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12641'), (b'x-ratelimit-remaining-tokens', b'29592'), (b'x-ratelimit-reset-requests', b'2h55m53.755s'), (b'x-ratelimit-reset-tokens', b'816ms'), (b'x-request-id', b'req_01hz0xqzq6fgbtzvmss4k0ckbn'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28ad15b3d7ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CPR stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the zodiac sign for August 14 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the term `` The Brooklyn Side '' in bowling ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What tennis player has the nickname `` Nasty '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many continents are there ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What fuel do airplanes use ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:59:33 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12640'), (b'x-ratelimit-remaining-tokens', b'29611'), (b'x-ratelimit-reset-requests', b'2h55m57.692s'), (b'x-ratelimit-reset-tokens', b'778ms'), (b'x-request-id', b'req_01hz0xr1qnfh78n0es9bn7sqj6'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28ade3c8c7ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the fuel used by airplanes, which is a specific type of information.
class_name: ABBR
class_index: 0
```
data: {'text': 'On what T.V. show could Tom Terrific be found ?', 'coarse_label': 1, 'fine_label': 5}
task_input: On what T.V. show could Tom Terrific be found ?, corse_label: 1
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'On what T.V. show could Tom Terrific be found ?', 'examples_str': "Question: What does CPR stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the zodiac sign for August 14 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the term `` The Brooklyn Side '' in bowling ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What tennis player has the nickname `` Nasty '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many continents are there ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CPR stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is the zodiac sign for August 14 ?
class_name: Entity 
class_index: 1
--------

Question: What is the origin of the term `` The Brooklyn Side '' in bowling ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What tennis player has the nickname `` Nasty '' ?
class_name: Human being 
class_index: 3
--------

Question: In what part of the world is Mozambique ?
class_name: Location 
class_index: 4
--------

Question: How many continents are there ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: On what T.V. show could Tom Terrific be found ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CPR stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the zodiac sign for August 14 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the term `` The Brooklyn Side '' in bowling ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What tennis player has the nickname `` Nasty '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many continents are there ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: On what T.V. show could Tom Terrific be found ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 00:59:33 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12640'), (b'x-ratelimit-remaining-tokens', b'29603'), (b'x-ratelimit-reset-requests', b'2h55m59.764999999s'), (b'x-ratelimit-reset-tokens', b'793ms'), (b'x-request-id', b'req_01hz0xr1z0fcst5czz3capcahw'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28adfbda67ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CPR stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the zodiac sign for August 14 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the term `` The Brooklyn Side '' in bowling ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What tennis player has the nickname `` Nasty '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many continents are there ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: On what T.V. show could Tom Terrific be found ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:59:35 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12639'), (b'x-ratelimit-remaining-tokens', b'29606'), (b'x-ratelimit-reset-requests', b'2h56m3.709s'), (b'x-ratelimit-reset-tokens', b'788ms'), (b'x-request-id', b'req_01hz0xr3z9ezdt8sh4kgees6zs'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28aec8fcc7ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is about a character from a TV show, which is a human being.
class_name: HUM
class_index: 3
data: {'text': 'How do you select wine ?', 'coarse_label': 2, 'fine_label': 26}
task_input: How do you select wine ?, corse_label: 2
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'How do you select wine ?', 'examples_str': "Question: What does CPR stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the zodiac sign for August 14 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the term `` The Brooklyn Side '' in bowling ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What tennis player has the nickname `` Nasty '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many continents are there ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CPR stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is the zodiac sign for August 14 ?
class_name: Entity 
class_index: 1
--------

Question: What is the origin of the term `` The Brooklyn Side '' in bowling ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What tennis player has the nickname `` Nasty '' ?
class_name: Human being 
class_index: 3
--------

Question: In what part of the world is Mozambique ?
class_name: Location 
class_index: 4
--------

Question: How many continents are there ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: How do you select wine ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CPR stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the zodiac sign for August 14 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the term `` The Brooklyn Side '' in bowling ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What tennis player has the nickname `` Nasty '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many continents are there ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: How do you select wine ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 00:59:36 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12639'), (b'x-ratelimit-remaining-tokens', b'29647'), (b'x-ratelimit-reset-requests', b'2h56m5.685s'), (b'x-ratelimit-reset-tokens', b'705ms'), (b'x-request-id', b'req_01hz0xr495es4tfc99e3tr58d8'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28aee891e7ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CPR stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the zodiac sign for August 14 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the term `` The Brooklyn Side '' in bowling ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What tennis player has the nickname `` Nasty '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many continents are there ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: How do you select wine ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:59:38 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12638'), (b'x-ratelimit-remaining-tokens', b'29612'), (b'x-ratelimit-reset-requests', b'2h56m9.618999999s'), (b'x-ratelimit-reset-tokens', b'776ms'), (b'x-request-id', b'req_01hz0xr69qezwbb8npkpksgshc'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28afb7ae77ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is asking about a process or a method, which is a common characteristic of Description and abstract concept.
class_name: DESC
class_index: 2
data: {'text': "What are some children 's rights ?", 'coarse_label': 2, 'fine_label': 25}
task_input: What are some children 's rights ?, corse_label: 2
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': "What are some children 's rights ?", 'examples_str': "Question: What does CPR stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the zodiac sign for August 14 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the term `` The Brooklyn Side '' in bowling ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What tennis player has the nickname `` Nasty '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many continents are there ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CPR stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is the zodiac sign for August 14 ?
class_name: Entity 
class_index: 1
--------

Question: What is the origin of the term `` The Brooklyn Side '' in bowling ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What tennis player has the nickname `` Nasty '' ?
class_name: Human being 
class_index: 3
--------

Question: In what part of the world is Mozambique ?
class_name: Location 
class_index: 4
--------

Question: How many continents are there ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What are some children 's rights ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CPR stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the zodiac sign for August 14 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the term `` The Brooklyn Side '' in bowling ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What tennis player has the nickname `` Nasty '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many continents are there ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What are some children 's rights ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 00:59:38 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12638'), (b'x-ratelimit-remaining-tokens', b'29603'), (b'x-ratelimit-reset-requests', b'2h56m11.773999999s'), (b'x-ratelimit-reset-tokens', b'794ms'), (b'x-request-id', b'req_01hz0xr6gteyrb6efgv4n3rjgp'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28afcdc077ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CPR stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the zodiac sign for August 14 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the term `` The Brooklyn Side '' in bowling ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What tennis player has the nickname `` Nasty '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many continents are there ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What are some children 's rights ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:59:41 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12637'), (b'x-ratelimit-remaining-tokens', b'29609'), (b'x-ratelimit-reset-requests', b'2h56m15.707s'), (b'x-ratelimit-reset-tokens', b'782ms'), (b'x-request-id', b'req_01hz0xr8hdfvebwkwpvrptpk5k'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28b09cebc7ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the rights of children, which is a concept that can be described and abstract.
class_name: Description and abstract concept
class_index: 2
data: {'text': 'What are some fun things to do in Cozumel , Mexico for teenagers ?', 'coarse_label': 2, 'fine_label': 25}
task_input: What are some fun things to do in Cozumel , Mexico for teenagers ?, corse_label: 2
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What are some fun things to do in Cozumel , Mexico for teenagers ?', 'examples_str': "Question: What does CPR stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the zodiac sign for August 14 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the term `` The Brooklyn Side '' in bowling ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What tennis player has the nickname `` Nasty '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many continents are there ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CPR stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is the zodiac sign for August 14 ?
class_name: Entity 
class_index: 1
--------

Question: What is the origin of the term `` The Brooklyn Side '' in bowling ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What tennis player has the nickname `` Nasty '' ?
class_name: Human being 
class_index: 3
--------

Question: In what part of the world is Mozambique ?
class_name: Location 
class_index: 4
--------

Question: How many continents are there ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What are some fun things to do in Cozumel , Mexico for teenagers ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CPR stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the zodiac sign for August 14 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the term `` The Brooklyn Side '' in bowling ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What tennis player has the nickname `` Nasty '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many continents are there ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What are some fun things to do in Cozumel , Mexico for teenagers ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 00:59:41 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12637'), (b'x-ratelimit-remaining-tokens', b'29637'), (b'x-ratelimit-reset-requests', b'2h56m17.246s'), (b'x-ratelimit-reset-tokens', b'725ms'), (b'x-request-id', b'req_01hz0xr990fatrm2z2zfry7pgm'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28b0e7a997ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CPR stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the zodiac sign for August 14 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the term `` The Brooklyn Side '' in bowling ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What tennis player has the nickname `` Nasty '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many continents are there ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What are some fun things to do in Cozumel , Mexico for teenagers ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:59:43 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12636'), (b'x-ratelimit-remaining-tokens', b'29601'), (b'x-ratelimit-reset-requests', b'2h56m21.187999999s'), (b'x-ratelimit-reset-tokens', b'798ms'), (b'x-request-id', b'req_01hz0xrb9bfdv87x09qx8ycaqp'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28b1b5d187ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about activities to do in a specific location, which is a location-based question.
class_name: Location
class_index: 4
data: {'text': 'What does hazmat stand for ?', 'coarse_label': 2, 'fine_label': 24}
task_input: What does hazmat stand for ?, corse_label: 2
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What does hazmat stand for ?', 'examples_str': "Question: What does CPR stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the zodiac sign for August 14 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the term `` The Brooklyn Side '' in bowling ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What tennis player has the nickname `` Nasty '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many continents are there ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CPR stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is the zodiac sign for August 14 ?
class_name: Entity 
class_index: 1
--------

Question: What is the origin of the term `` The Brooklyn Side '' in bowling ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What tennis player has the nickname `` Nasty '' ?
class_name: Human being 
class_index: 3
--------

Question: In what part of the world is Mozambique ?
class_name: Location 
class_index: 4
--------

Question: How many continents are there ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What does hazmat stand for ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CPR stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the zodiac sign for August 14 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the term `` The Brooklyn Side '' in bowling ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What tennis player has the nickname `` Nasty '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many continents are there ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does hazmat stand for ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 00:59:43 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12636'), (b'x-ratelimit-remaining-tokens', b'29598'), (b'x-ratelimit-reset-requests', b'2h56m23.742s'), (b'x-ratelimit-reset-tokens', b'804ms'), (b'x-request-id', b'req_01hz0xrbhde7ta7hs0hbdgv672'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28b1cfe817ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CPR stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the zodiac sign for August 14 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the term `` The Brooklyn Side '' in bowling ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What tennis player has the nickname `` Nasty '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many continents are there ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does hazmat stand for ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:59:45 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12635'), (b'x-ratelimit-remaining-tokens', b'29611'), (b'x-ratelimit-reset-requests', b'2h56m27.667s'), (b'x-ratelimit-reset-tokens', b'778ms'), (b'x-request-id', b'req_01hz0xrdj8fa9tyzjm9aaznm3d'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28b29e9af7ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking for the abbreviation of a term, which is a common use case for ABBR.
class_name: ABBR
class_index: 0
data: {'text': "Who is the nebbish that is Marvel 's official mascot ?", 'coarse_label': 3, 'fine_label': 29}
task_input: Who is the nebbish that is Marvel 's official mascot ?, corse_label: 3
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': "Who is the nebbish that is Marvel 's official mascot ?", 'examples_str': "Question: What does CPR stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the zodiac sign for August 14 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the term `` The Brooklyn Side '' in bowling ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What tennis player has the nickname `` Nasty '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many continents are there ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CPR stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is the zodiac sign for August 14 ?
class_name: Entity 
class_index: 1
--------

Question: What is the origin of the term `` The Brooklyn Side '' in bowling ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What tennis player has the nickname `` Nasty '' ?
class_name: Human being 
class_index: 3
--------

Question: In what part of the world is Mozambique ?
class_name: Location 
class_index: 4
--------

Question: How many continents are there ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Who is the nebbish that is Marvel 's official mascot ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CPR stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the zodiac sign for August 14 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the term `` The Brooklyn Side '' in bowling ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What tennis player has the nickname `` Nasty '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many continents are there ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Who is the nebbish that is Marvel 's official mascot ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 00:59:45 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12635'), (b'x-ratelimit-remaining-tokens', b'29604'), (b'x-ratelimit-reset-requests', b'2h56m29.742s'), (b'x-ratelimit-reset-tokens', b'791ms'), (b'x-request-id', b'req_01hz0xrdtbfgsvzeycs7jdvztt'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28b2b8b1a7ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CPR stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the zodiac sign for August 14 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the term `` The Brooklyn Side '' in bowling ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What tennis player has the nickname `` Nasty '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many continents are there ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Who is the nebbish that is Marvel 's official mascot ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:59:48 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12634'), (b'x-ratelimit-remaining-tokens', b'29604'), (b'x-ratelimit-reset-requests', b'2h56m33.683999999s'), (b'x-ratelimit-reset-tokens', b'792ms'), (b'x-request-id', b'req_01hz0xrftnfz8sd77rby29rtny'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28b386e6e7ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about a character in the Marvel universe, which is a human being.
class_name: HUM
class_index: 3
```
data: {'text': 'What Japanese electronics company was named for a coastal city northeast of Tokyo ?', 'coarse_label': 3, 'fine_label': 28}
task_input: What Japanese electronics company was named for a coastal city northeast of Tokyo ?, corse_label: 3
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What Japanese electronics company was named for a coastal city northeast of Tokyo ?', 'examples_str': "Question: What does CPR stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the zodiac sign for August 14 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the term `` The Brooklyn Side '' in bowling ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What tennis player has the nickname `` Nasty '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many continents are there ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CPR stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is the zodiac sign for August 14 ?
class_name: Entity 
class_index: 1
--------

Question: What is the origin of the term `` The Brooklyn Side '' in bowling ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What tennis player has the nickname `` Nasty '' ?
class_name: Human being 
class_index: 3
--------

Question: In what part of the world is Mozambique ?
class_name: Location 
class_index: 4
--------

Question: How many continents are there ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What Japanese electronics company was named for a coastal city northeast of Tokyo ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CPR stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the zodiac sign for August 14 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the term `` The Brooklyn Side '' in bowling ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What tennis player has the nickname `` Nasty '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many continents are there ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What Japanese electronics company was named for a coastal city northeast of Tokyo ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 00:59:48 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12634'), (b'x-ratelimit-remaining-tokens', b'29596'), (b'x-ratelimit-reset-requests', b'2h56m35.776999999s'), (b'x-ratelimit-reset-tokens', b'807ms'), (b'x-request-id', b'req_01hz0xrg1nezws0fkjv0c39zpm'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28b39df9c7ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CPR stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the zodiac sign for August 14 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the term `` The Brooklyn Side '' in bowling ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What tennis player has the nickname `` Nasty '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many continents are there ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What Japanese electronics company was named for a coastal city northeast of Tokyo ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:59:50 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12633'), (b'x-ratelimit-remaining-tokens', b'29597'), (b'x-ratelimit-reset-requests', b'2h56m39.727999999s'), (b'x-ratelimit-reset-tokens', b'806ms'), (b'x-request-id', b'req_01hz0xrj1pfqgvzpfn89xq6ymq'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28b46a9447ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about a specific Japanese electronics company, which is likely to be a named entity.
class_name: Entity
class_index: 1
data: {'text': 'Who was Maria Theresa ?', 'coarse_label': 3, 'fine_label': 31}
task_input: Who was Maria Theresa ?, corse_label: 3
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'Who was Maria Theresa ?', 'examples_str': "Question: What does CPR stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the zodiac sign for August 14 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the term `` The Brooklyn Side '' in bowling ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What tennis player has the nickname `` Nasty '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many continents are there ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CPR stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is the zodiac sign for August 14 ?
class_name: Entity 
class_index: 1
--------

Question: What is the origin of the term `` The Brooklyn Side '' in bowling ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What tennis player has the nickname `` Nasty '' ?
class_name: Human being 
class_index: 3
--------

Question: In what part of the world is Mozambique ?
class_name: Location 
class_index: 4
--------

Question: How many continents are there ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Who was Maria Theresa ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CPR stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the zodiac sign for August 14 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the term `` The Brooklyn Side '' in bowling ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What tennis player has the nickname `` Nasty '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many continents are there ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Who was Maria Theresa ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 00:59:50 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12633'), (b'x-ratelimit-remaining-tokens', b'29600'), (b'x-ratelimit-reset-requests', b'2h56m41.764999999s'), (b'x-ratelimit-reset-tokens', b'799ms'), (b'x-request-id', b'req_01hz0xrj92ehwr8h4mb94sqvds'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28b481a737ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CPR stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the zodiac sign for August 14 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the term `` The Brooklyn Side '' in bowling ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What tennis player has the nickname `` Nasty '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many continents are there ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Who was Maria Theresa ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:59:52 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12632'), (b'x-ratelimit-remaining-tokens', b'29612'), (b'x-ratelimit-reset-requests', b'2h56m45.709s'), (b'x-ratelimit-reset-tokens', b'776ms'), (b'x-request-id', b'req_01hz0xrm9afavtzqgzvncjnxw2'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28b54fd567ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about a historical figure, and Maria Theresa was a well-known Habsburg ruler.
class_name: Human being
class_index: 3
data: {'text': "What was the name of the director of the movie `` Jaws '' ?", 'coarse_label': 3, 'fine_label': 29}
task_input: What was the name of the director of the movie `` Jaws '' ?, corse_label: 3
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': "What was the name of the director of the movie `` Jaws '' ?", 'examples_str': "Question: What does CPR stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the zodiac sign for August 14 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the term `` The Brooklyn Side '' in bowling ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What tennis player has the nickname `` Nasty '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many continents are there ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CPR stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is the zodiac sign for August 14 ?
class_name: Entity 
class_index: 1
--------

Question: What is the origin of the term `` The Brooklyn Side '' in bowling ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What tennis player has the nickname `` Nasty '' ?
class_name: Human being 
class_index: 3
--------

Question: In what part of the world is Mozambique ?
class_name: Location 
class_index: 4
--------

Question: How many continents are there ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What was the name of the director of the movie `` Jaws '' ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CPR stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the zodiac sign for August 14 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the term `` The Brooklyn Side '' in bowling ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What tennis player has the nickname `` Nasty '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many continents are there ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What was the name of the director of the movie `` Jaws '' ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 00:59:52 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12632'), (b'x-ratelimit-remaining-tokens', b'29603'), (b'x-ratelimit-reset-requests', b'2h56m47.753s'), (b'x-ratelimit-reset-tokens', b'794ms'), (b'x-request-id', b'req_01hz0xrmh2es4vj3dwf0w9k6xv'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28b567e947ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CPR stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the zodiac sign for August 14 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the term `` The Brooklyn Side '' in bowling ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What tennis player has the nickname `` Nasty '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many continents are there ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What was the name of the director of the movie `` Jaws '' ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:59:55 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12631'), (b'x-ratelimit-remaining-tokens', b'29603'), (b'x-ratelimit-reset-requests', b'2h56m51.692s'), (b'x-ratelimit-reset-tokens', b'794ms'), (b'x-request-id', b'req_01hz0xrphffqgshdktwg7x32r5'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28b6359137ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking for the name of a person, which is a characteristic of a Human being.
class_name: HUM
class_index: 3
data: {'text': 'Which area produces the least acidic coffee ?', 'coarse_label': 4, 'fine_label': 35}
task_input: Which area produces the least acidic coffee ?, corse_label: 4
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'Which area produces the least acidic coffee ?', 'examples_str': "Question: What does CPR stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the zodiac sign for August 14 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the term `` The Brooklyn Side '' in bowling ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What tennis player has the nickname `` Nasty '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many continents are there ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CPR stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is the zodiac sign for August 14 ?
class_name: Entity 
class_index: 1
--------

Question: What is the origin of the term `` The Brooklyn Side '' in bowling ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What tennis player has the nickname `` Nasty '' ?
class_name: Human being 
class_index: 3
--------

Question: In what part of the world is Mozambique ?
class_name: Location 
class_index: 4
--------

Question: How many continents are there ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Which area produces the least acidic coffee ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CPR stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the zodiac sign for August 14 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the term `` The Brooklyn Side '' in bowling ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What tennis player has the nickname `` Nasty '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many continents are there ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Which area produces the least acidic coffee ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 00:59:55 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12631'), (b'x-ratelimit-remaining-tokens', b'29597'), (b'x-ratelimit-reset-requests', b'2h56m53.748s'), (b'x-ratelimit-reset-tokens', b'806ms'), (b'x-request-id', b'req_01hz0xrpsceyrrjefyg7c4jx8h'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28b64fa737ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CPR stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the zodiac sign for August 14 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the term `` The Brooklyn Side '' in bowling ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What tennis player has the nickname `` Nasty '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many continents are there ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Which area produces the least acidic coffee ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:59:57 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12630'), (b'x-ratelimit-remaining-tokens', b'29607'), (b'x-ratelimit-reset-requests', b'2h56m57.689999999s'), (b'x-ratelimit-reset-tokens', b'786ms'), (b'x-request-id', b'req_01hz0xrrspep0rk2sgzj6mrdhz'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28b71dc9c7ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is about a specific characteristic of coffee, which is a tangible object, and the answer is likely a number.
class_name: Numeric value
class_index: 5
data: {'text': 'What ocean is the largest in the world ?', 'coarse_label': 4, 'fine_label': 35}
task_input: What ocean is the largest in the world ?, corse_label: 4
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What ocean is the largest in the world ?', 'examples_str': "Question: What does CPR stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the zodiac sign for August 14 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the term `` The Brooklyn Side '' in bowling ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What tennis player has the nickname `` Nasty '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many continents are there ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CPR stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is the zodiac sign for August 14 ?
class_name: Entity 
class_index: 1
--------

Question: What is the origin of the term `` The Brooklyn Side '' in bowling ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What tennis player has the nickname `` Nasty '' ?
class_name: Human being 
class_index: 3
--------

Question: In what part of the world is Mozambique ?
class_name: Location 
class_index: 4
--------

Question: How many continents are there ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What ocean is the largest in the world ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CPR stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the zodiac sign for August 14 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the term `` The Brooklyn Side '' in bowling ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What tennis player has the nickname `` Nasty '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many continents are there ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What ocean is the largest in the world ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 00:59:57 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12630'), (b'x-ratelimit-remaining-tokens', b'29627'), (b'x-ratelimit-reset-requests', b'2h56m59.710999999s'), (b'x-ratelimit-reset-tokens', b'746ms'), (b'x-request-id', b'req_01hz0xrs2qfgd8fepn731h0zc8'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28b73ade97ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CPR stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the zodiac sign for August 14 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the term `` The Brooklyn Side '' in bowling ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What tennis player has the nickname `` Nasty '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many continents are there ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What ocean is the largest in the world ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 00:59:59 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12629'), (b'x-ratelimit-remaining-tokens', b'29608'), (b'x-ratelimit-reset-requests', b'2h57m3.653s'), (b'x-ratelimit-reset-tokens', b'784ms'), (b'x-request-id', b'req_01hz0xrv32e90rq5f6ekmrppfv'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28b807f677ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the largest ocean in the world, which is a geographic fact.
class_name: Location
class_index: 4
data: {'text': "What South American capital is the world 's highest ?", 'coarse_label': 4, 'fine_label': 32}
task_input: What South American capital is the world 's highest ?, corse_label: 4
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': "What South American capital is the world 's highest ?", 'examples_str': "Question: What does CPR stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the zodiac sign for August 14 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the term `` The Brooklyn Side '' in bowling ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What tennis player has the nickname `` Nasty '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many continents are there ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CPR stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is the zodiac sign for August 14 ?
class_name: Entity 
class_index: 1
--------

Question: What is the origin of the term `` The Brooklyn Side '' in bowling ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What tennis player has the nickname `` Nasty '' ?
class_name: Human being 
class_index: 3
--------

Question: In what part of the world is Mozambique ?
class_name: Location 
class_index: 4
--------

Question: How many continents are there ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What South American capital is the world 's highest ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CPR stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the zodiac sign for August 14 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the term `` The Brooklyn Side '' in bowling ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What tennis player has the nickname `` Nasty '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many continents are there ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What South American capital is the world 's highest ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 00:59:59 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12629'), (b'x-ratelimit-remaining-tokens', b'29603'), (b'x-ratelimit-reset-requests', b'2h57m5.745s'), (b'x-ratelimit-reset-tokens', b'794ms'), (b'x-request-id', b'req_01hz0xrvb2e9w84068zrz1v2cd'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28b8218c77ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CPR stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the zodiac sign for August 14 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the term `` The Brooklyn Side '' in bowling ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What tennis player has the nickname `` Nasty '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many continents are there ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What South American capital is the world 's highest ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 01:00:01 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12628'), (b'x-ratelimit-remaining-tokens', b'29605'), (b'x-ratelimit-reset-requests', b'2h57m9.678999999s'), (b'x-ratelimit-reset-tokens', b'790ms'), (b'x-request-id', b'req_01hz0xrxbmehxa2c2j89d5jsqa'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28b8f0b6f7ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about a geographical location, specifically a capital city.
class_name: Location
class_index: 4
data: {'text': 'What North American city boasts the biggest Polish population ?', 'coarse_label': 4, 'fine_label': 32}
task_input: What North American city boasts the biggest Polish population ?, corse_label: 4
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What North American city boasts the biggest Polish population ?', 'examples_str': "Question: What does CPR stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the zodiac sign for August 14 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the term `` The Brooklyn Side '' in bowling ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What tennis player has the nickname `` Nasty '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many continents are there ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CPR stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is the zodiac sign for August 14 ?
class_name: Entity 
class_index: 1
--------

Question: What is the origin of the term `` The Brooklyn Side '' in bowling ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What tennis player has the nickname `` Nasty '' ?
class_name: Human being 
class_index: 3
--------

Question: In what part of the world is Mozambique ?
class_name: Location 
class_index: 4
--------

Question: How many continents are there ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What North American city boasts the biggest Polish population ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CPR stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the zodiac sign for August 14 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the term `` The Brooklyn Side '' in bowling ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What tennis player has the nickname `` Nasty '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many continents are there ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What North American city boasts the biggest Polish population ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 01:00:02 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12628'), (b'x-ratelimit-remaining-tokens', b'29607'), (b'x-ratelimit-reset-requests', b'2h57m11.778999999s'), (b'x-ratelimit-reset-tokens', b'785ms'), (b'x-request-id', b'req_01hz0xrxjjfctr357hv6zzr4fn'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28b906c787ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CPR stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the zodiac sign for August 14 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the term `` The Brooklyn Side '' in bowling ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What tennis player has the nickname `` Nasty '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many continents are there ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What North American city boasts the biggest Polish population ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 01:00:04 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12627'), (b'x-ratelimit-remaining-tokens', b'29602'), (b'x-ratelimit-reset-requests', b'2h57m15.712s'), (b'x-ratelimit-reset-tokens', b'796ms'), (b'x-request-id', b'req_01hz0xrzk6ef1vvcjknfewyvt8'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28b9d5f937ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is asking about a specific city in North America, which is a location.
class_name: Location
class_index: 4
data: {'text': "Independent silversmith 's account for what percentage of silver production ?", 'coarse_label': 5, 'fine_label': 45}
task_input: Independent silversmith 's account for what percentage of silver production ?, corse_label: 5
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': "Independent silversmith 's account for what percentage of silver production ?", 'examples_str': "Question: What does CPR stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the zodiac sign for August 14 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the term `` The Brooklyn Side '' in bowling ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What tennis player has the nickname `` Nasty '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many continents are there ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CPR stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is the zodiac sign for August 14 ?
class_name: Entity 
class_index: 1
--------

Question: What is the origin of the term `` The Brooklyn Side '' in bowling ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What tennis player has the nickname `` Nasty '' ?
class_name: Human being 
class_index: 3
--------

Question: In what part of the world is Mozambique ?
class_name: Location 
class_index: 4
--------

Question: How many continents are there ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Independent silversmith 's account for what percentage of silver production ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CPR stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the zodiac sign for August 14 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the term `` The Brooklyn Side '' in bowling ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What tennis player has the nickname `` Nasty '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many continents are there ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Independent silversmith 's account for what percentage of silver production ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 01:00:04 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12627'), (b'x-ratelimit-remaining-tokens', b'29608'), (b'x-ratelimit-reset-requests', b'2h57m17.713999999s'), (b'x-ratelimit-reset-tokens', b'783ms'), (b'x-request-id', b'req_01hz0xrzw4e7vs7fbx1e2pvmc0'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28b9f18f47ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CPR stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the zodiac sign for August 14 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the term `` The Brooklyn Side '' in bowling ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What tennis player has the nickname `` Nasty '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many continents are there ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Independent silversmith 's account for what percentage of silver production ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 01:00:06 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12626'), (b'x-ratelimit-remaining-tokens', b'29599'), (b'x-ratelimit-reset-requests', b'2h57m21.657s'), (b'x-ratelimit-reset-tokens', b'802ms'), (b'x-request-id', b'req_01hz0xs1wdfdwvh1hrb6651m1h'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28babfba47ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about a specific percentage of silver production, which is a numeric value.
class_name: NUM
class_index: 5
data: {'text': 'How old is the universe ?', 'coarse_label': 5, 'fine_label': 44}
task_input: How old is the universe ?, corse_label: 5
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'How old is the universe ?', 'examples_str': "Question: What does CPR stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the zodiac sign for August 14 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the term `` The Brooklyn Side '' in bowling ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What tennis player has the nickname `` Nasty '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many continents are there ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CPR stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is the zodiac sign for August 14 ?
class_name: Entity 
class_index: 1
--------

Question: What is the origin of the term `` The Brooklyn Side '' in bowling ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What tennis player has the nickname `` Nasty '' ?
class_name: Human being 
class_index: 3
--------

Question: In what part of the world is Mozambique ?
class_name: Location 
class_index: 4
--------

Question: How many continents are there ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: How old is the universe ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CPR stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the zodiac sign for August 14 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the term `` The Brooklyn Side '' in bowling ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What tennis player has the nickname `` Nasty '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many continents are there ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: How old is the universe ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 01:00:06 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12626'), (b'x-ratelimit-remaining-tokens', b'29601'), (b'x-ratelimit-reset-requests', b'2h57m23.766999999s'), (b'x-ratelimit-reset-tokens', b'798ms'), (b'x-request-id', b'req_01hz0xs23qfaar1cxsae2vqv5t'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28bad6cd27ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CPR stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the zodiac sign for August 14 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the term `` The Brooklyn Side '' in bowling ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What tennis player has the nickname `` Nasty '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many continents are there ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: How old is the universe ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 01:00:08 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12625'), (b'x-ratelimit-remaining-tokens', b'29612'), (b'x-ratelimit-reset-requests', b'2h57m27.713s'), (b'x-ratelimit-reset-tokens', b'776ms'), (b'x-request-id', b'req_01hz0xs43xeq79evne58cc8sh6'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28bba4ed57ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is asking about the age of the universe, which is a numeric value.
class_name: NUM
class_index: 5
data: {'text': 'When was the Hoover Dam constructed ?', 'coarse_label': 5, 'fine_label': 39}
task_input: When was the Hoover Dam constructed ?, corse_label: 5
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'When was the Hoover Dam constructed ?', 'examples_str': "Question: What does CPR stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the zodiac sign for August 14 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the term `` The Brooklyn Side '' in bowling ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What tennis player has the nickname `` Nasty '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many continents are there ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CPR stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is the zodiac sign for August 14 ?
class_name: Entity 
class_index: 1
--------

Question: What is the origin of the term `` The Brooklyn Side '' in bowling ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What tennis player has the nickname `` Nasty '' ?
class_name: Human being 
class_index: 3
--------

Question: In what part of the world is Mozambique ?
class_name: Location 
class_index: 4
--------

Question: How many continents are there ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: When was the Hoover Dam constructed ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CPR stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the zodiac sign for August 14 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the term `` The Brooklyn Side '' in bowling ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What tennis player has the nickname `` Nasty '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many continents are there ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: When was the Hoover Dam constructed ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 01:00:08 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12625'), (b'x-ratelimit-remaining-tokens', b'29608'), (b'x-ratelimit-reset-requests', b'2h57m29.723999999s'), (b'x-ratelimit-reset-tokens', b'784ms'), (b'x-request-id', b'req_01hz0xs4cjeysr8rf175qc9bvh'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28bbc08157ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CPR stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the zodiac sign for August 14 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the term `` The Brooklyn Side '' in bowling ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What tennis player has the nickname `` Nasty '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many continents are there ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: When was the Hoover Dam constructed ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 01:00:11 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12624'), (b'x-ratelimit-remaining-tokens', b'29609'), (b'x-ratelimit-reset-requests', b'2h57m33.662s'), (b'x-ratelimit-reset-tokens', b'782ms'), (b'x-request-id', b'req_01hz0xs6d0fgds0tsfqr1esywx'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28bc8ea307ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about a specific event in history, which is typically described in a historical context.
class_name: Description and abstract concept
class_index: 2
data: {'text': 'At what age did Rossini stop writing opera ?', 'coarse_label': 5, 'fine_label': 44}
task_input: At what age did Rossini stop writing opera ?, corse_label: 5
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'At what age did Rossini stop writing opera ?', 'examples_str': "Question: What does CPR stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the zodiac sign for August 14 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the term `` The Brooklyn Side '' in bowling ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What tennis player has the nickname `` Nasty '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many continents are there ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does CPR stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is the zodiac sign for August 14 ?
class_name: Entity 
class_index: 1
--------

Question: What is the origin of the term `` The Brooklyn Side '' in bowling ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What tennis player has the nickname `` Nasty '' ?
class_name: Human being 
class_index: 3
--------

Question: In what part of the world is Mozambique ?
class_name: Location 
class_index: 4
--------

Question: How many continents are there ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: At what age did Rossini stop writing opera ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CPR stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the zodiac sign for August 14 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the term `` The Brooklyn Side '' in bowling ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What tennis player has the nickname `` Nasty '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many continents are there ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: At what age did Rossini stop writing opera ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 01:00:11 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12624'), (b'x-ratelimit-remaining-tokens', b'29610'), (b'x-ratelimit-reset-requests', b'2h57m35.734s'), (b'x-ratelimit-reset-tokens', b'780ms'), (b'x-request-id', b'req_01hz0xs6ncervvtgnmmk0ggtgb'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28bca8b377ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does CPR stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the zodiac sign for August 14 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the term `` The Brooklyn Side '' in bowling ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What tennis player has the nickname `` Nasty '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: In what part of the world is Mozambique ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many continents are there ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: At what age did Rossini stop writing opera ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 01:00:13 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12623'), (b'x-ratelimit-remaining-tokens', b'29607'), (b'x-ratelimit-reset-requests', b'2h57m39.672999999s'), (b'x-ratelimit-reset-tokens', b'786ms'), (b'x-request-id', b'req_01hz0xs8nrfaw8e4tqfn9bz7k0'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28bd76de37ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about a specific event in the life of a composer, which is a descriptive piece of information.
class_name: Description and abstract concept
class_index: 2
responses: [0, 0, 0, 0, 0, 5, 0, 3, 2, 2, 4, 0, 3, 1, 3, 3, 5, 4, 4, 4, 5, 5, 2, 2], targets: [0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5]
num_invalid: 0
Preds tensor: tensor([[1., 0., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 1.],
        [1., 0., 0., 0., 0., 0.],
        [0., 0., 0., 1., 0., 0.],
        [0., 0., 1., 0., 0., 0.],
        [0., 0., 1., 0., 0., 0.],
        [0., 0., 0., 0., 1., 0.],
        [1., 0., 0., 0., 0., 0.],
        [0., 0., 0., 1., 0., 0.],
        [0., 1., 0., 0., 0., 0.],
        [0., 0., 0., 1., 0., 0.],
        [0., 0., 0., 1., 0., 0.],
        [0., 0., 0., 0., 0., 1.],
        [0., 0., 0., 0., 1., 0.],
        [0., 0., 0., 0., 1., 0.],
        [0., 0., 0., 0., 1., 0.],
        [0., 0., 0., 0., 0., 1.],
        [0., 0., 0., 0., 0., 1.],
        [0., 0., 1., 0., 0., 0.],
        [0., 0., 1., 0., 0., 0.]])
Targets tensor: tensor([0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5])
Eval Accuracy 0 proposed: 0.583, F1: 0.538, score: 1.121
best_score: 1.121
best_parameters: OrderedDict([('generator.examples_str', Parameter: Question: What does CPR stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is the zodiac sign for August 14 ?
class_name: Entity 
class_index: 1
--------

Question: What is the origin of the term `` The Brooklyn Side '' in bowling ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What tennis player has the nickname `` Nasty '' ?
class_name: Human being 
class_index: 3
--------

Question: In what part of the world is Mozambique ?
class_name: Location 
class_index: 4
--------

Question: How many continents are there ?
class_name: Numeric value 
class_index: 5
--------
)])
step: 1
train_batch: {'text': ['Where does the U.S. rank among world countries in area ?', 'How can I find out what year a Beanie Baby was introduced ?', "Which company that manufactures video-game hardware sells the `` super system '' ?", 'What country , after Canada and Mexico , is closest to the U.S. ?', 'What famed river was Hernando de Soto the first European to see ?', 'Who was the inventor of silly putty ?', 'Who was nicknamed The Little Corporal ?', 'Who sang about Desmond and Molly Jones ?', 'How did Bob Marley die ?', 'What are the requirements for becoming a citizen of Australia ?'], 'coarse_label': tensor([5, 2, 3, 4, 4, 3, 3, 3, 2, 2]), 'fine_label': tensor([42, 26, 28, 33, 35, 29, 29, 29, 26, 25])}
before random_replace: [Sample(index=24, data={'text': 'What does CPR stand for ?', 'coarse_label': 0, 'fine_label': 1}), Sample(index=1967, data={'text': 'What is the zodiac sign for August 14 ?', 'coarse_label': 1, 'fine_label': 19}), Sample(index=2431, data={'text': "What is the origin of the term `` The Brooklyn Side '' in bowling ?", 'coarse_label': 2, 'fine_label': 25}), Sample(index=28, data={'text': "What tennis player has the nickname `` Nasty '' ?", 'coarse_label': 3, 'fine_label': 29}), Sample(index=1977, data={'text': 'In what part of the world is Mozambique ?', 'coarse_label': 4, 'fine_label': 35}), Sample(index=1900, data={'text': 'How many continents are there ?', 'coarse_label': 5, 'fine_label': 38})]
after random_replace: [Sample(index=2334, data={'text': 'What does the acronym CPR mean ?', 'coarse_label': 0, 'fine_label': 1}), Sample(index=1711, data={'text': "What are some important events of the 1830 's ?", 'coarse_label': 1, 'fine_label': 8}), Sample(index=2431, data={'text': "What is the origin of the term `` The Brooklyn Side '' in bowling ?", 'coarse_label': 2, 'fine_label': 25}), Sample(index=2421, data={'text': 'Who were the 1974 Oscar winners ?', 'coarse_label': 3, 'fine_label': 29}), Sample(index=2216, data={'text': "What city is the setting for Puccini 's opera La Boheme ?", 'coarse_label': 4, 'fine_label': 32}), Sample(index=2697, data={'text': 'What is the chemical reactivity of argon ?', 'coarse_label': 5, 'fine_label': 43})]
data: {'text': 'What does U.S.S.R. stand for ?', 'coarse_label': 0, 'fine_label': 1}
task_input: What does U.S.S.R. stand for ?, corse_label: 0
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What does U.S.S.R. stand for ?', 'examples_str': "Question: What does the acronym CPR mean ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What are some important events of the 1830 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the term `` The Brooklyn Side '' in bowling ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who were the 1974 Oscar winners ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city is the setting for Puccini 's opera La Boheme ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the chemical reactivity of argon ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does the acronym CPR mean ?
class_name: Abbreviation 
class_index: 0
--------

Question: What are some important events of the 1830 's ?
class_name: Entity 
class_index: 1
--------

Question: What is the origin of the term `` The Brooklyn Side '' in bowling ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who were the 1974 Oscar winners ?
class_name: Human being 
class_index: 3
--------

Question: What city is the setting for Puccini 's opera La Boheme ?
class_name: Location 
class_index: 4
--------

Question: What is the chemical reactivity of argon ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What does U.S.S.R. stand for ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the acronym CPR mean ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What are some important events of the 1830 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the term `` The Brooklyn Side '' in bowling ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who were the 1974 Oscar winners ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city is the setting for Puccini 's opera La Boheme ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the chemical reactivity of argon ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does U.S.S.R. stand for ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 01:00:13 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'332'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12623'), (b'x-ratelimit-remaining-tokens', b'29607'), (b'x-ratelimit-reset-requests', b'2h57m41.734s'), (b'x-ratelimit-reset-tokens', b'785ms'), (b'x-request-id', b'req_01hz0xs8y3eyssgq5dd77sa1zs'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28bd91f747ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the acronym CPR mean ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What are some important events of the 1830 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the term `` The Brooklyn Side '' in bowling ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who were the 1974 Oscar winners ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city is the setting for Puccini 's opera La Boheme ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the chemical reactivity of argon ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does U.S.S.R. stand for ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 01:00:15 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12622'), (b'x-ratelimit-remaining-tokens', b'29604'), (b'x-ratelimit-reset-requests', b'2h57m45.674999999s'), (b'x-ratelimit-reset-tokens', b'792ms'), (b'x-request-id', b'req_01hz0xsayefgttp62fe0689g6c'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28be5f8c77ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking for the meaning of the acronym U.S.S.R., which is a common abbreviation.
class_name: ABBR
class_index: 0
data: {'text': 'What is the abbreviated form of the National Bureau of Investigation ?', 'coarse_label': 0, 'fine_label': 0}
task_input: What is the abbreviated form of the National Bureau of Investigation ?, corse_label: 0
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What is the abbreviated form of the National Bureau of Investigation ?', 'examples_str': "Question: What does the acronym CPR mean ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What are some important events of the 1830 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the term `` The Brooklyn Side '' in bowling ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who were the 1974 Oscar winners ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city is the setting for Puccini 's opera La Boheme ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the chemical reactivity of argon ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does the acronym CPR mean ?
class_name: Abbreviation 
class_index: 0
--------

Question: What are some important events of the 1830 's ?
class_name: Entity 
class_index: 1
--------

Question: What is the origin of the term `` The Brooklyn Side '' in bowling ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who were the 1974 Oscar winners ?
class_name: Human being 
class_index: 3
--------

Question: What city is the setting for Puccini 's opera La Boheme ?
class_name: Location 
class_index: 4
--------

Question: What is the chemical reactivity of argon ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What is the abbreviated form of the National Bureau of Investigation ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the acronym CPR mean ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What are some important events of the 1830 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the term `` The Brooklyn Side '' in bowling ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who were the 1974 Oscar winners ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city is the setting for Puccini 's opera La Boheme ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the chemical reactivity of argon ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is the abbreviated form of the National Bureau of Investigation ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 01:00:16 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12622'), (b'x-ratelimit-remaining-tokens', b'29640'), (b'x-ratelimit-reset-requests', b'2h57m47.663999999s'), (b'x-ratelimit-reset-tokens', b'720ms'), (b'x-request-id', b'req_01hz0xsb8zfvfagec1tqbgymvj'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28be81a6e7ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the acronym CPR mean ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What are some important events of the 1830 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the term `` The Brooklyn Side '' in bowling ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who were the 1974 Oscar winners ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city is the setting for Puccini 's opera La Boheme ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the chemical reactivity of argon ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is the abbreviated form of the National Bureau of Investigation ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 01:00:18 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12621'), (b'x-ratelimit-remaining-tokens', b'29594'), (b'x-ratelimit-reset-requests', b'2h57m51.599s'), (b'x-ratelimit-reset-tokens', b'812ms'), (b'x-request-id', b'req_01hz0xsd9ge7wtyv3dvz7jh1ba'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28bf4fd027ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking for the abbreviated form of the National Bureau of Investigation, which is typically represented by the acronym FBI.
class_name: ABBR
class_index: 0
data: {'text': "What do the letters ZIP stand for in the phrase `` ZIP code '' ?", 'coarse_label': 0, 'fine_label': 1}
task_input: What do the letters ZIP stand for in the phrase `` ZIP code '' ?, corse_label: 0
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': "What do the letters ZIP stand for in the phrase `` ZIP code '' ?", 'examples_str': "Question: What does the acronym CPR mean ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What are some important events of the 1830 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the term `` The Brooklyn Side '' in bowling ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who were the 1974 Oscar winners ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city is the setting for Puccini 's opera La Boheme ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the chemical reactivity of argon ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does the acronym CPR mean ?
class_name: Abbreviation 
class_index: 0
--------

Question: What are some important events of the 1830 's ?
class_name: Entity 
class_index: 1
--------

Question: What is the origin of the term `` The Brooklyn Side '' in bowling ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who were the 1974 Oscar winners ?
class_name: Human being 
class_index: 3
--------

Question: What city is the setting for Puccini 's opera La Boheme ?
class_name: Location 
class_index: 4
--------

Question: What is the chemical reactivity of argon ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What do the letters ZIP stand for in the phrase `` ZIP code '' ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the acronym CPR mean ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What are some important events of the 1830 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the term `` The Brooklyn Side '' in bowling ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who were the 1974 Oscar winners ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city is the setting for Puccini 's opera La Boheme ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the chemical reactivity of argon ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What do the letters ZIP stand for in the phrase `` ZIP code '' ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 01:00:18 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12621'), (b'x-ratelimit-remaining-tokens', b'29583'), (b'x-ratelimit-reset-requests', b'2h57m53.771999999s'), (b'x-ratelimit-reset-tokens', b'834ms'), (b'x-request-id', b'req_01hz0xsdgnfcvsynzjg5k60pyw'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28bf66e6c7ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the acronym CPR mean ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What are some important events of the 1830 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the term `` The Brooklyn Side '' in bowling ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who were the 1974 Oscar winners ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city is the setting for Puccini 's opera La Boheme ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the chemical reactivity of argon ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What do the letters ZIP stand for in the phrase `` ZIP code '' ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 01:00:20 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12620'), (b'x-ratelimit-remaining-tokens', b'29595'), (b'x-ratelimit-reset-requests', b'2h57m57.709s'), (b'x-ratelimit-reset-tokens', b'810ms'), (b'x-request-id', b'req_01hz0xsfh4fe591qsx6yeg745g'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28c0359cc7ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the meaning of the letters ZIP, which is a common abbreviation.
class_name: ABBR
class_index: 0
```
data: {'text': 'What does VCR stand for ?', 'coarse_label': 0, 'fine_label': 1}
task_input: What does VCR stand for ?, corse_label: 0
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What does VCR stand for ?', 'examples_str': "Question: What does the acronym CPR mean ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What are some important events of the 1830 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the term `` The Brooklyn Side '' in bowling ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who were the 1974 Oscar winners ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city is the setting for Puccini 's opera La Boheme ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the chemical reactivity of argon ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does the acronym CPR mean ?
class_name: Abbreviation 
class_index: 0
--------

Question: What are some important events of the 1830 's ?
class_name: Entity 
class_index: 1
--------

Question: What is the origin of the term `` The Brooklyn Side '' in bowling ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who were the 1974 Oscar winners ?
class_name: Human being 
class_index: 3
--------

Question: What city is the setting for Puccini 's opera La Boheme ?
class_name: Location 
class_index: 4
--------

Question: What is the chemical reactivity of argon ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What does VCR stand for ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the acronym CPR mean ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What are some important events of the 1830 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the term `` The Brooklyn Side '' in bowling ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who were the 1974 Oscar winners ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city is the setting for Puccini 's opera La Boheme ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the chemical reactivity of argon ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does VCR stand for ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 01:00:20 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12620'), (b'x-ratelimit-remaining-tokens', b'29581'), (b'x-ratelimit-reset-requests', b'2h57m59.775999999s'), (b'x-ratelimit-reset-tokens', b'837ms'), (b'x-request-id', b'req_01hz0xsfr5fawts3xj5bzmyxs5'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28c04bab87ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the acronym CPR mean ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What are some important events of the 1830 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the term `` The Brooklyn Side '' in bowling ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who were the 1974 Oscar winners ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city is the setting for Puccini 's opera La Boheme ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the chemical reactivity of argon ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does VCR stand for ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 01:00:22 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12619'), (b'x-ratelimit-remaining-tokens', b'29605'), (b'x-ratelimit-reset-requests', b'2h58m3.718s'), (b'x-ratelimit-reset-tokens', b'790ms'), (b'x-request-id', b'req_01hz0xshrfes5vmad03epc83c2'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28c119d8c7ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking for the meaning of the acronym VCR, which is a common abbreviation.
class_name: ABBR
class_index: 0
data: {'text': 'What sport can a free-legged pacer compete in ?', 'coarse_label': 1, 'fine_label': 17}
task_input: What sport can a free-legged pacer compete in ?, corse_label: 1
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What sport can a free-legged pacer compete in ?', 'examples_str': "Question: What does the acronym CPR mean ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What are some important events of the 1830 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the term `` The Brooklyn Side '' in bowling ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who were the 1974 Oscar winners ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city is the setting for Puccini 's opera La Boheme ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the chemical reactivity of argon ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does the acronym CPR mean ?
class_name: Abbreviation 
class_index: 0
--------

Question: What are some important events of the 1830 's ?
class_name: Entity 
class_index: 1
--------

Question: What is the origin of the term `` The Brooklyn Side '' in bowling ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who were the 1974 Oscar winners ?
class_name: Human being 
class_index: 3
--------

Question: What city is the setting for Puccini 's opera La Boheme ?
class_name: Location 
class_index: 4
--------

Question: What is the chemical reactivity of argon ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What sport can a free-legged pacer compete in ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the acronym CPR mean ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What are some important events of the 1830 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the term `` The Brooklyn Side '' in bowling ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who were the 1974 Oscar winners ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city is the setting for Puccini 's opera La Boheme ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the chemical reactivity of argon ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What sport can a free-legged pacer compete in ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 01:00:22 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12619'), (b'x-ratelimit-remaining-tokens', b'29593'), (b'x-ratelimit-reset-requests', b'2h58m5.772999999s'), (b'x-ratelimit-reset-tokens', b'813ms'), (b'x-request-id', b'req_01hz0xshzke7wtsdwkd6fp2pn7'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28c130ea97ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the acronym CPR mean ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What are some important events of the 1830 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the term `` The Brooklyn Side '' in bowling ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who were the 1974 Oscar winners ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city is the setting for Puccini 's opera La Boheme ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the chemical reactivity of argon ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What sport can a free-legged pacer compete in ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 01:00:27 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12618'), (b'x-ratelimit-remaining-tokens', b'29600'), (b'x-ratelimit-reset-requests', b'2h58m9.712s'), (b'x-ratelimit-reset-tokens', b'800ms'), (b'x-request-id', b'req_01hz0xsm00ep293gjwzra65k64'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28c1fe8f67ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about a specific sport that a free-legged pacer can participate in, which suggests that the pacer is a type of horse. The class name is Human being because the question is asking about a specific type of horse.
class_name: HUM
class_index: 3
data: {'text': 'What was originally defined as one 1-millionth of the distance from the equator to the Pole ?', 'coarse_label': 1, 'fine_label': 21}
task_input: What was originally defined as one 1-millionth of the distance from the equator to the Pole ?, corse_label: 1
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What was originally defined as one 1-millionth of the distance from the equator to the Pole ?', 'examples_str': "Question: What does the acronym CPR mean ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What are some important events of the 1830 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the term `` The Brooklyn Side '' in bowling ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who were the 1974 Oscar winners ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city is the setting for Puccini 's opera La Boheme ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the chemical reactivity of argon ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does the acronym CPR mean ?
class_name: Abbreviation 
class_index: 0
--------

Question: What are some important events of the 1830 's ?
class_name: Entity 
class_index: 1
--------

Question: What is the origin of the term `` The Brooklyn Side '' in bowling ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who were the 1974 Oscar winners ?
class_name: Human being 
class_index: 3
--------

Question: What city is the setting for Puccini 's opera La Boheme ?
class_name: Location 
class_index: 4
--------

Question: What is the chemical reactivity of argon ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What was originally defined as one 1-millionth of the distance from the equator to the Pole ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the acronym CPR mean ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What are some important events of the 1830 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the term `` The Brooklyn Side '' in bowling ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who were the 1974 Oscar winners ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city is the setting for Puccini 's opera La Boheme ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the chemical reactivity of argon ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What was originally defined as one 1-millionth of the distance from the equator to the Pole ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 01:00:27 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12617'), (b'x-ratelimit-remaining-tokens', b'29149'), (b'x-ratelimit-reset-requests', b'2h58m15.395s'), (b'x-ratelimit-reset-tokens', b'1.702s'), (b'x-request-id', b'req_01hz0xsphees6bx4ak8m2b4vaf'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28c302e127ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is asking about a specific unit of measurement, which is a numeric value.
class_name: NUM
class_index: 5
data: {'text': 'What fuel do airplanes use ?', 'coarse_label': 1, 'fine_label': 18}
task_input: What fuel do airplanes use ?, corse_label: 1
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What fuel do airplanes use ?', 'examples_str': "Question: What does the acronym CPR mean ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What are some important events of the 1830 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the term `` The Brooklyn Side '' in bowling ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who were the 1974 Oscar winners ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city is the setting for Puccini 's opera La Boheme ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the chemical reactivity of argon ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does the acronym CPR mean ?
class_name: Abbreviation 
class_index: 0
--------

Question: What are some important events of the 1830 's ?
class_name: Entity 
class_index: 1
--------

Question: What is the origin of the term `` The Brooklyn Side '' in bowling ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who were the 1974 Oscar winners ?
class_name: Human being 
class_index: 3
--------

Question: What city is the setting for Puccini 's opera La Boheme ?
class_name: Location 
class_index: 4
--------

Question: What is the chemical reactivity of argon ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What fuel do airplanes use ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the acronym CPR mean ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What are some important events of the 1830 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the term `` The Brooklyn Side '' in bowling ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who were the 1974 Oscar winners ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city is the setting for Puccini 's opera La Boheme ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the chemical reactivity of argon ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What fuel do airplanes use ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 01:00:27 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12617'), (b'x-ratelimit-remaining-tokens', b'29247'), (b'x-ratelimit-reset-requests', b'2h58m17.738s'), (b'x-ratelimit-reset-tokens', b'1.505s'), (b'x-request-id', b'req_01hz0xspsnewas9chc5v7jzzk8'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28c31df3b7ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the acronym CPR mean ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What are some important events of the 1830 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the term `` The Brooklyn Side '' in bowling ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who were the 1974 Oscar winners ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city is the setting for Puccini 's opera La Boheme ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the chemical reactivity of argon ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What fuel do airplanes use ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 01:00:30 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12616'), (b'x-ratelimit-remaining-tokens', b'29604'), (b'x-ratelimit-reset-requests', b'2h58m21.670999999s'), (b'x-ratelimit-reset-tokens', b'792ms'), (b'x-request-id', b'req_01hz0xsrt9ezgbb6dvy37ys5ph'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28c3eba0f7ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the fuel used by airplanes, which is a specific type of information.
class_name: ABBR
class_index: 0
data: {'text': 'On what T.V. show could Tom Terrific be found ?', 'coarse_label': 1, 'fine_label': 5}
task_input: On what T.V. show could Tom Terrific be found ?, corse_label: 1
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'On what T.V. show could Tom Terrific be found ?', 'examples_str': "Question: What does the acronym CPR mean ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What are some important events of the 1830 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the term `` The Brooklyn Side '' in bowling ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who were the 1974 Oscar winners ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city is the setting for Puccini 's opera La Boheme ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the chemical reactivity of argon ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does the acronym CPR mean ?
class_name: Abbreviation 
class_index: 0
--------

Question: What are some important events of the 1830 's ?
class_name: Entity 
class_index: 1
--------

Question: What is the origin of the term `` The Brooklyn Side '' in bowling ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who were the 1974 Oscar winners ?
class_name: Human being 
class_index: 3
--------

Question: What city is the setting for Puccini 's opera La Boheme ?
class_name: Location 
class_index: 4
--------

Question: What is the chemical reactivity of argon ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: On what T.V. show could Tom Terrific be found ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the acronym CPR mean ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What are some important events of the 1830 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the term `` The Brooklyn Side '' in bowling ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who were the 1974 Oscar winners ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city is the setting for Puccini 's opera La Boheme ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the chemical reactivity of argon ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: On what T.V. show could Tom Terrific be found ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 01:00:30 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12616'), (b'x-ratelimit-remaining-tokens', b'29595'), (b'x-ratelimit-reset-requests', b'2h58m23.770999999s'), (b'x-ratelimit-reset-tokens', b'810ms'), (b'x-request-id', b'req_01hz0xss1eehyschsnsh9d24p4'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28c402b3e7ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the acronym CPR mean ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What are some important events of the 1830 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the term `` The Brooklyn Side '' in bowling ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who were the 1974 Oscar winners ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city is the setting for Puccini 's opera La Boheme ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the chemical reactivity of argon ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: On what T.V. show could Tom Terrific be found ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 01:00:32 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12615'), (b'x-ratelimit-remaining-tokens', b'29600'), (b'x-ratelimit-reset-requests', b'2h58m27.705s'), (b'x-ratelimit-reset-tokens', b'800ms'), (b'x-request-id', b'req_01hz0xsv20ehyr4jya3574shkd'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28c4d1db47ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is about a TV show, and the main character Tom Terrific is a human being, so it's likely to be classified as a human being.
class_name: HUM
class_index: 3
```
data: {'text': 'How do you select wine ?', 'coarse_label': 2, 'fine_label': 26}
task_input: How do you select wine ?, corse_label: 2
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'How do you select wine ?', 'examples_str': "Question: What does the acronym CPR mean ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What are some important events of the 1830 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the term `` The Brooklyn Side '' in bowling ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who were the 1974 Oscar winners ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city is the setting for Puccini 's opera La Boheme ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the chemical reactivity of argon ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does the acronym CPR mean ?
class_name: Abbreviation 
class_index: 0
--------

Question: What are some important events of the 1830 's ?
class_name: Entity 
class_index: 1
--------

Question: What is the origin of the term `` The Brooklyn Side '' in bowling ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who were the 1974 Oscar winners ?
class_name: Human being 
class_index: 3
--------

Question: What city is the setting for Puccini 's opera La Boheme ?
class_name: Location 
class_index: 4
--------

Question: What is the chemical reactivity of argon ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: How do you select wine ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the acronym CPR mean ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What are some important events of the 1830 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the term `` The Brooklyn Side '' in bowling ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who were the 1974 Oscar winners ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city is the setting for Puccini 's opera La Boheme ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the chemical reactivity of argon ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: How do you select wine ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 01:00:32 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12615'), (b'x-ratelimit-remaining-tokens', b'29611'), (b'x-ratelimit-reset-requests', b'2h58m29.668999999s'), (b'x-ratelimit-reset-tokens', b'778ms'), (b'x-request-id', b'req_01hz0xsvccfzav1fn3fnmy40h9'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28c4f2f337ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the acronym CPR mean ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What are some important events of the 1830 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the term `` The Brooklyn Side '' in bowling ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who were the 1974 Oscar winners ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city is the setting for Puccini 's opera La Boheme ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the chemical reactivity of argon ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: How do you select wine ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 01:00:34 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12614'), (b'x-ratelimit-remaining-tokens', b'29605'), (b'x-ratelimit-reset-requests', b'2h58m33.608s'), (b'x-ratelimit-reset-tokens', b'790ms'), (b'x-request-id', b'req_01hz0xsxcse1yagj4y2ed1f5kr'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28c5c0a017ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is about a process or a method, which is related to a human activity, and it seems to be asking for a general guideline or a set of rules.
class_name: Description and abstract concept
class_index: 2
data: {'text': "What are some children 's rights ?", 'coarse_label': 2, 'fine_label': 25}
task_input: What are some children 's rights ?, corse_label: 2
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': "What are some children 's rights ?", 'examples_str': "Question: What does the acronym CPR mean ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What are some important events of the 1830 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the term `` The Brooklyn Side '' in bowling ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who were the 1974 Oscar winners ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city is the setting for Puccini 's opera La Boheme ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the chemical reactivity of argon ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does the acronym CPR mean ?
class_name: Abbreviation 
class_index: 0
--------

Question: What are some important events of the 1830 's ?
class_name: Entity 
class_index: 1
--------

Question: What is the origin of the term `` The Brooklyn Side '' in bowling ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who were the 1974 Oscar winners ?
class_name: Human being 
class_index: 3
--------

Question: What city is the setting for Puccini 's opera La Boheme ?
class_name: Location 
class_index: 4
--------

Question: What is the chemical reactivity of argon ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What are some children 's rights ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the acronym CPR mean ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What are some important events of the 1830 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the term `` The Brooklyn Side '' in bowling ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who were the 1974 Oscar winners ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city is the setting for Puccini 's opera La Boheme ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the chemical reactivity of argon ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What are some children 's rights ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 01:00:34 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12614'), (b'x-ratelimit-remaining-tokens', b'29578'), (b'x-ratelimit-reset-requests', b'2h58m35.712999999s'), (b'x-ratelimit-reset-tokens', b'843ms'), (b'x-request-id', b'req_01hz0xsxnsew1s6ezcm6chfjj2'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28c5ddb9d7ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the acronym CPR mean ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What are some important events of the 1830 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the term `` The Brooklyn Side '' in bowling ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who were the 1974 Oscar winners ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city is the setting for Puccini 's opera La Boheme ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the chemical reactivity of argon ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What are some children 's rights ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 01:00:37 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12613'), (b'x-ratelimit-remaining-tokens', b'29603'), (b'x-ratelimit-reset-requests', b'2h58m39.652s'), (b'x-ratelimit-reset-tokens', b'794ms'), (b'x-request-id', b'req_01hz0xszp6ezzb3k53jshfc6f9'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28c6abe297ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the rights of children, which is a concept that can be described or explained, but it's not a specific entity, location, or numeric value.
class_name: Description and abstract concept
class_index: 2
data: {'text': 'What are some fun things to do in Cozumel , Mexico for teenagers ?', 'coarse_label': 2, 'fine_label': 25}
task_input: What are some fun things to do in Cozumel , Mexico for teenagers ?, corse_label: 2
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What are some fun things to do in Cozumel , Mexico for teenagers ?', 'examples_str': "Question: What does the acronym CPR mean ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What are some important events of the 1830 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the term `` The Brooklyn Side '' in bowling ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who were the 1974 Oscar winners ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city is the setting for Puccini 's opera La Boheme ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the chemical reactivity of argon ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does the acronym CPR mean ?
class_name: Abbreviation 
class_index: 0
--------

Question: What are some important events of the 1830 's ?
class_name: Entity 
class_index: 1
--------

Question: What is the origin of the term `` The Brooklyn Side '' in bowling ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who were the 1974 Oscar winners ?
class_name: Human being 
class_index: 3
--------

Question: What city is the setting for Puccini 's opera La Boheme ?
class_name: Location 
class_index: 4
--------

Question: What is the chemical reactivity of argon ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What are some fun things to do in Cozumel , Mexico for teenagers ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the acronym CPR mean ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What are some important events of the 1830 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the term `` The Brooklyn Side '' in bowling ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who were the 1974 Oscar winners ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city is the setting for Puccini 's opera La Boheme ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the chemical reactivity of argon ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What are some fun things to do in Cozumel , Mexico for teenagers ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 01:00:37 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12613'), (b'x-ratelimit-remaining-tokens', b'29571'), (b'x-ratelimit-reset-requests', b'2h58m41.764999999s'), (b'x-ratelimit-reset-tokens', b'857ms'), (b'x-request-id', b'req_01hz0xszxjfzra2rk3p7nmqz44'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28c6c3f7f7ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the acronym CPR mean ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What are some important events of the 1830 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the term `` The Brooklyn Side '' in bowling ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who were the 1974 Oscar winners ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city is the setting for Puccini 's opera La Boheme ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the chemical reactivity of argon ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What are some fun things to do in Cozumel , Mexico for teenagers ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 01:00:39 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12612'), (b'x-ratelimit-remaining-tokens', b'29595'), (b'x-ratelimit-reset-requests', b'2h58m45.706s'), (b'x-ratelimit-reset-tokens', b'810ms'), (b'x-request-id', b'req_01hz0xt1xxep3a7p66r1fx9hnf'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28c7919f07ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is asking about activities to do in a specific location, which is a common inquiry about a location.
class_name: Location
class_index: 4
data: {'text': 'What does hazmat stand for ?', 'coarse_label': 2, 'fine_label': 24}
task_input: What does hazmat stand for ?, corse_label: 2
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What does hazmat stand for ?', 'examples_str': "Question: What does the acronym CPR mean ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What are some important events of the 1830 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the term `` The Brooklyn Side '' in bowling ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who were the 1974 Oscar winners ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city is the setting for Puccini 's opera La Boheme ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the chemical reactivity of argon ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does the acronym CPR mean ?
class_name: Abbreviation 
class_index: 0
--------

Question: What are some important events of the 1830 's ?
class_name: Entity 
class_index: 1
--------

Question: What is the origin of the term `` The Brooklyn Side '' in bowling ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who were the 1974 Oscar winners ?
class_name: Human being 
class_index: 3
--------

Question: What city is the setting for Puccini 's opera La Boheme ?
class_name: Location 
class_index: 4
--------

Question: What is the chemical reactivity of argon ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What does hazmat stand for ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the acronym CPR mean ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What are some important events of the 1830 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the term `` The Brooklyn Side '' in bowling ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who were the 1974 Oscar winners ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city is the setting for Puccini 's opera La Boheme ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the chemical reactivity of argon ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does hazmat stand for ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 01:00:39 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12612'), (b'x-ratelimit-remaining-tokens', b'29581'), (b'x-ratelimit-reset-requests', b'2h58m47.745s'), (b'x-ratelimit-reset-tokens', b'837ms'), (b'x-request-id', b'req_01hz0xt25xerwsmmg02jj5trsw'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28c7aab507ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the acronym CPR mean ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What are some important events of the 1830 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the term `` The Brooklyn Side '' in bowling ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who were the 1974 Oscar winners ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city is the setting for Puccini 's opera La Boheme ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the chemical reactivity of argon ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does hazmat stand for ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 01:00:41 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12611'), (b'x-ratelimit-remaining-tokens', b'29604'), (b'x-ratelimit-reset-requests', b'2h58m51.684999999s'), (b'x-ratelimit-reset-tokens', b'792ms'), (b'x-request-id', b'req_01hz0xt469fe688mkabkswg49y'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28c878e8d7ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the meaning of an acronym, which is a common use case for abbreviations.
class_name: ABBR
class_index: 0
data: {'text': "Who is the nebbish that is Marvel 's official mascot ?", 'coarse_label': 3, 'fine_label': 29}
task_input: Who is the nebbish that is Marvel 's official mascot ?, corse_label: 3
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': "Who is the nebbish that is Marvel 's official mascot ?", 'examples_str': "Question: What does the acronym CPR mean ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What are some important events of the 1830 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the term `` The Brooklyn Side '' in bowling ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who were the 1974 Oscar winners ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city is the setting for Puccini 's opera La Boheme ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the chemical reactivity of argon ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does the acronym CPR mean ?
class_name: Abbreviation 
class_index: 0
--------

Question: What are some important events of the 1830 's ?
class_name: Entity 
class_index: 1
--------

Question: What is the origin of the term `` The Brooklyn Side '' in bowling ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who were the 1974 Oscar winners ?
class_name: Human being 
class_index: 3
--------

Question: What city is the setting for Puccini 's opera La Boheme ?
class_name: Location 
class_index: 4
--------

Question: What is the chemical reactivity of argon ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Who is the nebbish that is Marvel 's official mascot ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the acronym CPR mean ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What are some important events of the 1830 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the term `` The Brooklyn Side '' in bowling ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who were the 1974 Oscar winners ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city is the setting for Puccini 's opera La Boheme ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the chemical reactivity of argon ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Who is the nebbish that is Marvel 's official mascot ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 01:00:41 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12611'), (b'x-ratelimit-remaining-tokens', b'29612'), (b'x-ratelimit-reset-requests', b'2h58m53.705s'), (b'x-ratelimit-reset-tokens', b'776ms'), (b'x-request-id', b'req_01hz0xt4fhezzbewymqb0y6meg'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28c8968327ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the acronym CPR mean ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What are some important events of the 1830 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the term `` The Brooklyn Side '' in bowling ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who were the 1974 Oscar winners ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city is the setting for Puccini 's opera La Boheme ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the chemical reactivity of argon ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Who is the nebbish that is Marvel 's official mascot ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 01:00:44 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12610'), (b'x-ratelimit-remaining-tokens', b'29598'), (b'x-ratelimit-reset-requests', b'2h58m57.64s'), (b'x-ratelimit-reset-tokens', b'804ms'), (b'x-request-id', b'req_01hz0xt6g1fvgayzx5z844vbd8'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28c964a5f7ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about a character in a comic book universe, which is a human being.
class_name: HUM
class_index: 3
data: {'text': 'What Japanese electronics company was named for a coastal city northeast of Tokyo ?', 'coarse_label': 3, 'fine_label': 28}
task_input: What Japanese electronics company was named for a coastal city northeast of Tokyo ?, corse_label: 3
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What Japanese electronics company was named for a coastal city northeast of Tokyo ?', 'examples_str': "Question: What does the acronym CPR mean ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What are some important events of the 1830 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the term `` The Brooklyn Side '' in bowling ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who were the 1974 Oscar winners ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city is the setting for Puccini 's opera La Boheme ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the chemical reactivity of argon ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does the acronym CPR mean ?
class_name: Abbreviation 
class_index: 0
--------

Question: What are some important events of the 1830 's ?
class_name: Entity 
class_index: 1
--------

Question: What is the origin of the term `` The Brooklyn Side '' in bowling ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who were the 1974 Oscar winners ?
class_name: Human being 
class_index: 3
--------

Question: What city is the setting for Puccini 's opera La Boheme ?
class_name: Location 
class_index: 4
--------

Question: What is the chemical reactivity of argon ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What Japanese electronics company was named for a coastal city northeast of Tokyo ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the acronym CPR mean ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What are some important events of the 1830 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the term `` The Brooklyn Side '' in bowling ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who were the 1974 Oscar winners ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city is the setting for Puccini 's opera La Boheme ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the chemical reactivity of argon ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What Japanese electronics company was named for a coastal city northeast of Tokyo ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 01:00:44 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12610'), (b'x-ratelimit-remaining-tokens', b'29587'), (b'x-ratelimit-reset-requests', b'2h58m59.743s'), (b'x-ratelimit-reset-tokens', b'825ms'), (b'x-request-id', b'req_01hz0xt6r3fzbavg4sybn74spg'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28c97ebca7ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the acronym CPR mean ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What are some important events of the 1830 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the term `` The Brooklyn Side '' in bowling ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who were the 1974 Oscar winners ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city is the setting for Puccini 's opera La Boheme ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the chemical reactivity of argon ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What Japanese electronics company was named for a coastal city northeast of Tokyo ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 01:00:46 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12609'), (b'x-ratelimit-remaining-tokens', b'29591'), (b'x-ratelimit-reset-requests', b'2h59m3.687999999s'), (b'x-ratelimit-reset-tokens', b'818ms'), (b'x-request-id', b'req_01hz0xt8rae7y9370fdsn2x65e'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28ca4cf4e7ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about a specific Japanese electronics company, which is a type of entity.
class_name: Entity
class_index: 1
data: {'text': 'Who was Maria Theresa ?', 'coarse_label': 3, 'fine_label': 31}
task_input: Who was Maria Theresa ?, corse_label: 3
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'Who was Maria Theresa ?', 'examples_str': "Question: What does the acronym CPR mean ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What are some important events of the 1830 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the term `` The Brooklyn Side '' in bowling ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who were the 1974 Oscar winners ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city is the setting for Puccini 's opera La Boheme ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the chemical reactivity of argon ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does the acronym CPR mean ?
class_name: Abbreviation 
class_index: 0
--------

Question: What are some important events of the 1830 's ?
class_name: Entity 
class_index: 1
--------

Question: What is the origin of the term `` The Brooklyn Side '' in bowling ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who were the 1974 Oscar winners ?
class_name: Human being 
class_index: 3
--------

Question: What city is the setting for Puccini 's opera La Boheme ?
class_name: Location 
class_index: 4
--------

Question: What is the chemical reactivity of argon ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Who was Maria Theresa ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the acronym CPR mean ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What are some important events of the 1830 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the term `` The Brooklyn Side '' in bowling ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who were the 1974 Oscar winners ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city is the setting for Puccini 's opera La Boheme ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the chemical reactivity of argon ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Who was Maria Theresa ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 01:00:46 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12609'), (b'x-ratelimit-remaining-tokens', b'29592'), (b'x-ratelimit-reset-requests', b'2h59m5.765999999s'), (b'x-ratelimit-reset-tokens', b'816ms'), (b'x-request-id', b'req_01hz0xt8znerx9kywngmbsr11p'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28ca628a27ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the acronym CPR mean ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What are some important events of the 1830 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the term `` The Brooklyn Side '' in bowling ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who were the 1974 Oscar winners ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city is the setting for Puccini 's opera La Boheme ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the chemical reactivity of argon ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Who was Maria Theresa ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 01:00:48 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12608'), (b'x-ratelimit-remaining-tokens', b'29606'), (b'x-ratelimit-reset-requests', b'2h59m9.71s'), (b'x-ratelimit-reset-tokens', b'788ms'), (b'x-request-id', b'req_01hz0xtazxezgr5ytakab3dyj1'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28cb31c5d7ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about a historical figure, which is typically a human being.
class_name: HUM
class_index: 3
data: {'text': "What was the name of the director of the movie `` Jaws '' ?", 'coarse_label': 3, 'fine_label': 29}
task_input: What was the name of the director of the movie `` Jaws '' ?, corse_label: 3
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': "What was the name of the director of the movie `` Jaws '' ?", 'examples_str': "Question: What does the acronym CPR mean ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What are some important events of the 1830 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the term `` The Brooklyn Side '' in bowling ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who were the 1974 Oscar winners ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city is the setting for Puccini 's opera La Boheme ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the chemical reactivity of argon ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does the acronym CPR mean ?
class_name: Abbreviation 
class_index: 0
--------

Question: What are some important events of the 1830 's ?
class_name: Entity 
class_index: 1
--------

Question: What is the origin of the term `` The Brooklyn Side '' in bowling ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who were the 1974 Oscar winners ?
class_name: Human being 
class_index: 3
--------

Question: What city is the setting for Puccini 's opera La Boheme ?
class_name: Location 
class_index: 4
--------

Question: What is the chemical reactivity of argon ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What was the name of the director of the movie `` Jaws '' ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the acronym CPR mean ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What are some important events of the 1830 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the term `` The Brooklyn Side '' in bowling ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who were the 1974 Oscar winners ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city is the setting for Puccini 's opera La Boheme ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the chemical reactivity of argon ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What was the name of the director of the movie `` Jaws '' ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 01:00:48 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12608'), (b'x-ratelimit-remaining-tokens', b'29601'), (b'x-ratelimit-reset-requests', b'2h59m11.773999999s'), (b'x-ratelimit-reset-tokens', b'797ms'), (b'x-request-id', b'req_01hz0xtb70fay8nww1e8jnv220'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28cb47d9f7ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the acronym CPR mean ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What are some important events of the 1830 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the term `` The Brooklyn Side '' in bowling ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who were the 1974 Oscar winners ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city is the setting for Puccini 's opera La Boheme ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the chemical reactivity of argon ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What was the name of the director of the movie `` Jaws '' ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 01:00:50 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12607'), (b'x-ratelimit-remaining-tokens', b'29597'), (b'x-ratelimit-reset-requests', b'2h59m15.717s'), (b'x-ratelimit-reset-tokens', b'806ms'), (b'x-request-id', b'req_01hz0xtd79fadrjb98fes66q3q'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28cc159357ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking for the name of a person, which is a characteristic of a human being.
class_name: HUM
class_index: 3
```
data: {'text': 'Which area produces the least acidic coffee ?', 'coarse_label': 4, 'fine_label': 35}
task_input: Which area produces the least acidic coffee ?, corse_label: 4
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'Which area produces the least acidic coffee ?', 'examples_str': "Question: What does the acronym CPR mean ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What are some important events of the 1830 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the term `` The Brooklyn Side '' in bowling ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who were the 1974 Oscar winners ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city is the setting for Puccini 's opera La Boheme ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the chemical reactivity of argon ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does the acronym CPR mean ?
class_name: Abbreviation 
class_index: 0
--------

Question: What are some important events of the 1830 's ?
class_name: Entity 
class_index: 1
--------

Question: What is the origin of the term `` The Brooklyn Side '' in bowling ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who were the 1974 Oscar winners ?
class_name: Human being 
class_index: 3
--------

Question: What city is the setting for Puccini 's opera La Boheme ?
class_name: Location 
class_index: 4
--------

Question: What is the chemical reactivity of argon ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Which area produces the least acidic coffee ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the acronym CPR mean ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What are some important events of the 1830 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the term `` The Brooklyn Side '' in bowling ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who were the 1974 Oscar winners ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city is the setting for Puccini 's opera La Boheme ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the chemical reactivity of argon ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Which area produces the least acidic coffee ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 01:00:51 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12607'), (b'x-ratelimit-remaining-tokens', b'29581'), (b'x-ratelimit-reset-requests', b'2h59m17.774999999s'), (b'x-ratelimit-reset-tokens', b'838ms'), (b'x-request-id', b'req_01hz0xtdebfqkrshy5cbbcxr8d'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28cc2ca377ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the acronym CPR mean ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What are some important events of the 1830 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the term `` The Brooklyn Side '' in bowling ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who were the 1974 Oscar winners ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city is the setting for Puccini 's opera La Boheme ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the chemical reactivity of argon ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Which area produces the least acidic coffee ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 01:00:53 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12606'), (b'x-ratelimit-remaining-tokens', b'29600'), (b'x-ratelimit-reset-requests', b'2h59m21.717s'), (b'x-ratelimit-reset-tokens', b'800ms'), (b'x-request-id', b'req_01hz0xtfene7y9dfwxxxgdn0nt'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28ccf9e257ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is asking about a specific type of coffee, which is a tangible product, and the question is seeking a descriptive answer about its properties.
class_name: Description and abstract concept
class_index: 2
data: {'text': 'What ocean is the largest in the world ?', 'coarse_label': 4, 'fine_label': 35}
task_input: What ocean is the largest in the world ?, corse_label: 4
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What ocean is the largest in the world ?', 'examples_str': "Question: What does the acronym CPR mean ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What are some important events of the 1830 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the term `` The Brooklyn Side '' in bowling ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who were the 1974 Oscar winners ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city is the setting for Puccini 's opera La Boheme ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the chemical reactivity of argon ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does the acronym CPR mean ?
class_name: Abbreviation 
class_index: 0
--------

Question: What are some important events of the 1830 's ?
class_name: Entity 
class_index: 1
--------

Question: What is the origin of the term `` The Brooklyn Side '' in bowling ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who were the 1974 Oscar winners ?
class_name: Human being 
class_index: 3
--------

Question: What city is the setting for Puccini 's opera La Boheme ?
class_name: Location 
class_index: 4
--------

Question: What is the chemical reactivity of argon ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What ocean is the largest in the world ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the acronym CPR mean ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What are some important events of the 1830 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the term `` The Brooklyn Side '' in bowling ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who were the 1974 Oscar winners ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city is the setting for Puccini 's opera La Boheme ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the chemical reactivity of argon ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What ocean is the largest in the world ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 01:00:53 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12606'), (b'x-ratelimit-remaining-tokens', b'29583'), (b'x-ratelimit-reset-requests', b'2h59m23.741s'), (b'x-ratelimit-reset-tokens', b'834ms'), (b'x-request-id', b'req_01hz0xtfpsfcxvbchkxdr2738x'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28cd14faa7ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the acronym CPR mean ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What are some important events of the 1830 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the term `` The Brooklyn Side '' in bowling ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who were the 1974 Oscar winners ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city is the setting for Puccini 's opera La Boheme ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the chemical reactivity of argon ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What ocean is the largest in the world ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 01:00:55 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12605'), (b'x-ratelimit-remaining-tokens', b'29601'), (b'x-ratelimit-reset-requests', b'2h59m27.686999999s'), (b'x-ratelimit-reset-tokens', b'798ms'), (b'x-request-id', b'req_01hz0xthpzeyvsbz3km3vfzg7p'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28cde1a2e7ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the largest ocean in the world, which is a geographical location.
class_name: Location
class_index: 4
data: {'text': "What South American capital is the world 's highest ?", 'coarse_label': 4, 'fine_label': 32}
task_input: What South American capital is the world 's highest ?, corse_label: 4
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': "What South American capital is the world 's highest ?", 'examples_str': "Question: What does the acronym CPR mean ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What are some important events of the 1830 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the term `` The Brooklyn Side '' in bowling ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who were the 1974 Oscar winners ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city is the setting for Puccini 's opera La Boheme ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the chemical reactivity of argon ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does the acronym CPR mean ?
class_name: Abbreviation 
class_index: 0
--------

Question: What are some important events of the 1830 's ?
class_name: Entity 
class_index: 1
--------

Question: What is the origin of the term `` The Brooklyn Side '' in bowling ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who were the 1974 Oscar winners ?
class_name: Human being 
class_index: 3
--------

Question: What city is the setting for Puccini 's opera La Boheme ?
class_name: Location 
class_index: 4
--------

Question: What is the chemical reactivity of argon ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What South American capital is the world 's highest ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the acronym CPR mean ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What are some important events of the 1830 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the term `` The Brooklyn Side '' in bowling ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who were the 1974 Oscar winners ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city is the setting for Puccini 's opera La Boheme ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the chemical reactivity of argon ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What South American capital is the world 's highest ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 01:00:55 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12605'), (b'x-ratelimit-remaining-tokens', b'29593'), (b'x-ratelimit-reset-requests', b'2h59m29.772999999s'), (b'x-ratelimit-reset-tokens', b'813ms'), (b'x-request-id', b'req_01hz0xthy3fadvb6wb7ptz2gj8'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28cdf8b847ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the acronym CPR mean ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What are some important events of the 1830 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the term `` The Brooklyn Side '' in bowling ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who were the 1974 Oscar winners ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city is the setting for Puccini 's opera La Boheme ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the chemical reactivity of argon ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What South American capital is the world 's highest ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 01:00:57 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12604'), (b'x-ratelimit-remaining-tokens', b'29598'), (b'x-ratelimit-reset-requests', b'2h59m33.707s'), (b'x-ratelimit-reset-tokens', b'804ms'), (b'x-request-id', b'req_01hz0xtkynfhbb6eqt12e42rdw'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28cec6e047ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about a geographical location, specifically the capital of a country in South America.
class_name: Location
class_index: 4
data: {'text': 'What North American city boasts the biggest Polish population ?', 'coarse_label': 4, 'fine_label': 32}
task_input: What North American city boasts the biggest Polish population ?, corse_label: 4
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What North American city boasts the biggest Polish population ?', 'examples_str': "Question: What does the acronym CPR mean ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What are some important events of the 1830 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the term `` The Brooklyn Side '' in bowling ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who were the 1974 Oscar winners ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city is the setting for Puccini 's opera La Boheme ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the chemical reactivity of argon ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does the acronym CPR mean ?
class_name: Abbreviation 
class_index: 0
--------

Question: What are some important events of the 1830 's ?
class_name: Entity 
class_index: 1
--------

Question: What is the origin of the term `` The Brooklyn Side '' in bowling ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who were the 1974 Oscar winners ?
class_name: Human being 
class_index: 3
--------

Question: What city is the setting for Puccini 's opera La Boheme ?
class_name: Location 
class_index: 4
--------

Question: What is the chemical reactivity of argon ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What North American city boasts the biggest Polish population ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the acronym CPR mean ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What are some important events of the 1830 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the term `` The Brooklyn Side '' in bowling ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who were the 1974 Oscar winners ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city is the setting for Puccini 's opera La Boheme ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the chemical reactivity of argon ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What North American city boasts the biggest Polish population ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 01:00:57 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12604'), (b'x-ratelimit-remaining-tokens', b'29591'), (b'x-ratelimit-reset-requests', b'2h59m35.746s'), (b'x-ratelimit-reset-tokens', b'817ms'), (b'x-request-id', b'req_01hz0xtm6mftwtc1xxzb5se53a'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28cee0f777ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the acronym CPR mean ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What are some important events of the 1830 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the term `` The Brooklyn Side '' in bowling ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who were the 1974 Oscar winners ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city is the setting for Puccini 's opera La Boheme ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the chemical reactivity of argon ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What North American city boasts the biggest Polish population ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 01:01:00 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12603'), (b'x-ratelimit-remaining-tokens', b'29596'), (b'x-ratelimit-reset-requests', b'2h59m39.671999999s'), (b'x-ratelimit-reset-tokens', b'808ms'), (b'x-request-id', b'req_01hz0xtp7eew2txsfq6qrxtnkm'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28cfadadf7ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about a specific city in North America with a notable Polish population, which is a geographic location.
class_name: Location
class_index: 4
data: {'text': "Independent silversmith 's account for what percentage of silver production ?", 'coarse_label': 5, 'fine_label': 45}
task_input: Independent silversmith 's account for what percentage of silver production ?, corse_label: 5
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': "Independent silversmith 's account for what percentage of silver production ?", 'examples_str': "Question: What does the acronym CPR mean ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What are some important events of the 1830 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the term `` The Brooklyn Side '' in bowling ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who were the 1974 Oscar winners ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city is the setting for Puccini 's opera La Boheme ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the chemical reactivity of argon ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does the acronym CPR mean ?
class_name: Abbreviation 
class_index: 0
--------

Question: What are some important events of the 1830 's ?
class_name: Entity 
class_index: 1
--------

Question: What is the origin of the term `` The Brooklyn Side '' in bowling ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who were the 1974 Oscar winners ?
class_name: Human being 
class_index: 3
--------

Question: What city is the setting for Puccini 's opera La Boheme ?
class_name: Location 
class_index: 4
--------

Question: What is the chemical reactivity of argon ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Independent silversmith 's account for what percentage of silver production ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the acronym CPR mean ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What are some important events of the 1830 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the term `` The Brooklyn Side '' in bowling ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who were the 1974 Oscar winners ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city is the setting for Puccini 's opera La Boheme ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the chemical reactivity of argon ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Independent silversmith 's account for what percentage of silver production ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 01:01:00 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12603'), (b'x-ratelimit-remaining-tokens', b'29588'), (b'x-ratelimit-reset-requests', b'2h59m41.772999999s'), (b'x-ratelimit-reset-tokens', b'823ms'), (b'x-request-id', b'req_01hz0xtpejezhtp972q86hekn2'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28cfc6c5a7ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the acronym CPR mean ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What are some important events of the 1830 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the term `` The Brooklyn Side '' in bowling ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who were the 1974 Oscar winners ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city is the setting for Puccini 's opera La Boheme ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the chemical reactivity of argon ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Independent silversmith 's account for what percentage of silver production ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 01:01:02 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12602'), (b'x-ratelimit-remaining-tokens', b'29592'), (b'x-ratelimit-reset-requests', b'2h59m45.708s'), (b'x-ratelimit-reset-tokens', b'816ms'), (b'x-request-id', b'req_01hz0xtrf3fcxtjx5whh1pk42v'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28d094efb7ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about a specific percentage of silver production, which is a measurable value.
class_name: Numeric value
class_index: 5
data: {'text': 'How old is the universe ?', 'coarse_label': 5, 'fine_label': 44}
task_input: How old is the universe ?, corse_label: 5
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'How old is the universe ?', 'examples_str': "Question: What does the acronym CPR mean ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What are some important events of the 1830 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the term `` The Brooklyn Side '' in bowling ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who were the 1974 Oscar winners ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city is the setting for Puccini 's opera La Boheme ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the chemical reactivity of argon ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does the acronym CPR mean ?
class_name: Abbreviation 
class_index: 0
--------

Question: What are some important events of the 1830 's ?
class_name: Entity 
class_index: 1
--------

Question: What is the origin of the term `` The Brooklyn Side '' in bowling ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who were the 1974 Oscar winners ?
class_name: Human being 
class_index: 3
--------

Question: What city is the setting for Puccini 's opera La Boheme ?
class_name: Location 
class_index: 4
--------

Question: What is the chemical reactivity of argon ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: How old is the universe ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the acronym CPR mean ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What are some important events of the 1830 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the term `` The Brooklyn Side '' in bowling ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who were the 1974 Oscar winners ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city is the setting for Puccini 's opera La Boheme ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the chemical reactivity of argon ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: How old is the universe ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 01:01:02 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12602'), (b'x-ratelimit-remaining-tokens', b'29631'), (b'x-ratelimit-reset-requests', b'2h59m47.684s'), (b'x-ratelimit-reset-tokens', b'737ms'), (b'x-request-id', b'req_01hz0xtrs0fae8j5g0j72p7zzz'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28d0b48677ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the acronym CPR mean ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What are some important events of the 1830 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the term `` The Brooklyn Side '' in bowling ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who were the 1974 Oscar winners ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city is the setting for Puccini 's opera La Boheme ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the chemical reactivity of argon ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: How old is the universe ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 01:01:04 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12601'), (b'x-ratelimit-remaining-tokens', b'29605'), (b'x-ratelimit-reset-requests', b'2h59m51.635999999s'), (b'x-ratelimit-reset-tokens', b'790ms'), (b'x-request-id', b'req_01hz0xtts0fhbtahnmxnn4w6rb'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28d181bd67ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the age of the universe, which is a measurable value.
class_name: Numeric value
class_index: 5
data: {'text': 'When was the Hoover Dam constructed ?', 'coarse_label': 5, 'fine_label': 39}
task_input: When was the Hoover Dam constructed ?, corse_label: 5
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'When was the Hoover Dam constructed ?', 'examples_str': "Question: What does the acronym CPR mean ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What are some important events of the 1830 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the term `` The Brooklyn Side '' in bowling ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who were the 1974 Oscar winners ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city is the setting for Puccini 's opera La Boheme ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the chemical reactivity of argon ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does the acronym CPR mean ?
class_name: Abbreviation 
class_index: 0
--------

Question: What are some important events of the 1830 's ?
class_name: Entity 
class_index: 1
--------

Question: What is the origin of the term `` The Brooklyn Side '' in bowling ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who were the 1974 Oscar winners ?
class_name: Human being 
class_index: 3
--------

Question: What city is the setting for Puccini 's opera La Boheme ?
class_name: Location 
class_index: 4
--------

Question: What is the chemical reactivity of argon ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: When was the Hoover Dam constructed ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the acronym CPR mean ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What are some important events of the 1830 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the term `` The Brooklyn Side '' in bowling ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who were the 1974 Oscar winners ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city is the setting for Puccini 's opera La Boheme ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the chemical reactivity of argon ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: When was the Hoover Dam constructed ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 01:01:04 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12601'), (b'x-ratelimit-remaining-tokens', b'29598'), (b'x-ratelimit-reset-requests', b'2h59m53.770999999s'), (b'x-ratelimit-reset-tokens', b'803ms'), (b'x-request-id', b'req_01hz0xtv06e94bdr89szn2tt19'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28d198d2b7ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the acronym CPR mean ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What are some important events of the 1830 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the term `` The Brooklyn Side '' in bowling ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who were the 1974 Oscar winners ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city is the setting for Puccini 's opera La Boheme ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the chemical reactivity of argon ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: When was the Hoover Dam constructed ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 01:01:07 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12600'), (b'x-ratelimit-remaining-tokens', b'29602'), (b'x-ratelimit-reset-requests', b'2h59m57.716s'), (b'x-ratelimit-reset-tokens', b'796ms'), (b'x-request-id', b'req_01hz0xtx0dfayr9m9kag1k1nre'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28d26583e7ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about a specific event in history, which is typically associated with a specific date.
class_name: Entity
class_index: 1
data: {'text': 'At what age did Rossini stop writing opera ?', 'coarse_label': 5, 'fine_label': 44}
task_input: At what age did Rossini stop writing opera ?, corse_label: 5
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'At what age did Rossini stop writing opera ?', 'examples_str': "Question: What does the acronym CPR mean ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What are some important events of the 1830 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the term `` The Brooklyn Side '' in bowling ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who were the 1974 Oscar winners ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city is the setting for Puccini 's opera La Boheme ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the chemical reactivity of argon ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does the acronym CPR mean ?
class_name: Abbreviation 
class_index: 0
--------

Question: What are some important events of the 1830 's ?
class_name: Entity 
class_index: 1
--------

Question: What is the origin of the term `` The Brooklyn Side '' in bowling ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who were the 1974 Oscar winners ?
class_name: Human being 
class_index: 3
--------

Question: What city is the setting for Puccini 's opera La Boheme ?
class_name: Location 
class_index: 4
--------

Question: What is the chemical reactivity of argon ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: At what age did Rossini stop writing opera ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the acronym CPR mean ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What are some important events of the 1830 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the term `` The Brooklyn Side '' in bowling ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who were the 1974 Oscar winners ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city is the setting for Puccini 's opera La Boheme ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the chemical reactivity of argon ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: At what age did Rossini stop writing opera ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 01:01:07 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'325'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12600'), (b'x-ratelimit-remaining-tokens', b'29594'), (b'x-ratelimit-reset-requests', b'2h59m59.768999999s'), (b'x-ratelimit-reset-tokens', b'811ms'), (b'x-request-id', b'req_01hz0xtx7mfzbstg4f3q8zch81'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28d27c9677ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the acronym CPR mean ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What are some important events of the 1830 's ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the term `` The Brooklyn Side '' in bowling ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: Who were the 1974 Oscar winners ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What city is the setting for Puccini 's opera La Boheme ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the chemical reactivity of argon ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: At what age did Rossini stop writing opera ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 01:01:09 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12599'), (b'x-ratelimit-remaining-tokens', b'29600'), (b'x-ratelimit-reset-requests', b'3h0m3.717s'), (b'x-ratelimit-reset-tokens', b'800ms'), (b'x-request-id', b'req_01hz0xtz7rewdapn3drwer37ba'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28d34ad0a7ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the age of a specific person, which is a characteristic often associated with a human being.
class_name: HUM
class_index: 3
responses: [0, 0, 0, 0, 3, 5, 0, 3, 2, 2, 4, 0, 3, 1, 3, 3, 2, 4, 4, 4, 5, 5, 1, 3], targets: [0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5]
num_invalid: 0
Preds tensor: tensor([[1., 0., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0.],
        [0., 0., 0., 1., 0., 0.],
        [0., 0., 0., 0., 0., 1.],
        [1., 0., 0., 0., 0., 0.],
        [0., 0., 0., 1., 0., 0.],
        [0., 0., 1., 0., 0., 0.],
        [0., 0., 1., 0., 0., 0.],
        [0., 0., 0., 0., 1., 0.],
        [1., 0., 0., 0., 0., 0.],
        [0., 0., 0., 1., 0., 0.],
        [0., 1., 0., 0., 0., 0.],
        [0., 0., 0., 1., 0., 0.],
        [0., 0., 0., 1., 0., 0.],
        [0., 0., 1., 0., 0., 0.],
        [0., 0., 0., 0., 1., 0.],
        [0., 0., 0., 0., 1., 0.],
        [0., 0., 0., 0., 1., 0.],
        [0., 0., 0., 0., 0., 1.],
        [0., 0., 0., 0., 0., 1.],
        [0., 1., 0., 0., 0., 0.],
        [0., 0., 0., 1., 0., 0.]])
Targets tensor: tensor([0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5])
Eval Accuracy 1 proposed: 0.583, F1: 0.549, score: 1.1320000000000001
best_score: 1.1320000000000001
best_parameters: OrderedDict([('generator.examples_str', Parameter: Question: What does the acronym CPR mean ?
class_name: Abbreviation 
class_index: 0
--------

Question: What are some important events of the 1830 's ?
class_name: Entity 
class_index: 1
--------

Question: What is the origin of the term `` The Brooklyn Side '' in bowling ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: Who were the 1974 Oscar winners ?
class_name: Human being 
class_index: 3
--------

Question: What city is the setting for Puccini 's opera La Boheme ?
class_name: Location 
class_index: 4
--------

Question: What is the chemical reactivity of argon ?
class_name: Numeric value 
class_index: 5
--------
)])
step: 2
train_batch: {'text': ['What money was used here ?', 'Who patented the first phonograph ?', 'How many types of cheese are there in France ?', 'Where are the headquarters of Eli Lilly ?', 'What city is served by McCarren Airport ?', "What is the origin of the term `` The Brooklyn Side '' in bowling ?", 'What qualifications are there for individuals donating blood ?', 'What is a rhomboideus minor ?', 'What is state tree of Nebraska ?', 'What did Dan Aykroyd and John Belushi quit Saturday Night Live to become ?'], 'coarse_label': tensor([1, 3, 5, 4, 4, 2, 2, 2, 1, 1]), 'fine_label': tensor([ 6, 29, 38, 35, 32, 25, 25, 24, 14, 13])}
before random_replace: [Sample(index=2334, data={'text': 'What does the acronym CPR mean ?', 'coarse_label': 0, 'fine_label': 1}), Sample(index=1711, data={'text': "What are some important events of the 1830 's ?", 'coarse_label': 1, 'fine_label': 8}), Sample(index=2431, data={'text': "What is the origin of the term `` The Brooklyn Side '' in bowling ?", 'coarse_label': 2, 'fine_label': 25}), Sample(index=2421, data={'text': 'Who were the 1974 Oscar winners ?', 'coarse_label': 3, 'fine_label': 29}), Sample(index=2216, data={'text': "What city is the setting for Puccini 's opera La Boheme ?", 'coarse_label': 4, 'fine_label': 32}), Sample(index=2697, data={'text': 'What is the chemical reactivity of argon ?', 'coarse_label': 5, 'fine_label': 43})]
after random_replace: [Sample(index=1032, data={'text': 'What does NASDAQ stand for ?', 'coarse_label': 0, 'fine_label': 1}), Sample(index=742, data={'text': 'What war did the Potsdam Conference follow ?', 'coarse_label': 1, 'fine_label': 8}), Sample(index=94, data={'text': 'What happens when a body part falls asleep ?', 'coarse_label': 2, 'fine_label': 25}), Sample(index=794, data={'text': "What American actress was the first to be called a `` vamp '' ?", 'coarse_label': 3, 'fine_label': 29}), Sample(index=446, data={'text': 'Where is Erykah Badu originally from ?', 'coarse_label': 4, 'fine_label': 35}), Sample(index=2697, data={'text': 'What is the chemical reactivity of argon ?', 'coarse_label': 5, 'fine_label': 43})]
data: {'text': 'What does U.S.S.R. stand for ?', 'coarse_label': 0, 'fine_label': 1}
task_input: What does U.S.S.R. stand for ?, corse_label: 0
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What does U.S.S.R. stand for ?', 'examples_str': "Question: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What war did the Potsdam Conference follow ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What happens when a body part falls asleep ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What American actress was the first to be called a `` vamp '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the chemical reactivity of argon ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does NASDAQ stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What war did the Potsdam Conference follow ?
class_name: Entity 
class_index: 1
--------

Question: What happens when a body part falls asleep ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What American actress was the first to be called a `` vamp '' ?
class_name: Human being 
class_index: 3
--------

Question: Where is Erykah Badu originally from ?
class_name: Location 
class_index: 4
--------

Question: What is the chemical reactivity of argon ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What does U.S.S.R. stand for ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What war did the Potsdam Conference follow ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What happens when a body part falls asleep ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What American actress was the first to be called a `` vamp '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the chemical reactivity of argon ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does U.S.S.R. stand for ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 01:01:09 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12599'), (b'x-ratelimit-remaining-tokens', b'29598'), (b'x-ratelimit-reset-requests', b'3h0m5.748s'), (b'x-ratelimit-reset-tokens', b'803ms'), (b'x-request-id', b'req_01hz0xtzfnezja7cgb0g9hhnvv'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28d363e307ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What war did the Potsdam Conference follow ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What happens when a body part falls asleep ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What American actress was the first to be called a `` vamp '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the chemical reactivity of argon ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does U.S.S.R. stand for ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 01:01:11 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12598'), (b'x-ratelimit-remaining-tokens', b'29609'), (b'x-ratelimit-reset-requests', b'3h0m9.688999999s'), (b'x-ratelimit-reset-tokens', b'782ms'), (b'x-request-id', b'req_01hz0xv1g1fcyb2kb8c58tgz9f'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28d4318f67ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the abbreviation of U.S.S.R.
class_name: ABBR
class_index: 0
data: {'text': 'What is the abbreviated form of the National Bureau of Investigation ?', 'coarse_label': 0, 'fine_label': 0}
task_input: What is the abbreviated form of the National Bureau of Investigation ?, corse_label: 0
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What is the abbreviated form of the National Bureau of Investigation ?', 'examples_str': "Question: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What war did the Potsdam Conference follow ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What happens when a body part falls asleep ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What American actress was the first to be called a `` vamp '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the chemical reactivity of argon ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does NASDAQ stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What war did the Potsdam Conference follow ?
class_name: Entity 
class_index: 1
--------

Question: What happens when a body part falls asleep ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What American actress was the first to be called a `` vamp '' ?
class_name: Human being 
class_index: 3
--------

Question: Where is Erykah Badu originally from ?
class_name: Location 
class_index: 4
--------

Question: What is the chemical reactivity of argon ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What is the abbreviated form of the National Bureau of Investigation ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What war did the Potsdam Conference follow ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What happens when a body part falls asleep ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What American actress was the first to be called a `` vamp '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the chemical reactivity of argon ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is the abbreviated form of the National Bureau of Investigation ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 01:01:11 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12598'), (b'x-ratelimit-remaining-tokens', b'29605'), (b'x-ratelimit-reset-requests', b'3h0m11.743s'), (b'x-ratelimit-reset-tokens', b'789ms'), (b'x-request-id', b'req_01hz0xv1r3e9zt10pttxd0w8ms'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28d44ba367ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What war did the Potsdam Conference follow ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What happens when a body part falls asleep ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What American actress was the first to be called a `` vamp '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the chemical reactivity of argon ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is the abbreviated form of the National Bureau of Investigation ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 01:01:14 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12597'), (b'x-ratelimit-remaining-tokens', b'29599'), (b'x-ratelimit-reset-requests', b'3h0m15.685999999s'), (b'x-ratelimit-reset-tokens', b'802ms'), (b'x-request-id', b'req_01hz0xv3rcfzbv8th6z9q2wj5q'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28d519ce37ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking for the abbreviated form of the National Bureau of Investigation, which is typically represented by an abbreviation.
class_name: ABBR
class_index: 0
data: {'text': "What do the letters ZIP stand for in the phrase `` ZIP code '' ?", 'coarse_label': 0, 'fine_label': 1}
task_input: What do the letters ZIP stand for in the phrase `` ZIP code '' ?, corse_label: 0
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': "What do the letters ZIP stand for in the phrase `` ZIP code '' ?", 'examples_str': "Question: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What war did the Potsdam Conference follow ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What happens when a body part falls asleep ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What American actress was the first to be called a `` vamp '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the chemical reactivity of argon ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does NASDAQ stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What war did the Potsdam Conference follow ?
class_name: Entity 
class_index: 1
--------

Question: What happens when a body part falls asleep ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What American actress was the first to be called a `` vamp '' ?
class_name: Human being 
class_index: 3
--------

Question: Where is Erykah Badu originally from ?
class_name: Location 
class_index: 4
--------

Question: What is the chemical reactivity of argon ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What do the letters ZIP stand for in the phrase `` ZIP code '' ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What war did the Potsdam Conference follow ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What happens when a body part falls asleep ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What American actress was the first to be called a `` vamp '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the chemical reactivity of argon ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What do the letters ZIP stand for in the phrase `` ZIP code '' ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 01:01:14 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12597'), (b'x-ratelimit-remaining-tokens', b'29598'), (b'x-ratelimit-reset-requests', b'3h0m17.761999999s'), (b'x-ratelimit-reset-tokens', b'803ms'), (b'x-request-id', b'req_01hz0xv3zvfaz8hy0ywg3yzhp5'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28d531e207ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What war did the Potsdam Conference follow ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What happens when a body part falls asleep ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What American actress was the first to be called a `` vamp '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the chemical reactivity of argon ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What do the letters ZIP stand for in the phrase `` ZIP code '' ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 01:01:16 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12596'), (b'x-ratelimit-remaining-tokens', b'29600'), (b'x-ratelimit-reset-requests', b'3h0m21.697s'), (b'x-ratelimit-reset-tokens', b'800ms'), (b'x-request-id', b'req_01hz0xv60cfazr69kghr5tnjjp'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28d5ff9427ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the meaning of the letters ZIP in the phrase "ZIP code".
class_name: ABBR
class_index: 0
data: {'text': 'What does VCR stand for ?', 'coarse_label': 0, 'fine_label': 1}
task_input: What does VCR stand for ?, corse_label: 0
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What does VCR stand for ?', 'examples_str': "Question: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What war did the Potsdam Conference follow ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What happens when a body part falls asleep ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What American actress was the first to be called a `` vamp '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the chemical reactivity of argon ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does NASDAQ stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What war did the Potsdam Conference follow ?
class_name: Entity 
class_index: 1
--------

Question: What happens when a body part falls asleep ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What American actress was the first to be called a `` vamp '' ?
class_name: Human being 
class_index: 3
--------

Question: Where is Erykah Badu originally from ?
class_name: Location 
class_index: 4
--------

Question: What is the chemical reactivity of argon ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What does VCR stand for ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What war did the Potsdam Conference follow ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What happens when a body part falls asleep ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What American actress was the first to be called a `` vamp '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the chemical reactivity of argon ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does VCR stand for ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 01:01:16 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12596'), (b'x-ratelimit-remaining-tokens', b'29601'), (b'x-ratelimit-reset-requests', b'3h0m23.762999999s'), (b'x-ratelimit-reset-tokens', b'797ms'), (b'x-request-id', b'req_01hz0xv67sew3rz07jvp0we0yg'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28d617a867ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What war did the Potsdam Conference follow ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What happens when a body part falls asleep ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What American actress was the first to be called a `` vamp '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the chemical reactivity of argon ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does VCR stand for ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 01:01:19 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12595'), (b'x-ratelimit-remaining-tokens', b'29610'), (b'x-ratelimit-reset-requests', b'3h0m27.696s'), (b'x-ratelimit-reset-tokens', b'780ms'), (b'x-request-id', b'req_01hz0xv88dfe0be824163cmmh2'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28d6e5cf07ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking for the abbreviation of VCR, which is a common acronym.
class_name: ABBR
class_index: 0
data: {'text': 'What sport can a free-legged pacer compete in ?', 'coarse_label': 1, 'fine_label': 17}
task_input: What sport can a free-legged pacer compete in ?, corse_label: 1
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What sport can a free-legged pacer compete in ?', 'examples_str': "Question: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What war did the Potsdam Conference follow ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What happens when a body part falls asleep ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What American actress was the first to be called a `` vamp '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the chemical reactivity of argon ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does NASDAQ stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What war did the Potsdam Conference follow ?
class_name: Entity 
class_index: 1
--------

Question: What happens when a body part falls asleep ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What American actress was the first to be called a `` vamp '' ?
class_name: Human being 
class_index: 3
--------

Question: Where is Erykah Badu originally from ?
class_name: Location 
class_index: 4
--------

Question: What is the chemical reactivity of argon ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What sport can a free-legged pacer compete in ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What war did the Potsdam Conference follow ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What happens when a body part falls asleep ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What American actress was the first to be called a `` vamp '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the chemical reactivity of argon ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What sport can a free-legged pacer compete in ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 01:01:19 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'325'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'1'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12595'), (b'x-ratelimit-remaining-tokens', b'29648'), (b'x-ratelimit-reset-requests', b'3h0m28.853999999s'), (b'x-ratelimit-reset-tokens', b'704ms'), (b'x-request-id', b'req_01hz0xv9c8ef4tedhb37szte30'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28d758aaf7ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 1.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What war did the Potsdam Conference follow ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What happens when a body part falls asleep ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What American actress was the first to be called a `` vamp '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the chemical reactivity of argon ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What sport can a free-legged pacer compete in ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 01:01:20 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12594'), (b'x-ratelimit-remaining-tokens', b'29604'), (b'x-ratelimit-reset-requests', b'3h0m33.791999999s'), (b'x-ratelimit-reset-tokens', b'792ms'), (b'x-request-id', b'req_01hz0xvadefaztqqpnr75gchbh'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28d7c38677ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is about a specific sport that a pacer can participate in, which is a type of activity that a human being can engage in.
class_name: Human being
class_index: 3
data: {'text': 'What was originally defined as one 1-millionth of the distance from the equator to the Pole ?', 'coarse_label': 1, 'fine_label': 21}
task_input: What was originally defined as one 1-millionth of the distance from the equator to the Pole ?, corse_label: 1
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What was originally defined as one 1-millionth of the distance from the equator to the Pole ?', 'examples_str': "Question: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What war did the Potsdam Conference follow ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What happens when a body part falls asleep ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What American actress was the first to be called a `` vamp '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the chemical reactivity of argon ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does NASDAQ stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What war did the Potsdam Conference follow ?
class_name: Entity 
class_index: 1
--------

Question: What happens when a body part falls asleep ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What American actress was the first to be called a `` vamp '' ?
class_name: Human being 
class_index: 3
--------

Question: Where is Erykah Badu originally from ?
class_name: Location 
class_index: 4
--------

Question: What is the chemical reactivity of argon ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What was originally defined as one 1-millionth of the distance from the equator to the Pole ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What war did the Potsdam Conference follow ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What happens when a body part falls asleep ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What American actress was the first to be called a `` vamp '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the chemical reactivity of argon ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What was originally defined as one 1-millionth of the distance from the equator to the Pole ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 01:01:20 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12594'), (b'x-ratelimit-remaining-tokens', b'29590'), (b'x-ratelimit-reset-requests', b'3h0m35.760999999s'), (b'x-ratelimit-reset-tokens', b'819ms'), (b'x-request-id', b'req_01hz0xvamyfzc8b4hw6emde2he'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28d7da9997ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What war did the Potsdam Conference follow ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What happens when a body part falls asleep ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What American actress was the first to be called a `` vamp '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the chemical reactivity of argon ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What was originally defined as one 1-millionth of the distance from the equator to the Pole ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 01:01:23 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12593'), (b'x-ratelimit-remaining-tokens', b'29593'), (b'x-ratelimit-reset-requests', b'3h0m39.7s'), (b'x-ratelimit-reset-tokens', b'814ms'), (b'x-request-id', b'req_01hz0xvcnbep5ae4skx7rby028'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28d8a9c8a7ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is asking about a specific unit of measurement, which is a numeric value.
class_name: NUM
class_index: 5
data: {'text': 'What fuel do airplanes use ?', 'coarse_label': 1, 'fine_label': 18}
task_input: What fuel do airplanes use ?, corse_label: 1
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What fuel do airplanes use ?', 'examples_str': "Question: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What war did the Potsdam Conference follow ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What happens when a body part falls asleep ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What American actress was the first to be called a `` vamp '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the chemical reactivity of argon ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does NASDAQ stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What war did the Potsdam Conference follow ?
class_name: Entity 
class_index: 1
--------

Question: What happens when a body part falls asleep ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What American actress was the first to be called a `` vamp '' ?
class_name: Human being 
class_index: 3
--------

Question: Where is Erykah Badu originally from ?
class_name: Location 
class_index: 4
--------

Question: What is the chemical reactivity of argon ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What fuel do airplanes use ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What war did the Potsdam Conference follow ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What happens when a body part falls asleep ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What American actress was the first to be called a `` vamp '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the chemical reactivity of argon ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What fuel do airplanes use ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 01:01:23 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'325'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12593'), (b'x-ratelimit-remaining-tokens', b'29600'), (b'x-ratelimit-reset-requests', b'3h0m41.779999999s'), (b'x-ratelimit-reset-tokens', b'800ms'), (b'x-request-id', b'req_01hz0xvcw8fghvtj2t88awfee0'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28d8bed887ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What war did the Potsdam Conference follow ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What happens when a body part falls asleep ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What American actress was the first to be called a `` vamp '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the chemical reactivity of argon ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What fuel do airplanes use ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 01:01:25 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12592'), (b'x-ratelimit-remaining-tokens', b'29609'), (b'x-ratelimit-reset-requests', b'3h0m45.72s'), (b'x-ratelimit-reset-tokens', b'782ms'), (b'x-request-id', b'req_01hz0xvewmeqarmwhk9vhcyd4j'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28d98cff67ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the fuel used by airplanes, which is a specific type of information.
class_name: Description and abstract concept
class_index: 2
data: {'text': 'On what T.V. show could Tom Terrific be found ?', 'coarse_label': 1, 'fine_label': 5}
task_input: On what T.V. show could Tom Terrific be found ?, corse_label: 1
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'On what T.V. show could Tom Terrific be found ?', 'examples_str': "Question: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What war did the Potsdam Conference follow ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What happens when a body part falls asleep ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What American actress was the first to be called a `` vamp '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the chemical reactivity of argon ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does NASDAQ stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What war did the Potsdam Conference follow ?
class_name: Entity 
class_index: 1
--------

Question: What happens when a body part falls asleep ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What American actress was the first to be called a `` vamp '' ?
class_name: Human being 
class_index: 3
--------

Question: Where is Erykah Badu originally from ?
class_name: Location 
class_index: 4
--------

Question: What is the chemical reactivity of argon ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: On what T.V. show could Tom Terrific be found ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What war did the Potsdam Conference follow ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What happens when a body part falls asleep ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What American actress was the first to be called a `` vamp '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the chemical reactivity of argon ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: On what T.V. show could Tom Terrific be found ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 01:01:25 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12592'), (b'x-ratelimit-remaining-tokens', b'29604'), (b'x-ratelimit-reset-requests', b'3h0m47.770999999s'), (b'x-ratelimit-reset-tokens', b'792ms'), (b'x-request-id', b'req_01hz0xvf3sea08ddc8wcmrtg2q'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28d9a49247ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What war did the Potsdam Conference follow ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What happens when a body part falls asleep ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What American actress was the first to be called a `` vamp '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the chemical reactivity of argon ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: On what T.V. show could Tom Terrific be found ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 01:01:27 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12591'), (b'x-ratelimit-remaining-tokens', b'29604'), (b'x-ratelimit-reset-requests', b'3h0m51.709s'), (b'x-ratelimit-reset-tokens', b'792ms'), (b'x-request-id', b'req_01hz0xvh47fe8ajty0rjcm1a72'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28da72b557ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is about a TV show, and Tom Terrific is a character, so it's likely about a TV show.
class_name: "ENTY"
class_index: 1
data: {'text': 'How do you select wine ?', 'coarse_label': 2, 'fine_label': 26}
task_input: How do you select wine ?, corse_label: 2
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'How do you select wine ?', 'examples_str': "Question: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What war did the Potsdam Conference follow ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What happens when a body part falls asleep ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What American actress was the first to be called a `` vamp '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the chemical reactivity of argon ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does NASDAQ stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What war did the Potsdam Conference follow ?
class_name: Entity 
class_index: 1
--------

Question: What happens when a body part falls asleep ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What American actress was the first to be called a `` vamp '' ?
class_name: Human being 
class_index: 3
--------

Question: Where is Erykah Badu originally from ?
class_name: Location 
class_index: 4
--------

Question: What is the chemical reactivity of argon ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: How do you select wine ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What war did the Potsdam Conference follow ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What happens when a body part falls asleep ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What American actress was the first to be called a `` vamp '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the chemical reactivity of argon ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: How do you select wine ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 01:01:27 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12591'), (b'x-ratelimit-remaining-tokens', b'29644'), (b'x-ratelimit-reset-requests', b'3h0m53.646s'), (b'x-ratelimit-reset-tokens', b'712ms'), (b'x-request-id', b'req_01hz0xvhfafqpaqf71a2t8zbhc'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28da95d357ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What war did the Potsdam Conference follow ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What happens when a body part falls asleep ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What American actress was the first to be called a `` vamp '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the chemical reactivity of argon ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: How do you select wine ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 01:01:30 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12590'), (b'x-ratelimit-remaining-tokens', b'29610'), (b'x-ratelimit-reset-requests', b'3h0m57.564999999s'), (b'x-ratelimit-reset-tokens', b'780ms'), (b'x-request-id', b'req_01hz0xvkgbfgys6etke20ya911'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28db63f177ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is about a process or a method, which is related to a human activity, and the answer is not a specific number or location.
class_name: Description and abstract concept
class_index: 2
data: {'text': "What are some children 's rights ?", 'coarse_label': 2, 'fine_label': 25}
task_input: What are some children 's rights ?, corse_label: 2
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': "What are some children 's rights ?", 'examples_str': "Question: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What war did the Potsdam Conference follow ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What happens when a body part falls asleep ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What American actress was the first to be called a `` vamp '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the chemical reactivity of argon ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does NASDAQ stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What war did the Potsdam Conference follow ?
class_name: Entity 
class_index: 1
--------

Question: What happens when a body part falls asleep ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What American actress was the first to be called a `` vamp '' ?
class_name: Human being 
class_index: 3
--------

Question: Where is Erykah Badu originally from ?
class_name: Location 
class_index: 4
--------

Question: What is the chemical reactivity of argon ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What are some children 's rights ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What war did the Potsdam Conference follow ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What happens when a body part falls asleep ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What American actress was the first to be called a `` vamp '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the chemical reactivity of argon ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What are some children 's rights ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 01:01:30 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12590'), (b'x-ratelimit-remaining-tokens', b'29599'), (b'x-ratelimit-reset-requests', b'3h0m59.751s'), (b'x-ratelimit-reset-tokens', b'802ms'), (b'x-request-id', b'req_01hz0xvkr5erzsz4whzjs1sx1a'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28db7d8a37ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What war did the Potsdam Conference follow ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What happens when a body part falls asleep ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What American actress was the first to be called a `` vamp '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the chemical reactivity of argon ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What are some children 's rights ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 01:01:32 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12589'), (b'x-ratelimit-remaining-tokens', b'29608'), (b'x-ratelimit-reset-requests', b'3h1m3.683999999s'), (b'x-ratelimit-reset-tokens', b'784ms'), (b'x-request-id', b'req_01hz0xvnrrfzvb4sqjnh6qqbwq'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28dc4cb317ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the rights of children, which is a concept or idea, and is described in a general sense.
class_name: Description and abstract concept
class_index: 2
```
data: {'text': 'What are some fun things to do in Cozumel , Mexico for teenagers ?', 'coarse_label': 2, 'fine_label': 25}
task_input: What are some fun things to do in Cozumel , Mexico for teenagers ?, corse_label: 2
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What are some fun things to do in Cozumel , Mexico for teenagers ?', 'examples_str': "Question: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What war did the Potsdam Conference follow ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What happens when a body part falls asleep ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What American actress was the first to be called a `` vamp '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the chemical reactivity of argon ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does NASDAQ stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What war did the Potsdam Conference follow ?
class_name: Entity 
class_index: 1
--------

Question: What happens when a body part falls asleep ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What American actress was the first to be called a `` vamp '' ?
class_name: Human being 
class_index: 3
--------

Question: Where is Erykah Badu originally from ?
class_name: Location 
class_index: 4
--------

Question: What is the chemical reactivity of argon ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What are some fun things to do in Cozumel , Mexico for teenagers ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What war did the Potsdam Conference follow ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What happens when a body part falls asleep ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What American actress was the first to be called a `` vamp '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the chemical reactivity of argon ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What are some fun things to do in Cozumel , Mexico for teenagers ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 01:01:32 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12589'), (b'x-ratelimit-remaining-tokens', b'29637'), (b'x-ratelimit-reset-requests', b'3h1m5.681s'), (b'x-ratelimit-reset-tokens', b'726ms'), (b'x-request-id', b'req_01hz0xvp2rea0rneds0b9j1yr4'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28dc6dce47ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What war did the Potsdam Conference follow ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What happens when a body part falls asleep ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What American actress was the first to be called a `` vamp '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the chemical reactivity of argon ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What are some fun things to do in Cozumel , Mexico for teenagers ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 01:01:34 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12588'), (b'x-ratelimit-remaining-tokens', b'29600'), (b'x-ratelimit-reset-requests', b'3h1m9.623999999s'), (b'x-ratelimit-reset-tokens', b'800ms'), (b'x-request-id', b'req_01hz0xvr31fe0tch2d72jy0eb5'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28dd3b8517ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about activities to do in a specific location, which is a common query for tourists.
class_name: Location
class_index: 4
data: {'text': 'What does hazmat stand for ?', 'coarse_label': 2, 'fine_label': 24}
task_input: What does hazmat stand for ?, corse_label: 2
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What does hazmat stand for ?', 'examples_str': "Question: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What war did the Potsdam Conference follow ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What happens when a body part falls asleep ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What American actress was the first to be called a `` vamp '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the chemical reactivity of argon ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does NASDAQ stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What war did the Potsdam Conference follow ?
class_name: Entity 
class_index: 1
--------

Question: What happens when a body part falls asleep ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What American actress was the first to be called a `` vamp '' ?
class_name: Human being 
class_index: 3
--------

Question: Where is Erykah Badu originally from ?
class_name: Location 
class_index: 4
--------

Question: What is the chemical reactivity of argon ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What does hazmat stand for ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What war did the Potsdam Conference follow ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What happens when a body part falls asleep ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What American actress was the first to be called a `` vamp '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the chemical reactivity of argon ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does hazmat stand for ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 01:01:35 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12588'), (b'x-ratelimit-remaining-tokens', b'29614'), (b'x-ratelimit-reset-requests', b'3h1m11.703s'), (b'x-ratelimit-reset-tokens', b'771ms'), (b'x-request-id', b'req_01hz0xvrcbezk8e9qxzg8720v1'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28dd599fb7ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What war did the Potsdam Conference follow ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What happens when a body part falls asleep ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What American actress was the first to be called a `` vamp '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the chemical reactivity of argon ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does hazmat stand for ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 01:01:37 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12587'), (b'x-ratelimit-remaining-tokens', b'29609'), (b'x-ratelimit-reset-requests', b'3h1m15.632999999s'), (b'x-ratelimit-reset-tokens', b'782ms'), (b'x-request-id', b'req_01hz0xvtd1ewesqxr03bc0bzf0'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28de27cdd7ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the abbreviation of a term, which is a common use case for abbreviations.
class_name: ABBR
class_index: 0
data: {'text': "Who is the nebbish that is Marvel 's official mascot ?", 'coarse_label': 3, 'fine_label': 29}
task_input: Who is the nebbish that is Marvel 's official mascot ?, corse_label: 3
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': "Who is the nebbish that is Marvel 's official mascot ?", 'examples_str': "Question: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What war did the Potsdam Conference follow ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What happens when a body part falls asleep ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What American actress was the first to be called a `` vamp '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the chemical reactivity of argon ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does NASDAQ stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What war did the Potsdam Conference follow ?
class_name: Entity 
class_index: 1
--------

Question: What happens when a body part falls asleep ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What American actress was the first to be called a `` vamp '' ?
class_name: Human being 
class_index: 3
--------

Question: Where is Erykah Badu originally from ?
class_name: Location 
class_index: 4
--------

Question: What is the chemical reactivity of argon ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Who is the nebbish that is Marvel 's official mascot ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What war did the Potsdam Conference follow ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What happens when a body part falls asleep ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What American actress was the first to be called a `` vamp '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the chemical reactivity of argon ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Who is the nebbish that is Marvel 's official mascot ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 01:01:37 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12587'), (b'x-ratelimit-remaining-tokens', b'29619'), (b'x-ratelimit-reset-requests', b'3h1m17.711999999s'), (b'x-ratelimit-reset-tokens', b'761ms'), (b'x-request-id', b'req_01hz0xvtp2e21raps14vq7hhse'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28de44e3c7ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What war did the Potsdam Conference follow ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What happens when a body part falls asleep ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What American actress was the first to be called a `` vamp '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the chemical reactivity of argon ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Who is the nebbish that is Marvel 's official mascot ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 01:01:39 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12586'), (b'x-ratelimit-remaining-tokens', b'29603'), (b'x-ratelimit-reset-requests', b'3h1m21.646s'), (b'x-ratelimit-reset-tokens', b'794ms'), (b'x-request-id', b'req_01hz0xvwpmfe8s9pxbk8hj7jxe'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28df138d47ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about a character in the Marvel universe, which is a human being.
class_name: HUM
class_index: 3
data: {'text': 'What Japanese electronics company was named for a coastal city northeast of Tokyo ?', 'coarse_label': 3, 'fine_label': 28}
task_input: What Japanese electronics company was named for a coastal city northeast of Tokyo ?, corse_label: 3
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What Japanese electronics company was named for a coastal city northeast of Tokyo ?', 'examples_str': "Question: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What war did the Potsdam Conference follow ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What happens when a body part falls asleep ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What American actress was the first to be called a `` vamp '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the chemical reactivity of argon ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does NASDAQ stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What war did the Potsdam Conference follow ?
class_name: Entity 
class_index: 1
--------

Question: What happens when a body part falls asleep ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What American actress was the first to be called a `` vamp '' ?
class_name: Human being 
class_index: 3
--------

Question: Where is Erykah Badu originally from ?
class_name: Location 
class_index: 4
--------

Question: What is the chemical reactivity of argon ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What Japanese electronics company was named for a coastal city northeast of Tokyo ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What war did the Potsdam Conference follow ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What happens when a body part falls asleep ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What American actress was the first to be called a `` vamp '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the chemical reactivity of argon ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What Japanese electronics company was named for a coastal city northeast of Tokyo ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 01:01:39 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12586'), (b'x-ratelimit-remaining-tokens', b'29600'), (b'x-ratelimit-reset-requests', b'3h1m23.754s'), (b'x-ratelimit-reset-tokens', b'800ms'), (b'x-request-id', b'req_01hz0xvwybfvkaxt66hetf0v9n'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28df2ca3b7ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What war did the Potsdam Conference follow ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What happens when a body part falls asleep ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What American actress was the first to be called a `` vamp '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the chemical reactivity of argon ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What Japanese electronics company was named for a coastal city northeast of Tokyo ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 01:01:41 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12585'), (b'x-ratelimit-remaining-tokens', b'29595'), (b'x-ratelimit-reset-requests', b'3h1m27.7s'), (b'x-ratelimit-reset-tokens', b'810ms'), (b'x-request-id', b'req_01hz0xvyyhfe9961mrmhek2jky'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28dff9ce77ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about a specific Japanese electronics company, which is likely to be a named entity.
class_name: Entity
class_index: 1
data: {'text': 'Who was Maria Theresa ?', 'coarse_label': 3, 'fine_label': 31}
task_input: Who was Maria Theresa ?, corse_label: 3
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'Who was Maria Theresa ?', 'examples_str': "Question: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What war did the Potsdam Conference follow ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What happens when a body part falls asleep ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What American actress was the first to be called a `` vamp '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the chemical reactivity of argon ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does NASDAQ stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What war did the Potsdam Conference follow ?
class_name: Entity 
class_index: 1
--------

Question: What happens when a body part falls asleep ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What American actress was the first to be called a `` vamp '' ?
class_name: Human being 
class_index: 3
--------

Question: Where is Erykah Badu originally from ?
class_name: Location 
class_index: 4
--------

Question: What is the chemical reactivity of argon ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Who was Maria Theresa ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What war did the Potsdam Conference follow ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What happens when a body part falls asleep ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What American actress was the first to be called a `` vamp '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the chemical reactivity of argon ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Who was Maria Theresa ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 01:01:41 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12585'), (b'x-ratelimit-remaining-tokens', b'29598'), (b'x-ratelimit-reset-requests', b'3h1m29.774999999s'), (b'x-ratelimit-reset-tokens', b'804ms'), (b'x-request-id', b'req_01hz0xvz5kfgjb0n38fx660msp'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28e010e0f7ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What war did the Potsdam Conference follow ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What happens when a body part falls asleep ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What American actress was the first to be called a `` vamp '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the chemical reactivity of argon ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Who was Maria Theresa ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 01:01:44 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12584'), (b'x-ratelimit-remaining-tokens', b'29610'), (b'x-ratelimit-reset-requests', b'3h1m33.717s'), (b'x-ratelimit-reset-tokens', b'780ms'), (b'x-request-id', b'req_01hz0xw15xes088ndc4rejsamz'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28e0de9267ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is asking about a historical figure, which is a type of human being.
class_name: HUM
class_index: 3
```
data: {'text': "What was the name of the director of the movie `` Jaws '' ?", 'coarse_label': 3, 'fine_label': 29}
task_input: What was the name of the director of the movie `` Jaws '' ?, corse_label: 3
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': "What was the name of the director of the movie `` Jaws '' ?", 'examples_str': "Question: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What war did the Potsdam Conference follow ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What happens when a body part falls asleep ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What American actress was the first to be called a `` vamp '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the chemical reactivity of argon ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does NASDAQ stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What war did the Potsdam Conference follow ?
class_name: Entity 
class_index: 1
--------

Question: What happens when a body part falls asleep ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What American actress was the first to be called a `` vamp '' ?
class_name: Human being 
class_index: 3
--------

Question: Where is Erykah Badu originally from ?
class_name: Location 
class_index: 4
--------

Question: What is the chemical reactivity of argon ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What was the name of the director of the movie `` Jaws '' ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What war did the Potsdam Conference follow ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What happens when a body part falls asleep ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What American actress was the first to be called a `` vamp '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the chemical reactivity of argon ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What was the name of the director of the movie `` Jaws '' ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 01:01:44 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12584'), (b'x-ratelimit-remaining-tokens', b'29607'), (b'x-ratelimit-reset-requests', b'3h1m35.769999999s'), (b'x-ratelimit-reset-tokens', b'785ms'), (b'x-request-id', b'req_01hz0xw1d3fher0g854qzyx4jt'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28e0f4a737ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What war did the Potsdam Conference follow ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What happens when a body part falls asleep ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What American actress was the first to be called a `` vamp '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the chemical reactivity of argon ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What was the name of the director of the movie `` Jaws '' ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 01:01:46 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12583'), (b'x-ratelimit-remaining-tokens', b'29601'), (b'x-ratelimit-reset-requests', b'3h1m39.709s'), (b'x-ratelimit-reset-tokens', b'798ms'), (b'x-request-id', b'req_01hz0xw3dhfhevcsnmxrbzevpr'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28e1c3d6f7ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking for the director of a movie, which is a specific piece of information about a person, so it's likely an entity.
class_name: Entity
class_index: 1
data: {'text': 'Which area produces the least acidic coffee ?', 'coarse_label': 4, 'fine_label': 35}
task_input: Which area produces the least acidic coffee ?, corse_label: 4
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'Which area produces the least acidic coffee ?', 'examples_str': "Question: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What war did the Potsdam Conference follow ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What happens when a body part falls asleep ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What American actress was the first to be called a `` vamp '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the chemical reactivity of argon ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does NASDAQ stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What war did the Potsdam Conference follow ?
class_name: Entity 
class_index: 1
--------

Question: What happens when a body part falls asleep ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What American actress was the first to be called a `` vamp '' ?
class_name: Human being 
class_index: 3
--------

Question: Where is Erykah Badu originally from ?
class_name: Location 
class_index: 4
--------

Question: What is the chemical reactivity of argon ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Which area produces the least acidic coffee ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What war did the Potsdam Conference follow ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What happens when a body part falls asleep ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What American actress was the first to be called a `` vamp '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the chemical reactivity of argon ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Which area produces the least acidic coffee ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 01:01:46 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12583'), (b'x-ratelimit-remaining-tokens', b'29587'), (b'x-ratelimit-reset-requests', b'3h1m41.747s'), (b'x-ratelimit-reset-tokens', b'826ms'), (b'x-request-id', b'req_01hz0xw3nffb0tftrdpy98panv'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28e1dcf077ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What war did the Potsdam Conference follow ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What happens when a body part falls asleep ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What American actress was the first to be called a `` vamp '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the chemical reactivity of argon ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Which area produces the least acidic coffee ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 01:01:48 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12582'), (b'x-ratelimit-remaining-tokens', b'29605'), (b'x-ratelimit-reset-requests', b'3h1m45.688999999s'), (b'x-ratelimit-reset-tokens', b'790ms'), (b'x-request-id', b'req_01hz0xw5nsfb0vh5bj1wwaemqv'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28e2aaaf37ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is about a specific topic, and it's asking about the acidity level of coffee, which is a measurable value.
class_name: Numeric value
class_index: 5
data: {'text': 'What ocean is the largest in the world ?', 'coarse_label': 4, 'fine_label': 35}
task_input: What ocean is the largest in the world ?, corse_label: 4
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What ocean is the largest in the world ?', 'examples_str': "Question: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What war did the Potsdam Conference follow ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What happens when a body part falls asleep ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What American actress was the first to be called a `` vamp '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the chemical reactivity of argon ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does NASDAQ stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What war did the Potsdam Conference follow ?
class_name: Entity 
class_index: 1
--------

Question: What happens when a body part falls asleep ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What American actress was the first to be called a `` vamp '' ?
class_name: Human being 
class_index: 3
--------

Question: Where is Erykah Badu originally from ?
class_name: Location 
class_index: 4
--------

Question: What is the chemical reactivity of argon ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What ocean is the largest in the world ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What war did the Potsdam Conference follow ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What happens when a body part falls asleep ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What American actress was the first to be called a `` vamp '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the chemical reactivity of argon ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What ocean is the largest in the world ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 01:01:48 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12582'), (b'x-ratelimit-remaining-tokens', b'29596'), (b'x-ratelimit-reset-requests', b'3h1m47.773999999s'), (b'x-ratelimit-reset-tokens', b'808ms'), (b'x-request-id', b'req_01hz0xw5wvfe1syka6mxrk7s8c'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28e2c1bfd7ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What war did the Potsdam Conference follow ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What happens when a body part falls asleep ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What American actress was the first to be called a `` vamp '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the chemical reactivity of argon ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What ocean is the largest in the world ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 01:01:51 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12581'), (b'x-ratelimit-remaining-tokens', b'29606'), (b'x-ratelimit-reset-requests', b'3h1m51.716s'), (b'x-ratelimit-reset-tokens', b'788ms'), (b'x-request-id', b'req_01hz0xw7x6ea1scmye8akgccn0'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28e38eea27ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is asking about a geographical feature, which is typically classified as a location.
class_name: LOC
class_index: 4
data: {'text': "What South American capital is the world 's highest ?", 'coarse_label': 4, 'fine_label': 32}
task_input: What South American capital is the world 's highest ?, corse_label: 4
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': "What South American capital is the world 's highest ?", 'examples_str': "Question: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What war did the Potsdam Conference follow ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What happens when a body part falls asleep ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What American actress was the first to be called a `` vamp '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the chemical reactivity of argon ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does NASDAQ stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What war did the Potsdam Conference follow ?
class_name: Entity 
class_index: 1
--------

Question: What happens when a body part falls asleep ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What American actress was the first to be called a `` vamp '' ?
class_name: Human being 
class_index: 3
--------

Question: Where is Erykah Badu originally from ?
class_name: Location 
class_index: 4
--------

Question: What is the chemical reactivity of argon ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What South American capital is the world 's highest ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What war did the Potsdam Conference follow ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What happens when a body part falls asleep ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What American actress was the first to be called a `` vamp '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the chemical reactivity of argon ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What South American capital is the world 's highest ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 01:01:51 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12581'), (b'x-ratelimit-remaining-tokens', b'29601'), (b'x-ratelimit-reset-requests', b'3h1m53.787s'), (b'x-ratelimit-reset-tokens', b'797ms'), (b'x-request-id', b'req_01hz0xw83wfb1byh17d9k3vk23'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28e3a4fce7ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What war did the Potsdam Conference follow ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What happens when a body part falls asleep ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What American actress was the first to be called a `` vamp '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the chemical reactivity of argon ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What South American capital is the world 's highest ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 01:01:53 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12580'), (b'x-ratelimit-remaining-tokens', b'29603'), (b'x-ratelimit-reset-requests', b'3h1m57.730999999s'), (b'x-ratelimit-reset-tokens', b'794ms'), (b'x-request-id', b'req_01hz0xwa44fe1vewy77f4nfefj'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28e471b837ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the capital of a country, which is typically a location.
class_name: LOC
class_index: 4
data: {'text': 'What North American city boasts the biggest Polish population ?', 'coarse_label': 4, 'fine_label': 32}
task_input: What North American city boasts the biggest Polish population ?, corse_label: 4
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What North American city boasts the biggest Polish population ?', 'examples_str': "Question: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What war did the Potsdam Conference follow ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What happens when a body part falls asleep ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What American actress was the first to be called a `` vamp '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the chemical reactivity of argon ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does NASDAQ stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What war did the Potsdam Conference follow ?
class_name: Entity 
class_index: 1
--------

Question: What happens when a body part falls asleep ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What American actress was the first to be called a `` vamp '' ?
class_name: Human being 
class_index: 3
--------

Question: Where is Erykah Badu originally from ?
class_name: Location 
class_index: 4
--------

Question: What is the chemical reactivity of argon ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What North American city boasts the biggest Polish population ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What war did the Potsdam Conference follow ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What happens when a body part falls asleep ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What American actress was the first to be called a `` vamp '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the chemical reactivity of argon ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What North American city boasts the biggest Polish population ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 01:01:53 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12580'), (b'x-ratelimit-remaining-tokens', b'29599'), (b'x-ratelimit-reset-requests', b'3h1m59.784s'), (b'x-ratelimit-reset-tokens', b'801ms'), (b'x-request-id', b'req_01hz0xwaaxfzvsv5nhmpyfgvb1'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28e487cc57ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What war did the Potsdam Conference follow ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What happens when a body part falls asleep ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What American actress was the first to be called a `` vamp '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the chemical reactivity of argon ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What North American city boasts the biggest Polish population ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 01:01:55 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12579'), (b'x-ratelimit-remaining-tokens', b'29600'), (b'x-ratelimit-reset-requests', b'3h2m3.718s'), (b'x-ratelimit-reset-tokens', b'800ms'), (b'x-request-id', b'req_01hz0xwcbfeqca2c367wetr2bq'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28e5559a07ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about a specific city in North America, which is a location.
class_name: LOC
class_index: 4
data: {'text': "Independent silversmith 's account for what percentage of silver production ?", 'coarse_label': 5, 'fine_label': 45}
task_input: Independent silversmith 's account for what percentage of silver production ?, corse_label: 5
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': "Independent silversmith 's account for what percentage of silver production ?", 'examples_str': "Question: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What war did the Potsdam Conference follow ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What happens when a body part falls asleep ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What American actress was the first to be called a `` vamp '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the chemical reactivity of argon ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does NASDAQ stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What war did the Potsdam Conference follow ?
class_name: Entity 
class_index: 1
--------

Question: What happens when a body part falls asleep ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What American actress was the first to be called a `` vamp '' ?
class_name: Human being 
class_index: 3
--------

Question: Where is Erykah Badu originally from ?
class_name: Location 
class_index: 4
--------

Question: What is the chemical reactivity of argon ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Independent silversmith 's account for what percentage of silver production ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What war did the Potsdam Conference follow ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What happens when a body part falls asleep ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What American actress was the first to be called a `` vamp '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the chemical reactivity of argon ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Independent silversmith 's account for what percentage of silver production ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 01:01:55 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12579'), (b'x-ratelimit-remaining-tokens', b'29604'), (b'x-ratelimit-reset-requests', b'3h2m5.776999999s'), (b'x-ratelimit-reset-tokens', b'792ms'), (b'x-request-id', b'req_01hz0xwcjffe1t21a3hedzzzkb'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28e56cada7ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What war did the Potsdam Conference follow ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What happens when a body part falls asleep ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What American actress was the first to be called a `` vamp '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the chemical reactivity of argon ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Independent silversmith 's account for what percentage of silver production ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 01:01:57 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12578'), (b'x-ratelimit-remaining-tokens', b'29597'), (b'x-ratelimit-reset-requests', b'3h2m9.712s'), (b'x-ratelimit-reset-tokens', b'806ms'), (b'x-request-id', b'req_01hz0xwek0fv09dehwpp6nkp8p'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28e63bd177ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about a specific percentage of silver production, which is a numeric value.
class_name: NUM
class_index: 5
data: {'text': 'How old is the universe ?', 'coarse_label': 5, 'fine_label': 44}
task_input: How old is the universe ?, corse_label: 5
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'How old is the universe ?', 'examples_str': "Question: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What war did the Potsdam Conference follow ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What happens when a body part falls asleep ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What American actress was the first to be called a `` vamp '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the chemical reactivity of argon ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does NASDAQ stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What war did the Potsdam Conference follow ?
class_name: Entity 
class_index: 1
--------

Question: What happens when a body part falls asleep ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What American actress was the first to be called a `` vamp '' ?
class_name: Human being 
class_index: 3
--------

Question: Where is Erykah Badu originally from ?
class_name: Location 
class_index: 4
--------

Question: What is the chemical reactivity of argon ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: How old is the universe ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What war did the Potsdam Conference follow ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What happens when a body part falls asleep ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What American actress was the first to be called a `` vamp '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the chemical reactivity of argon ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: How old is the universe ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 01:01:57 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12578'), (b'x-ratelimit-remaining-tokens', b'29599'), (b'x-ratelimit-reset-requests', b'3h2m11.770999999s'), (b'x-ratelimit-reset-tokens', b'801ms'), (b'x-request-id', b'req_01hz0xwet6fqqs6e1vsndrj8y2'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28e652ec07ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What war did the Potsdam Conference follow ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What happens when a body part falls asleep ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What American actress was the first to be called a `` vamp '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the chemical reactivity of argon ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: How old is the universe ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 01:02:00 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12577'), (b'x-ratelimit-remaining-tokens', b'29610'), (b'x-ratelimit-reset-requests', b'3h2m15.707s'), (b'x-ratelimit-reset-tokens', b'780ms'), (b'x-request-id', b'req_01hz0xwgtpesat9ceexh1vvx6b'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28e720b9b7ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the age of the universe, which is a numeric value.
class_name: NUM
class_index: 5
data: {'text': 'When was the Hoover Dam constructed ?', 'coarse_label': 5, 'fine_label': 39}
task_input: When was the Hoover Dam constructed ?, corse_label: 5
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'When was the Hoover Dam constructed ?', 'examples_str': "Question: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What war did the Potsdam Conference follow ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What happens when a body part falls asleep ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What American actress was the first to be called a `` vamp '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the chemical reactivity of argon ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does NASDAQ stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What war did the Potsdam Conference follow ?
class_name: Entity 
class_index: 1
--------

Question: What happens when a body part falls asleep ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What American actress was the first to be called a `` vamp '' ?
class_name: Human being 
class_index: 3
--------

Question: Where is Erykah Badu originally from ?
class_name: Location 
class_index: 4
--------

Question: What is the chemical reactivity of argon ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: When was the Hoover Dam constructed ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What war did the Potsdam Conference follow ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What happens when a body part falls asleep ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What American actress was the first to be called a `` vamp '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the chemical reactivity of argon ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: When was the Hoover Dam constructed ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 01:02:00 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12577'), (b'x-ratelimit-remaining-tokens', b'29609'), (b'x-ratelimit-reset-requests', b'3h2m17.772999999s'), (b'x-ratelimit-reset-tokens', b'781ms'), (b'x-request-id', b'req_01hz0xwh1te96tgqfmm0yy0792'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28e736d077ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What war did the Potsdam Conference follow ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What happens when a body part falls asleep ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What American actress was the first to be called a `` vamp '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the chemical reactivity of argon ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: When was the Hoover Dam constructed ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 01:02:02 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12576'), (b'x-ratelimit-remaining-tokens', b'29607'), (b'x-ratelimit-reset-requests', b'3h2m21.713s'), (b'x-ratelimit-reset-tokens', b'786ms'), (b'x-request-id', b'req_01hz0xwk26eqcsags7bbmndzwx'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28e8058c87ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about a specific event in history, which is typically described in a historical context.
class_name: Description and abstract concept
class_index: 2
data: {'text': 'At what age did Rossini stop writing opera ?', 'coarse_label': 5, 'fine_label': 44}
task_input: At what age did Rossini stop writing opera ?, corse_label: 5
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'At what age did Rossini stop writing opera ?', 'examples_str': "Question: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What war did the Potsdam Conference follow ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What happens when a body part falls asleep ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What American actress was the first to be called a `` vamp '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the chemical reactivity of argon ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does NASDAQ stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What war did the Potsdam Conference follow ?
class_name: Entity 
class_index: 1
--------

Question: What happens when a body part falls asleep ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What American actress was the first to be called a `` vamp '' ?
class_name: Human being 
class_index: 3
--------

Question: Where is Erykah Badu originally from ?
class_name: Location 
class_index: 4
--------

Question: What is the chemical reactivity of argon ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: At what age did Rossini stop writing opera ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What war did the Potsdam Conference follow ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What happens when a body part falls asleep ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What American actress was the first to be called a `` vamp '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the chemical reactivity of argon ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: At what age did Rossini stop writing opera ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 01:02:02 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12576'), (b'x-ratelimit-remaining-tokens', b'29602'), (b'x-ratelimit-reset-requests', b'3h2m23.770999999s'), (b'x-ratelimit-reset-tokens', b'795ms'), (b'x-request-id', b'req_01hz0xwk9cfvm8mdb31zd43zgk'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28e81b9e57ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What war did the Potsdam Conference follow ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What happens when a body part falls asleep ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What American actress was the first to be called a `` vamp '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: What is the chemical reactivity of argon ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: At what age did Rossini stop writing opera ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 01:02:04 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12575'), (b'x-ratelimit-remaining-tokens', b'29605'), (b'x-ratelimit-reset-requests', b'3h2m27.721s'), (b'x-ratelimit-reset-tokens', b'790ms'), (b'x-request-id', b'req_01hz0xwn9eewg8519y5r9223h1'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28e8e9c897ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the age of a specific person, which is a human being.
class_name: HUM
class_index: 3
responses: [0, 0, 0, 0, 3, 5, 2, 1, 2, 2, 4, 0, 3, 1, 3, 1, 5, 4, 4, 4, 5, 5, 2, 3], targets: [0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5]
num_invalid: 0
Preds tensor: tensor([[1., 0., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0.],
        [0., 0., 0., 1., 0., 0.],
        [0., 0., 0., 0., 0., 1.],
        [0., 0., 1., 0., 0., 0.],
        [0., 1., 0., 0., 0., 0.],
        [0., 0., 1., 0., 0., 0.],
        [0., 0., 1., 0., 0., 0.],
        [0., 0., 0., 0., 1., 0.],
        [1., 0., 0., 0., 0., 0.],
        [0., 0., 0., 1., 0., 0.],
        [0., 1., 0., 0., 0., 0.],
        [0., 0., 0., 1., 0., 0.],
        [0., 1., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 1.],
        [0., 0., 0., 0., 1., 0.],
        [0., 0., 0., 0., 1., 0.],
        [0., 0., 0., 0., 1., 0.],
        [0., 0., 0., 0., 0., 1.],
        [0., 0., 0., 0., 0., 1.],
        [0., 0., 1., 0., 0., 0.],
        [0., 0., 0., 1., 0., 0.]])
Targets tensor: tensor([0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5])
Eval Accuracy 2 proposed: 0.583, F1: 0.571, score: 1.154
best_score: 1.154
best_parameters: OrderedDict([('generator.examples_str', Parameter: Question: What does NASDAQ stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What war did the Potsdam Conference follow ?
class_name: Entity 
class_index: 1
--------

Question: What happens when a body part falls asleep ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What American actress was the first to be called a `` vamp '' ?
class_name: Human being 
class_index: 3
--------

Question: Where is Erykah Badu originally from ?
class_name: Location 
class_index: 4
--------

Question: What is the chemical reactivity of argon ?
class_name: Numeric value 
class_index: 5
--------
)])
step: 3
train_batch: {'text': ['What is the salary of a U.S. Representative ?', 'What U.S. state has the lowest highest elevation at 6 feet ?', 'What letter is to the right of K on a typewriter keyboard ?', "How much is Clara Peller being paid by Wendy 's to say `` Where 's the beef '' ?", "What 's the population of Biloxi , Mississippi ?", "What does `` Janelle '' mean ?", 'How many lawyers are there in the state of New Jersey ?', 'What is the correct way to mount a roll of toilet paper ?', 'What kind of sport is often associated with hooligans ?', 'What is the one thing you need before you can purchase life insurance ?'], 'coarse_label': tensor([5, 4, 1, 5, 5, 2, 5, 1, 1, 1]), 'fine_label': tensor([41, 36, 12, 41, 43, 24, 38, 20, 17, 13])}
before random_replace: [Sample(index=1032, data={'text': 'What does NASDAQ stand for ?', 'coarse_label': 0, 'fine_label': 1}), Sample(index=742, data={'text': 'What war did the Potsdam Conference follow ?', 'coarse_label': 1, 'fine_label': 8}), Sample(index=94, data={'text': 'What happens when a body part falls asleep ?', 'coarse_label': 2, 'fine_label': 25}), Sample(index=794, data={'text': "What American actress was the first to be called a `` vamp '' ?", 'coarse_label': 3, 'fine_label': 29}), Sample(index=446, data={'text': 'Where is Erykah Badu originally from ?', 'coarse_label': 4, 'fine_label': 35}), Sample(index=2697, data={'text': 'What is the chemical reactivity of argon ?', 'coarse_label': 5, 'fine_label': 43})]
after random_replace: [Sample(index=1032, data={'text': 'What does NASDAQ stand for ?', 'coarse_label': 0, 'fine_label': 1}), Sample(index=2529, data={'text': 'What is the name of the American literary era that includes 1896 ?', 'coarse_label': 1, 'fine_label': 8}), Sample(index=1508, data={'text': "Why can 't you taste anything when you have a cold ?", 'coarse_label': 2, 'fine_label': 27}), Sample(index=323, data={'text': 'What schools in the Washington , DC NN NN VBP NN NN NN NN .', 'coarse_label': 3, 'fine_label': 28}), Sample(index=477, data={'text': 'Where on the Internet can I get information about the Fifth Amendment on the American Bill of Rights ?', 'coarse_label': 4, 'fine_label': 35}), Sample(index=250, data={'text': 'How many students attend the University of Massachusetts ?', 'coarse_label': 5, 'fine_label': 38})]
data: {'text': 'What does U.S.S.R. stand for ?', 'coarse_label': 0, 'fine_label': 1}
task_input: What does U.S.S.R. stand for ?, corse_label: 0
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What does U.S.S.R. stand for ?', 'examples_str': "Question: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of the American literary era that includes 1896 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why can 't you taste anything when you have a cold ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What schools in the Washington , DC NN NN VBP NN NN NN NN .\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where on the Internet can I get information about the Fifth Amendment on the American Bill of Rights ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many students attend the University of Massachusetts ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does NASDAQ stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is the name of the American literary era that includes 1896 ?
class_name: Entity 
class_index: 1
--------

Question: Why can 't you taste anything when you have a cold ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What schools in the Washington , DC NN NN VBP NN NN NN NN .
class_name: Human being 
class_index: 3
--------

Question: Where on the Internet can I get information about the Fifth Amendment on the American Bill of Rights ?
class_name: Location 
class_index: 4
--------

Question: How many students attend the University of Massachusetts ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What does U.S.S.R. stand for ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of the American literary era that includes 1896 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why can 't you taste anything when you have a cold ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What schools in the Washington , DC NN NN VBP NN NN NN NN .\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where on the Internet can I get information about the Fifth Amendment on the American Bill of Rights ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many students attend the University of Massachusetts ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does U.S.S.R. stand for ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 01:02:04 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12575'), (b'x-ratelimit-remaining-tokens', b'29614'), (b'x-ratelimit-reset-requests', b'3h2m29.751s'), (b'x-ratelimit-reset-tokens', b'772ms'), (b'x-request-id', b'req_01hz0xwnh8e23bdbk5q91zmfmh'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28e902dee7ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of the American literary era that includes 1896 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why can 't you taste anything when you have a cold ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What schools in the Washington , DC NN NN VBP NN NN NN NN .\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where on the Internet can I get information about the Fifth Amendment on the American Bill of Rights ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many students attend the University of Massachusetts ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does U.S.S.R. stand for ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 01:02:07 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12574'), (b'x-ratelimit-remaining-tokens', b'29582'), (b'x-ratelimit-reset-requests', b'3h2m33.692s'), (b'x-ratelimit-reset-tokens', b'836ms'), (b'x-request-id', b'req_01hz0xwqhkfeaarn1eccgqjb87'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28e9d095d7ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking for the meaning of the abbreviation U.S.S.R.
class_name: ABBR
class_index: 0
```
data: {'text': 'What is the abbreviated form of the National Bureau of Investigation ?', 'coarse_label': 0, 'fine_label': 0}
task_input: What is the abbreviated form of the National Bureau of Investigation ?, corse_label: 0
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What is the abbreviated form of the National Bureau of Investigation ?', 'examples_str': "Question: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of the American literary era that includes 1896 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why can 't you taste anything when you have a cold ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What schools in the Washington , DC NN NN VBP NN NN NN NN .\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where on the Internet can I get information about the Fifth Amendment on the American Bill of Rights ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many students attend the University of Massachusetts ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does NASDAQ stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is the name of the American literary era that includes 1896 ?
class_name: Entity 
class_index: 1
--------

Question: Why can 't you taste anything when you have a cold ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What schools in the Washington , DC NN NN VBP NN NN NN NN .
class_name: Human being 
class_index: 3
--------

Question: Where on the Internet can I get information about the Fifth Amendment on the American Bill of Rights ?
class_name: Location 
class_index: 4
--------

Question: How many students attend the University of Massachusetts ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What is the abbreviated form of the National Bureau of Investigation ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of the American literary era that includes 1896 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why can 't you taste anything when you have a cold ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What schools in the Washington , DC NN NN VBP NN NN NN NN .\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where on the Internet can I get information about the Fifth Amendment on the American Bill of Rights ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many students attend the University of Massachusetts ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is the abbreviated form of the National Bureau of Investigation ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 01:02:07 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12574'), (b'x-ratelimit-remaining-tokens', b'29583'), (b'x-ratelimit-reset-requests', b'3h2m35.771999999s'), (b'x-ratelimit-reset-tokens', b'833ms'), (b'x-request-id', b'req_01hz0xwqrreqd99wn7cgskhvkx'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28e9e6b0b7ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of the American literary era that includes 1896 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why can 't you taste anything when you have a cold ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What schools in the Washington , DC NN NN VBP NN NN NN NN .\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where on the Internet can I get information about the Fifth Amendment on the American Bill of Rights ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many students attend the University of Massachusetts ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is the abbreviated form of the National Bureau of Investigation ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 01:02:09 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12573'), (b'x-ratelimit-remaining-tokens', b'29572'), (b'x-ratelimit-reset-requests', b'3h2m39.706s'), (b'x-ratelimit-reset-tokens', b'856ms'), (b'x-request-id', b'req_01hz0xwssafvmvdaahsgejsb0r'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28eab5ec87ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking for the abbreviated form of a specific organization, which is a common use case for abbreviations.
class_name: ABBR
class_index: 0
data: {'text': "What do the letters ZIP stand for in the phrase `` ZIP code '' ?", 'coarse_label': 0, 'fine_label': 1}
task_input: What do the letters ZIP stand for in the phrase `` ZIP code '' ?, corse_label: 0
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': "What do the letters ZIP stand for in the phrase `` ZIP code '' ?", 'examples_str': "Question: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of the American literary era that includes 1896 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why can 't you taste anything when you have a cold ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What schools in the Washington , DC NN NN VBP NN NN NN NN .\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where on the Internet can I get information about the Fifth Amendment on the American Bill of Rights ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many students attend the University of Massachusetts ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does NASDAQ stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is the name of the American literary era that includes 1896 ?
class_name: Entity 
class_index: 1
--------

Question: Why can 't you taste anything when you have a cold ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What schools in the Washington , DC NN NN VBP NN NN NN NN .
class_name: Human being 
class_index: 3
--------

Question: Where on the Internet can I get information about the Fifth Amendment on the American Bill of Rights ?
class_name: Location 
class_index: 4
--------

Question: How many students attend the University of Massachusetts ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What do the letters ZIP stand for in the phrase `` ZIP code '' ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of the American literary era that includes 1896 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why can 't you taste anything when you have a cold ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What schools in the Washington , DC NN NN VBP NN NN NN NN .\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where on the Internet can I get information about the Fifth Amendment on the American Bill of Rights ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many students attend the University of Massachusetts ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What do the letters ZIP stand for in the phrase `` ZIP code '' ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 01:02:09 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12573'), (b'x-ratelimit-remaining-tokens', b'29576'), (b'x-ratelimit-reset-requests', b'3h2m41.761999999s'), (b'x-ratelimit-reset-tokens', b'848ms'), (b'x-request-id', b'req_01hz0xwt0sef78tk2qj9wjdp1k'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28eacdff37ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of the American literary era that includes 1896 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why can 't you taste anything when you have a cold ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What schools in the Washington , DC NN NN VBP NN NN NN NN .\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where on the Internet can I get information about the Fifth Amendment on the American Bill of Rights ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many students attend the University of Massachusetts ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What do the letters ZIP stand for in the phrase `` ZIP code '' ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 01:02:11 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12572'), (b'x-ratelimit-remaining-tokens', b'29574'), (b'x-ratelimit-reset-requests', b'3h2m45.697s'), (b'x-ratelimit-reset-tokens', b'852ms'), (b'x-request-id', b'req_01hz0xww1aez096tdm0wrjj1js'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28eb9cb3c7ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the meaning of the letters "ZIP" in the phrase "ZIP code", which is an abbreviation.
class_name: ABBR
class_index: 0
data: {'text': 'What does VCR stand for ?', 'coarse_label': 0, 'fine_label': 1}
task_input: What does VCR stand for ?, corse_label: 0
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What does VCR stand for ?', 'examples_str': "Question: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of the American literary era that includes 1896 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why can 't you taste anything when you have a cold ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What schools in the Washington , DC NN NN VBP NN NN NN NN .\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where on the Internet can I get information about the Fifth Amendment on the American Bill of Rights ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many students attend the University of Massachusetts ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does NASDAQ stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is the name of the American literary era that includes 1896 ?
class_name: Entity 
class_index: 1
--------

Question: Why can 't you taste anything when you have a cold ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What schools in the Washington , DC NN NN VBP NN NN NN NN .
class_name: Human being 
class_index: 3
--------

Question: Where on the Internet can I get information about the Fifth Amendment on the American Bill of Rights ?
class_name: Location 
class_index: 4
--------

Question: How many students attend the University of Massachusetts ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What does VCR stand for ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of the American literary era that includes 1896 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why can 't you taste anything when you have a cold ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What schools in the Washington , DC NN NN VBP NN NN NN NN .\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where on the Internet can I get information about the Fifth Amendment on the American Bill of Rights ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many students attend the University of Massachusetts ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does VCR stand for ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 01:02:11 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12572'), (b'x-ratelimit-remaining-tokens', b'29569'), (b'x-ratelimit-reset-requests', b'3h2m47.745s'), (b'x-ratelimit-reset-tokens', b'862ms'), (b'x-request-id', b'req_01hz0xww9afqr80gft4mkqsw86'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28ebb5c8c7ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of the American literary era that includes 1896 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why can 't you taste anything when you have a cold ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What schools in the Washington , DC NN NN VBP NN NN NN NN .\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where on the Internet can I get information about the Fifth Amendment on the American Bill of Rights ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many students attend the University of Massachusetts ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does VCR stand for ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 01:02:14 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12571'), (b'x-ratelimit-remaining-tokens', b'29583'), (b'x-ratelimit-reset-requests', b'3h2m51.681999999s'), (b'x-ratelimit-reset-tokens', b'834ms'), (b'x-request-id', b'req_01hz0xwy9se97rp7n3zpgk0z2z'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28ec84fee7ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking for the abbreviation of VCR, which is a common abbreviation for Video Cassette Recorder.
class_name: ABBR
class_index: 0
data: {'text': 'What sport can a free-legged pacer compete in ?', 'coarse_label': 1, 'fine_label': 17}
task_input: What sport can a free-legged pacer compete in ?, corse_label: 1
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What sport can a free-legged pacer compete in ?', 'examples_str': "Question: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of the American literary era that includes 1896 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why can 't you taste anything when you have a cold ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What schools in the Washington , DC NN NN VBP NN NN NN NN .\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where on the Internet can I get information about the Fifth Amendment on the American Bill of Rights ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many students attend the University of Massachusetts ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does NASDAQ stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is the name of the American literary era that includes 1896 ?
class_name: Entity 
class_index: 1
--------

Question: Why can 't you taste anything when you have a cold ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What schools in the Washington , DC NN NN VBP NN NN NN NN .
class_name: Human being 
class_index: 3
--------

Question: Where on the Internet can I get information about the Fifth Amendment on the American Bill of Rights ?
class_name: Location 
class_index: 4
--------

Question: How many students attend the University of Massachusetts ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What sport can a free-legged pacer compete in ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of the American literary era that includes 1896 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why can 't you taste anything when you have a cold ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What schools in the Washington , DC NN NN VBP NN NN NN NN .\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where on the Internet can I get information about the Fifth Amendment on the American Bill of Rights ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many students attend the University of Massachusetts ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What sport can a free-legged pacer compete in ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 01:02:14 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12571'), (b'x-ratelimit-remaining-tokens', b'29582'), (b'x-ratelimit-reset-requests', b'3h2m53.767999999s'), (b'x-ratelimit-reset-tokens', b'835ms'), (b'x-request-id', b'req_01hz0xwyh2fhg9r2873g88pach'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28ec9b8fd7ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of the American literary era that includes 1896 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why can 't you taste anything when you have a cold ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What schools in the Washington , DC NN NN VBP NN NN NN NN .\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where on the Internet can I get information about the Fifth Amendment on the American Bill of Rights ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many students attend the University of Massachusetts ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What sport can a free-legged pacer compete in ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 01:02:16 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12570'), (b'x-ratelimit-remaining-tokens', b'29578'), (b'x-ratelimit-reset-requests', b'3h2m57.697s'), (b'x-ratelimit-reset-tokens', b'844ms'), (b'x-request-id', b'req_01hz0xx0htep78v5v7er9depmw'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28ed69c277ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is about a specific type of horse that can participate in a particular sport, which is a specific activity that a human being can engage in.
class_name: HUM
class_index: 3
data: {'text': 'What was originally defined as one 1-millionth of the distance from the equator to the Pole ?', 'coarse_label': 1, 'fine_label': 21}
task_input: What was originally defined as one 1-millionth of the distance from the equator to the Pole ?, corse_label: 1
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What was originally defined as one 1-millionth of the distance from the equator to the Pole ?', 'examples_str': "Question: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of the American literary era that includes 1896 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why can 't you taste anything when you have a cold ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What schools in the Washington , DC NN NN VBP NN NN NN NN .\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where on the Internet can I get information about the Fifth Amendment on the American Bill of Rights ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many students attend the University of Massachusetts ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does NASDAQ stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is the name of the American literary era that includes 1896 ?
class_name: Entity 
class_index: 1
--------

Question: Why can 't you taste anything when you have a cold ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What schools in the Washington , DC NN NN VBP NN NN NN NN .
class_name: Human being 
class_index: 3
--------

Question: Where on the Internet can I get information about the Fifth Amendment on the American Bill of Rights ?
class_name: Location 
class_index: 4
--------

Question: How many students attend the University of Massachusetts ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What was originally defined as one 1-millionth of the distance from the equator to the Pole ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of the American literary era that includes 1896 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why can 't you taste anything when you have a cold ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What schools in the Washington , DC NN NN VBP NN NN NN NN .\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where on the Internet can I get information about the Fifth Amendment on the American Bill of Rights ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many students attend the University of Massachusetts ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What was originally defined as one 1-millionth of the distance from the equator to the Pole ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 01:02:16 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12570'), (b'x-ratelimit-remaining-tokens', b'29570'), (b'x-ratelimit-reset-requests', b'3h2m59.762999999s'), (b'x-ratelimit-reset-tokens', b'860ms'), (b'x-request-id', b'req_01hz0xx0s7fvms0v6v01sacebx'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28ed82d7b7ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of the American literary era that includes 1896 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why can 't you taste anything when you have a cold ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What schools in the Washington , DC NN NN VBP NN NN NN NN .\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where on the Internet can I get information about the Fifth Amendment on the American Bill of Rights ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many students attend the University of Massachusetts ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What was originally defined as one 1-millionth of the distance from the equator to the Pole ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 01:02:18 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12569'), (b'x-ratelimit-remaining-tokens', b'29566'), (b'x-ratelimit-reset-requests', b'3h3m3.707s'), (b'x-ratelimit-reset-tokens', b'868ms'), (b'x-request-id', b'req_01hz0xx2sdew781f5ac82v3rb5'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28ee4f80f7ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is asking about a specific unit of measurement, which is a numeric value.
class_name: NUM
class_index: 5
data: {'text': 'What fuel do airplanes use ?', 'coarse_label': 1, 'fine_label': 18}
task_input: What fuel do airplanes use ?, corse_label: 1
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What fuel do airplanes use ?', 'examples_str': "Question: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of the American literary era that includes 1896 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why can 't you taste anything when you have a cold ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What schools in the Washington , DC NN NN VBP NN NN NN NN .\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where on the Internet can I get information about the Fifth Amendment on the American Bill of Rights ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many students attend the University of Massachusetts ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does NASDAQ stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is the name of the American literary era that includes 1896 ?
class_name: Entity 
class_index: 1
--------

Question: Why can 't you taste anything when you have a cold ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What schools in the Washington , DC NN NN VBP NN NN NN NN .
class_name: Human being 
class_index: 3
--------

Question: Where on the Internet can I get information about the Fifth Amendment on the American Bill of Rights ?
class_name: Location 
class_index: 4
--------

Question: How many students attend the University of Massachusetts ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What fuel do airplanes use ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of the American literary era that includes 1896 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why can 't you taste anything when you have a cold ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What schools in the Washington , DC NN NN VBP NN NN NN NN .\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where on the Internet can I get information about the Fifth Amendment on the American Bill of Rights ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many students attend the University of Massachusetts ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What fuel do airplanes use ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 01:02:18 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12569'), (b'x-ratelimit-remaining-tokens', b'29572'), (b'x-ratelimit-reset-requests', b'3h3m5.771999999s'), (b'x-ratelimit-reset-tokens', b'855ms'), (b'x-request-id', b'req_01hz0xx30mfqs9vb6zch959m3s'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28ee669447ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of the American literary era that includes 1896 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why can 't you taste anything when you have a cold ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What schools in the Washington , DC NN NN VBP NN NN NN NN .\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where on the Internet can I get information about the Fifth Amendment on the American Bill of Rights ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many students attend the University of Massachusetts ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What fuel do airplanes use ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 01:02:20 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12568'), (b'x-ratelimit-remaining-tokens', b'29583'), (b'x-ratelimit-reset-requests', b'3h3m9.711s'), (b'x-ratelimit-reset-tokens', b'834ms'), (b'x-request-id', b'req_01hz0xx511esbsssf116scn4bd'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28ef34c7d7ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the fuel used by airplanes, which is a specific type of information.
class_name: DESC
class_index: 2
```
data: {'text': 'On what T.V. show could Tom Terrific be found ?', 'coarse_label': 1, 'fine_label': 5}
task_input: On what T.V. show could Tom Terrific be found ?, corse_label: 1
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'On what T.V. show could Tom Terrific be found ?', 'examples_str': "Question: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of the American literary era that includes 1896 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why can 't you taste anything when you have a cold ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What schools in the Washington , DC NN NN VBP NN NN NN NN .\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where on the Internet can I get information about the Fifth Amendment on the American Bill of Rights ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many students attend the University of Massachusetts ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does NASDAQ stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is the name of the American literary era that includes 1896 ?
class_name: Entity 
class_index: 1
--------

Question: Why can 't you taste anything when you have a cold ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What schools in the Washington , DC NN NN VBP NN NN NN NN .
class_name: Human being 
class_index: 3
--------

Question: Where on the Internet can I get information about the Fifth Amendment on the American Bill of Rights ?
class_name: Location 
class_index: 4
--------

Question: How many students attend the University of Massachusetts ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: On what T.V. show could Tom Terrific be found ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of the American literary era that includes 1896 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why can 't you taste anything when you have a cold ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What schools in the Washington , DC NN NN VBP NN NN NN NN .\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where on the Internet can I get information about the Fifth Amendment on the American Bill of Rights ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many students attend the University of Massachusetts ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: On what T.V. show could Tom Terrific be found ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 01:02:20 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12568'), (b'x-ratelimit-remaining-tokens', b'29583'), (b'x-ratelimit-reset-requests', b'3h3m11.773999999s'), (b'x-ratelimit-reset-tokens', b'833ms'), (b'x-request-id', b'req_01hz0xx582fzwrc1y9vjz97cqs'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28ef4bdec7ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of the American literary era that includes 1896 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why can 't you taste anything when you have a cold ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What schools in the Washington , DC NN NN VBP NN NN NN NN .\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where on the Internet can I get information about the Fifth Amendment on the American Bill of Rights ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many students attend the University of Massachusetts ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: On what T.V. show could Tom Terrific be found ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 01:02:23 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12567'), (b'x-ratelimit-remaining-tokens', b'29578'), (b'x-ratelimit-reset-requests', b'3h3m15.709s'), (b'x-ratelimit-reset-tokens', b'844ms'), (b'x-request-id', b'req_01hz0xx78kfgmry8a6qdxg9d6q'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28f0188d07ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is about a TV show, and Tom Terrific is a character, so it's likely about a TV show.
class_name: "ABBR"
class_index: 0
```
data: {'text': 'How do you select wine ?', 'coarse_label': 2, 'fine_label': 26}
task_input: How do you select wine ?, corse_label: 2
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'How do you select wine ?', 'examples_str': "Question: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of the American literary era that includes 1896 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why can 't you taste anything when you have a cold ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What schools in the Washington , DC NN NN VBP NN NN NN NN .\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where on the Internet can I get information about the Fifth Amendment on the American Bill of Rights ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many students attend the University of Massachusetts ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does NASDAQ stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is the name of the American literary era that includes 1896 ?
class_name: Entity 
class_index: 1
--------

Question: Why can 't you taste anything when you have a cold ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What schools in the Washington , DC NN NN VBP NN NN NN NN .
class_name: Human being 
class_index: 3
--------

Question: Where on the Internet can I get information about the Fifth Amendment on the American Bill of Rights ?
class_name: Location 
class_index: 4
--------

Question: How many students attend the University of Massachusetts ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: How do you select wine ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of the American literary era that includes 1896 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why can 't you taste anything when you have a cold ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What schools in the Washington , DC NN NN VBP NN NN NN NN .\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where on the Internet can I get information about the Fifth Amendment on the American Bill of Rights ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many students attend the University of Massachusetts ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: How do you select wine ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 01:02:23 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12567'), (b'x-ratelimit-remaining-tokens', b'29571'), (b'x-ratelimit-reset-requests', b'3h3m17.739s'), (b'x-ratelimit-reset-tokens', b'858ms'), (b'x-request-id', b'req_01hz0xx7gvfb2r4r59pw3nwbas'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28f034a447ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of the American literary era that includes 1896 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why can 't you taste anything when you have a cold ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What schools in the Washington , DC NN NN VBP NN NN NN NN .\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where on the Internet can I get information about the Fifth Amendment on the American Bill of Rights ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many students attend the University of Massachusetts ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: How do you select wine ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 01:02:26 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12566'), (b'x-ratelimit-remaining-tokens', b'29584'), (b'x-ratelimit-reset-requests', b'3h3m21.674999999s'), (b'x-ratelimit-reset-tokens', b'832ms'), (b'x-request-id', b'req_01hz0xx9h9fb3ahex7t7x76sjb'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28f102cc27ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is about selecting wine, which is a process that involves personal preference and subjective opinions, making it a description of an abstract concept.
class_name: DESC
class_index: 2
```
data: {'text': "What are some children 's rights ?", 'coarse_label': 2, 'fine_label': 25}
task_input: What are some children 's rights ?, corse_label: 2
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': "What are some children 's rights ?", 'examples_str': "Question: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of the American literary era that includes 1896 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why can 't you taste anything when you have a cold ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What schools in the Washington , DC NN NN VBP NN NN NN NN .\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where on the Internet can I get information about the Fifth Amendment on the American Bill of Rights ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many students attend the University of Massachusetts ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does NASDAQ stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is the name of the American literary era that includes 1896 ?
class_name: Entity 
class_index: 1
--------

Question: Why can 't you taste anything when you have a cold ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What schools in the Washington , DC NN NN VBP NN NN NN NN .
class_name: Human being 
class_index: 3
--------

Question: Where on the Internet can I get information about the Fifth Amendment on the American Bill of Rights ?
class_name: Location 
class_index: 4
--------

Question: How many students attend the University of Massachusetts ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What are some children 's rights ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of the American literary era that includes 1896 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why can 't you taste anything when you have a cold ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What schools in the Washington , DC NN NN VBP NN NN NN NN .\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where on the Internet can I get information about the Fifth Amendment on the American Bill of Rights ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many students attend the University of Massachusetts ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What are some children 's rights ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 01:02:26 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12566'), (b'x-ratelimit-remaining-tokens', b'29576'), (b'x-ratelimit-reset-requests', b'3h3m23.204s'), (b'x-ratelimit-reset-tokens', b'847ms'), (b'x-request-id', b'req_01hz0xxaa8ez0rdzjhzm9jvezc'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28f1529227ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of the American literary era that includes 1896 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why can 't you taste anything when you have a cold ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What schools in the Washington , DC NN NN VBP NN NN NN NN .\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where on the Internet can I get information about the Fifth Amendment on the American Bill of Rights ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many students attend the University of Massachusetts ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What are some children 's rights ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 01:02:28 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12565'), (b'x-ratelimit-remaining-tokens', b'29581'), (b'x-ratelimit-reset-requests', b'3h3m27.149999999s'), (b'x-ratelimit-reset-tokens', b'838ms'), (b'x-request-id', b'req_01hz0xxcaees1vqgwzr5wdz9jz'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28f21fc187ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the rights of children, which are abstract concepts and not specific entities or locations.
class_name: Description and abstract concept
class_index: 2
data: {'text': 'What are some fun things to do in Cozumel , Mexico for teenagers ?', 'coarse_label': 2, 'fine_label': 25}
task_input: What are some fun things to do in Cozumel , Mexico for teenagers ?, corse_label: 2
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What are some fun things to do in Cozumel , Mexico for teenagers ?', 'examples_str': "Question: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of the American literary era that includes 1896 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why can 't you taste anything when you have a cold ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What schools in the Washington , DC NN NN VBP NN NN NN NN .\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where on the Internet can I get information about the Fifth Amendment on the American Bill of Rights ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many students attend the University of Massachusetts ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does NASDAQ stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is the name of the American literary era that includes 1896 ?
class_name: Entity 
class_index: 1
--------

Question: Why can 't you taste anything when you have a cold ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What schools in the Washington , DC NN NN VBP NN NN NN NN .
class_name: Human being 
class_index: 3
--------

Question: Where on the Internet can I get information about the Fifth Amendment on the American Bill of Rights ?
class_name: Location 
class_index: 4
--------

Question: How many students attend the University of Massachusetts ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What are some fun things to do in Cozumel , Mexico for teenagers ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of the American literary era that includes 1896 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why can 't you taste anything when you have a cold ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What schools in the Washington , DC NN NN VBP NN NN NN NN .\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where on the Internet can I get information about the Fifth Amendment on the American Bill of Rights ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many students attend the University of Massachusetts ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What are some fun things to do in Cozumel , Mexico for teenagers ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 01:02:28 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12565'), (b'x-ratelimit-remaining-tokens', b'29592'), (b'x-ratelimit-reset-requests', b'3h3m29.743s'), (b'x-ratelimit-reset-tokens', b'815ms'), (b'x-request-id', b'req_01hz0xxcjhfh1t9ag0h7yv1qpt'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28f239d747ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of the American literary era that includes 1896 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why can 't you taste anything when you have a cold ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What schools in the Washington , DC NN NN VBP NN NN NN NN .\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where on the Internet can I get information about the Fifth Amendment on the American Bill of Rights ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many students attend the University of Massachusetts ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What are some fun things to do in Cozumel , Mexico for teenagers ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 01:02:30 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12564'), (b'x-ratelimit-remaining-tokens', b'29573'), (b'x-ratelimit-reset-requests', b'3h3m33.669999999s'), (b'x-ratelimit-reset-tokens', b'854ms'), (b'x-request-id', b'req_01hz0xxekafb3vcjkg3g1p10sg'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28f30888f7ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about activities to do in a specific location, which is a common tourist destination.
class_name: Location
class_index: 4
data: {'text': 'What does hazmat stand for ?', 'coarse_label': 2, 'fine_label': 24}
task_input: What does hazmat stand for ?, corse_label: 2
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What does hazmat stand for ?', 'examples_str': "Question: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of the American literary era that includes 1896 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why can 't you taste anything when you have a cold ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What schools in the Washington , DC NN NN VBP NN NN NN NN .\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where on the Internet can I get information about the Fifth Amendment on the American Bill of Rights ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many students attend the University of Massachusetts ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does NASDAQ stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is the name of the American literary era that includes 1896 ?
class_name: Entity 
class_index: 1
--------

Question: Why can 't you taste anything when you have a cold ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What schools in the Washington , DC NN NN VBP NN NN NN NN .
class_name: Human being 
class_index: 3
--------

Question: Where on the Internet can I get information about the Fifth Amendment on the American Bill of Rights ?
class_name: Location 
class_index: 4
--------

Question: How many students attend the University of Massachusetts ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What does hazmat stand for ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of the American literary era that includes 1896 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why can 't you taste anything when you have a cold ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What schools in the Washington , DC NN NN VBP NN NN NN NN .\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where on the Internet can I get information about the Fifth Amendment on the American Bill of Rights ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many students attend the University of Massachusetts ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does hazmat stand for ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 01:02:30 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12564'), (b'x-ratelimit-remaining-tokens', b'29577'), (b'x-ratelimit-reset-requests', b'3h3m35.764999999s'), (b'x-ratelimit-reset-tokens', b'846ms'), (b'x-request-id', b'req_01hz0xxetpe82r34x6988n2fgv'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28f3209b17ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of the American literary era that includes 1896 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why can 't you taste anything when you have a cold ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What schools in the Washington , DC NN NN VBP NN NN NN NN .\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where on the Internet can I get information about the Fifth Amendment on the American Bill of Rights ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many students attend the University of Massachusetts ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does hazmat stand for ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 01:02:32 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12563'), (b'x-ratelimit-remaining-tokens', b'29583'), (b'x-ratelimit-reset-requests', b'3h3m39.706s'), (b'x-ratelimit-reset-tokens', b'834ms'), (b'x-request-id', b'req_01hz0xxgv1ef8rp8s26yhrj7ms'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28f3eec317ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking for the abbreviation of a term, which is a common use case for abbreviations.
class_name: ABBR
class_index: 0
data: {'text': "Who is the nebbish that is Marvel 's official mascot ?", 'coarse_label': 3, 'fine_label': 29}
task_input: Who is the nebbish that is Marvel 's official mascot ?, corse_label: 3
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': "Who is the nebbish that is Marvel 's official mascot ?", 'examples_str': "Question: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of the American literary era that includes 1896 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why can 't you taste anything when you have a cold ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What schools in the Washington , DC NN NN VBP NN NN NN NN .\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where on the Internet can I get information about the Fifth Amendment on the American Bill of Rights ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many students attend the University of Massachusetts ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does NASDAQ stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is the name of the American literary era that includes 1896 ?
class_name: Entity 
class_index: 1
--------

Question: Why can 't you taste anything when you have a cold ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What schools in the Washington , DC NN NN VBP NN NN NN NN .
class_name: Human being 
class_index: 3
--------

Question: Where on the Internet can I get information about the Fifth Amendment on the American Bill of Rights ?
class_name: Location 
class_index: 4
--------

Question: How many students attend the University of Massachusetts ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Who is the nebbish that is Marvel 's official mascot ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of the American literary era that includes 1896 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why can 't you taste anything when you have a cold ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What schools in the Washington , DC NN NN VBP NN NN NN NN .\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where on the Internet can I get information about the Fifth Amendment on the American Bill of Rights ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many students attend the University of Massachusetts ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Who is the nebbish that is Marvel 's official mascot ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 01:02:33 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'325'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12563'), (b'x-ratelimit-remaining-tokens', b'29582'), (b'x-ratelimit-reset-requests', b'3h3m41.768999999s'), (b'x-ratelimit-reset-tokens', b'835ms'), (b'x-request-id', b'req_01hz0xxh28ewhsmrmcfw1vcavt'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28f405d557ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of the American literary era that includes 1896 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why can 't you taste anything when you have a cold ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What schools in the Washington , DC NN NN VBP NN NN NN NN .\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where on the Internet can I get information about the Fifth Amendment on the American Bill of Rights ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many students attend the University of Massachusetts ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Who is the nebbish that is Marvel 's official mascot ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 01:02:35 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12562'), (b'x-ratelimit-remaining-tokens', b'29576'), (b'x-ratelimit-reset-requests', b'3h3m45.708s'), (b'x-ratelimit-reset-tokens', b'848ms'), (b'x-request-id', b'req_01hz0xxk2mesca5t1v1y1ksd68'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28f4d384c7ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about a character in the Marvel universe, which is a human being.
class_name: HUM
class_index: 3
data: {'text': 'What Japanese electronics company was named for a coastal city northeast of Tokyo ?', 'coarse_label': 3, 'fine_label': 28}
task_input: What Japanese electronics company was named for a coastal city northeast of Tokyo ?, corse_label: 3
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What Japanese electronics company was named for a coastal city northeast of Tokyo ?', 'examples_str': "Question: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of the American literary era that includes 1896 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why can 't you taste anything when you have a cold ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What schools in the Washington , DC NN NN VBP NN NN NN NN .\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where on the Internet can I get information about the Fifth Amendment on the American Bill of Rights ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many students attend the University of Massachusetts ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does NASDAQ stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is the name of the American literary era that includes 1896 ?
class_name: Entity 
class_index: 1
--------

Question: Why can 't you taste anything when you have a cold ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What schools in the Washington , DC NN NN VBP NN NN NN NN .
class_name: Human being 
class_index: 3
--------

Question: Where on the Internet can I get information about the Fifth Amendment on the American Bill of Rights ?
class_name: Location 
class_index: 4
--------

Question: How many students attend the University of Massachusetts ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What Japanese electronics company was named for a coastal city northeast of Tokyo ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of the American literary era that includes 1896 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why can 't you taste anything when you have a cold ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What schools in the Washington , DC NN NN VBP NN NN NN NN .\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where on the Internet can I get information about the Fifth Amendment on the American Bill of Rights ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many students attend the University of Massachusetts ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What Japanese electronics company was named for a coastal city northeast of Tokyo ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 01:02:35 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12562'), (b'x-ratelimit-remaining-tokens', b'29579'), (b'x-ratelimit-reset-requests', b'3h3m47.772999999s'), (b'x-ratelimit-reset-tokens', b'842ms'), (b'x-request-id', b'req_01hz0xxk9te24srk1vf2pj0mtq'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28f4ea93d7ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of the American literary era that includes 1896 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why can 't you taste anything when you have a cold ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What schools in the Washington , DC NN NN VBP NN NN NN NN .\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where on the Internet can I get information about the Fifth Amendment on the American Bill of Rights ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many students attend the University of Massachusetts ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What Japanese electronics company was named for a coastal city northeast of Tokyo ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 01:02:37 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12561'), (b'x-ratelimit-remaining-tokens', b'29569'), (b'x-ratelimit-reset-requests', b'3h3m51.707s'), (b'x-ratelimit-reset-tokens', b'862ms'), (b'x-request-id', b'req_01hz0xxnabfe4aby83nee75b0e'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28f5b8ba47ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about a specific Japanese electronics company, which is likely to be a well-known brand.
class_name: ABBR
class_index: 0
```
data: {'text': 'Who was Maria Theresa ?', 'coarse_label': 3, 'fine_label': 31}
task_input: Who was Maria Theresa ?, corse_label: 3
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'Who was Maria Theresa ?', 'examples_str': "Question: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of the American literary era that includes 1896 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why can 't you taste anything when you have a cold ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What schools in the Washington , DC NN NN VBP NN NN NN NN .\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where on the Internet can I get information about the Fifth Amendment on the American Bill of Rights ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many students attend the University of Massachusetts ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does NASDAQ stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is the name of the American literary era that includes 1896 ?
class_name: Entity 
class_index: 1
--------

Question: Why can 't you taste anything when you have a cold ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What schools in the Washington , DC NN NN VBP NN NN NN NN .
class_name: Human being 
class_index: 3
--------

Question: Where on the Internet can I get information about the Fifth Amendment on the American Bill of Rights ?
class_name: Location 
class_index: 4
--------

Question: How many students attend the University of Massachusetts ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Who was Maria Theresa ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of the American literary era that includes 1896 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why can 't you taste anything when you have a cold ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What schools in the Washington , DC NN NN VBP NN NN NN NN .\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where on the Internet can I get information about the Fifth Amendment on the American Bill of Rights ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many students attend the University of Massachusetts ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Who was Maria Theresa ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 01:02:37 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12561'), (b'x-ratelimit-remaining-tokens', b'29573'), (b'x-ratelimit-reset-requests', b'3h3m53.761999999s'), (b'x-ratelimit-reset-tokens', b'854ms'), (b'x-request-id', b'req_01hz0xxnhvej5vy3ehvzc0qwd9'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28f5d0d297ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of the American literary era that includes 1896 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why can 't you taste anything when you have a cold ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What schools in the Washington , DC NN NN VBP NN NN NN NN .\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where on the Internet can I get information about the Fifth Amendment on the American Bill of Rights ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many students attend the University of Massachusetts ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Who was Maria Theresa ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 01:02:39 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12560'), (b'x-ratelimit-remaining-tokens', b'29584'), (b'x-ratelimit-reset-requests', b'3h3m57.702s'), (b'x-ratelimit-reset-tokens', b'832ms'), (b'x-request-id', b'req_01hz0xxqj7fakv3xqrxenkby34'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28f69e8817ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is asking about a historical figure, which is typically a human being.
class_name: HUM
class_index: 3
```
data: {'text': "What was the name of the director of the movie `` Jaws '' ?", 'coarse_label': 3, 'fine_label': 29}
task_input: What was the name of the director of the movie `` Jaws '' ?, corse_label: 3
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': "What was the name of the director of the movie `` Jaws '' ?", 'examples_str': "Question: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of the American literary era that includes 1896 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why can 't you taste anything when you have a cold ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What schools in the Washington , DC NN NN VBP NN NN NN NN .\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where on the Internet can I get information about the Fifth Amendment on the American Bill of Rights ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many students attend the University of Massachusetts ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does NASDAQ stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is the name of the American literary era that includes 1896 ?
class_name: Entity 
class_index: 1
--------

Question: Why can 't you taste anything when you have a cold ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What schools in the Washington , DC NN NN VBP NN NN NN NN .
class_name: Human being 
class_index: 3
--------

Question: Where on the Internet can I get information about the Fifth Amendment on the American Bill of Rights ?
class_name: Location 
class_index: 4
--------

Question: How many students attend the University of Massachusetts ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What was the name of the director of the movie `` Jaws '' ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of the American literary era that includes 1896 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why can 't you taste anything when you have a cold ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What schools in the Washington , DC NN NN VBP NN NN NN NN .\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where on the Internet can I get information about the Fifth Amendment on the American Bill of Rights ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many students attend the University of Massachusetts ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What was the name of the director of the movie `` Jaws '' ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 01:02:39 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12560'), (b'x-ratelimit-remaining-tokens', b'29584'), (b'x-ratelimit-reset-requests', b'3h3m59.778999999s'), (b'x-ratelimit-reset-tokens', b'831ms'), (b'x-request-id', b'req_01hz0xxqs5fgmse5qg5crp1svw'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28f6b59bd7ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of the American literary era that includes 1896 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why can 't you taste anything when you have a cold ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What schools in the Washington , DC NN NN VBP NN NN NN NN .\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where on the Internet can I get information about the Fifth Amendment on the American Bill of Rights ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many students attend the University of Massachusetts ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What was the name of the director of the movie `` Jaws '' ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 01:02:42 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12559'), (b'x-ratelimit-remaining-tokens', b'29575'), (b'x-ratelimit-reset-requests', b'3h4m3.717s'), (b'x-ratelimit-reset-tokens', b'850ms'), (b'x-request-id', b'req_01hz0xxsskej5vbxpq9fj3wpte'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28f783d087ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking for the name of the director of a specific movie, which is an entity.
class_name: ENTY
class_index: 1
data: {'text': 'Which area produces the least acidic coffee ?', 'coarse_label': 4, 'fine_label': 35}
task_input: Which area produces the least acidic coffee ?, corse_label: 4
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'Which area produces the least acidic coffee ?', 'examples_str': "Question: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of the American literary era that includes 1896 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why can 't you taste anything when you have a cold ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What schools in the Washington , DC NN NN VBP NN NN NN NN .\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where on the Internet can I get information about the Fifth Amendment on the American Bill of Rights ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many students attend the University of Massachusetts ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does NASDAQ stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is the name of the American literary era that includes 1896 ?
class_name: Entity 
class_index: 1
--------

Question: Why can 't you taste anything when you have a cold ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What schools in the Washington , DC NN NN VBP NN NN NN NN .
class_name: Human being 
class_index: 3
--------

Question: Where on the Internet can I get information about the Fifth Amendment on the American Bill of Rights ?
class_name: Location 
class_index: 4
--------

Question: How many students attend the University of Massachusetts ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Which area produces the least acidic coffee ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of the American literary era that includes 1896 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why can 't you taste anything when you have a cold ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What schools in the Washington , DC NN NN VBP NN NN NN NN .\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where on the Internet can I get information about the Fifth Amendment on the American Bill of Rights ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many students attend the University of Massachusetts ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Which area produces the least acidic coffee ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 01:02:42 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12559'), (b'x-ratelimit-remaining-tokens', b'29593'), (b'x-ratelimit-reset-requests', b'3h4m5.733s'), (b'x-ratelimit-reset-tokens', b'813ms'), (b'x-request-id', b'req_01hz0xxt1yf05vdb0d57wjjq1d'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28f79ee3b7ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of the American literary era that includes 1896 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why can 't you taste anything when you have a cold ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What schools in the Washington , DC NN NN VBP NN NN NN NN .\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where on the Internet can I get information about the Fifth Amendment on the American Bill of Rights ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many students attend the University of Massachusetts ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Which area produces the least acidic coffee ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 01:02:44 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12558'), (b'x-ratelimit-remaining-tokens', b'29578'), (b'x-ratelimit-reset-requests', b'3h4m9.659s'), (b'x-ratelimit-reset-tokens', b'844ms'), (b'x-request-id', b'req_01hz0xxw2rfv2spad30f473zx1'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28f86d8bf7ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is about a specific characteristic of coffee, which is a tangible object, so it's likely to be a descriptive or abstract concept.
class_name: DESC
class_index: 2
```
data: {'text': 'What ocean is the largest in the world ?', 'coarse_label': 4, 'fine_label': 35}
task_input: What ocean is the largest in the world ?, corse_label: 4
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What ocean is the largest in the world ?', 'examples_str': "Question: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of the American literary era that includes 1896 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why can 't you taste anything when you have a cold ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What schools in the Washington , DC NN NN VBP NN NN NN NN .\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where on the Internet can I get information about the Fifth Amendment on the American Bill of Rights ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many students attend the University of Massachusetts ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does NASDAQ stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is the name of the American literary era that includes 1896 ?
class_name: Entity 
class_index: 1
--------

Question: Why can 't you taste anything when you have a cold ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What schools in the Washington , DC NN NN VBP NN NN NN NN .
class_name: Human being 
class_index: 3
--------

Question: Where on the Internet can I get information about the Fifth Amendment on the American Bill of Rights ?
class_name: Location 
class_index: 4
--------

Question: How many students attend the University of Massachusetts ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What ocean is the largest in the world ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of the American literary era that includes 1896 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why can 't you taste anything when you have a cold ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What schools in the Washington , DC NN NN VBP NN NN NN NN .\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where on the Internet can I get information about the Fifth Amendment on the American Bill of Rights ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many students attend the University of Massachusetts ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What ocean is the largest in the world ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 01:02:44 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12558'), (b'x-ratelimit-remaining-tokens', b'29583'), (b'x-ratelimit-reset-requests', b'3h4m11.745s'), (b'x-ratelimit-reset-tokens', b'833ms'), (b'x-request-id', b'req_01hz0xxwaqep8tant9svyvdbkc'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28f886a017ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of the American literary era that includes 1896 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why can 't you taste anything when you have a cold ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What schools in the Washington , DC NN NN VBP NN NN NN NN .\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where on the Internet can I get information about the Fifth Amendment on the American Bill of Rights ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many students attend the University of Massachusetts ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What ocean is the largest in the world ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 01:02:46 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12557'), (b'x-ratelimit-remaining-tokens', b'29580'), (b'x-ratelimit-reset-requests', b'3h4m15.687999999s'), (b'x-ratelimit-reset-tokens', b'840ms'), (b'x-request-id', b'req_01hz0xxyb2fh2sqjb3ragdn02h'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28f954d6f7ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the size of an ocean, which is a geographic feature.
class_name: LOC
class_index: 4
data: {'text': "What South American capital is the world 's highest ?", 'coarse_label': 4, 'fine_label': 32}
task_input: What South American capital is the world 's highest ?, corse_label: 4
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': "What South American capital is the world 's highest ?", 'examples_str': "Question: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of the American literary era that includes 1896 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why can 't you taste anything when you have a cold ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What schools in the Washington , DC NN NN VBP NN NN NN NN .\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where on the Internet can I get information about the Fifth Amendment on the American Bill of Rights ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many students attend the University of Massachusetts ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does NASDAQ stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is the name of the American literary era that includes 1896 ?
class_name: Entity 
class_index: 1
--------

Question: Why can 't you taste anything when you have a cold ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What schools in the Washington , DC NN NN VBP NN NN NN NN .
class_name: Human being 
class_index: 3
--------

Question: Where on the Internet can I get information about the Fifth Amendment on the American Bill of Rights ?
class_name: Location 
class_index: 4
--------

Question: How many students attend the University of Massachusetts ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What South American capital is the world 's highest ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of the American literary era that includes 1896 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why can 't you taste anything when you have a cold ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What schools in the Washington , DC NN NN VBP NN NN NN NN .\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where on the Internet can I get information about the Fifth Amendment on the American Bill of Rights ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many students attend the University of Massachusetts ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What South American capital is the world 's highest ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 01:02:46 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12557'), (b'x-ratelimit-remaining-tokens', b'29590'), (b'x-ratelimit-reset-requests', b'3h4m17.763999999s'), (b'x-ratelimit-reset-tokens', b'819ms'), (b'x-request-id', b'req_01hz0xxyjeeqfbj44pq89nb9fz'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28f96cead7ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of the American literary era that includes 1896 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why can 't you taste anything when you have a cold ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What schools in the Washington , DC NN NN VBP NN NN NN NN .\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where on the Internet can I get information about the Fifth Amendment on the American Bill of Rights ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many students attend the University of Massachusetts ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What South American capital is the world 's highest ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 01:02:49 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12556'), (b'x-ratelimit-remaining-tokens', b'29576'), (b'x-ratelimit-reset-requests', b'3h4m21.711s'), (b'x-ratelimit-reset-tokens', b'848ms'), (b'x-request-id', b'req_01hz0xy0jjfd2typjjbbmyyc71'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28fa399cd7ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the capital of a country, which is typically a location.
class_name: LOC
class_index: 4
data: {'text': 'What North American city boasts the biggest Polish population ?', 'coarse_label': 4, 'fine_label': 32}
task_input: What North American city boasts the biggest Polish population ?, corse_label: 4
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What North American city boasts the biggest Polish population ?', 'examples_str': "Question: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of the American literary era that includes 1896 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why can 't you taste anything when you have a cold ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What schools in the Washington , DC NN NN VBP NN NN NN NN .\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where on the Internet can I get information about the Fifth Amendment on the American Bill of Rights ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many students attend the University of Massachusetts ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does NASDAQ stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is the name of the American literary era that includes 1896 ?
class_name: Entity 
class_index: 1
--------

Question: Why can 't you taste anything when you have a cold ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What schools in the Washington , DC NN NN VBP NN NN NN NN .
class_name: Human being 
class_index: 3
--------

Question: Where on the Internet can I get information about the Fifth Amendment on the American Bill of Rights ?
class_name: Location 
class_index: 4
--------

Question: How many students attend the University of Massachusetts ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What North American city boasts the biggest Polish population ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of the American literary era that includes 1896 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why can 't you taste anything when you have a cold ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What schools in the Washington , DC NN NN VBP NN NN NN NN .\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where on the Internet can I get information about the Fifth Amendment on the American Bill of Rights ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many students attend the University of Massachusetts ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What North American city boasts the biggest Polish population ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 01:02:49 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'325'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12556'), (b'x-ratelimit-remaining-tokens', b'29585'), (b'x-ratelimit-reset-requests', b'3h4m23.769999999s'), (b'x-ratelimit-reset-tokens', b'829ms'), (b'x-request-id', b'req_01hz0xy0ssfhhv5t3fcf92tqh8'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28fa50b097ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of the American literary era that includes 1896 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why can 't you taste anything when you have a cold ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What schools in the Washington , DC NN NN VBP NN NN NN NN .\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where on the Internet can I get information about the Fifth Amendment on the American Bill of Rights ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many students attend the University of Massachusetts ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What North American city boasts the biggest Polish population ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 01:02:51 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12555'), (b'x-ratelimit-remaining-tokens', b'29574'), (b'x-ratelimit-reset-requests', b'3h4m27.708s'), (b'x-ratelimit-reset-tokens', b'852ms'), (b'x-request-id', b'req_01hz0xy2t7ea4tgkyzw5q6djxq'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28fb1ff357ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about a city with a specific demographic characteristic, which is a location-based fact.
class_name: LOC
class_index: 4
data: {'text': "Independent silversmith 's account for what percentage of silver production ?", 'coarse_label': 5, 'fine_label': 45}
task_input: Independent silversmith 's account for what percentage of silver production ?, corse_label: 5
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': "Independent silversmith 's account for what percentage of silver production ?", 'examples_str': "Question: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of the American literary era that includes 1896 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why can 't you taste anything when you have a cold ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What schools in the Washington , DC NN NN VBP NN NN NN NN .\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where on the Internet can I get information about the Fifth Amendment on the American Bill of Rights ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many students attend the University of Massachusetts ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does NASDAQ stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is the name of the American literary era that includes 1896 ?
class_name: Entity 
class_index: 1
--------

Question: Why can 't you taste anything when you have a cold ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What schools in the Washington , DC NN NN VBP NN NN NN NN .
class_name: Human being 
class_index: 3
--------

Question: Where on the Internet can I get information about the Fifth Amendment on the American Bill of Rights ?
class_name: Location 
class_index: 4
--------

Question: How many students attend the University of Massachusetts ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Independent silversmith 's account for what percentage of silver production ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of the American literary era that includes 1896 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why can 't you taste anything when you have a cold ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What schools in the Washington , DC NN NN VBP NN NN NN NN .\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where on the Internet can I get information about the Fifth Amendment on the American Bill of Rights ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many students attend the University of Massachusetts ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Independent silversmith 's account for what percentage of silver production ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 01:02:51 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12555'), (b'x-ratelimit-remaining-tokens', b'29582'), (b'x-ratelimit-reset-requests', b'3h4m29.745s'), (b'x-ratelimit-reset-tokens', b'835ms'), (b'x-request-id', b'req_01hz0xy329ez287a1ktfg9gy0p'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28fb388fa7ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of the American literary era that includes 1896 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why can 't you taste anything when you have a cold ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What schools in the Washington , DC NN NN VBP NN NN NN NN .\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where on the Internet can I get information about the Fifth Amendment on the American Bill of Rights ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many students attend the University of Massachusetts ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Independent silversmith 's account for what percentage of silver production ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 01:02:53 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12554'), (b'x-ratelimit-remaining-tokens', b'29570'), (b'x-ratelimit-reset-requests', b'3h4m33.692s'), (b'x-ratelimit-reset-tokens', b'860ms'), (b'x-request-id', b'req_01hz0xy52efvptgg0bpj7qnv19'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28fc06ce67ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the percentage of silver production, which is a numeric value.
class_name: NUM
class_index: 5
data: {'text': 'How old is the universe ?', 'coarse_label': 5, 'fine_label': 44}
task_input: How old is the universe ?, corse_label: 5
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'How old is the universe ?', 'examples_str': "Question: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of the American literary era that includes 1896 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why can 't you taste anything when you have a cold ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What schools in the Washington , DC NN NN VBP NN NN NN NN .\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where on the Internet can I get information about the Fifth Amendment on the American Bill of Rights ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many students attend the University of Massachusetts ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does NASDAQ stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is the name of the American literary era that includes 1896 ?
class_name: Entity 
class_index: 1
--------

Question: Why can 't you taste anything when you have a cold ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What schools in the Washington , DC NN NN VBP NN NN NN NN .
class_name: Human being 
class_index: 3
--------

Question: Where on the Internet can I get information about the Fifth Amendment on the American Bill of Rights ?
class_name: Location 
class_index: 4
--------

Question: How many students attend the University of Massachusetts ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: How old is the universe ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of the American literary era that includes 1896 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why can 't you taste anything when you have a cold ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What schools in the Washington , DC NN NN VBP NN NN NN NN .\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where on the Internet can I get information about the Fifth Amendment on the American Bill of Rights ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many students attend the University of Massachusetts ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: How old is the universe ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 01:02:53 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12554'), (b'x-ratelimit-remaining-tokens', b'29580'), (b'x-ratelimit-reset-requests', b'3h4m35.745s'), (b'x-ratelimit-reset-tokens', b'840ms'), (b'x-request-id', b'req_01hz0xy5aeesd9njwvntxveb75'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28fc1fe4d7ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of the American literary era that includes 1896 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why can 't you taste anything when you have a cold ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What schools in the Washington , DC NN NN VBP NN NN NN NN .\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where on the Internet can I get information about the Fifth Amendment on the American Bill of Rights ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many students attend the University of Massachusetts ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: How old is the universe ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 01:02:56 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12553'), (b'x-ratelimit-remaining-tokens', b'29583'), (b'x-ratelimit-reset-requests', b'3h4m39.678999999s'), (b'x-ratelimit-reset-tokens', b'834ms'), (b'x-request-id', b'req_01hz0xy7aye99s28scanegh02c'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28fcee8757ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the age of the universe, which is a numeric value.
class_name: NUM
class_index: 5
```
data: {'text': 'When was the Hoover Dam constructed ?', 'coarse_label': 5, 'fine_label': 39}
task_input: When was the Hoover Dam constructed ?, corse_label: 5
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'When was the Hoover Dam constructed ?', 'examples_str': "Question: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of the American literary era that includes 1896 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why can 't you taste anything when you have a cold ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What schools in the Washington , DC NN NN VBP NN NN NN NN .\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where on the Internet can I get information about the Fifth Amendment on the American Bill of Rights ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many students attend the University of Massachusetts ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does NASDAQ stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is the name of the American literary era that includes 1896 ?
class_name: Entity 
class_index: 1
--------

Question: Why can 't you taste anything when you have a cold ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What schools in the Washington , DC NN NN VBP NN NN NN NN .
class_name: Human being 
class_index: 3
--------

Question: Where on the Internet can I get information about the Fifth Amendment on the American Bill of Rights ?
class_name: Location 
class_index: 4
--------

Question: How many students attend the University of Massachusetts ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: When was the Hoover Dam constructed ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of the American literary era that includes 1896 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why can 't you taste anything when you have a cold ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What schools in the Washington , DC NN NN VBP NN NN NN NN .\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where on the Internet can I get information about the Fifth Amendment on the American Bill of Rights ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many students attend the University of Massachusetts ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: When was the Hoover Dam constructed ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 01:02:56 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12553'), (b'x-ratelimit-remaining-tokens', b'29637'), (b'x-ratelimit-reset-requests', b'3h4m41.648s'), (b'x-ratelimit-reset-tokens', b'725ms'), (b'x-request-id', b'req_01hz0xy7nzfqva0pj7nde3edee'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28fd11a1a7ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of the American literary era that includes 1896 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why can 't you taste anything when you have a cold ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What schools in the Washington , DC NN NN VBP NN NN NN NN .\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where on the Internet can I get information about the Fifth Amendment on the American Bill of Rights ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many students attend the University of Massachusetts ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: When was the Hoover Dam constructed ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 01:02:58 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12552'), (b'x-ratelimit-remaining-tokens', b'29580'), (b'x-ratelimit-reset-requests', b'3h4m45.597s'), (b'x-ratelimit-reset-tokens', b'840ms'), (b'x-request-id', b'req_01hz0xy9p3fb4vn6kwbjwf42qe'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28fddec9e7ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about a specific event in history, which is a factual piece of information.
class_name: Description and abstract concept
class_index: 2
```
data: {'text': 'At what age did Rossini stop writing opera ?', 'coarse_label': 5, 'fine_label': 44}
task_input: At what age did Rossini stop writing opera ?, corse_label: 5
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'At what age did Rossini stop writing opera ?', 'examples_str': "Question: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of the American literary era that includes 1896 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why can 't you taste anything when you have a cold ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What schools in the Washington , DC NN NN VBP NN NN NN NN .\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where on the Internet can I get information about the Fifth Amendment on the American Bill of Rights ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many students attend the University of Massachusetts ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does NASDAQ stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is the name of the American literary era that includes 1896 ?
class_name: Entity 
class_index: 1
--------

Question: Why can 't you taste anything when you have a cold ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What schools in the Washington , DC NN NN VBP NN NN NN NN .
class_name: Human being 
class_index: 3
--------

Question: Where on the Internet can I get information about the Fifth Amendment on the American Bill of Rights ?
class_name: Location 
class_index: 4
--------

Question: How many students attend the University of Massachusetts ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: At what age did Rossini stop writing opera ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of the American literary era that includes 1896 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why can 't you taste anything when you have a cold ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What schools in the Washington , DC NN NN VBP NN NN NN NN .\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where on the Internet can I get information about the Fifth Amendment on the American Bill of Rights ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many students attend the University of Massachusetts ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: At what age did Rossini stop writing opera ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 01:02:58 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12552'), (b'x-ratelimit-remaining-tokens', b'29581'), (b'x-ratelimit-reset-requests', b'3h4m47.766999999s'), (b'x-ratelimit-reset-tokens', b'838ms'), (b'x-request-id', b'req_01hz0xy9xees3rbyhwr08wqt11'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28fdf5ddf7ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is the name of the American literary era that includes 1896 ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why can 't you taste anything when you have a cold ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What schools in the Washington , DC NN NN VBP NN NN NN NN .\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where on the Internet can I get information about the Fifth Amendment on the American Bill of Rights ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many students attend the University of Massachusetts ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: At what age did Rossini stop writing opera ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 01:03:00 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12551'), (b'x-ratelimit-remaining-tokens', b'29579'), (b'x-ratelimit-reset-requests', b'3h4m51.707s'), (b'x-ratelimit-reset-tokens', b'842ms'), (b'x-request-id', b'req_01hz0xybxtez2vv8f3crg55s6t'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28fec38a37ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the age of a specific person, which is a characteristic often associated with a human being.
class_name: HUM
class_index: 3
responses: [0, 0, 0, 0, 3, 5, 2, 0, 2, 2, 4, 0, 3, 0, 3, 1, 2, 4, 4, 4, 5, 5, 2, 3], targets: [0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5]
num_invalid: 0
Preds tensor: tensor([[1., 0., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0.],
        [0., 0., 0., 1., 0., 0.],
        [0., 0., 0., 0., 0., 1.],
        [0., 0., 1., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0.],
        [0., 0., 1., 0., 0., 0.],
        [0., 0., 1., 0., 0., 0.],
        [0., 0., 0., 0., 1., 0.],
        [1., 0., 0., 0., 0., 0.],
        [0., 0., 0., 1., 0., 0.],
        [1., 0., 0., 0., 0., 0.],
        [0., 0., 0., 1., 0., 0.],
        [0., 1., 0., 0., 0., 0.],
        [0., 0., 1., 0., 0., 0.],
        [0., 0., 0., 0., 1., 0.],
        [0., 0., 0., 0., 1., 0.],
        [0., 0., 0., 0., 1., 0.],
        [0., 0., 0., 0., 0., 1.],
        [0., 0., 0., 0., 0., 1.],
        [0., 0., 1., 0., 0., 0.],
        [0., 0., 0., 1., 0., 0.]])
Targets tensor: tensor([0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5])
Eval Accuracy 3 proposed: 0.542, F1: 0.499, score: 1.041
reset_parameter
step: 4
train_batch: {'text': ['What exactly is the purpose of the anteater ?', 'What day is August 13 , 1971 ?', 'Why are haunted houses popular ?', 'What garment was named for Bradley , Voorhees and Day ?', 'How many dogs pull a sled in the Iditarod ?', 'How many people are taller than 7 feet ?', 'How many sperm cells are in an average ejaculation ?', 'What is a neurosurgeon ?', "What 's the biggest-selling U.S. magazine aimed at a black audience ?", 'Where is Logan Airport ?'], 'coarse_label': tensor([2, 5, 2, 1, 5, 5, 5, 2, 1, 4]), 'fine_label': tensor([27, 39, 27, 15, 38, 38, 38, 24,  5, 35])}
before random_replace: [Sample(index=1032, data={'text': 'What does NASDAQ stand for ?', 'coarse_label': 0, 'fine_label': 1}), Sample(index=742, data={'text': 'What war did the Potsdam Conference follow ?', 'coarse_label': 1, 'fine_label': 8}), Sample(index=94, data={'text': 'What happens when a body part falls asleep ?', 'coarse_label': 2, 'fine_label': 25}), Sample(index=794, data={'text': "What American actress was the first to be called a `` vamp '' ?", 'coarse_label': 3, 'fine_label': 29}), Sample(index=446, data={'text': 'Where is Erykah Badu originally from ?', 'coarse_label': 4, 'fine_label': 35}), Sample(index=2697, data={'text': 'What is the chemical reactivity of argon ?', 'coarse_label': 5, 'fine_label': 43})]
after random_replace: [Sample(index=1032, data={'text': 'What does NASDAQ stand for ?', 'coarse_label': 0, 'fine_label': 1}), Sample(index=1697, data={'text': 'What is after death ?', 'coarse_label': 1, 'fine_label': 13}), Sample(index=562, data={'text': 'Why are electric cars less efficient in the northeast than in California ?', 'coarse_label': 2, 'fine_label': 27}), Sample(index=502, data={'text': 'What fool is not so wise To lose an oath to win a paradise ?', 'coarse_label': 3, 'fine_label': 29}), Sample(index=918, data={'text': 'Which way do you turn your Bic to increase the flame - clockwise or counterclockwise ?', 'coarse_label': 4, 'fine_label': 35}), Sample(index=1373, data={'text': 'How big is a quart ?', 'coarse_label': 5, 'fine_label': 48})]
data: {'text': 'What does U.S.S.R. stand for ?', 'coarse_label': 0, 'fine_label': 1}
task_input: What does U.S.S.R. stand for ?, corse_label: 0
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What does U.S.S.R. stand for ?', 'examples_str': 'Question: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is after death ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why are electric cars less efficient in the northeast than in California ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What fool is not so wise To lose an oath to win a paradise ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which way do you turn your Bic to increase the flame - clockwise or counterclockwise ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How big is a quart ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does NASDAQ stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is after death ?
class_name: Entity 
class_index: 1
--------

Question: Why are electric cars less efficient in the northeast than in California ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What fool is not so wise To lose an oath to win a paradise ?
class_name: Human being 
class_index: 3
--------

Question: Which way do you turn your Bic to increase the flame - clockwise or counterclockwise ?
class_name: Location 
class_index: 4
--------

Question: How big is a quart ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What does U.S.S.R. stand for ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is after death ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why are electric cars less efficient in the northeast than in California ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What fool is not so wise To lose an oath to win a paradise ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which way do you turn your Bic to increase the flame - clockwise or counterclockwise ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How big is a quart ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does U.S.S.R. stand for ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 01:03:00 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12551'), (b'x-ratelimit-remaining-tokens', b'29594'), (b'x-ratelimit-reset-requests', b'3h4m53.712999999s'), (b'x-ratelimit-reset-tokens', b'812ms'), (b'x-request-id', b'req_01hz0xyc6qej6r9fdfyyrbdb8s'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28fee0a417ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is after death ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why are electric cars less efficient in the northeast than in California ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What fool is not so wise To lose an oath to win a paradise ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which way do you turn your Bic to increase the flame - clockwise or counterclockwise ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How big is a quart ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does U.S.S.R. stand for ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 01:03:03 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12550'), (b'x-ratelimit-remaining-tokens', b'29601'), (b'x-ratelimit-reset-requests', b'3h4m57.656s'), (b'x-ratelimit-reset-tokens', b'798ms'), (b'x-request-id', b'req_01hz0xye73fe59kcvg5zavcd1j'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28ffaed887ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is asking for the meaning of an abbreviation, which is a common use case for abbreviations.
class_name: ABBR
class_index: 0
data: {'text': 'What is the abbreviated form of the National Bureau of Investigation ?', 'coarse_label': 0, 'fine_label': 0}
task_input: What is the abbreviated form of the National Bureau of Investigation ?, corse_label: 0
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What is the abbreviated form of the National Bureau of Investigation ?', 'examples_str': 'Question: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is after death ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why are electric cars less efficient in the northeast than in California ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What fool is not so wise To lose an oath to win a paradise ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which way do you turn your Bic to increase the flame - clockwise or counterclockwise ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How big is a quart ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does NASDAQ stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is after death ?
class_name: Entity 
class_index: 1
--------

Question: Why are electric cars less efficient in the northeast than in California ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What fool is not so wise To lose an oath to win a paradise ?
class_name: Human being 
class_index: 3
--------

Question: Which way do you turn your Bic to increase the flame - clockwise or counterclockwise ?
class_name: Location 
class_index: 4
--------

Question: How big is a quart ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What is the abbreviated form of the National Bureau of Investigation ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is after death ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why are electric cars less efficient in the northeast than in California ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What fool is not so wise To lose an oath to win a paradise ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which way do you turn your Bic to increase the flame - clockwise or counterclockwise ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How big is a quart ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is the abbreviated form of the National Bureau of Investigation ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 01:03:03 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12550'), (b'x-ratelimit-remaining-tokens', b'29588'), (b'x-ratelimit-reset-requests', b'3h4m59.757s'), (b'x-ratelimit-reset-tokens', b'824ms'), (b'x-request-id', b'req_01hz0xyeeqfqv80x8hw18gyr47'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b28ffc7eba7ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is after death ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why are electric cars less efficient in the northeast than in California ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What fool is not so wise To lose an oath to win a paradise ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which way do you turn your Bic to increase the flame - clockwise or counterclockwise ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How big is a quart ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is the abbreviated form of the National Bureau of Investigation ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 01:03:05 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12549'), (b'x-ratelimit-remaining-tokens', b'29591'), (b'x-ratelimit-reset-requests', b'3h5m3.702s'), (b'x-ratelimit-reset-tokens', b'818ms'), (b'x-request-id', b'req_01hz0xygeyew9vp2jcckygtx5r'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b2900949c47ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking for the abbreviated form of a specific organization, which is a common use case for abbreviations.
class_name: ABBR
class_index: 0
data: {'text': "What do the letters ZIP stand for in the phrase `` ZIP code '' ?", 'coarse_label': 0, 'fine_label': 1}
task_input: What do the letters ZIP stand for in the phrase `` ZIP code '' ?, corse_label: 0
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': "What do the letters ZIP stand for in the phrase `` ZIP code '' ?", 'examples_str': 'Question: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is after death ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why are electric cars less efficient in the northeast than in California ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What fool is not so wise To lose an oath to win a paradise ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which way do you turn your Bic to increase the flame - clockwise or counterclockwise ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How big is a quart ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does NASDAQ stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is after death ?
class_name: Entity 
class_index: 1
--------

Question: Why are electric cars less efficient in the northeast than in California ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What fool is not so wise To lose an oath to win a paradise ?
class_name: Human being 
class_index: 3
--------

Question: Which way do you turn your Bic to increase the flame - clockwise or counterclockwise ?
class_name: Location 
class_index: 4
--------

Question: How big is a quart ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What do the letters ZIP stand for in the phrase `` ZIP code '' ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is after death ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why are electric cars less efficient in the northeast than in California ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What fool is not so wise To lose an oath to win a paradise ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which way do you turn your Bic to increase the flame - clockwise or counterclockwise ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How big is a quart ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What do the letters ZIP stand for in the phrase `` ZIP code '' ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 01:03:05 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12549'), (b'x-ratelimit-remaining-tokens', b'29588'), (b'x-ratelimit-reset-requests', b'3h5m5.751s'), (b'x-ratelimit-reset-tokens', b'823ms'), (b'x-request-id', b'req_01hz0xygpqfvq9y1vg187xm1ff'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b2900adafa7ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is after death ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why are electric cars less efficient in the northeast than in California ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What fool is not so wise To lose an oath to win a paradise ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which way do you turn your Bic to increase the flame - clockwise or counterclockwise ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How big is a quart ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What do the letters ZIP stand for in the phrase `` ZIP code '' ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 01:03:07 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12548'), (b'x-ratelimit-remaining-tokens', b'29593'), (b'x-ratelimit-reset-requests', b'3h5m9.697s'), (b'x-ratelimit-reset-tokens', b'814ms'), (b'x-request-id', b'req_01hz0xyjpyfb5vrz8hy8wmrejr'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b29017bde57ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the meaning of the letters ZIP in the phrase "ZIP code".
class_name: "ABBR"
class_index: 0
data: {'text': 'What does VCR stand for ?', 'coarse_label': 0, 'fine_label': 1}
task_input: What does VCR stand for ?, corse_label: 0
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What does VCR stand for ?', 'examples_str': 'Question: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is after death ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why are electric cars less efficient in the northeast than in California ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What fool is not so wise To lose an oath to win a paradise ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which way do you turn your Bic to increase the flame - clockwise or counterclockwise ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How big is a quart ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does NASDAQ stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is after death ?
class_name: Entity 
class_index: 1
--------

Question: Why are electric cars less efficient in the northeast than in California ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What fool is not so wise To lose an oath to win a paradise ?
class_name: Human being 
class_index: 3
--------

Question: Which way do you turn your Bic to increase the flame - clockwise or counterclockwise ?
class_name: Location 
class_index: 4
--------

Question: How big is a quart ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What does VCR stand for ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is after death ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why are electric cars less efficient in the northeast than in California ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What fool is not so wise To lose an oath to win a paradise ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which way do you turn your Bic to increase the flame - clockwise or counterclockwise ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How big is a quart ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does VCR stand for ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 01:03:07 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12548'), (b'x-ratelimit-remaining-tokens', b'29588'), (b'x-ratelimit-reset-requests', b'3h5m11.778999999s'), (b'x-ratelimit-reset-tokens', b'823ms'), (b'x-request-id', b'req_01hz0xyjxwea5tszc7xrckf8fh'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b290191f4d7ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is after death ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why are electric cars less efficient in the northeast than in California ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What fool is not so wise To lose an oath to win a paradise ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which way do you turn your Bic to increase the flame - clockwise or counterclockwise ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How big is a quart ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does VCR stand for ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 01:03:09 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12547'), (b'x-ratelimit-remaining-tokens', b'29602'), (b'x-ratelimit-reset-requests', b'3h5m15.718s'), (b'x-ratelimit-reset-tokens', b'796ms'), (b'x-request-id', b'req_01hz0xymy7efa8zjtva4m25x0p'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b29025eb867ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking for the abbreviation of VCR, which is a common acronym.
class_name: ABBR
class_index: 0
data: {'text': 'What sport can a free-legged pacer compete in ?', 'coarse_label': 1, 'fine_label': 17}
task_input: What sport can a free-legged pacer compete in ?, corse_label: 1
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What sport can a free-legged pacer compete in ?', 'examples_str': 'Question: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is after death ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why are electric cars less efficient in the northeast than in California ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What fool is not so wise To lose an oath to win a paradise ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which way do you turn your Bic to increase the flame - clockwise or counterclockwise ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How big is a quart ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does NASDAQ stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is after death ?
class_name: Entity 
class_index: 1
--------

Question: Why are electric cars less efficient in the northeast than in California ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What fool is not so wise To lose an oath to win a paradise ?
class_name: Human being 
class_index: 3
--------

Question: Which way do you turn your Bic to increase the flame - clockwise or counterclockwise ?
class_name: Location 
class_index: 4
--------

Question: How big is a quart ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What sport can a free-legged pacer compete in ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is after death ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why are electric cars less efficient in the northeast than in California ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What fool is not so wise To lose an oath to win a paradise ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which way do you turn your Bic to increase the flame - clockwise or counterclockwise ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How big is a quart ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What sport can a free-legged pacer compete in ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 01:03:10 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12547'), (b'x-ratelimit-remaining-tokens', b'29599'), (b'x-ratelimit-reset-requests', b'3h5m17.747s'), (b'x-ratelimit-reset-tokens', b'802ms'), (b'x-request-id', b'req_01hz0xyn67fqvrbc8et919hdav'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b290278ca77ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is after death ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why are electric cars less efficient in the northeast than in California ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What fool is not so wise To lose an oath to win a paradise ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which way do you turn your Bic to increase the flame - clockwise or counterclockwise ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How big is a quart ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What sport can a free-legged pacer compete in ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 01:03:12 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12546'), (b'x-ratelimit-remaining-tokens', b'29597'), (b'x-ratelimit-reset-requests', b'3h5m21.689999999s'), (b'x-ratelimit-reset-tokens', b'806ms'), (b'x-request-id', b'req_01hz0xyq6feqg80ta8bnjt3wqr'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b290346ff47ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is about a specific type of horse, which is a living being, so it's likely to be a human being.
class_name: "HUM"
class_index: 3
data: {'text': 'What was originally defined as one 1-millionth of the distance from the equator to the Pole ?', 'coarse_label': 1, 'fine_label': 21}
task_input: What was originally defined as one 1-millionth of the distance from the equator to the Pole ?, corse_label: 1
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What was originally defined as one 1-millionth of the distance from the equator to the Pole ?', 'examples_str': 'Question: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is after death ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why are electric cars less efficient in the northeast than in California ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What fool is not so wise To lose an oath to win a paradise ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which way do you turn your Bic to increase the flame - clockwise or counterclockwise ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How big is a quart ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does NASDAQ stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is after death ?
class_name: Entity 
class_index: 1
--------

Question: Why are electric cars less efficient in the northeast than in California ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What fool is not so wise To lose an oath to win a paradise ?
class_name: Human being 
class_index: 3
--------

Question: Which way do you turn your Bic to increase the flame - clockwise or counterclockwise ?
class_name: Location 
class_index: 4
--------

Question: How big is a quart ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What was originally defined as one 1-millionth of the distance from the equator to the Pole ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is after death ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why are electric cars less efficient in the northeast than in California ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What fool is not so wise To lose an oath to win a paradise ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which way do you turn your Bic to increase the flame - clockwise or counterclockwise ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How big is a quart ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What was originally defined as one 1-millionth of the distance from the equator to the Pole ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 01:03:12 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12546'), (b'x-ratelimit-remaining-tokens', b'29586'), (b'x-ratelimit-reset-requests', b'3h5m23.765999999s'), (b'x-ratelimit-reset-tokens', b'827ms'), (b'x-request-id', b'req_01hz0xyqdvfhjv1j25rpv5802b'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b29035d9367ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is after death ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why are electric cars less efficient in the northeast than in California ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What fool is not so wise To lose an oath to win a paradise ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which way do you turn your Bic to increase the flame - clockwise or counterclockwise ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How big is a quart ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What was originally defined as one 1-millionth of the distance from the equator to the Pole ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 01:03:14 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12545'), (b'x-ratelimit-remaining-tokens', b'29585'), (b'x-ratelimit-reset-requests', b'3h5m27.71s'), (b'x-ratelimit-reset-tokens', b'830ms'), (b'x-request-id', b'req_01hz0xyse3f078gy3z31mnpnse'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b29042bbe87ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is asking about a specific unit of measurement, which is a numeric value.
class_name: NUM
class_index: 5
data: {'text': 'What fuel do airplanes use ?', 'coarse_label': 1, 'fine_label': 18}
task_input: What fuel do airplanes use ?, corse_label: 1
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What fuel do airplanes use ?', 'examples_str': 'Question: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is after death ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why are electric cars less efficient in the northeast than in California ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What fool is not so wise To lose an oath to win a paradise ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which way do you turn your Bic to increase the flame - clockwise or counterclockwise ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How big is a quart ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does NASDAQ stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is after death ?
class_name: Entity 
class_index: 1
--------

Question: Why are electric cars less efficient in the northeast than in California ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What fool is not so wise To lose an oath to win a paradise ?
class_name: Human being 
class_index: 3
--------

Question: Which way do you turn your Bic to increase the flame - clockwise or counterclockwise ?
class_name: Location 
class_index: 4
--------

Question: How big is a quart ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What fuel do airplanes use ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is after death ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why are electric cars less efficient in the northeast than in California ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What fool is not so wise To lose an oath to win a paradise ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which way do you turn your Bic to increase the flame - clockwise or counterclockwise ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How big is a quart ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What fuel do airplanes use ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 01:03:14 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12545'), (b'x-ratelimit-remaining-tokens', b'29586'), (b'x-ratelimit-reset-requests', b'3h5m29.774999999s'), (b'x-ratelimit-reset-tokens', b'828ms'), (b'x-request-id', b'req_01hz0xysn5epa95fyw8dda08ht'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b290442d197ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is after death ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why are electric cars less efficient in the northeast than in California ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What fool is not so wise To lose an oath to win a paradise ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which way do you turn your Bic to increase the flame - clockwise or counterclockwise ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How big is a quart ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What fuel do airplanes use ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 01:03:16 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12544'), (b'x-ratelimit-remaining-tokens', b'29602'), (b'x-ratelimit-reset-requests', b'3h5m33.717s'), (b'x-ratelimit-reset-tokens', b'796ms'), (b'x-request-id', b'req_01hz0xyvnffgptzc32c5c5649m'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b29050ffac7ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the type of fuel used by airplanes, which is a specific piece of information.
class_name: ABBR
class_index: 0
```
data: {'text': 'On what T.V. show could Tom Terrific be found ?', 'coarse_label': 1, 'fine_label': 5}
task_input: On what T.V. show could Tom Terrific be found ?, corse_label: 1
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'On what T.V. show could Tom Terrific be found ?', 'examples_str': 'Question: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is after death ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why are electric cars less efficient in the northeast than in California ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What fool is not so wise To lose an oath to win a paradise ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which way do you turn your Bic to increase the flame - clockwise or counterclockwise ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How big is a quart ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does NASDAQ stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is after death ?
class_name: Entity 
class_index: 1
--------

Question: Why are electric cars less efficient in the northeast than in California ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What fool is not so wise To lose an oath to win a paradise ?
class_name: Human being 
class_index: 3
--------

Question: Which way do you turn your Bic to increase the flame - clockwise or counterclockwise ?
class_name: Location 
class_index: 4
--------

Question: How big is a quart ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: On what T.V. show could Tom Terrific be found ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is after death ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why are electric cars less efficient in the northeast than in California ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What fool is not so wise To lose an oath to win a paradise ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which way do you turn your Bic to increase the flame - clockwise or counterclockwise ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How big is a quart ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: On what T.V. show could Tom Terrific be found ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 01:03:16 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12544'), (b'x-ratelimit-remaining-tokens', b'29597'), (b'x-ratelimit-reset-requests', b'3h5m35.765999999s'), (b'x-ratelimit-reset-tokens', b'806ms'), (b'x-request-id', b'req_01hz0xyvwsfamsz3kav6gmykv2'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b2905279147ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is after death ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why are electric cars less efficient in the northeast than in California ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What fool is not so wise To lose an oath to win a paradise ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which way do you turn your Bic to increase the flame - clockwise or counterclockwise ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How big is a quart ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: On what T.V. show could Tom Terrific be found ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 01:03:19 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12543'), (b'x-ratelimit-remaining-tokens', b'29597'), (b'x-ratelimit-reset-requests', b'3h5m39.705s'), (b'x-ratelimit-reset-tokens', b'806ms'), (b'x-request-id', b'req_01hz0xyxx7fhka21900gcxrbe2'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b2905f5b667ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is about a TV show, and Tom Terrific is a character in a TV show, so it's likely about a TV show.
class_name: "ABBR"
class_index: 0
```
data: {'text': 'How do you select wine ?', 'coarse_label': 2, 'fine_label': 26}
task_input: How do you select wine ?, corse_label: 2
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'How do you select wine ?', 'examples_str': 'Question: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is after death ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why are electric cars less efficient in the northeast than in California ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What fool is not so wise To lose an oath to win a paradise ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which way do you turn your Bic to increase the flame - clockwise or counterclockwise ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How big is a quart ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does NASDAQ stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is after death ?
class_name: Entity 
class_index: 1
--------

Question: Why are electric cars less efficient in the northeast than in California ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What fool is not so wise To lose an oath to win a paradise ?
class_name: Human being 
class_index: 3
--------

Question: Which way do you turn your Bic to increase the flame - clockwise or counterclockwise ?
class_name: Location 
class_index: 4
--------

Question: How big is a quart ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: How do you select wine ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is after death ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why are electric cars less efficient in the northeast than in California ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What fool is not so wise To lose an oath to win a paradise ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which way do you turn your Bic to increase the flame - clockwise or counterclockwise ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How big is a quart ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: How do you select wine ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 01:03:19 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12543'), (b'x-ratelimit-remaining-tokens', b'29579'), (b'x-ratelimit-reset-requests', b'3h5m41.745s'), (b'x-ratelimit-reset-tokens', b'842ms'), (b'x-request-id', b'req_01hz0xyy57fb6ax7hj13f2wkqz'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b29060fca37ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is after death ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why are electric cars less efficient in the northeast than in California ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What fool is not so wise To lose an oath to win a paradise ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which way do you turn your Bic to increase the flame - clockwise or counterclockwise ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How big is a quart ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: How do you select wine ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 01:03:21 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12542'), (b'x-ratelimit-remaining-tokens', b'29603'), (b'x-ratelimit-reset-requests', b'3h5m45.679999999s'), (b'x-ratelimit-reset-tokens', b'794ms'), (b'x-request-id', b'req_01hz0xz05rfd48p1kfvs67d0g1'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b2906dd8017ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is about selecting wine, which is a human activity, so it's related to a human being.
class_name: HUM
class_index: 3
data: {'text': "What are some children 's rights ?", 'coarse_label': 2, 'fine_label': 25}
task_input: What are some children 's rights ?, corse_label: 2
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': "What are some children 's rights ?", 'examples_str': 'Question: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is after death ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why are electric cars less efficient in the northeast than in California ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What fool is not so wise To lose an oath to win a paradise ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which way do you turn your Bic to increase the flame - clockwise or counterclockwise ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How big is a quart ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does NASDAQ stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is after death ?
class_name: Entity 
class_index: 1
--------

Question: Why are electric cars less efficient in the northeast than in California ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What fool is not so wise To lose an oath to win a paradise ?
class_name: Human being 
class_index: 3
--------

Question: Which way do you turn your Bic to increase the flame - clockwise or counterclockwise ?
class_name: Location 
class_index: 4
--------

Question: How big is a quart ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What are some children 's rights ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is after death ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why are electric cars less efficient in the northeast than in California ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What fool is not so wise To lose an oath to win a paradise ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which way do you turn your Bic to increase the flame - clockwise or counterclockwise ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How big is a quart ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What are some children 's rights ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 01:03:21 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12542'), (b'x-ratelimit-remaining-tokens', b'29595'), (b'x-ratelimit-reset-requests', b'3h5m47.771999999s'), (b'x-ratelimit-reset-tokens', b'809ms'), (b'x-request-id', b'req_01hz0xz0cxewkrf8t6pdxkjmvw'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b2906f49637ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is after death ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why are electric cars less efficient in the northeast than in California ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What fool is not so wise To lose an oath to win a paradise ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which way do you turn your Bic to increase the flame - clockwise or counterclockwise ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How big is a quart ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What are some children 's rights ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 01:03:23 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12541'), (b'x-ratelimit-remaining-tokens', b'29600'), (b'x-ratelimit-reset-requests', b'3h5m51.719s'), (b'x-ratelimit-reset-tokens', b'800ms'), (b'x-request-id', b'req_01hz0xz2d1e84s4wxaf24htrnd'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b2907c1dc37ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the rights of children, which are a concept that can be described and abstract.
class_name: DESC
class_index: 2
data: {'text': 'What are some fun things to do in Cozumel , Mexico for teenagers ?', 'coarse_label': 2, 'fine_label': 25}
task_input: What are some fun things to do in Cozumel , Mexico for teenagers ?, corse_label: 2
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What are some fun things to do in Cozumel , Mexico for teenagers ?', 'examples_str': 'Question: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is after death ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why are electric cars less efficient in the northeast than in California ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What fool is not so wise To lose an oath to win a paradise ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which way do you turn your Bic to increase the flame - clockwise or counterclockwise ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How big is a quart ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does NASDAQ stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is after death ?
class_name: Entity 
class_index: 1
--------

Question: Why are electric cars less efficient in the northeast than in California ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What fool is not so wise To lose an oath to win a paradise ?
class_name: Human being 
class_index: 3
--------

Question: Which way do you turn your Bic to increase the flame - clockwise or counterclockwise ?
class_name: Location 
class_index: 4
--------

Question: How big is a quart ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What are some fun things to do in Cozumel , Mexico for teenagers ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is after death ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why are electric cars less efficient in the northeast than in California ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What fool is not so wise To lose an oath to win a paradise ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which way do you turn your Bic to increase the flame - clockwise or counterclockwise ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How big is a quart ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What are some fun things to do in Cozumel , Mexico for teenagers ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 01:03:23 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12541'), (b'x-ratelimit-remaining-tokens', b'29594'), (b'x-ratelimit-reset-requests', b'3h5m53.775999999s'), (b'x-ratelimit-reset-tokens', b'811ms'), (b'x-request-id', b'req_01hz0xz2m3epatjrmny4abamn7'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b2907d8ee77ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is after death ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why are electric cars less efficient in the northeast than in California ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What fool is not so wise To lose an oath to win a paradise ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which way do you turn your Bic to increase the flame - clockwise or counterclockwise ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How big is a quart ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What are some fun things to do in Cozumel , Mexico for teenagers ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 01:03:26 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12540'), (b'x-ratelimit-remaining-tokens', b'29592'), (b'x-ratelimit-reset-requests', b'3h5m57.714s'), (b'x-ratelimit-reset-tokens', b'816ms'), (b'x-request-id', b'req_01hz0xz4mfez3s185gwcfsdyp2'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b2908a69827ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking for activities to do in a specific location, which is a location-based query.
class_name: LOC
class_index: 4
```
data: {'text': 'What does hazmat stand for ?', 'coarse_label': 2, 'fine_label': 24}
task_input: What does hazmat stand for ?, corse_label: 2
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What does hazmat stand for ?', 'examples_str': 'Question: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is after death ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why are electric cars less efficient in the northeast than in California ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What fool is not so wise To lose an oath to win a paradise ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which way do you turn your Bic to increase the flame - clockwise or counterclockwise ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How big is a quart ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does NASDAQ stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is after death ?
class_name: Entity 
class_index: 1
--------

Question: Why are electric cars less efficient in the northeast than in California ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What fool is not so wise To lose an oath to win a paradise ?
class_name: Human being 
class_index: 3
--------

Question: Which way do you turn your Bic to increase the flame - clockwise or counterclockwise ?
class_name: Location 
class_index: 4
--------

Question: How big is a quart ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What does hazmat stand for ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is after death ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why are electric cars less efficient in the northeast than in California ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What fool is not so wise To lose an oath to win a paradise ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which way do you turn your Bic to increase the flame - clockwise or counterclockwise ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How big is a quart ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does hazmat stand for ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 01:03:26 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12540'), (b'x-ratelimit-remaining-tokens', b'29588'), (b'x-ratelimit-reset-requests', b'3h5m59.765999999s'), (b'x-ratelimit-reset-tokens', b'823ms'), (b'x-request-id', b'req_01hz0xz4vwewav7n1pj10cmaj1'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b2908bdad97ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is after death ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why are electric cars less efficient in the northeast than in California ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What fool is not so wise To lose an oath to win a paradise ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which way do you turn your Bic to increase the flame - clockwise or counterclockwise ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How big is a quart ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does hazmat stand for ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 01:03:28 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12539'), (b'x-ratelimit-remaining-tokens', b'29602'), (b'x-ratelimit-reset-requests', b'3h6m3.707s'), (b'x-ratelimit-reset-tokens', b'796ms'), (b'x-request-id', b'req_01hz0xz6w7fb69nhnr8xrfghg7'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b29098be377ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking for the abbreviation of a term, which is a common use case for ABBR.
class_name: ABBR
class_index: 0
data: {'text': "Who is the nebbish that is Marvel 's official mascot ?", 'coarse_label': 3, 'fine_label': 29}
task_input: Who is the nebbish that is Marvel 's official mascot ?, corse_label: 3
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': "Who is the nebbish that is Marvel 's official mascot ?", 'examples_str': 'Question: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is after death ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why are electric cars less efficient in the northeast than in California ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What fool is not so wise To lose an oath to win a paradise ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which way do you turn your Bic to increase the flame - clockwise or counterclockwise ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How big is a quart ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does NASDAQ stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is after death ?
class_name: Entity 
class_index: 1
--------

Question: Why are electric cars less efficient in the northeast than in California ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What fool is not so wise To lose an oath to win a paradise ?
class_name: Human being 
class_index: 3
--------

Question: Which way do you turn your Bic to increase the flame - clockwise or counterclockwise ?
class_name: Location 
class_index: 4
--------

Question: How big is a quart ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Who is the nebbish that is Marvel 's official mascot ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is after death ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why are electric cars less efficient in the northeast than in California ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What fool is not so wise To lose an oath to win a paradise ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which way do you turn your Bic to increase the flame - clockwise or counterclockwise ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How big is a quart ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Who is the nebbish that is Marvel 's official mascot ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 01:03:28 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12539'), (b'x-ratelimit-remaining-tokens', b'29593'), (b'x-ratelimit-reset-requests', b'3h6m5.771999999s'), (b'x-ratelimit-reset-tokens', b'813ms'), (b'x-request-id', b'req_01hz0xz73cfana7bm4p4gyqzmd'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b2909a2f8a7ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is after death ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why are electric cars less efficient in the northeast than in California ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What fool is not so wise To lose an oath to win a paradise ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which way do you turn your Bic to increase the flame - clockwise or counterclockwise ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How big is a quart ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Who is the nebbish that is Marvel 's official mascot ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 01:03:30 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12538'), (b'x-ratelimit-remaining-tokens', b'29595'), (b'x-ratelimit-reset-requests', b'3h6m9.714s'), (b'x-ratelimit-reset-tokens', b'810ms'), (b'x-request-id', b'req_01hz0xz93pfd4scmbjwq8tm84n'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b290a70bf27ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is asking about a specific character in the Marvel universe, which is a human being.
class_name: HUM
class_index: 3
data: {'text': 'What Japanese electronics company was named for a coastal city northeast of Tokyo ?', 'coarse_label': 3, 'fine_label': 28}
task_input: What Japanese electronics company was named for a coastal city northeast of Tokyo ?, corse_label: 3
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What Japanese electronics company was named for a coastal city northeast of Tokyo ?', 'examples_str': 'Question: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is after death ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why are electric cars less efficient in the northeast than in California ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What fool is not so wise To lose an oath to win a paradise ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which way do you turn your Bic to increase the flame - clockwise or counterclockwise ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How big is a quart ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does NASDAQ stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is after death ?
class_name: Entity 
class_index: 1
--------

Question: Why are electric cars less efficient in the northeast than in California ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What fool is not so wise To lose an oath to win a paradise ?
class_name: Human being 
class_index: 3
--------

Question: Which way do you turn your Bic to increase the flame - clockwise or counterclockwise ?
class_name: Location 
class_index: 4
--------

Question: How big is a quart ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What Japanese electronics company was named for a coastal city northeast of Tokyo ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is after death ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why are electric cars less efficient in the northeast than in California ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What fool is not so wise To lose an oath to win a paradise ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which way do you turn your Bic to increase the flame - clockwise or counterclockwise ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How big is a quart ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What Japanese electronics company was named for a coastal city northeast of Tokyo ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 01:03:30 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12538'), (b'x-ratelimit-remaining-tokens', b'29602'), (b'x-ratelimit-reset-requests', b'3h6m11.725999999s'), (b'x-ratelimit-reset-tokens', b'795ms'), (b'x-request-id', b'req_01hz0xz9c9ea6rjdx7ar4whe56'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b290a8bd677ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is after death ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why are electric cars less efficient in the northeast than in California ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What fool is not so wise To lose an oath to win a paradise ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which way do you turn your Bic to increase the flame - clockwise or counterclockwise ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How big is a quart ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What Japanese electronics company was named for a coastal city northeast of Tokyo ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 01:03:32 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12537'), (b'x-ratelimit-remaining-tokens', b'29588'), (b'x-ratelimit-reset-requests', b'3h6m15.665s'), (b'x-ratelimit-reset-tokens', b'824ms'), (b'x-request-id', b'req_01hz0xzbcpepbakb7sejjrygbe'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b290b5997c7ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about a specific company, which is typically represented by an abbreviation.
class_name: ABBR
class_index: 0
```
data: {'text': 'Who was Maria Theresa ?', 'coarse_label': 3, 'fine_label': 31}
task_input: Who was Maria Theresa ?, corse_label: 3
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'Who was Maria Theresa ?', 'examples_str': 'Question: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is after death ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why are electric cars less efficient in the northeast than in California ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What fool is not so wise To lose an oath to win a paradise ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which way do you turn your Bic to increase the flame - clockwise or counterclockwise ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How big is a quart ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does NASDAQ stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is after death ?
class_name: Entity 
class_index: 1
--------

Question: Why are electric cars less efficient in the northeast than in California ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What fool is not so wise To lose an oath to win a paradise ?
class_name: Human being 
class_index: 3
--------

Question: Which way do you turn your Bic to increase the flame - clockwise or counterclockwise ?
class_name: Location 
class_index: 4
--------

Question: How big is a quart ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Who was Maria Theresa ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is after death ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why are electric cars less efficient in the northeast than in California ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What fool is not so wise To lose an oath to win a paradise ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which way do you turn your Bic to increase the flame - clockwise or counterclockwise ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How big is a quart ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Who was Maria Theresa ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 01:03:33 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12537'), (b'x-ratelimit-remaining-tokens', b'29622'), (b'x-ratelimit-reset-requests', b'3h6m17.704s'), (b'x-ratelimit-reset-tokens', b'755ms'), (b'x-request-id', b'req_01hz0xzbnzfe68wkb5a5kgq6v2'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b290b77afb7ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is after death ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why are electric cars less efficient in the northeast than in California ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What fool is not so wise To lose an oath to win a paradise ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which way do you turn your Bic to increase the flame - clockwise or counterclockwise ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How big is a quart ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Who was Maria Theresa ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 01:03:35 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12536'), (b'x-ratelimit-remaining-tokens', b'29603'), (b'x-ratelimit-reset-requests', b'3h6m21.651s'), (b'x-ratelimit-reset-tokens', b'794ms'), (b'x-request-id', b'req_01hz0xzdp4ez4bfwjjdrpvwqzv'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b290c45d847ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is about a historical figure, Maria Theresa, who was a human being.
class_name: HUM
class_index: 3
data: {'text': "What was the name of the director of the movie `` Jaws '' ?", 'coarse_label': 3, 'fine_label': 29}
task_input: What was the name of the director of the movie `` Jaws '' ?, corse_label: 3
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': "What was the name of the director of the movie `` Jaws '' ?", 'examples_str': 'Question: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is after death ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why are electric cars less efficient in the northeast than in California ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What fool is not so wise To lose an oath to win a paradise ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which way do you turn your Bic to increase the flame - clockwise or counterclockwise ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How big is a quart ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does NASDAQ stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is after death ?
class_name: Entity 
class_index: 1
--------

Question: Why are electric cars less efficient in the northeast than in California ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What fool is not so wise To lose an oath to win a paradise ?
class_name: Human being 
class_index: 3
--------

Question: Which way do you turn your Bic to increase the flame - clockwise or counterclockwise ?
class_name: Location 
class_index: 4
--------

Question: How big is a quart ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What was the name of the director of the movie `` Jaws '' ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is after death ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why are electric cars less efficient in the northeast than in California ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What fool is not so wise To lose an oath to win a paradise ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which way do you turn your Bic to increase the flame - clockwise or counterclockwise ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How big is a quart ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What was the name of the director of the movie `` Jaws '' ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 01:03:35 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'325'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12536'), (b'x-ratelimit-remaining-tokens', b'29601'), (b'x-ratelimit-reset-requests', b'3h6m23.779999999s'), (b'x-ratelimit-reset-tokens', b'798ms'), (b'x-request-id', b'req_01hz0xzdx1ea6vfnd4f13dy0z2'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b290c5be8f7ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is after death ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why are electric cars less efficient in the northeast than in California ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What fool is not so wise To lose an oath to win a paradise ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which way do you turn your Bic to increase the flame - clockwise or counterclockwise ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How big is a quart ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What was the name of the director of the movie `` Jaws '' ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 01:03:37 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12535'), (b'x-ratelimit-remaining-tokens', b'29594'), (b'x-ratelimit-reset-requests', b'3h6m27.715s'), (b'x-ratelimit-reset-tokens', b'812ms'), (b'x-request-id', b'req_01hz0xzfxjfh5tj25a7fh7nag7'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b290d29abe7ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking for the name of a person, which is a characteristic of a human being.
class_name: HUM
class_index: 3
data: {'text': 'Which area produces the least acidic coffee ?', 'coarse_label': 4, 'fine_label': 35}
task_input: Which area produces the least acidic coffee ?, corse_label: 4
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'Which area produces the least acidic coffee ?', 'examples_str': 'Question: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is after death ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why are electric cars less efficient in the northeast than in California ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What fool is not so wise To lose an oath to win a paradise ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which way do you turn your Bic to increase the flame - clockwise or counterclockwise ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How big is a quart ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does NASDAQ stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is after death ?
class_name: Entity 
class_index: 1
--------

Question: Why are electric cars less efficient in the northeast than in California ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What fool is not so wise To lose an oath to win a paradise ?
class_name: Human being 
class_index: 3
--------

Question: Which way do you turn your Bic to increase the flame - clockwise or counterclockwise ?
class_name: Location 
class_index: 4
--------

Question: How big is a quart ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Which area produces the least acidic coffee ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is after death ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why are electric cars less efficient in the northeast than in California ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What fool is not so wise To lose an oath to win a paradise ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which way do you turn your Bic to increase the flame - clockwise or counterclockwise ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How big is a quart ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Which area produces the least acidic coffee ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 01:03:37 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12535'), (b'x-ratelimit-remaining-tokens', b'29589'), (b'x-ratelimit-reset-requests', b'3h6m29.776999999s'), (b'x-ratelimit-reset-tokens', b'822ms'), (b'x-request-id', b'req_01hz0xzg4jfb7a7gx4ggahey8h'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b290d40bf47ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is after death ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why are electric cars less efficient in the northeast than in California ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What fool is not so wise To lose an oath to win a paradise ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which way do you turn your Bic to increase the flame - clockwise or counterclockwise ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How big is a quart ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Which area produces the least acidic coffee ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 01:03:39 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12534'), (b'x-ratelimit-remaining-tokens', b'29597'), (b'x-ratelimit-reset-requests', b'3h6m33.713s'), (b'x-ratelimit-reset-tokens', b'806ms'), (b'x-request-id', b'req_01hz0xzj52epc96c7kkwyg1gxg'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b290e0e89a7ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is about a specific area that produces coffee, which is a location.
class_name: LOC
class_index: 4
data: {'text': 'What ocean is the largest in the world ?', 'coarse_label': 4, 'fine_label': 35}
task_input: What ocean is the largest in the world ?, corse_label: 4
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What ocean is the largest in the world ?', 'examples_str': 'Question: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is after death ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why are electric cars less efficient in the northeast than in California ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What fool is not so wise To lose an oath to win a paradise ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which way do you turn your Bic to increase the flame - clockwise or counterclockwise ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How big is a quart ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does NASDAQ stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is after death ?
class_name: Entity 
class_index: 1
--------

Question: Why are electric cars less efficient in the northeast than in California ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What fool is not so wise To lose an oath to win a paradise ?
class_name: Human being 
class_index: 3
--------

Question: Which way do you turn your Bic to increase the flame - clockwise or counterclockwise ?
class_name: Location 
class_index: 4
--------

Question: How big is a quart ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What ocean is the largest in the world ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is after death ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why are electric cars less efficient in the northeast than in California ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What fool is not so wise To lose an oath to win a paradise ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which way do you turn your Bic to increase the flame - clockwise or counterclockwise ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How big is a quart ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What ocean is the largest in the world ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 01:03:40 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12534'), (b'x-ratelimit-remaining-tokens', b'29643'), (b'x-ratelimit-reset-requests', b'3h6m35.665999999s'), (b'x-ratelimit-reset-tokens', b'714ms'), (b'x-request-id', b'req_01hz0xzjfhezt9mzq2sth4wmpb'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b290e2fa997ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is after death ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why are electric cars less efficient in the northeast than in California ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What fool is not so wise To lose an oath to win a paradise ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which way do you turn your Bic to increase the flame - clockwise or counterclockwise ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How big is a quart ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What ocean is the largest in the world ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 01:03:42 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12533'), (b'x-ratelimit-remaining-tokens', b'29599'), (b'x-ratelimit-reset-requests', b'3h6m39.583999999s'), (b'x-ratelimit-reset-tokens', b'802ms'), (b'x-request-id', b'req_01hz0xzmgjfb788fdvy2zmmm07'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b290f00d487ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the largest ocean in the world, which is a geographic location.
class_name: LOC
class_index: 4
```
data: {'text': "What South American capital is the world 's highest ?", 'coarse_label': 4, 'fine_label': 32}
task_input: What South American capital is the world 's highest ?, corse_label: 4
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': "What South American capital is the world 's highest ?", 'examples_str': 'Question: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is after death ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why are electric cars less efficient in the northeast than in California ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What fool is not so wise To lose an oath to win a paradise ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which way do you turn your Bic to increase the flame - clockwise or counterclockwise ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How big is a quart ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does NASDAQ stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is after death ?
class_name: Entity 
class_index: 1
--------

Question: Why are electric cars less efficient in the northeast than in California ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What fool is not so wise To lose an oath to win a paradise ?
class_name: Human being 
class_index: 3
--------

Question: Which way do you turn your Bic to increase the flame - clockwise or counterclockwise ?
class_name: Location 
class_index: 4
--------

Question: How big is a quart ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What South American capital is the world 's highest ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is after death ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why are electric cars less efficient in the northeast than in California ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What fool is not so wise To lose an oath to win a paradise ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which way do you turn your Bic to increase the flame - clockwise or counterclockwise ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How big is a quart ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What South American capital is the world 's highest ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 01:03:42 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12533'), (b'x-ratelimit-remaining-tokens', b'29609'), (b'x-ratelimit-reset-requests', b'3h6m41.721999999s'), (b'x-ratelimit-reset-tokens', b'781ms'), (b'x-request-id', b'req_01hz0xzms5fefa8ezs5gwn19zt'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b290f1be8c7ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is after death ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why are electric cars less efficient in the northeast than in California ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What fool is not so wise To lose an oath to win a paradise ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which way do you turn your Bic to increase the flame - clockwise or counterclockwise ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How big is a quart ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What South American capital is the world 's highest ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 01:03:44 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12532'), (b'x-ratelimit-remaining-tokens', b'29595'), (b'x-ratelimit-reset-requests', b'3h6m45.657s'), (b'x-ratelimit-reset-tokens', b'810ms'), (b'x-request-id', b'req_01hz0xzpssfzjrfep4c1rrqgch'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b290fe98fd7ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about a specific location, which is a capital city.
class_name: LOC
class_index: 4
data: {'text': 'What North American city boasts the biggest Polish population ?', 'coarse_label': 4, 'fine_label': 32}
task_input: What North American city boasts the biggest Polish population ?, corse_label: 4
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What North American city boasts the biggest Polish population ?', 'examples_str': 'Question: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is after death ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why are electric cars less efficient in the northeast than in California ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What fool is not so wise To lose an oath to win a paradise ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which way do you turn your Bic to increase the flame - clockwise or counterclockwise ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How big is a quart ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does NASDAQ stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is after death ?
class_name: Entity 
class_index: 1
--------

Question: Why are electric cars less efficient in the northeast than in California ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What fool is not so wise To lose an oath to win a paradise ?
class_name: Human being 
class_index: 3
--------

Question: Which way do you turn your Bic to increase the flame - clockwise or counterclockwise ?
class_name: Location 
class_index: 4
--------

Question: How big is a quart ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What North American city boasts the biggest Polish population ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is after death ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why are electric cars less efficient in the northeast than in California ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What fool is not so wise To lose an oath to win a paradise ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which way do you turn your Bic to increase the flame - clockwise or counterclockwise ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How big is a quart ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What North American city boasts the biggest Polish population ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 01:03:44 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12532'), (b'x-ratelimit-remaining-tokens', b'29599'), (b'x-ratelimit-reset-requests', b'3h6m47.751s'), (b'x-ratelimit-reset-tokens', b'802ms'), (b'x-request-id', b'req_01hz0xzq1ne00rh7mtatvgnane'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b291003a4b7ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is after death ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why are electric cars less efficient in the northeast than in California ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What fool is not so wise To lose an oath to win a paradise ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which way do you turn your Bic to increase the flame - clockwise or counterclockwise ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How big is a quart ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What North American city boasts the biggest Polish population ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 01:03:46 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12531'), (b'x-ratelimit-remaining-tokens', b'29593'), (b'x-ratelimit-reset-requests', b'3h6m51.688999999s'), (b'x-ratelimit-reset-tokens', b'814ms'), (b'x-request-id', b'req_01hz0xzs22fzjvtk05h1fcszyq'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b2910d1d4c7ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is asking about a specific city, which is likely to have a notable characteristic (in this case, a large Polish population). This suggests a location-based answer.
class_name: LOC
class_index: 4
data: {'text': "Independent silversmith 's account for what percentage of silver production ?", 'coarse_label': 5, 'fine_label': 45}
task_input: Independent silversmith 's account for what percentage of silver production ?, corse_label: 5
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': "Independent silversmith 's account for what percentage of silver production ?", 'examples_str': 'Question: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is after death ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why are electric cars less efficient in the northeast than in California ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What fool is not so wise To lose an oath to win a paradise ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which way do you turn your Bic to increase the flame - clockwise or counterclockwise ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How big is a quart ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does NASDAQ stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is after death ?
class_name: Entity 
class_index: 1
--------

Question: Why are electric cars less efficient in the northeast than in California ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What fool is not so wise To lose an oath to win a paradise ?
class_name: Human being 
class_index: 3
--------

Question: Which way do you turn your Bic to increase the flame - clockwise or counterclockwise ?
class_name: Location 
class_index: 4
--------

Question: How big is a quart ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Independent silversmith 's account for what percentage of silver production ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is after death ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why are electric cars less efficient in the northeast than in California ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What fool is not so wise To lose an oath to win a paradise ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which way do you turn your Bic to increase the flame - clockwise or counterclockwise ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How big is a quart ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Independent silversmith 's account for what percentage of silver production ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 01:03:47 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12531'), (b'x-ratelimit-remaining-tokens', b'29605'), (b'x-ratelimit-reset-requests', b'3h6m53.670999999s'), (b'x-ratelimit-reset-tokens', b'790ms'), (b'x-request-id', b'req_01hz0xzsccea7sxhpnr7snq92j'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b2910f2f3f7ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is after death ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why are electric cars less efficient in the northeast than in California ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What fool is not so wise To lose an oath to win a paradise ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which way do you turn your Bic to increase the flame - clockwise or counterclockwise ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How big is a quart ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Independent silversmith 's account for what percentage of silver production ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 01:03:49 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12530'), (b'x-ratelimit-remaining-tokens', b'29589'), (b'x-ratelimit-reset-requests', b'3h6m57.604s'), (b'x-ratelimit-reset-tokens', b'822ms'), (b'x-request-id', b'req_01hz0xzvcye28a3sdhbvm2kzy5'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b2911c1a517ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the percentage of silver production, which is a numeric value.
class_name: NUM
class_index: 5
data: {'text': 'How old is the universe ?', 'coarse_label': 5, 'fine_label': 44}
task_input: How old is the universe ?, corse_label: 5
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'How old is the universe ?', 'examples_str': 'Question: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is after death ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why are electric cars less efficient in the northeast than in California ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What fool is not so wise To lose an oath to win a paradise ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which way do you turn your Bic to increase the flame - clockwise or counterclockwise ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How big is a quart ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does NASDAQ stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is after death ?
class_name: Entity 
class_index: 1
--------

Question: Why are electric cars less efficient in the northeast than in California ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What fool is not so wise To lose an oath to win a paradise ?
class_name: Human being 
class_index: 3
--------

Question: Which way do you turn your Bic to increase the flame - clockwise or counterclockwise ?
class_name: Location 
class_index: 4
--------

Question: How big is a quart ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: How old is the universe ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is after death ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why are electric cars less efficient in the northeast than in California ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What fool is not so wise To lose an oath to win a paradise ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which way do you turn your Bic to increase the flame - clockwise or counterclockwise ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How big is a quart ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: How old is the universe ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 01:03:49 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12530'), (b'x-ratelimit-remaining-tokens', b'29611'), (b'x-ratelimit-reset-requests', b'3h6m59.712999999s'), (b'x-ratelimit-reset-tokens', b'777ms'), (b'x-request-id', b'req_01hz0xzvnzfhmtrdg5bkw7jm73'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b2911deba97ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is after death ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why are electric cars less efficient in the northeast than in California ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What fool is not so wise To lose an oath to win a paradise ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which way do you turn your Bic to increase the flame - clockwise or counterclockwise ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How big is a quart ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: How old is the universe ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 01:03:51 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12529'), (b'x-ratelimit-remaining-tokens', b'29602'), (b'x-ratelimit-reset-requests', b'3h7m3.655s'), (b'x-ratelimit-reset-tokens', b'796ms'), (b'x-request-id', b'req_01hz0xzxp9eqja1gm03fzmb7ha'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b2912abea47ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the age of the universe, which is a numeric value.
class_name: NUM
class_index: 5
data: {'text': 'When was the Hoover Dam constructed ?', 'coarse_label': 5, 'fine_label': 39}
task_input: When was the Hoover Dam constructed ?, corse_label: 5
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'When was the Hoover Dam constructed ?', 'examples_str': 'Question: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is after death ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why are electric cars less efficient in the northeast than in California ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What fool is not so wise To lose an oath to win a paradise ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which way do you turn your Bic to increase the flame - clockwise or counterclockwise ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How big is a quart ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does NASDAQ stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is after death ?
class_name: Entity 
class_index: 1
--------

Question: Why are electric cars less efficient in the northeast than in California ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What fool is not so wise To lose an oath to win a paradise ?
class_name: Human being 
class_index: 3
--------

Question: Which way do you turn your Bic to increase the flame - clockwise or counterclockwise ?
class_name: Location 
class_index: 4
--------

Question: How big is a quart ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: When was the Hoover Dam constructed ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is after death ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why are electric cars less efficient in the northeast than in California ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What fool is not so wise To lose an oath to win a paradise ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which way do you turn your Bic to increase the flame - clockwise or counterclockwise ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How big is a quart ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: When was the Hoover Dam constructed ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 01:03:51 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12529'), (b'x-ratelimit-remaining-tokens', b'29599'), (b'x-ratelimit-reset-requests', b'3h7m5.754s'), (b'x-ratelimit-reset-tokens', b'802ms'), (b'x-request-id', b'req_01hz0xzxy0fb7vpbfrkxs2pcfm'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b2912c484f7ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is after death ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why are electric cars less efficient in the northeast than in California ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What fool is not so wise To lose an oath to win a paradise ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which way do you turn your Bic to increase the flame - clockwise or counterclockwise ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How big is a quart ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: When was the Hoover Dam constructed ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 01:03:54 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12528'), (b'x-ratelimit-remaining-tokens', b'29599'), (b'x-ratelimit-reset-requests', b'3h7m9.670999999s'), (b'x-ratelimit-reset-tokens', b'802ms'), (b'x-request-id', b'req_01hz0xzzz3fbkbda1vjp0v62fp'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b291392b4e7ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about a specific event in history, which is typically associated with a date.
class_name: Description and abstract concept
class_index: 2
```
data: {'text': 'At what age did Rossini stop writing opera ?', 'coarse_label': 5, 'fine_label': 44}
task_input: At what age did Rossini stop writing opera ?, corse_label: 5
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'At what age did Rossini stop writing opera ?', 'examples_str': 'Question: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is after death ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why are electric cars less efficient in the northeast than in California ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What fool is not so wise To lose an oath to win a paradise ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which way do you turn your Bic to increase the flame - clockwise or counterclockwise ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How big is a quart ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does NASDAQ stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What is after death ?
class_name: Entity 
class_index: 1
--------

Question: Why are electric cars less efficient in the northeast than in California ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What fool is not so wise To lose an oath to win a paradise ?
class_name: Human being 
class_index: 3
--------

Question: Which way do you turn your Bic to increase the flame - clockwise or counterclockwise ?
class_name: Location 
class_index: 4
--------

Question: How big is a quart ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: At what age did Rossini stop writing opera ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is after death ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why are electric cars less efficient in the northeast than in California ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What fool is not so wise To lose an oath to win a paradise ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which way do you turn your Bic to increase the flame - clockwise or counterclockwise ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How big is a quart ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: At what age did Rossini stop writing opera ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 01:03:54 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12528'), (b'x-ratelimit-remaining-tokens', b'29594'), (b'x-ratelimit-reset-requests', b'3h7m11.724999999s'), (b'x-ratelimit-reset-tokens', b'812ms'), (b'x-request-id', b'req_01hz0y007qfe78pkce0bkxnpyp'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b2913b0cb27ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What is after death ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why are electric cars less efficient in the northeast than in California ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What fool is not so wise To lose an oath to win a paradise ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Which way do you turn your Bic to increase the flame - clockwise or counterclockwise ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How big is a quart ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: At what age did Rossini stop writing opera ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 01:03:56 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12527'), (b'x-ratelimit-remaining-tokens', b'29598'), (b'x-ratelimit-reset-requests', b'3h7m15.669999999s'), (b'x-ratelimit-reset-tokens', b'804ms'), (b'x-request-id', b'req_01hz0y027yfhnbfy4jz2m4geb0'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b29147ef097ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the age of a specific person, which is a characteristic often associated with a human being.
class_name: HUM
class_index: 3
```
responses: [0, 0, 0, 0, 3, 5, 0, 0, 3, 2, 4, 0, 3, 0, 3, 3, 4, 4, 4, 4, 5, 5, 2, 3], targets: [0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5]
num_invalid: 0
Preds tensor: tensor([[1., 0., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0.],
        [0., 0., 0., 1., 0., 0.],
        [0., 0., 0., 0., 0., 1.],
        [1., 0., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0.],
        [0., 0., 0., 1., 0., 0.],
        [0., 0., 1., 0., 0., 0.],
        [0., 0., 0., 0., 1., 0.],
        [1., 0., 0., 0., 0., 0.],
        [0., 0., 0., 1., 0., 0.],
        [1., 0., 0., 0., 0., 0.],
        [0., 0., 0., 1., 0., 0.],
        [0., 0., 0., 1., 0., 0.],
        [0., 0., 0., 0., 1., 0.],
        [0., 0., 0., 0., 1., 0.],
        [0., 0., 0., 0., 1., 0.],
        [0., 0., 0., 0., 1., 0.],
        [0., 0., 0., 0., 0., 1.],
        [0., 0., 0., 0., 0., 1.],
        [0., 0., 1., 0., 0., 0.],
        [0., 0., 0., 1., 0., 0.]])
Targets tensor: tensor([0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5])
Eval Accuracy 4 proposed: 0.583, F1: 0.51, score: 1.093
reset_parameter
step: 5
train_batch: {'text': ['How big is a normal size penis for a 15-year-old ?', 'Where can I find correct tabs for Third Eye Blind songs ?', "What is Dr. Ruth 's last name ?", 'Where can I find a world atlas map online at no charge ?', "What American naval officer broke Japan 's isolationist policy in 1853 ?", 'What 1965 film had Jack Lemmon portraying a cartoonist ?', 'What did brontosauruses eat ?', 'What city is the Kentucky Horse Park near ?', 'What year was the ATM first introduced ?', "What are the world 's four oceans ?"], 'coarse_label': tensor([5, 4, 3, 4, 3, 1, 1, 4, 5, 4]), 'fine_label': tensor([48, 35, 29, 35, 29,  5,  9, 32, 39, 35])}
before random_replace: [Sample(index=1032, data={'text': 'What does NASDAQ stand for ?', 'coarse_label': 0, 'fine_label': 1}), Sample(index=742, data={'text': 'What war did the Potsdam Conference follow ?', 'coarse_label': 1, 'fine_label': 8}), Sample(index=94, data={'text': 'What happens when a body part falls asleep ?', 'coarse_label': 2, 'fine_label': 25}), Sample(index=794, data={'text': "What American actress was the first to be called a `` vamp '' ?", 'coarse_label': 3, 'fine_label': 29}), Sample(index=446, data={'text': 'Where is Erykah Badu originally from ?', 'coarse_label': 4, 'fine_label': 35}), Sample(index=2697, data={'text': 'What is the chemical reactivity of argon ?', 'coarse_label': 5, 'fine_label': 43})]
after random_replace: [Sample(index=1032, data={'text': 'What does NASDAQ stand for ?', 'coarse_label': 0, 'fine_label': 1}), Sample(index=31, data={'text': 'The operating system that runs on IBM-compatible machines is called what ?', 'coarse_label': 1, 'fine_label': 21}), Sample(index=558, data={'text': "What is the origin of the word `` attic '' ?", 'coarse_label': 2, 'fine_label': 25}), Sample(index=794, data={'text': "What American actress was the first to be called a `` vamp '' ?", 'coarse_label': 3, 'fine_label': 29}), Sample(index=1144, data={'text': 'What planet gave bith to Superman ?', 'coarse_label': 4, 'fine_label': 35}), Sample(index=764, data={'text': 'How many months does it take the moon to revolve around the Earth ?', 'coarse_label': 5, 'fine_label': 38})]
data: {'text': 'What does U.S.S.R. stand for ?', 'coarse_label': 0, 'fine_label': 1}
task_input: What does U.S.S.R. stand for ?, corse_label: 0
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What does U.S.S.R. stand for ?', 'examples_str': "Question: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: The operating system that runs on IBM-compatible machines is called what ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the word `` attic '' ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What American actress was the first to be called a `` vamp '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What planet gave bith to Superman ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many months does it take the moon to revolve around the Earth ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does NASDAQ stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: The operating system that runs on IBM-compatible machines is called what ?
class_name: Entity 
class_index: 1
--------

Question: What is the origin of the word `` attic '' ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What American actress was the first to be called a `` vamp '' ?
class_name: Human being 
class_index: 3
--------

Question: What planet gave bith to Superman ?
class_name: Location 
class_index: 4
--------

Question: How many months does it take the moon to revolve around the Earth ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What does U.S.S.R. stand for ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: The operating system that runs on IBM-compatible machines is called what ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the word `` attic '' ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What American actress was the first to be called a `` vamp '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What planet gave bith to Superman ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many months does it take the moon to revolve around the Earth ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does U.S.S.R. stand for ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 01:03:56 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'325'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12527'), (b'x-ratelimit-remaining-tokens', b'29598'), (b'x-ratelimit-reset-requests', b'3h7m17.73s'), (b'x-ratelimit-reset-tokens', b'804ms'), (b'x-request-id', b'req_01hz0y02gcfjy84cafqb8k1t9z'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b2914988937ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: The operating system that runs on IBM-compatible machines is called what ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the word `` attic '' ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What American actress was the first to be called a `` vamp '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What planet gave bith to Superman ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many months does it take the moon to revolve around the Earth ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does U.S.S.R. stand for ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 01:03:58 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12526'), (b'x-ratelimit-remaining-tokens', b'29596'), (b'x-ratelimit-reset-requests', b'3h7m21.664s'), (b'x-ratelimit-reset-tokens', b'808ms'), (b'x-request-id', b'req_01hz0y04gyfvt9gjq6z516qrpb'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b291567b217ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking for the meaning of the abbreviation U.S.S.R.
class_name: ABBR
class_index: 0
```
data: {'text': 'What is the abbreviated form of the National Bureau of Investigation ?', 'coarse_label': 0, 'fine_label': 0}
task_input: What is the abbreviated form of the National Bureau of Investigation ?, corse_label: 0
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What is the abbreviated form of the National Bureau of Investigation ?', 'examples_str': "Question: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: The operating system that runs on IBM-compatible machines is called what ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the word `` attic '' ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What American actress was the first to be called a `` vamp '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What planet gave bith to Superman ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many months does it take the moon to revolve around the Earth ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does NASDAQ stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: The operating system that runs on IBM-compatible machines is called what ?
class_name: Entity 
class_index: 1
--------

Question: What is the origin of the word `` attic '' ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What American actress was the first to be called a `` vamp '' ?
class_name: Human being 
class_index: 3
--------

Question: What planet gave bith to Superman ?
class_name: Location 
class_index: 4
--------

Question: How many months does it take the moon to revolve around the Earth ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What is the abbreviated form of the National Bureau of Investigation ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: The operating system that runs on IBM-compatible machines is called what ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the word `` attic '' ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What American actress was the first to be called a `` vamp '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What planet gave bith to Superman ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many months does it take the moon to revolve around the Earth ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is the abbreviated form of the National Bureau of Investigation ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 01:03:58 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'325'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12526'), (b'x-ratelimit-remaining-tokens', b'29598'), (b'x-ratelimit-reset-requests', b'3h7m23.741s'), (b'x-ratelimit-reset-tokens', b'804ms'), (b'x-request-id', b'req_01hz0y04s3fvkvyfkq4yg63xkf'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b291581c817ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: The operating system that runs on IBM-compatible machines is called what ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the word `` attic '' ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What American actress was the first to be called a `` vamp '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What planet gave bith to Superman ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many months does it take the moon to revolve around the Earth ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is the abbreviated form of the National Bureau of Investigation ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 01:04:01 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12525'), (b'x-ratelimit-remaining-tokens', b'29586'), (b'x-ratelimit-reset-requests', b'3h7m27.663s'), (b'x-ratelimit-reset-tokens', b'828ms'), (b'x-request-id', b'req_01hz0y06t0ezv9ktp87vk01r58'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b2916508637ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking for the abbreviated form of the National Bureau of Investigation, which is typically represented by the acronym "NBI".
class_name: ABBR
class_index: 0
data: {'text': "What do the letters ZIP stand for in the phrase `` ZIP code '' ?", 'coarse_label': 0, 'fine_label': 1}
task_input: What do the letters ZIP stand for in the phrase `` ZIP code '' ?, corse_label: 0
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': "What do the letters ZIP stand for in the phrase `` ZIP code '' ?", 'examples_str': "Question: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: The operating system that runs on IBM-compatible machines is called what ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the word `` attic '' ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What American actress was the first to be called a `` vamp '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What planet gave bith to Superman ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many months does it take the moon to revolve around the Earth ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does NASDAQ stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: The operating system that runs on IBM-compatible machines is called what ?
class_name: Entity 
class_index: 1
--------

Question: What is the origin of the word `` attic '' ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What American actress was the first to be called a `` vamp '' ?
class_name: Human being 
class_index: 3
--------

Question: What planet gave bith to Superman ?
class_name: Location 
class_index: 4
--------

Question: How many months does it take the moon to revolve around the Earth ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What do the letters ZIP stand for in the phrase `` ZIP code '' ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: The operating system that runs on IBM-compatible machines is called what ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the word `` attic '' ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What American actress was the first to be called a `` vamp '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What planet gave bith to Superman ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many months does it take the moon to revolve around the Earth ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What do the letters ZIP stand for in the phrase `` ZIP code '' ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 01:04:01 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12525'), (b'x-ratelimit-remaining-tokens', b'29582'), (b'x-ratelimit-reset-requests', b'3h7m29.770999999s'), (b'x-ratelimit-reset-tokens', b'836ms'), (b'x-request-id', b'req_01hz0y0716ekqa0gb0tws5dagm'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b2916689967ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: The operating system that runs on IBM-compatible machines is called what ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the word `` attic '' ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What American actress was the first to be called a `` vamp '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What planet gave bith to Superman ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many months does it take the moon to revolve around the Earth ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What do the letters ZIP stand for in the phrase `` ZIP code '' ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 01:04:03 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12524'), (b'x-ratelimit-remaining-tokens', b'29587'), (b'x-ratelimit-reset-requests', b'3h7m33.71s'), (b'x-ratelimit-reset-tokens', b'826ms'), (b'x-request-id', b'req_01hz0y091mezvb1jtwjebavtmk'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b291736c6c7ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the meaning of the letters ZIP in the phrase "ZIP code", which is an abbreviation.
class_name: ABBR
class_index: 0
data: {'text': 'What does VCR stand for ?', 'coarse_label': 0, 'fine_label': 1}
task_input: What does VCR stand for ?, corse_label: 0
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What does VCR stand for ?', 'examples_str': "Question: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: The operating system that runs on IBM-compatible machines is called what ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the word `` attic '' ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What American actress was the first to be called a `` vamp '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What planet gave bith to Superman ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many months does it take the moon to revolve around the Earth ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does NASDAQ stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: The operating system that runs on IBM-compatible machines is called what ?
class_name: Entity 
class_index: 1
--------

Question: What is the origin of the word `` attic '' ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What American actress was the first to be called a `` vamp '' ?
class_name: Human being 
class_index: 3
--------

Question: What planet gave bith to Superman ?
class_name: Location 
class_index: 4
--------

Question: How many months does it take the moon to revolve around the Earth ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What does VCR stand for ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: The operating system that runs on IBM-compatible machines is called what ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the word `` attic '' ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What American actress was the first to be called a `` vamp '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What planet gave bith to Superman ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many months does it take the moon to revolve around the Earth ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does VCR stand for ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 01:04:03 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12524'), (b'x-ratelimit-remaining-tokens', b'29586'), (b'x-ratelimit-reset-requests', b'3h7m35.744s'), (b'x-ratelimit-reset-tokens', b'828ms'), (b'x-request-id', b'req_01hz0y099mfvktqzs8he7km7bc'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b291750dd37ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: The operating system that runs on IBM-compatible machines is called what ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the word `` attic '' ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What American actress was the first to be called a `` vamp '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What planet gave bith to Superman ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many months does it take the moon to revolve around the Earth ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does VCR stand for ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 01:04:05 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12523'), (b'x-ratelimit-remaining-tokens', b'29597'), (b'x-ratelimit-reset-requests', b'3h7m39.689999999s'), (b'x-ratelimit-reset-tokens', b'806ms'), (b'x-request-id', b'req_01hz0y0b9vfv6srj054201hmzz'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b29181eff37ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking for the abbreviation of VCR, which is a common acronym.
class_name: ABBR
class_index: 0
data: {'text': 'What sport can a free-legged pacer compete in ?', 'coarse_label': 1, 'fine_label': 17}
task_input: What sport can a free-legged pacer compete in ?, corse_label: 1
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What sport can a free-legged pacer compete in ?', 'examples_str': "Question: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: The operating system that runs on IBM-compatible machines is called what ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the word `` attic '' ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What American actress was the first to be called a `` vamp '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What planet gave bith to Superman ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many months does it take the moon to revolve around the Earth ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does NASDAQ stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: The operating system that runs on IBM-compatible machines is called what ?
class_name: Entity 
class_index: 1
--------

Question: What is the origin of the word `` attic '' ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What American actress was the first to be called a `` vamp '' ?
class_name: Human being 
class_index: 3
--------

Question: What planet gave bith to Superman ?
class_name: Location 
class_index: 4
--------

Question: How many months does it take the moon to revolve around the Earth ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What sport can a free-legged pacer compete in ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: The operating system that runs on IBM-compatible machines is called what ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the word `` attic '' ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What American actress was the first to be called a `` vamp '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What planet gave bith to Superman ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many months does it take the moon to revolve around the Earth ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What sport can a free-legged pacer compete in ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 01:04:05 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12523'), (b'x-ratelimit-remaining-tokens', b'29615'), (b'x-ratelimit-reset-requests', b'3h7m41.710999999s'), (b'x-ratelimit-reset-tokens', b'770ms'), (b'x-request-id', b'req_01hz0y0bjyfb8a2qgzaesxne6s'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b29183a9727ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: The operating system that runs on IBM-compatible machines is called what ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the word `` attic '' ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What American actress was the first to be called a `` vamp '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What planet gave bith to Superman ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many months does it take the moon to revolve around the Earth ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What sport can a free-legged pacer compete in ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 01:04:07 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12522'), (b'x-ratelimit-remaining-tokens', b'29591'), (b'x-ratelimit-reset-requests', b'3h7m45.651s'), (b'x-ratelimit-reset-tokens', b'818ms'), (b'x-request-id', b'req_01hz0y0dk9eqka75kpxw9mwa5k'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b291908c767ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is about a specific type of horse, which is a living being, so it's classified as a Human being.
class_name: HUM
class_index: 3
data: {'text': 'What was originally defined as one 1-millionth of the distance from the equator to the Pole ?', 'coarse_label': 1, 'fine_label': 21}
task_input: What was originally defined as one 1-millionth of the distance from the equator to the Pole ?, corse_label: 1
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What was originally defined as one 1-millionth of the distance from the equator to the Pole ?', 'examples_str': "Question: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: The operating system that runs on IBM-compatible machines is called what ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the word `` attic '' ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What American actress was the first to be called a `` vamp '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What planet gave bith to Superman ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many months does it take the moon to revolve around the Earth ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does NASDAQ stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: The operating system that runs on IBM-compatible machines is called what ?
class_name: Entity 
class_index: 1
--------

Question: What is the origin of the word `` attic '' ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What American actress was the first to be called a `` vamp '' ?
class_name: Human being 
class_index: 3
--------

Question: What planet gave bith to Superman ?
class_name: Location 
class_index: 4
--------

Question: How many months does it take the moon to revolve around the Earth ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What was originally defined as one 1-millionth of the distance from the equator to the Pole ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: The operating system that runs on IBM-compatible machines is called what ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the word `` attic '' ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What American actress was the first to be called a `` vamp '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What planet gave bith to Superman ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many months does it take the moon to revolve around the Earth ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What was originally defined as one 1-millionth of the distance from the equator to the Pole ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 01:04:08 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'325'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12522'), (b'x-ratelimit-remaining-tokens', b'29604'), (b'x-ratelimit-reset-requests', b'3h7m47.709999999s'), (b'x-ratelimit-reset-tokens', b'792ms'), (b'x-request-id', b'req_01hz0y0dwbfb8sbg8b4y70j12r'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b291925de07ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: The operating system that runs on IBM-compatible machines is called what ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the word `` attic '' ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What American actress was the first to be called a `` vamp '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What planet gave bith to Superman ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many months does it take the moon to revolve around the Earth ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What was originally defined as one 1-millionth of the distance from the equator to the Pole ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 01:04:10 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12521'), (b'x-ratelimit-remaining-tokens', b'29580'), (b'x-ratelimit-reset-requests', b'3h7m51.648s'), (b'x-ratelimit-reset-tokens', b'840ms'), (b'x-request-id', b'req_01hz0y0fwsfjyv9svhppz245c1'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b2919f39537ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is asking about a specific unit of measurement, which is a numeric value.
class_name: NUM
class_index: 5
data: {'text': 'What fuel do airplanes use ?', 'coarse_label': 1, 'fine_label': 18}
task_input: What fuel do airplanes use ?, corse_label: 1
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What fuel do airplanes use ?', 'examples_str': "Question: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: The operating system that runs on IBM-compatible machines is called what ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the word `` attic '' ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What American actress was the first to be called a `` vamp '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What planet gave bith to Superman ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many months does it take the moon to revolve around the Earth ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does NASDAQ stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: The operating system that runs on IBM-compatible machines is called what ?
class_name: Entity 
class_index: 1
--------

Question: What is the origin of the word `` attic '' ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What American actress was the first to be called a `` vamp '' ?
class_name: Human being 
class_index: 3
--------

Question: What planet gave bith to Superman ?
class_name: Location 
class_index: 4
--------

Question: How many months does it take the moon to revolve around the Earth ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What fuel do airplanes use ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: The operating system that runs on IBM-compatible machines is called what ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the word `` attic '' ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What American actress was the first to be called a `` vamp '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What planet gave bith to Superman ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many months does it take the moon to revolve around the Earth ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What fuel do airplanes use ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 01:04:10 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12521'), (b'x-ratelimit-remaining-tokens', b'29586'), (b'x-ratelimit-reset-requests', b'3h7m53.767999999s'), (b'x-ratelimit-reset-tokens', b'828ms'), (b'x-request-id', b'req_01hz0y0g42fb8v2fvx5zbpht94'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b291a0bab67ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: The operating system that runs on IBM-compatible machines is called what ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the word `` attic '' ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What American actress was the first to be called a `` vamp '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What planet gave bith to Superman ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many months does it take the moon to revolve around the Earth ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What fuel do airplanes use ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 01:04:12 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12520'), (b'x-ratelimit-remaining-tokens', b'29596'), (b'x-ratelimit-reset-requests', b'3h7m57.701s'), (b'x-ratelimit-reset-tokens', b'808ms'), (b'x-request-id', b'req_01hz0y0j4nfqytf503e0nk4v6c'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b291ad9e917ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the fuel used by airplanes, which is a specific type of substance.
class_name: ABBR
class_index: 0
```
data: {'text': 'On what T.V. show could Tom Terrific be found ?', 'coarse_label': 1, 'fine_label': 5}
task_input: On what T.V. show could Tom Terrific be found ?, corse_label: 1
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'On what T.V. show could Tom Terrific be found ?', 'examples_str': "Question: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: The operating system that runs on IBM-compatible machines is called what ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the word `` attic '' ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What American actress was the first to be called a `` vamp '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What planet gave bith to Superman ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many months does it take the moon to revolve around the Earth ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does NASDAQ stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: The operating system that runs on IBM-compatible machines is called what ?
class_name: Entity 
class_index: 1
--------

Question: What is the origin of the word `` attic '' ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What American actress was the first to be called a `` vamp '' ?
class_name: Human being 
class_index: 3
--------

Question: What planet gave bith to Superman ?
class_name: Location 
class_index: 4
--------

Question: How many months does it take the moon to revolve around the Earth ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: On what T.V. show could Tom Terrific be found ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: The operating system that runs on IBM-compatible machines is called what ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the word `` attic '' ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What American actress was the first to be called a `` vamp '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What planet gave bith to Superman ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many months does it take the moon to revolve around the Earth ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: On what T.V. show could Tom Terrific be found ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 01:04:12 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12520'), (b'x-ratelimit-remaining-tokens', b'29647'), (b'x-ratelimit-reset-requests', b'3h7m59.646s'), (b'x-ratelimit-reset-tokens', b'705ms'), (b'x-request-id', b'req_01hz0y0jfrfb8vgn8yfe6yb6j8'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b291afd83d7ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: The operating system that runs on IBM-compatible machines is called what ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the word `` attic '' ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What American actress was the first to be called a `` vamp '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What planet gave bith to Superman ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many months does it take the moon to revolve around the Earth ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: On what T.V. show could Tom Terrific be found ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 01:04:15 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12519'), (b'x-ratelimit-remaining-tokens', b'29591'), (b'x-ratelimit-reset-requests', b'3h8m3.587s'), (b'x-ratelimit-reset-tokens', b'818ms'), (b'x-request-id', b'req_01hz0y0mg2fx8ah2fypf31pgmf'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b291bcbad37ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is about a TV show, which is a type of entity, and the main character Tom Terrific is a human being.
class_name: HUM
class_index: 3
data: {'text': 'How do you select wine ?', 'coarse_label': 2, 'fine_label': 26}
task_input: How do you select wine ?, corse_label: 2
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'How do you select wine ?', 'examples_str': "Question: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: The operating system that runs on IBM-compatible machines is called what ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the word `` attic '' ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What American actress was the first to be called a `` vamp '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What planet gave bith to Superman ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many months does it take the moon to revolve around the Earth ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does NASDAQ stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: The operating system that runs on IBM-compatible machines is called what ?
class_name: Entity 
class_index: 1
--------

Question: What is the origin of the word `` attic '' ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What American actress was the first to be called a `` vamp '' ?
class_name: Human being 
class_index: 3
--------

Question: What planet gave bith to Superman ?
class_name: Location 
class_index: 4
--------

Question: How many months does it take the moon to revolve around the Earth ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: How do you select wine ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: The operating system that runs on IBM-compatible machines is called what ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the word `` attic '' ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What American actress was the first to be called a `` vamp '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What planet gave bith to Superman ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many months does it take the moon to revolve around the Earth ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: How do you select wine ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 01:04:15 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12519'), (b'x-ratelimit-remaining-tokens', b'29580'), (b'x-ratelimit-reset-requests', b'3h8m5.739s'), (b'x-ratelimit-reset-tokens', b'840ms'), (b'x-request-id', b'req_01hz0y0mr9ez5se9z8kv0y4f71'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b291be5c0a7ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: The operating system that runs on IBM-compatible machines is called what ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the word `` attic '' ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What American actress was the first to be called a `` vamp '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What planet gave bith to Superman ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many months does it take the moon to revolve around the Earth ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: How do you select wine ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 01:04:17 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12518'), (b'x-ratelimit-remaining-tokens', b'29597'), (b'x-ratelimit-reset-requests', b'3h8m9.675999999s'), (b'x-ratelimit-reset-tokens', b'806ms'), (b'x-request-id', b'req_01hz0y0prnfegree03742xvg9k'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b291cb3def7ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is about a process or a method, which is related to a human activity, and the answer is not a specific entity or location.
class_name: Description and abstract concept
class_index: 2
data: {'text': "What are some children 's rights ?", 'coarse_label': 2, 'fine_label': 25}
task_input: What are some children 's rights ?, corse_label: 2
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': "What are some children 's rights ?", 'examples_str': "Question: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: The operating system that runs on IBM-compatible machines is called what ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the word `` attic '' ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What American actress was the first to be called a `` vamp '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What planet gave bith to Superman ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many months does it take the moon to revolve around the Earth ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does NASDAQ stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: The operating system that runs on IBM-compatible machines is called what ?
class_name: Entity 
class_index: 1
--------

Question: What is the origin of the word `` attic '' ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What American actress was the first to be called a `` vamp '' ?
class_name: Human being 
class_index: 3
--------

Question: What planet gave bith to Superman ?
class_name: Location 
class_index: 4
--------

Question: How many months does it take the moon to revolve around the Earth ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What are some children 's rights ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: The operating system that runs on IBM-compatible machines is called what ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the word `` attic '' ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What American actress was the first to be called a `` vamp '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What planet gave bith to Superman ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many months does it take the moon to revolve around the Earth ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What are some children 's rights ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 01:04:17 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12518'), (b'x-ratelimit-remaining-tokens', b'29619'), (b'x-ratelimit-reset-requests', b'3h8m11.677s'), (b'x-ratelimit-reset-tokens', b'762ms'), (b'x-request-id', b'req_01hz0y0q2we1erb9f3ywtf9tpc'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b291cd3fa97ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: The operating system that runs on IBM-compatible machines is called what ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the word `` attic '' ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What American actress was the first to be called a `` vamp '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What planet gave bith to Superman ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many months does it take the moon to revolve around the Earth ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What are some children 's rights ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 01:04:19 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12517'), (b'x-ratelimit-remaining-tokens', b'29595'), (b'x-ratelimit-reset-requests', b'3h8m15.61s'), (b'x-ratelimit-reset-tokens', b'810ms'), (b'x-request-id', b'req_01hz0y0s3gfb99pfhqt8443893'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b291da2ab97ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the rights of children, which is a concept or idea, and is not a specific entity, location, or numeric value.
class_name: Description and abstract concept
class_index: 2
data: {'text': 'What are some fun things to do in Cozumel , Mexico for teenagers ?', 'coarse_label': 2, 'fine_label': 25}
task_input: What are some fun things to do in Cozumel , Mexico for teenagers ?, corse_label: 2
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What are some fun things to do in Cozumel , Mexico for teenagers ?', 'examples_str': "Question: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: The operating system that runs on IBM-compatible machines is called what ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the word `` attic '' ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What American actress was the first to be called a `` vamp '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What planet gave bith to Superman ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many months does it take the moon to revolve around the Earth ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does NASDAQ stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: The operating system that runs on IBM-compatible machines is called what ?
class_name: Entity 
class_index: 1
--------

Question: What is the origin of the word `` attic '' ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What American actress was the first to be called a `` vamp '' ?
class_name: Human being 
class_index: 3
--------

Question: What planet gave bith to Superman ?
class_name: Location 
class_index: 4
--------

Question: How many months does it take the moon to revolve around the Earth ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What are some fun things to do in Cozumel , Mexico for teenagers ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: The operating system that runs on IBM-compatible machines is called what ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the word `` attic '' ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What American actress was the first to be called a `` vamp '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What planet gave bith to Superman ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many months does it take the moon to revolve around the Earth ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What are some fun things to do in Cozumel , Mexico for teenagers ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 01:04:19 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'332'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12517'), (b'x-ratelimit-remaining-tokens', b'29597'), (b'x-ratelimit-reset-requests', b'3h8m17.718999999s'), (b'x-ratelimit-reset-tokens', b'806ms'), (b'x-request-id', b'req_01hz0y0sc9e1evhaq0sz69e04a'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b291dbfc2a7ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: The operating system that runs on IBM-compatible machines is called what ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the word `` attic '' ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What American actress was the first to be called a `` vamp '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What planet gave bith to Superman ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many months does it take the moon to revolve around the Earth ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What are some fun things to do in Cozumel , Mexico for teenagers ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 01:04:22 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12516'), (b'x-ratelimit-remaining-tokens', b'29587'), (b'x-ratelimit-reset-requests', b'3h8m21.667s'), (b'x-ratelimit-reset-tokens', b'826ms'), (b'x-request-id', b'req_01hz0y0vceefdtt45gtmtwz5ey'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b291e8cf117ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about activities to do in a specific location, which is a common query for tourists.
class_name: Location
class_index: 4
```
data: {'text': 'What does hazmat stand for ?', 'coarse_label': 2, 'fine_label': 24}
task_input: What does hazmat stand for ?, corse_label: 2
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What does hazmat stand for ?', 'examples_str': "Question: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: The operating system that runs on IBM-compatible machines is called what ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the word `` attic '' ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What American actress was the first to be called a `` vamp '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What planet gave bith to Superman ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many months does it take the moon to revolve around the Earth ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does NASDAQ stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: The operating system that runs on IBM-compatible machines is called what ?
class_name: Entity 
class_index: 1
--------

Question: What is the origin of the word `` attic '' ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What American actress was the first to be called a `` vamp '' ?
class_name: Human being 
class_index: 3
--------

Question: What planet gave bith to Superman ?
class_name: Location 
class_index: 4
--------

Question: How many months does it take the moon to revolve around the Earth ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What does hazmat stand for ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: The operating system that runs on IBM-compatible machines is called what ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the word `` attic '' ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What American actress was the first to be called a `` vamp '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What planet gave bith to Superman ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many months does it take the moon to revolve around the Earth ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does hazmat stand for ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 01:04:22 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12516'), (b'x-ratelimit-remaining-tokens', b'29612'), (b'x-ratelimit-reset-requests', b'3h8m23.695s'), (b'x-ratelimit-reset-tokens', b'775ms'), (b'x-request-id', b'req_01hz0y0vnzfbmv8t1xkg9pqknv'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b291eab8bb7ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: The operating system that runs on IBM-compatible machines is called what ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the word `` attic '' ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What American actress was the first to be called a `` vamp '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What planet gave bith to Superman ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many months does it take the moon to revolve around the Earth ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does hazmat stand for ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 01:04:24 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12515'), (b'x-ratelimit-remaining-tokens', b'29596'), (b'x-ratelimit-reset-requests', b'3h8m27.635999999s'), (b'x-ratelimit-reset-tokens', b'808ms'), (b'x-request-id', b'req_01hz0y0xpafeh8a9ezk678cqp8'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b291f79bdb7ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking for the abbreviation of a term, which is a common use case for abbreviations.
class_name: ABBR
class_index: 0
data: {'text': "Who is the nebbish that is Marvel 's official mascot ?", 'coarse_label': 3, 'fine_label': 29}
task_input: Who is the nebbish that is Marvel 's official mascot ?, corse_label: 3
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': "Who is the nebbish that is Marvel 's official mascot ?", 'examples_str': "Question: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: The operating system that runs on IBM-compatible machines is called what ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the word `` attic '' ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What American actress was the first to be called a `` vamp '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What planet gave bith to Superman ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many months does it take the moon to revolve around the Earth ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does NASDAQ stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: The operating system that runs on IBM-compatible machines is called what ?
class_name: Entity 
class_index: 1
--------

Question: What is the origin of the word `` attic '' ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What American actress was the first to be called a `` vamp '' ?
class_name: Human being 
class_index: 3
--------

Question: What planet gave bith to Superman ?
class_name: Location 
class_index: 4
--------

Question: How many months does it take the moon to revolve around the Earth ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Who is the nebbish that is Marvel 's official mascot ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: The operating system that runs on IBM-compatible machines is called what ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the word `` attic '' ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What American actress was the first to be called a `` vamp '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What planet gave bith to Superman ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many months does it take the moon to revolve around the Earth ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Who is the nebbish that is Marvel 's official mascot ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 01:04:24 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12515'), (b'x-ratelimit-remaining-tokens', b'29605'), (b'x-ratelimit-reset-requests', b'3h8m29.706999999s'), (b'x-ratelimit-reset-tokens', b'789ms'), (b'x-request-id', b'req_01hz0y0xzgekrbz301e80h5pe6'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b291f96d617ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: The operating system that runs on IBM-compatible machines is called what ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the word `` attic '' ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What American actress was the first to be called a `` vamp '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What planet gave bith to Superman ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many months does it take the moon to revolve around the Earth ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Who is the nebbish that is Marvel 's official mascot ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 01:04:26 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12514'), (b'x-ratelimit-remaining-tokens', b'29590'), (b'x-ratelimit-reset-requests', b'3h8m33.65s'), (b'x-ratelimit-reset-tokens', b'820ms'), (b'x-request-id', b'req_01hz0y0zzse29sp9hq3qrqcbex'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b292064fc17ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is asking about a character in the Marvel universe, which is a human being.
class_name: HUM
class_index: 3
data: {'text': 'What Japanese electronics company was named for a coastal city northeast of Tokyo ?', 'coarse_label': 3, 'fine_label': 28}
task_input: What Japanese electronics company was named for a coastal city northeast of Tokyo ?, corse_label: 3
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What Japanese electronics company was named for a coastal city northeast of Tokyo ?', 'examples_str': "Question: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: The operating system that runs on IBM-compatible machines is called what ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the word `` attic '' ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What American actress was the first to be called a `` vamp '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What planet gave bith to Superman ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many months does it take the moon to revolve around the Earth ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does NASDAQ stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: The operating system that runs on IBM-compatible machines is called what ?
class_name: Entity 
class_index: 1
--------

Question: What is the origin of the word `` attic '' ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What American actress was the first to be called a `` vamp '' ?
class_name: Human being 
class_index: 3
--------

Question: What planet gave bith to Superman ?
class_name: Location 
class_index: 4
--------

Question: How many months does it take the moon to revolve around the Earth ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What Japanese electronics company was named for a coastal city northeast of Tokyo ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: The operating system that runs on IBM-compatible machines is called what ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the word `` attic '' ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What American actress was the first to be called a `` vamp '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What planet gave bith to Superman ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many months does it take the moon to revolve around the Earth ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What Japanese electronics company was named for a coastal city northeast of Tokyo ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 01:04:26 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12514'), (b'x-ratelimit-remaining-tokens', b'29592'), (b'x-ratelimit-reset-requests', b'3h8m35.758999999s'), (b'x-ratelimit-reset-tokens', b'815ms'), (b'x-request-id', b'req_01hz0y107afr0a4t1pcpgm0krt'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b29207b9337ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: The operating system that runs on IBM-compatible machines is called what ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the word `` attic '' ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What American actress was the first to be called a `` vamp '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What planet gave bith to Superman ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many months does it take the moon to revolve around the Earth ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What Japanese electronics company was named for a coastal city northeast of Tokyo ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 01:04:29 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12513'), (b'x-ratelimit-remaining-tokens', b'29582'), (b'x-ratelimit-reset-requests', b'3h8m39.698s'), (b'x-ratelimit-reset-tokens', b'836ms'), (b'x-request-id', b'req_01hz0y127qfzmsk9q3e9xjyx3h'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b29214ac877ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the origin of a Japanese electronics company, which is a specific entity.
class_name: Entity
class_index: 1
data: {'text': 'Who was Maria Theresa ?', 'coarse_label': 3, 'fine_label': 31}
task_input: Who was Maria Theresa ?, corse_label: 3
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'Who was Maria Theresa ?', 'examples_str': "Question: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: The operating system that runs on IBM-compatible machines is called what ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the word `` attic '' ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What American actress was the first to be called a `` vamp '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What planet gave bith to Superman ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many months does it take the moon to revolve around the Earth ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does NASDAQ stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: The operating system that runs on IBM-compatible machines is called what ?
class_name: Entity 
class_index: 1
--------

Question: What is the origin of the word `` attic '' ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What American actress was the first to be called a `` vamp '' ?
class_name: Human being 
class_index: 3
--------

Question: What planet gave bith to Superman ?
class_name: Location 
class_index: 4
--------

Question: How many months does it take the moon to revolve around the Earth ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Who was Maria Theresa ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: The operating system that runs on IBM-compatible machines is called what ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the word `` attic '' ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What American actress was the first to be called a `` vamp '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What planet gave bith to Superman ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many months does it take the moon to revolve around the Earth ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Who was Maria Theresa ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 01:04:29 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12513'), (b'x-ratelimit-remaining-tokens', b'29590'), (b'x-ratelimit-reset-requests', b'3h8m41.743s'), (b'x-ratelimit-reset-tokens', b'820ms'), (b'x-request-id', b'req_01hz0y12freqpvzcn3576wdca1'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b292164e0b7ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: The operating system that runs on IBM-compatible machines is called what ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the word `` attic '' ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What American actress was the first to be called a `` vamp '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What planet gave bith to Superman ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many months does it take the moon to revolve around the Earth ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Who was Maria Theresa ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 01:04:31 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12512'), (b'x-ratelimit-remaining-tokens', b'29597'), (b'x-ratelimit-reset-requests', b'3h8m45.673999999s'), (b'x-ratelimit-reset-tokens', b'806ms'), (b'x-request-id', b'req_01hz0y14gee2a945mavme5435s'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b2922318a97ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is asking about a historical figure, Maria Theresa, which is a human being.
class_name: HUM
class_index: 3
data: {'text': "What was the name of the director of the movie `` Jaws '' ?", 'coarse_label': 3, 'fine_label': 29}
task_input: What was the name of the director of the movie `` Jaws '' ?, corse_label: 3
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': "What was the name of the director of the movie `` Jaws '' ?", 'examples_str': "Question: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: The operating system that runs on IBM-compatible machines is called what ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the word `` attic '' ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What American actress was the first to be called a `` vamp '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What planet gave bith to Superman ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many months does it take the moon to revolve around the Earth ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does NASDAQ stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: The operating system that runs on IBM-compatible machines is called what ?
class_name: Entity 
class_index: 1
--------

Question: What is the origin of the word `` attic '' ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What American actress was the first to be called a `` vamp '' ?
class_name: Human being 
class_index: 3
--------

Question: What planet gave bith to Superman ?
class_name: Location 
class_index: 4
--------

Question: How many months does it take the moon to revolve around the Earth ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What was the name of the director of the movie `` Jaws '' ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: The operating system that runs on IBM-compatible machines is called what ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the word `` attic '' ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What American actress was the first to be called a `` vamp '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What planet gave bith to Superman ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many months does it take the moon to revolve around the Earth ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What was the name of the director of the movie `` Jaws '' ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 01:04:31 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12512'), (b'x-ratelimit-remaining-tokens', b'29602'), (b'x-ratelimit-reset-requests', b'3h8m47.755s'), (b'x-ratelimit-reset-tokens', b'795ms'), (b'x-request-id', b'req_01hz0y14r4fb9r74q1g5nbf316'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b29224b9ee7ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: The operating system that runs on IBM-compatible machines is called what ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the word `` attic '' ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What American actress was the first to be called a `` vamp '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What planet gave bith to Superman ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many months does it take the moon to revolve around the Earth ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What was the name of the director of the movie `` Jaws '' ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 01:04:33 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12511'), (b'x-ratelimit-remaining-tokens', b'29588'), (b'x-ratelimit-reset-requests', b'3h8m51.697s'), (b'x-ratelimit-reset-tokens', b'824ms'), (b'x-request-id', b'req_01hz0y16reewqaczc6rje5dhx9'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b292319c417ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking for the director of a movie, which is a human being.
class_name: HUM
class_index: 3
data: {'text': 'Which area produces the least acidic coffee ?', 'coarse_label': 4, 'fine_label': 35}
task_input: Which area produces the least acidic coffee ?, corse_label: 4
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'Which area produces the least acidic coffee ?', 'examples_str': "Question: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: The operating system that runs on IBM-compatible machines is called what ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the word `` attic '' ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What American actress was the first to be called a `` vamp '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What planet gave bith to Superman ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many months does it take the moon to revolve around the Earth ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does NASDAQ stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: The operating system that runs on IBM-compatible machines is called what ?
class_name: Entity 
class_index: 1
--------

Question: What is the origin of the word `` attic '' ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What American actress was the first to be called a `` vamp '' ?
class_name: Human being 
class_index: 3
--------

Question: What planet gave bith to Superman ?
class_name: Location 
class_index: 4
--------

Question: How many months does it take the moon to revolve around the Earth ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Which area produces the least acidic coffee ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: The operating system that runs on IBM-compatible machines is called what ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the word `` attic '' ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What American actress was the first to be called a `` vamp '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What planet gave bith to Superman ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many months does it take the moon to revolve around the Earth ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Which area produces the least acidic coffee ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 01:04:33 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'325'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12511'), (b'x-ratelimit-remaining-tokens', b'29628'), (b'x-ratelimit-reset-requests', b'3h8m53.669999999s'), (b'x-ratelimit-reset-tokens', b'743ms'), (b'x-request-id', b'req_01hz0y172sfx9a6bee6ycy52m4'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b29233ae517ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: The operating system that runs on IBM-compatible machines is called what ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the word `` attic '' ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What American actress was the first to be called a `` vamp '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What planet gave bith to Superman ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many months does it take the moon to revolve around the Earth ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Which area produces the least acidic coffee ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 01:04:36 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12510'), (b'x-ratelimit-remaining-tokens', b'29592'), (b'x-ratelimit-reset-requests', b'3h8m57.608s'), (b'x-ratelimit-reset-tokens', b'816ms'), (b'x-request-id', b'req_01hz0y1937eper3v7rgtw8vh56'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b2924089057ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is about a specific topic, and it's asking about the least acidic coffee, which is a descriptive concept.
class_name: DESC
class_index: 2
data: {'text': 'What ocean is the largest in the world ?', 'coarse_label': 4, 'fine_label': 35}
task_input: What ocean is the largest in the world ?, corse_label: 4
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What ocean is the largest in the world ?', 'examples_str': "Question: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: The operating system that runs on IBM-compatible machines is called what ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the word `` attic '' ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What American actress was the first to be called a `` vamp '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What planet gave bith to Superman ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many months does it take the moon to revolve around the Earth ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does NASDAQ stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: The operating system that runs on IBM-compatible machines is called what ?
class_name: Entity 
class_index: 1
--------

Question: What is the origin of the word `` attic '' ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What American actress was the first to be called a `` vamp '' ?
class_name: Human being 
class_index: 3
--------

Question: What planet gave bith to Superman ?
class_name: Location 
class_index: 4
--------

Question: How many months does it take the moon to revolve around the Earth ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What ocean is the largest in the world ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: The operating system that runs on IBM-compatible machines is called what ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the word `` attic '' ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What American actress was the first to be called a `` vamp '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What planet gave bith to Superman ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many months does it take the moon to revolve around the Earth ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What ocean is the largest in the world ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 01:04:36 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12510'), (b'x-ratelimit-remaining-tokens', b'29598'), (b'x-ratelimit-reset-requests', b'3h8m59.73s'), (b'x-ratelimit-reset-tokens', b'803ms'), (b'x-request-id', b'req_01hz0y19bpfvvv94akrp5zj3ws'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b292423a3d7ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: The operating system that runs on IBM-compatible machines is called what ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the word `` attic '' ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What American actress was the first to be called a `` vamp '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What planet gave bith to Superman ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many months does it take the moon to revolve around the Earth ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What ocean is the largest in the world ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 01:04:38 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12509'), (b'x-ratelimit-remaining-tokens', b'29593'), (b'x-ratelimit-reset-requests', b'3h9m3.667s'), (b'x-ratelimit-reset-tokens', b'814ms'), (b'x-request-id', b'req_01hz0y1bc4es8ram2gfaexvrqb'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b2924f2c947ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the largest ocean in the world, which is a geographical location.
class_name: LOC
class_index: 4
```
data: {'text': "What South American capital is the world 's highest ?", 'coarse_label': 4, 'fine_label': 32}
task_input: What South American capital is the world 's highest ?, corse_label: 4
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': "What South American capital is the world 's highest ?", 'examples_str': "Question: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: The operating system that runs on IBM-compatible machines is called what ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the word `` attic '' ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What American actress was the first to be called a `` vamp '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What planet gave bith to Superman ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many months does it take the moon to revolve around the Earth ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does NASDAQ stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: The operating system that runs on IBM-compatible machines is called what ?
class_name: Entity 
class_index: 1
--------

Question: What is the origin of the word `` attic '' ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What American actress was the first to be called a `` vamp '' ?
class_name: Human being 
class_index: 3
--------

Question: What planet gave bith to Superman ?
class_name: Location 
class_index: 4
--------

Question: How many months does it take the moon to revolve around the Earth ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What South American capital is the world 's highest ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: The operating system that runs on IBM-compatible machines is called what ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the word `` attic '' ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What American actress was the first to be called a `` vamp '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What planet gave bith to Superman ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many months does it take the moon to revolve around the Earth ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What South American capital is the world 's highest ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 01:04:38 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12509'), (b'x-ratelimit-remaining-tokens', b'29594'), (b'x-ratelimit-reset-requests', b'3h9m5.775999999s'), (b'x-ratelimit-reset-tokens', b'812ms'), (b'x-request-id', b'req_01hz0y1bk6fbnra15e68q6vad2'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b292508da97ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: The operating system that runs on IBM-compatible machines is called what ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the word `` attic '' ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What American actress was the first to be called a `` vamp '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What planet gave bith to Superman ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many months does it take the moon to revolve around the Earth ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What South American capital is the world 's highest ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 01:04:40 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12508'), (b'x-ratelimit-remaining-tokens', b'29590'), (b'x-ratelimit-reset-requests', b'3h9m9.719s'), (b'x-ratelimit-reset-tokens', b'820ms'), (b'x-request-id', b'req_01hz0y1dkffe984n53sm3z7q88'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b2925d59247ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the capital of a country, which is typically a location.
class_name: LOC
class_index: 4
data: {'text': 'What North American city boasts the biggest Polish population ?', 'coarse_label': 4, 'fine_label': 32}
task_input: What North American city boasts the biggest Polish population ?, corse_label: 4
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What North American city boasts the biggest Polish population ?', 'examples_str': "Question: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: The operating system that runs on IBM-compatible machines is called what ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the word `` attic '' ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What American actress was the first to be called a `` vamp '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What planet gave bith to Superman ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many months does it take the moon to revolve around the Earth ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does NASDAQ stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: The operating system that runs on IBM-compatible machines is called what ?
class_name: Entity 
class_index: 1
--------

Question: What is the origin of the word `` attic '' ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What American actress was the first to be called a `` vamp '' ?
class_name: Human being 
class_index: 3
--------

Question: What planet gave bith to Superman ?
class_name: Location 
class_index: 4
--------

Question: How many months does it take the moon to revolve around the Earth ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What North American city boasts the biggest Polish population ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: The operating system that runs on IBM-compatible machines is called what ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the word `` attic '' ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What American actress was the first to be called a `` vamp '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What planet gave bith to Superman ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many months does it take the moon to revolve around the Earth ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What North American city boasts the biggest Polish population ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 01:04:40 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12508'), (b'x-ratelimit-remaining-tokens', b'29595'), (b'x-ratelimit-reset-requests', b'3h9m11.746s'), (b'x-ratelimit-reset-tokens', b'809ms'), (b'x-request-id', b'req_01hz0y1dvefvntwg6fw87r33rr'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b2925efaac7ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: The operating system that runs on IBM-compatible machines is called what ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the word `` attic '' ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What American actress was the first to be called a `` vamp '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What planet gave bith to Superman ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many months does it take the moon to revolve around the Earth ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What North American city boasts the biggest Polish population ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 01:04:43 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12507'), (b'x-ratelimit-remaining-tokens', b'29587'), (b'x-ratelimit-reset-requests', b'3h9m15.689999999s'), (b'x-ratelimit-reset-tokens', b'826ms'), (b'x-request-id', b'req_01hz0y1fvpeaabyggs2avy89zn'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b2926bdd717ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is asking about a specific city, which is typically identified by its location.
class_name: LOC
class_index: 4
data: {'text': "Independent silversmith 's account for what percentage of silver production ?", 'coarse_label': 5, 'fine_label': 45}
task_input: Independent silversmith 's account for what percentage of silver production ?, corse_label: 5
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': "Independent silversmith 's account for what percentage of silver production ?", 'examples_str': "Question: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: The operating system that runs on IBM-compatible machines is called what ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the word `` attic '' ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What American actress was the first to be called a `` vamp '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What planet gave bith to Superman ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many months does it take the moon to revolve around the Earth ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does NASDAQ stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: The operating system that runs on IBM-compatible machines is called what ?
class_name: Entity 
class_index: 1
--------

Question: What is the origin of the word `` attic '' ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What American actress was the first to be called a `` vamp '' ?
class_name: Human being 
class_index: 3
--------

Question: What planet gave bith to Superman ?
class_name: Location 
class_index: 4
--------

Question: How many months does it take the moon to revolve around the Earth ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Independent silversmith 's account for what percentage of silver production ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: The operating system that runs on IBM-compatible machines is called what ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the word `` attic '' ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What American actress was the first to be called a `` vamp '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What planet gave bith to Superman ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many months does it take the moon to revolve around the Earth ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Independent silversmith 's account for what percentage of silver production ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 01:04:43 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12507'), (b'x-ratelimit-remaining-tokens', b'29618'), (b'x-ratelimit-reset-requests', b'3h9m17.732s'), (b'x-ratelimit-reset-tokens', b'764ms'), (b'x-request-id', b'req_01hz0y1g43fba8x0jm78jq7rq4'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b2926d6ec47ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: The operating system that runs on IBM-compatible machines is called what ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the word `` attic '' ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What American actress was the first to be called a `` vamp '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What planet gave bith to Superman ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many months does it take the moon to revolve around the Earth ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Independent silversmith 's account for what percentage of silver production ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 01:04:45 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12506'), (b'x-ratelimit-remaining-tokens', b'29584'), (b'x-ratelimit-reset-requests', b'3h9m21.669999999s'), (b'x-ratelimit-reset-tokens', b'832ms'), (b'x-request-id', b'req_01hz0y1j4hfgv9crt7gee7sfca'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b2927a69997ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the percentage of silver production, which is a numeric value.
class_name: NUM
class_index: 5
data: {'text': 'How old is the universe ?', 'coarse_label': 5, 'fine_label': 44}
task_input: How old is the universe ?, corse_label: 5
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'How old is the universe ?', 'examples_str': "Question: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: The operating system that runs on IBM-compatible machines is called what ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the word `` attic '' ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What American actress was the first to be called a `` vamp '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What planet gave bith to Superman ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many months does it take the moon to revolve around the Earth ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does NASDAQ stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: The operating system that runs on IBM-compatible machines is called what ?
class_name: Entity 
class_index: 1
--------

Question: What is the origin of the word `` attic '' ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What American actress was the first to be called a `` vamp '' ?
class_name: Human being 
class_index: 3
--------

Question: What planet gave bith to Superman ?
class_name: Location 
class_index: 4
--------

Question: How many months does it take the moon to revolve around the Earth ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: How old is the universe ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: The operating system that runs on IBM-compatible machines is called what ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the word `` attic '' ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What American actress was the first to be called a `` vamp '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What planet gave bith to Superman ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many months does it take the moon to revolve around the Earth ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: How old is the universe ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 01:04:45 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12506'), (b'x-ratelimit-remaining-tokens', b'29588'), (b'x-ratelimit-reset-requests', b'3h9m23.784s'), (b'x-ratelimit-reset-tokens', b'823ms'), (b'x-request-id', b'req_01hz0y1jbaepf84zd9kbdmrs38'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b2927bcac57ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: The operating system that runs on IBM-compatible machines is called what ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the word `` attic '' ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What American actress was the first to be called a `` vamp '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What planet gave bith to Superman ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many months does it take the moon to revolve around the Earth ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: How old is the universe ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 01:04:47 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12505'), (b'x-ratelimit-remaining-tokens', b'29597'), (b'x-ratelimit-reset-requests', b'3h9m27.726999999s'), (b'x-ratelimit-reset-tokens', b'806ms'), (b'x-request-id', b'req_01hz0y1mbjfhqt1nsg8et41kt5'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b292889eda7ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the age of the universe, which is a numeric value.
class_name: NUM
class_index: 5
data: {'text': 'When was the Hoover Dam constructed ?', 'coarse_label': 5, 'fine_label': 39}
task_input: When was the Hoover Dam constructed ?, corse_label: 5
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'When was the Hoover Dam constructed ?', 'examples_str': "Question: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: The operating system that runs on IBM-compatible machines is called what ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the word `` attic '' ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What American actress was the first to be called a `` vamp '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What planet gave bith to Superman ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many months does it take the moon to revolve around the Earth ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does NASDAQ stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: The operating system that runs on IBM-compatible machines is called what ?
class_name: Entity 
class_index: 1
--------

Question: What is the origin of the word `` attic '' ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What American actress was the first to be called a `` vamp '' ?
class_name: Human being 
class_index: 3
--------

Question: What planet gave bith to Superman ?
class_name: Location 
class_index: 4
--------

Question: How many months does it take the moon to revolve around the Earth ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: When was the Hoover Dam constructed ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: The operating system that runs on IBM-compatible machines is called what ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the word `` attic '' ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What American actress was the first to be called a `` vamp '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What planet gave bith to Superman ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many months does it take the moon to revolve around the Earth ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: When was the Hoover Dam constructed ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 01:04:47 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12505'), (b'x-ratelimit-remaining-tokens', b'29600'), (b'x-ratelimit-reset-requests', b'3h9m29.770999999s'), (b'x-ratelimit-reset-tokens', b'799ms'), (b'x-request-id', b'req_01hz0y1mjsfk0rk2r0r2kjkr4n'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b2928a081c7ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: The operating system that runs on IBM-compatible machines is called what ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the word `` attic '' ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What American actress was the first to be called a `` vamp '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What planet gave bith to Superman ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many months does it take the moon to revolve around the Earth ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: When was the Hoover Dam constructed ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 01:04:49 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12504'), (b'x-ratelimit-remaining-tokens', b'29594'), (b'x-ratelimit-reset-requests', b'3h9m33.711s'), (b'x-ratelimit-reset-tokens', b'812ms'), (b'x-request-id', b'req_01hz0y1pk5e2b9nzkga6gkj75x'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b29296ebd07ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about a specific event in history, which is typically described in a historical context.
class_name: Description and abstract concept
class_index: 2
```
data: {'text': 'At what age did Rossini stop writing opera ?', 'coarse_label': 5, 'fine_label': 44}
task_input: At what age did Rossini stop writing opera ?, corse_label: 5
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'At what age did Rossini stop writing opera ?', 'examples_str': "Question: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: The operating system that runs on IBM-compatible machines is called what ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the word `` attic '' ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What American actress was the first to be called a `` vamp '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What planet gave bith to Superman ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many months does it take the moon to revolve around the Earth ?\nclass_name: Numeric value \nclass_index: 5\n--------\n"}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does NASDAQ stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: The operating system that runs on IBM-compatible machines is called what ?
class_name: Entity 
class_index: 1
--------

Question: What is the origin of the word `` attic '' ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What American actress was the first to be called a `` vamp '' ?
class_name: Human being 
class_index: 3
--------

Question: What planet gave bith to Superman ?
class_name: Location 
class_index: 4
--------

Question: How many months does it take the moon to revolve around the Earth ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: At what age did Rossini stop writing opera ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: The operating system that runs on IBM-compatible machines is called what ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the word `` attic '' ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What American actress was the first to be called a `` vamp '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What planet gave bith to Superman ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many months does it take the moon to revolve around the Earth ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: At what age did Rossini stop writing opera ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 01:04:50 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12504'), (b'x-ratelimit-remaining-tokens', b'29593'), (b'x-ratelimit-reset-requests', b'3h9m35.765999999s'), (b'x-ratelimit-reset-tokens', b'814ms'), (b'x-request-id', b'req_01hz0y1ptgeksta1hfx535p9h9'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b292986d0e7ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does NASDAQ stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: The operating system that runs on IBM-compatible machines is called what ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What is the origin of the word `` attic '' ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What American actress was the first to be called a `` vamp '' ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: What planet gave bith to Superman ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many months does it take the moon to revolve around the Earth ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: At what age did Rossini stop writing opera ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 01:04:52 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12503'), (b'x-ratelimit-remaining-tokens', b'29592'), (b'x-ratelimit-reset-requests', b'3h9m39.705s'), (b'x-ratelimit-reset-tokens', b'816ms'), (b'x-request-id', b'req_01hz0y1rtwfh9vtfhjf9axafbt'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b292a548c07ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the age of a specific person, which is a characteristic often associated with human beings.
class_name: HUM
class_index: 3
responses: [0, 0, 0, 0, 3, 5, 0, 3, 2, 2, 4, 0, 3, 1, 3, 3, 2, 4, 4, 4, 5, 5, 2, 3], targets: [0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5]
num_invalid: 0
Preds tensor: tensor([[1., 0., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0.],
        [0., 0., 0., 1., 0., 0.],
        [0., 0., 0., 0., 0., 1.],
        [1., 0., 0., 0., 0., 0.],
        [0., 0., 0., 1., 0., 0.],
        [0., 0., 1., 0., 0., 0.],
        [0., 0., 1., 0., 0., 0.],
        [0., 0., 0., 0., 1., 0.],
        [1., 0., 0., 0., 0., 0.],
        [0., 0., 0., 1., 0., 0.],
        [0., 1., 0., 0., 0., 0.],
        [0., 0., 0., 1., 0., 0.],
        [0., 0., 0., 1., 0., 0.],
        [0., 0., 1., 0., 0., 0.],
        [0., 0., 0., 0., 1., 0.],
        [0., 0., 0., 0., 1., 0.],
        [0., 0., 0., 0., 1., 0.],
        [0., 0., 0., 0., 0., 1.],
        [0., 0., 0., 0., 0., 1.],
        [0., 0., 1., 0., 0., 0.],
        [0., 0., 0., 1., 0., 0.]])
Targets tensor: tensor([0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5])
Eval Accuracy 5 proposed: 0.583, F1: 0.537, score: 1.12
reset_parameter
step: 6
train_batch: {'text': ['Which type of submarine was bought recently by South Korea ?', 'Why is Chicago named Chicago ?', "What 's the difference between carelessness and carefreeness ?", 'How do you build a solar car for a high school experiment ?', 'What film featured Shirley MacLaine as a prostitute and Jack Lemmon as a pimp ?', "Who wrote `` The Scarlet Letter '' ?", 'In what year did Hitler gain power of Germany ?', 'What is a fear of sinning ?', "Why do roosters sing at five o 'clock in the morning ?", 'What President had never held an elected office until he was elected to the White House ?'], 'coarse_label': tensor([1, 2, 2, 2, 1, 3, 5, 1, 2, 3]), 'fine_label': tensor([22, 27, 25, 26,  5, 29, 39,  7, 27, 29])}
before random_replace: [Sample(index=1032, data={'text': 'What does NASDAQ stand for ?', 'coarse_label': 0, 'fine_label': 1}), Sample(index=742, data={'text': 'What war did the Potsdam Conference follow ?', 'coarse_label': 1, 'fine_label': 8}), Sample(index=94, data={'text': 'What happens when a body part falls asleep ?', 'coarse_label': 2, 'fine_label': 25}), Sample(index=794, data={'text': "What American actress was the first to be called a `` vamp '' ?", 'coarse_label': 3, 'fine_label': 29}), Sample(index=446, data={'text': 'Where is Erykah Badu originally from ?', 'coarse_label': 4, 'fine_label': 35}), Sample(index=2697, data={'text': 'What is the chemical reactivity of argon ?', 'coarse_label': 5, 'fine_label': 43})]
after random_replace: [Sample(index=325, data={'text': 'What does RCA stand for ?', 'coarse_label': 0, 'fine_label': 1}), Sample(index=777, data={'text': 'What kind of mammal is a colt ?', 'coarse_label': 1, 'fine_label': 2}), Sample(index=94, data={'text': 'What happens when a body part falls asleep ?', 'coarse_label': 2, 'fine_label': 25}), Sample(index=1010, data={'text': 'What cheery fellow got the ZIP code 9971 from the U.S. Postal Service in 1963 ?', 'coarse_label': 3, 'fine_label': 29}), Sample(index=446, data={'text': 'Where is Erykah Badu originally from ?', 'coarse_label': 4, 'fine_label': 35}), Sample(index=1106, data={'text': 'When was the De Beers company founded ?', 'coarse_label': 5, 'fine_label': 39})]
data: {'text': 'What does U.S.S.R. stand for ?', 'coarse_label': 0, 'fine_label': 1}
task_input: What does U.S.S.R. stand for ?, corse_label: 0
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What does U.S.S.R. stand for ?', 'examples_str': 'Question: What does RCA stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What kind of mammal is a colt ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What happens when a body part falls asleep ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What cheery fellow got the ZIP code 9971 from the U.S. Postal Service in 1963 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the De Beers company founded ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does RCA stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What kind of mammal is a colt ?
class_name: Entity 
class_index: 1
--------

Question: What happens when a body part falls asleep ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What cheery fellow got the ZIP code 9971 from the U.S. Postal Service in 1963 ?
class_name: Human being 
class_index: 3
--------

Question: Where is Erykah Badu originally from ?
class_name: Location 
class_index: 4
--------

Question: When was the De Beers company founded ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What does U.S.S.R. stand for ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does RCA stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What kind of mammal is a colt ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What happens when a body part falls asleep ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What cheery fellow got the ZIP code 9971 from the U.S. Postal Service in 1963 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the De Beers company founded ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does U.S.S.R. stand for ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 01:04:52 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12503'), (b'x-ratelimit-remaining-tokens', b'29600'), (b'x-ratelimit-reset-requests', b'3h9m41.755s'), (b'x-ratelimit-reset-tokens', b'800ms'), (b'x-request-id', b'req_01hz0y1s2keqr9wg02hqnjedwt'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b292a6da357ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does RCA stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What kind of mammal is a colt ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What happens when a body part falls asleep ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What cheery fellow got the ZIP code 9971 from the U.S. Postal Service in 1963 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the De Beers company founded ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does U.S.S.R. stand for ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 01:04:54 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12502'), (b'x-ratelimit-remaining-tokens', b'29609'), (b'x-ratelimit-reset-requests', b'3h9m45.7s'), (b'x-ratelimit-reset-tokens', b'782ms'), (b'x-request-id', b'req_01hz0y1v2tes9vxna08dzh87z2'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b292b3adab7ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking for the meaning of an abbreviation, which is a common use case for abbreviations.
class_name: ABBR
class_index: 0
data: {'text': 'What is the abbreviated form of the National Bureau of Investigation ?', 'coarse_label': 0, 'fine_label': 0}
task_input: What is the abbreviated form of the National Bureau of Investigation ?, corse_label: 0
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What is the abbreviated form of the National Bureau of Investigation ?', 'examples_str': 'Question: What does RCA stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What kind of mammal is a colt ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What happens when a body part falls asleep ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What cheery fellow got the ZIP code 9971 from the U.S. Postal Service in 1963 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the De Beers company founded ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does RCA stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What kind of mammal is a colt ?
class_name: Entity 
class_index: 1
--------

Question: What happens when a body part falls asleep ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What cheery fellow got the ZIP code 9971 from the U.S. Postal Service in 1963 ?
class_name: Human being 
class_index: 3
--------

Question: Where is Erykah Badu originally from ?
class_name: Location 
class_index: 4
--------

Question: When was the De Beers company founded ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What is the abbreviated form of the National Bureau of Investigation ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does RCA stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What kind of mammal is a colt ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What happens when a body part falls asleep ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What cheery fellow got the ZIP code 9971 from the U.S. Postal Service in 1963 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the De Beers company founded ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is the abbreviated form of the National Bureau of Investigation ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 01:04:54 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12502'), (b'x-ratelimit-remaining-tokens', b'29639'), (b'x-ratelimit-reset-requests', b'3h9m47.594s'), (b'x-ratelimit-reset-tokens', b'721ms'), (b'x-request-id', b'req_01hz0y1vfheqragrkmsmry3mhm'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b292b63feb7ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does RCA stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What kind of mammal is a colt ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What happens when a body part falls asleep ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What cheery fellow got the ZIP code 9971 from the U.S. Postal Service in 1963 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the De Beers company founded ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is the abbreviated form of the National Bureau of Investigation ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 01:04:57 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12501'), (b'x-ratelimit-remaining-tokens', b'29599'), (b'x-ratelimit-reset-requests', b'3h9m51.533s'), (b'x-ratelimit-reset-tokens', b'802ms'), (b'x-request-id', b'req_01hz0y1xfyewr9wxr3hgsatprq'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b292c31aab7ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking for the abbreviated form of a specific organization, which is typically represented by an abbreviation.
class_name: ABBR
class_index: 0
data: {'text': "What do the letters ZIP stand for in the phrase `` ZIP code '' ?", 'coarse_label': 0, 'fine_label': 1}
task_input: What do the letters ZIP stand for in the phrase `` ZIP code '' ?, corse_label: 0
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': "What do the letters ZIP stand for in the phrase `` ZIP code '' ?", 'examples_str': 'Question: What does RCA stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What kind of mammal is a colt ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What happens when a body part falls asleep ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What cheery fellow got the ZIP code 9971 from the U.S. Postal Service in 1963 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the De Beers company founded ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does RCA stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What kind of mammal is a colt ?
class_name: Entity 
class_index: 1
--------

Question: What happens when a body part falls asleep ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What cheery fellow got the ZIP code 9971 from the U.S. Postal Service in 1963 ?
class_name: Human being 
class_index: 3
--------

Question: Where is Erykah Badu originally from ?
class_name: Location 
class_index: 4
--------

Question: When was the De Beers company founded ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What do the letters ZIP stand for in the phrase `` ZIP code '' ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does RCA stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What kind of mammal is a colt ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What happens when a body part falls asleep ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What cheery fellow got the ZIP code 9971 from the U.S. Postal Service in 1963 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the De Beers company founded ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What do the letters ZIP stand for in the phrase `` ZIP code '' ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 01:04:57 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12501'), (b'x-ratelimit-remaining-tokens', b'29590'), (b'x-ratelimit-reset-requests', b'3h9m53.765999999s'), (b'x-ratelimit-reset-tokens', b'819ms'), (b'x-request-id', b'req_01hz0y1xq8fvpvm73cvm25epm0'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b292c48c157ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does RCA stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What kind of mammal is a colt ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What happens when a body part falls asleep ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What cheery fellow got the ZIP code 9971 from the U.S. Postal Service in 1963 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the De Beers company founded ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What do the letters ZIP stand for in the phrase `` ZIP code '' ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 01:04:59 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12500'), (b'x-ratelimit-remaining-tokens', b'29601'), (b'x-ratelimit-reset-requests', b'3h9m57.701s'), (b'x-ratelimit-reset-tokens', b'798ms'), (b'x-request-id', b'req_01hz0y1zqsfbbakhgrz86vnarx'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b292d17ec47ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the meaning of the letters ZIP in the phrase "ZIP code", which suggests that the letters are being used as an abbreviation.
class_name: ABBR
class_index: 0
data: {'text': 'What does VCR stand for ?', 'coarse_label': 0, 'fine_label': 1}
task_input: What does VCR stand for ?, corse_label: 0
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What does VCR stand for ?', 'examples_str': 'Question: What does RCA stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What kind of mammal is a colt ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What happens when a body part falls asleep ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What cheery fellow got the ZIP code 9971 from the U.S. Postal Service in 1963 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the De Beers company founded ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does RCA stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What kind of mammal is a colt ?
class_name: Entity 
class_index: 1
--------

Question: What happens when a body part falls asleep ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What cheery fellow got the ZIP code 9971 from the U.S. Postal Service in 1963 ?
class_name: Human being 
class_index: 3
--------

Question: Where is Erykah Badu originally from ?
class_name: Location 
class_index: 4
--------

Question: When was the De Beers company founded ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What does VCR stand for ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does RCA stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What kind of mammal is a colt ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What happens when a body part falls asleep ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What cheery fellow got the ZIP code 9971 from the U.S. Postal Service in 1963 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the De Beers company founded ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does VCR stand for ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 01:04:59 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12500'), (b'x-ratelimit-remaining-tokens', b'29628'), (b'x-ratelimit-reset-requests', b'3h9m59.648s'), (b'x-ratelimit-reset-tokens', b'744ms'), (b'x-request-id', b'req_01hz0y202tez8b5x6s7whr5xwz'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b292d3a8d37ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does RCA stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What kind of mammal is a colt ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What happens when a body part falls asleep ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What cheery fellow got the ZIP code 9971 from the U.S. Postal Service in 1963 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the De Beers company founded ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does VCR stand for ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 01:05:01 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12499'), (b'x-ratelimit-remaining-tokens', b'29611'), (b'x-ratelimit-reset-requests', b'3h10m3.583999999s'), (b'x-ratelimit-reset-tokens', b'778ms'), (b'x-request-id', b'req_01hz0y223afea8a0e76ayebv49'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b292e08c737ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking for the meaning of the abbreviation "VCR", which is a common abbreviation for "Video Cassette Recorder".
class_name: ABBR
class_index: 0
data: {'text': 'What sport can a free-legged pacer compete in ?', 'coarse_label': 1, 'fine_label': 17}
task_input: What sport can a free-legged pacer compete in ?, corse_label: 1
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What sport can a free-legged pacer compete in ?', 'examples_str': 'Question: What does RCA stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What kind of mammal is a colt ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What happens when a body part falls asleep ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What cheery fellow got the ZIP code 9971 from the U.S. Postal Service in 1963 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the De Beers company founded ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does RCA stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What kind of mammal is a colt ?
class_name: Entity 
class_index: 1
--------

Question: What happens when a body part falls asleep ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What cheery fellow got the ZIP code 9971 from the U.S. Postal Service in 1963 ?
class_name: Human being 
class_index: 3
--------

Question: Where is Erykah Badu originally from ?
class_name: Location 
class_index: 4
--------

Question: When was the De Beers company founded ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What sport can a free-legged pacer compete in ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does RCA stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What kind of mammal is a colt ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What happens when a body part falls asleep ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What cheery fellow got the ZIP code 9971 from the U.S. Postal Service in 1963 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the De Beers company founded ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What sport can a free-legged pacer compete in ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 01:05:01 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'324'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12499'), (b'x-ratelimit-remaining-tokens', b'29613'), (b'x-ratelimit-reset-requests', b'3h10m5.701s'), (b'x-ratelimit-reset-tokens', b'774ms'), (b'x-request-id', b'req_01hz0y22cpfxatz9x8h0ydm2pt'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b292e27e857ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does RCA stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What kind of mammal is a colt ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What happens when a body part falls asleep ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What cheery fellow got the ZIP code 9971 from the U.S. Postal Service in 1963 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the De Beers company founded ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What sport can a free-legged pacer compete in ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 01:05:04 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12498'), (b'x-ratelimit-remaining-tokens', b'29605'), (b'x-ratelimit-reset-requests', b'3h10m9.637999999s'), (b'x-ratelimit-reset-tokens', b'790ms'), (b'x-request-id', b'req_01hz0y24d5eqnt9j1qzt7w810q'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b292ef5b197ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is about a specific type of horse, which is a type of entity.
class_name: Entity
class_index: 1
data: {'text': 'What was originally defined as one 1-millionth of the distance from the equator to the Pole ?', 'coarse_label': 1, 'fine_label': 21}
task_input: What was originally defined as one 1-millionth of the distance from the equator to the Pole ?, corse_label: 1
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What was originally defined as one 1-millionth of the distance from the equator to the Pole ?', 'examples_str': 'Question: What does RCA stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What kind of mammal is a colt ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What happens when a body part falls asleep ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What cheery fellow got the ZIP code 9971 from the U.S. Postal Service in 1963 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the De Beers company founded ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does RCA stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What kind of mammal is a colt ?
class_name: Entity 
class_index: 1
--------

Question: What happens when a body part falls asleep ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What cheery fellow got the ZIP code 9971 from the U.S. Postal Service in 1963 ?
class_name: Human being 
class_index: 3
--------

Question: Where is Erykah Badu originally from ?
class_name: Location 
class_index: 4
--------

Question: When was the De Beers company founded ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What was originally defined as one 1-millionth of the distance from the equator to the Pole ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does RCA stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What kind of mammal is a colt ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What happens when a body part falls asleep ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What cheery fellow got the ZIP code 9971 from the U.S. Postal Service in 1963 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the De Beers company founded ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What was originally defined as one 1-millionth of the distance from the equator to the Pole ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 01:05:04 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12498'), (b'x-ratelimit-remaining-tokens', b'29598'), (b'x-ratelimit-reset-requests', b'3h10m11.773999999s'), (b'x-ratelimit-reset-tokens', b'804ms'), (b'x-request-id', b'req_01hz0y24m8ekt8ff6xtxepbq6s'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b292f0bc497ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does RCA stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What kind of mammal is a colt ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What happens when a body part falls asleep ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What cheery fellow got the ZIP code 9971 from the U.S. Postal Service in 1963 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the De Beers company founded ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What was originally defined as one 1-millionth of the distance from the equator to the Pole ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 01:05:06 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12497'), (b'x-ratelimit-remaining-tokens', b'29594'), (b'x-ratelimit-reset-requests', b'3h10m15.715s'), (b'x-ratelimit-reset-tokens', b'812ms'), (b'x-request-id', b'req_01hz0y26mkeskacf78z5qv0813'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b292fd9ee57ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is asking about a specific unit of measurement, which is a numeric value.
class_name: NUM
class_index: 5
data: {'text': 'What fuel do airplanes use ?', 'coarse_label': 1, 'fine_label': 18}
task_input: What fuel do airplanes use ?, corse_label: 1
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What fuel do airplanes use ?', 'examples_str': 'Question: What does RCA stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What kind of mammal is a colt ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What happens when a body part falls asleep ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What cheery fellow got the ZIP code 9971 from the U.S. Postal Service in 1963 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the De Beers company founded ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does RCA stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What kind of mammal is a colt ?
class_name: Entity 
class_index: 1
--------

Question: What happens when a body part falls asleep ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What cheery fellow got the ZIP code 9971 from the U.S. Postal Service in 1963 ?
class_name: Human being 
class_index: 3
--------

Question: Where is Erykah Badu originally from ?
class_name: Location 
class_index: 4
--------

Question: When was the De Beers company founded ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What fuel do airplanes use ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does RCA stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What kind of mammal is a colt ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What happens when a body part falls asleep ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What cheery fellow got the ZIP code 9971 from the U.S. Postal Service in 1963 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the De Beers company founded ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What fuel do airplanes use ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 01:05:06 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12497'), (b'x-ratelimit-remaining-tokens', b'29587'), (b'x-ratelimit-reset-requests', b'3h10m17.796s'), (b'x-ratelimit-reset-tokens', b'826ms'), (b'x-request-id', b'req_01hz0y26v0fxatk30rwszdj4s1'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b292feefd67ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does RCA stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What kind of mammal is a colt ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What happens when a body part falls asleep ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What cheery fellow got the ZIP code 9971 from the U.S. Postal Service in 1963 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the De Beers company founded ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What fuel do airplanes use ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 01:05:08 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12496'), (b'x-ratelimit-remaining-tokens', b'29610'), (b'x-ratelimit-reset-requests', b'3h10m21.738999999s'), (b'x-ratelimit-reset-tokens', b'780ms'), (b'x-request-id', b'req_01hz0y28v9ewfbnrqfphv2d0fg'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b2930bcadf7ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the fuel used by airplanes, which is a specific type of information.
class_name: Description and abstract concept
class_index: 2
```
data: {'text': 'On what T.V. show could Tom Terrific be found ?', 'coarse_label': 1, 'fine_label': 5}
task_input: On what T.V. show could Tom Terrific be found ?, corse_label: 1
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'On what T.V. show could Tom Terrific be found ?', 'examples_str': 'Question: What does RCA stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What kind of mammal is a colt ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What happens when a body part falls asleep ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What cheery fellow got the ZIP code 9971 from the U.S. Postal Service in 1963 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the De Beers company founded ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does RCA stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What kind of mammal is a colt ?
class_name: Entity 
class_index: 1
--------

Question: What happens when a body part falls asleep ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What cheery fellow got the ZIP code 9971 from the U.S. Postal Service in 1963 ?
class_name: Human being 
class_index: 3
--------

Question: Where is Erykah Badu originally from ?
class_name: Location 
class_index: 4
--------

Question: When was the De Beers company founded ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: On what T.V. show could Tom Terrific be found ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does RCA stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What kind of mammal is a colt ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What happens when a body part falls asleep ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What cheery fellow got the ZIP code 9971 from the U.S. Postal Service in 1963 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the De Beers company founded ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: On what T.V. show could Tom Terrific be found ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 01:05:08 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'325'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12496'), (b'x-ratelimit-remaining-tokens', b'29592'), (b'x-ratelimit-reset-requests', b'3h10m23.75s'), (b'x-ratelimit-reset-tokens', b'816ms'), (b'x-request-id', b'req_01hz0y2934fbptt8dznjtn9nef'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b2930d5c247ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does RCA stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What kind of mammal is a colt ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What happens when a body part falls asleep ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What cheery fellow got the ZIP code 9971 from the U.S. Postal Service in 1963 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the De Beers company founded ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: On what T.V. show could Tom Terrific be found ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 01:05:10 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12495'), (b'x-ratelimit-remaining-tokens', b'29605'), (b'x-ratelimit-reset-requests', b'3h10m27.685999999s'), (b'x-ratelimit-reset-tokens', b'790ms'), (b'x-request-id', b'req_01hz0y2b3mfbbse96e739kmy7d'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b2931a3f477ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is about identifying a TV show, which is a specific entity.
class_name: Entity
class_index: 1
data: {'text': 'How do you select wine ?', 'coarse_label': 2, 'fine_label': 26}
task_input: How do you select wine ?, corse_label: 2
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'How do you select wine ?', 'examples_str': 'Question: What does RCA stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What kind of mammal is a colt ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What happens when a body part falls asleep ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What cheery fellow got the ZIP code 9971 from the U.S. Postal Service in 1963 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the De Beers company founded ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does RCA stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What kind of mammal is a colt ?
class_name: Entity 
class_index: 1
--------

Question: What happens when a body part falls asleep ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What cheery fellow got the ZIP code 9971 from the U.S. Postal Service in 1963 ?
class_name: Human being 
class_index: 3
--------

Question: Where is Erykah Badu originally from ?
class_name: Location 
class_index: 4
--------

Question: When was the De Beers company founded ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: How do you select wine ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does RCA stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What kind of mammal is a colt ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What happens when a body part falls asleep ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What cheery fellow got the ZIP code 9971 from the U.S. Postal Service in 1963 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the De Beers company founded ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: How do you select wine ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 01:05:11 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12495'), (b'x-ratelimit-remaining-tokens', b'29594'), (b'x-ratelimit-reset-requests', b'3h10m29.781s'), (b'x-ratelimit-reset-tokens', b'811ms'), (b'x-request-id', b'req_01hz0y2bageabv6dgrrn4djkhz'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b2931b98c17ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does RCA stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What kind of mammal is a colt ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What happens when a body part falls asleep ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What cheery fellow got the ZIP code 9971 from the U.S. Postal Service in 1963 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the De Beers company founded ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: How do you select wine ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 01:05:13 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12494'), (b'x-ratelimit-remaining-tokens', b'29611'), (b'x-ratelimit-reset-requests', b'3h10m33.713s'), (b'x-ratelimit-reset-tokens', b'778ms'), (b'x-request-id', b'req_01hz0y2db4fvxrt729vycmd0mc'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b293287bb47ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is about a process or a method, which is related to a human activity, so it's likely to be a description or abstract concept.
class_name: Description and abstract concept
class_index: 2
data: {'text': "What are some children 's rights ?", 'coarse_label': 2, 'fine_label': 25}
task_input: What are some children 's rights ?, corse_label: 2
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': "What are some children 's rights ?", 'examples_str': 'Question: What does RCA stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What kind of mammal is a colt ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What happens when a body part falls asleep ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What cheery fellow got the ZIP code 9971 from the U.S. Postal Service in 1963 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the De Beers company founded ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does RCA stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What kind of mammal is a colt ?
class_name: Entity 
class_index: 1
--------

Question: What happens when a body part falls asleep ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What cheery fellow got the ZIP code 9971 from the U.S. Postal Service in 1963 ?
class_name: Human being 
class_index: 3
--------

Question: Where is Erykah Badu originally from ?
class_name: Location 
class_index: 4
--------

Question: When was the De Beers company founded ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What are some children 's rights ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does RCA stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What kind of mammal is a colt ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What happens when a body part falls asleep ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What cheery fellow got the ZIP code 9971 from the U.S. Postal Service in 1963 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the De Beers company founded ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What are some children 's rights ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 01:05:13 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12494'), (b'x-ratelimit-remaining-tokens', b'29588'), (b'x-ratelimit-reset-requests', b'3h10m35.737s'), (b'x-ratelimit-reset-tokens', b'823ms'), (b'x-request-id', b'req_01hz0y2dkcfk1vfjgqh56xedwp'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b2932a2dba7ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does RCA stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What kind of mammal is a colt ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What happens when a body part falls asleep ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What cheery fellow got the ZIP code 9971 from the U.S. Postal Service in 1963 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the De Beers company founded ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What are some children 's rights ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 01:05:15 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12493'), (b'x-ratelimit-remaining-tokens', b'29608'), (b'x-ratelimit-reset-requests', b'3h10m39.680999999s'), (b'x-ratelimit-reset-tokens', b'784ms'), (b'x-request-id', b'req_01hz0y2fkmews9j6cryfaafpg8'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b2933709347ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the rights of children, which are abstract concepts, so it falls under the category of Description and abstract concept.
class_name: DESC
class_index: 2
data: {'text': 'What are some fun things to do in Cozumel , Mexico for teenagers ?', 'coarse_label': 2, 'fine_label': 25}
task_input: What are some fun things to do in Cozumel , Mexico for teenagers ?, corse_label: 2
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What are some fun things to do in Cozumel , Mexico for teenagers ?', 'examples_str': 'Question: What does RCA stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What kind of mammal is a colt ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What happens when a body part falls asleep ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What cheery fellow got the ZIP code 9971 from the U.S. Postal Service in 1963 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the De Beers company founded ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does RCA stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What kind of mammal is a colt ?
class_name: Entity 
class_index: 1
--------

Question: What happens when a body part falls asleep ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What cheery fellow got the ZIP code 9971 from the U.S. Postal Service in 1963 ?
class_name: Human being 
class_index: 3
--------

Question: Where is Erykah Badu originally from ?
class_name: Location 
class_index: 4
--------

Question: When was the De Beers company founded ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What are some fun things to do in Cozumel , Mexico for teenagers ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does RCA stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What kind of mammal is a colt ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What happens when a body part falls asleep ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What cheery fellow got the ZIP code 9971 from the U.S. Postal Service in 1963 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the De Beers company founded ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What are some fun things to do in Cozumel , Mexico for teenagers ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 01:05:15 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12493'), (b'x-ratelimit-remaining-tokens', b'29587'), (b'x-ratelimit-reset-requests', b'3h10m41.735s'), (b'x-ratelimit-reset-tokens', b'826ms'), (b'x-request-id', b'req_01hz0y2fvyfvqb0c0wmsjmv27g'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b29338aaaf7ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does RCA stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What kind of mammal is a colt ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What happens when a body part falls asleep ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What cheery fellow got the ZIP code 9971 from the U.S. Postal Service in 1963 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the De Beers company founded ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What are some fun things to do in Cozumel , Mexico for teenagers ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 01:05:17 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12492'), (b'x-ratelimit-remaining-tokens', b'29600'), (b'x-ratelimit-reset-requests', b'3h10m45.682999999s'), (b'x-ratelimit-reset-tokens', b'800ms'), (b'x-request-id', b'req_01hz0y2hw2feba3dasahtm23ha'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b293458e047ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is asking about activities to do in a specific location, which is a common inquiry for travelers.
class_name: Description and abstract concept
class_index: 2
data: {'text': 'What does hazmat stand for ?', 'coarse_label': 2, 'fine_label': 24}
task_input: What does hazmat stand for ?, corse_label: 2
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What does hazmat stand for ?', 'examples_str': 'Question: What does RCA stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What kind of mammal is a colt ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What happens when a body part falls asleep ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What cheery fellow got the ZIP code 9971 from the U.S. Postal Service in 1963 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the De Beers company founded ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does RCA stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What kind of mammal is a colt ?
class_name: Entity 
class_index: 1
--------

Question: What happens when a body part falls asleep ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What cheery fellow got the ZIP code 9971 from the U.S. Postal Service in 1963 ?
class_name: Human being 
class_index: 3
--------

Question: Where is Erykah Badu originally from ?
class_name: Location 
class_index: 4
--------

Question: When was the De Beers company founded ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What does hazmat stand for ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does RCA stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What kind of mammal is a colt ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What happens when a body part falls asleep ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What cheery fellow got the ZIP code 9971 from the U.S. Postal Service in 1963 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the De Beers company founded ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does hazmat stand for ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 01:05:17 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12492'), (b'x-ratelimit-remaining-tokens', b'29583'), (b'x-ratelimit-reset-requests', b'3h10m47.765999999s'), (b'x-ratelimit-reset-tokens', b'833ms'), (b'x-request-id', b'req_01hz0y2j3dfxbsnq7qsdbj8t35'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b29346ff4c7ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does RCA stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What kind of mammal is a colt ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What happens when a body part falls asleep ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What cheery fellow got the ZIP code 9971 from the U.S. Postal Service in 1963 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the De Beers company founded ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does hazmat stand for ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 01:05:20 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12491'), (b'x-ratelimit-remaining-tokens', b'29610'), (b'x-ratelimit-reset-requests', b'3h10m51.712s'), (b'x-ratelimit-reset-tokens', b'780ms'), (b'x-request-id', b'req_01hz0y2m3mesatmh2e4rfzsrbh'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b29353da4c7ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking for the meaning of an abbreviation, which is a common use case for abbreviations.
class_name: ABBR
class_index: 0
data: {'text': "Who is the nebbish that is Marvel 's official mascot ?", 'coarse_label': 3, 'fine_label': 29}
task_input: Who is the nebbish that is Marvel 's official mascot ?, corse_label: 3
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': "Who is the nebbish that is Marvel 's official mascot ?", 'examples_str': 'Question: What does RCA stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What kind of mammal is a colt ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What happens when a body part falls asleep ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What cheery fellow got the ZIP code 9971 from the U.S. Postal Service in 1963 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the De Beers company founded ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does RCA stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What kind of mammal is a colt ?
class_name: Entity 
class_index: 1
--------

Question: What happens when a body part falls asleep ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What cheery fellow got the ZIP code 9971 from the U.S. Postal Service in 1963 ?
class_name: Human being 
class_index: 3
--------

Question: Where is Erykah Badu originally from ?
class_name: Location 
class_index: 4
--------

Question: When was the De Beers company founded ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Who is the nebbish that is Marvel 's official mascot ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does RCA stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What kind of mammal is a colt ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What happens when a body part falls asleep ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What cheery fellow got the ZIP code 9971 from the U.S. Postal Service in 1963 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the De Beers company founded ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Who is the nebbish that is Marvel 's official mascot ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 01:05:20 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'325'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12491'), (b'x-ratelimit-remaining-tokens', b'29609'), (b'x-ratelimit-reset-requests', b'3h10m53.719999999s'), (b'x-ratelimit-reset-tokens', b'781ms'), (b'x-request-id', b'req_01hz0y2mccfvqtgn7cmt7rfppt'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b293559b967ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does RCA stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What kind of mammal is a colt ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What happens when a body part falls asleep ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What cheery fellow got the ZIP code 9971 from the U.S. Postal Service in 1963 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the De Beers company founded ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Who is the nebbish that is Marvel 's official mascot ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 01:05:22 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12490'), (b'x-ratelimit-remaining-tokens', b'29603'), (b'x-ratelimit-reset-requests', b'3h10m57.66s'), (b'x-ratelimit-reset-tokens', b'794ms'), (b'x-request-id', b'req_01hz0y2pcrfr2sn9zjv1pzgp4d'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b293627edb7ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is asking about a specific character in the Marvel universe, which is a human being.
class_name: HUM
class_index: 3
data: {'text': 'What Japanese electronics company was named for a coastal city northeast of Tokyo ?', 'coarse_label': 3, 'fine_label': 28}
task_input: What Japanese electronics company was named for a coastal city northeast of Tokyo ?, corse_label: 3
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What Japanese electronics company was named for a coastal city northeast of Tokyo ?', 'examples_str': 'Question: What does RCA stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What kind of mammal is a colt ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What happens when a body part falls asleep ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What cheery fellow got the ZIP code 9971 from the U.S. Postal Service in 1963 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the De Beers company founded ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does RCA stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What kind of mammal is a colt ?
class_name: Entity 
class_index: 1
--------

Question: What happens when a body part falls asleep ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What cheery fellow got the ZIP code 9971 from the U.S. Postal Service in 1963 ?
class_name: Human being 
class_index: 3
--------

Question: Where is Erykah Badu originally from ?
class_name: Location 
class_index: 4
--------

Question: When was the De Beers company founded ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What Japanese electronics company was named for a coastal city northeast of Tokyo ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does RCA stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What kind of mammal is a colt ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What happens when a body part falls asleep ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What cheery fellow got the ZIP code 9971 from the U.S. Postal Service in 1963 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the De Beers company founded ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What Japanese electronics company was named for a coastal city northeast of Tokyo ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 01:05:22 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12490'), (b'x-ratelimit-remaining-tokens', b'29586'), (b'x-ratelimit-reset-requests', b'3h10m59.778999999s'), (b'x-ratelimit-reset-tokens', b'827ms'), (b'x-request-id', b'req_01hz0y2pknfvqr5wmy7ak1z0th'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b29363d8127ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does RCA stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What kind of mammal is a colt ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What happens when a body part falls asleep ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What cheery fellow got the ZIP code 9971 from the U.S. Postal Service in 1963 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the De Beers company founded ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What Japanese electronics company was named for a coastal city northeast of Tokyo ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 01:05:24 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12489'), (b'x-ratelimit-remaining-tokens', b'29596'), (b'x-ratelimit-reset-requests', b'3h11m3.724999999s'), (b'x-ratelimit-reset-tokens', b'808ms'), (b'x-request-id', b'req_01hz0y2rkwfvy9mft5bsy8ymw5'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b29370ab9d7ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about a company, which is a type of entity, and the description of the company's name being related to a coastal city northeast of Tokyo.
class_name: Entity
class_index: 1
data: {'text': 'Who was Maria Theresa ?', 'coarse_label': 3, 'fine_label': 31}
task_input: Who was Maria Theresa ?, corse_label: 3
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'Who was Maria Theresa ?', 'examples_str': 'Question: What does RCA stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What kind of mammal is a colt ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What happens when a body part falls asleep ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What cheery fellow got the ZIP code 9971 from the U.S. Postal Service in 1963 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the De Beers company founded ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does RCA stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What kind of mammal is a colt ?
class_name: Entity 
class_index: 1
--------

Question: What happens when a body part falls asleep ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What cheery fellow got the ZIP code 9971 from the U.S. Postal Service in 1963 ?
class_name: Human being 
class_index: 3
--------

Question: Where is Erykah Badu originally from ?
class_name: Location 
class_index: 4
--------

Question: When was the De Beers company founded ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Who was Maria Theresa ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does RCA stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What kind of mammal is a colt ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What happens when a body part falls asleep ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What cheery fellow got the ZIP code 9971 from the U.S. Postal Service in 1963 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the De Beers company founded ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Who was Maria Theresa ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 01:05:24 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12489'), (b'x-ratelimit-remaining-tokens', b'29587'), (b'x-ratelimit-reset-requests', b'3h11m5.732s'), (b'x-ratelimit-reset-tokens', b'826ms'), (b'x-request-id', b'req_01hz0y2rw9fem88wkm76j3gdgq'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b293725cfc7ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does RCA stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What kind of mammal is a colt ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What happens when a body part falls asleep ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What cheery fellow got the ZIP code 9971 from the U.S. Postal Service in 1963 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the De Beers company founded ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Who was Maria Theresa ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 01:05:27 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12488'), (b'x-ratelimit-remaining-tokens', b'29611'), (b'x-ratelimit-reset-requests', b'3h11m9.671999999s'), (b'x-ratelimit-reset-tokens', b'778ms'), (b'x-request-id', b'req_01hz0y2twmfvy95j9921knh3hk'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b2937f386b7ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is asking about a historical figure, which is a type of human being.
class_name: HUM
class_index: 3
data: {'text': "What was the name of the director of the movie `` Jaws '' ?", 'coarse_label': 3, 'fine_label': 29}
task_input: What was the name of the director of the movie `` Jaws '' ?, corse_label: 3
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': "What was the name of the director of the movie `` Jaws '' ?", 'examples_str': 'Question: What does RCA stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What kind of mammal is a colt ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What happens when a body part falls asleep ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What cheery fellow got the ZIP code 9971 from the U.S. Postal Service in 1963 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the De Beers company founded ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does RCA stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What kind of mammal is a colt ?
class_name: Entity 
class_index: 1
--------

Question: What happens when a body part falls asleep ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What cheery fellow got the ZIP code 9971 from the U.S. Postal Service in 1963 ?
class_name: Human being 
class_index: 3
--------

Question: Where is Erykah Badu originally from ?
class_name: Location 
class_index: 4
--------

Question: When was the De Beers company founded ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What was the name of the director of the movie `` Jaws '' ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does RCA stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What kind of mammal is a colt ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What happens when a body part falls asleep ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What cheery fellow got the ZIP code 9971 from the U.S. Postal Service in 1963 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the De Beers company founded ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What was the name of the director of the movie `` Jaws '' ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 01:05:27 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12488'), (b'x-ratelimit-remaining-tokens', b'29623'), (b'x-ratelimit-reset-requests', b'3h11m11.704s'), (b'x-ratelimit-reset-tokens', b'754ms'), (b'x-request-id', b'req_01hz0y2v5xez9s7kmgknk4fd1m'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b2938119c47ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does RCA stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What kind of mammal is a colt ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What happens when a body part falls asleep ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What cheery fellow got the ZIP code 9971 from the U.S. Postal Service in 1963 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the De Beers company founded ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What was the name of the director of the movie `` Jaws '' ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 01:05:29 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12487'), (b'x-ratelimit-remaining-tokens', b'29602'), (b'x-ratelimit-reset-requests', b'3h11m15.643s'), (b'x-ratelimit-reset-tokens', b'796ms'), (b'x-request-id', b'req_01hz0y2x6afebvbpz7reqng6d3'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b2938dfd017ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking for the director of a movie, which is a specific piece of information about a human being.
class_name: HUM
class_index: 3
data: {'text': 'Which area produces the least acidic coffee ?', 'coarse_label': 4, 'fine_label': 35}
task_input: Which area produces the least acidic coffee ?, corse_label: 4
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'Which area produces the least acidic coffee ?', 'examples_str': 'Question: What does RCA stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What kind of mammal is a colt ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What happens when a body part falls asleep ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What cheery fellow got the ZIP code 9971 from the U.S. Postal Service in 1963 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the De Beers company founded ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does RCA stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What kind of mammal is a colt ?
class_name: Entity 
class_index: 1
--------

Question: What happens when a body part falls asleep ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What cheery fellow got the ZIP code 9971 from the U.S. Postal Service in 1963 ?
class_name: Human being 
class_index: 3
--------

Question: Where is Erykah Badu originally from ?
class_name: Location 
class_index: 4
--------

Question: When was the De Beers company founded ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Which area produces the least acidic coffee ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does RCA stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What kind of mammal is a colt ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What happens when a body part falls asleep ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What cheery fellow got the ZIP code 9971 from the U.S. Postal Service in 1963 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the De Beers company founded ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Which area produces the least acidic coffee ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 01:05:29 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'332'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12487'), (b'x-ratelimit-remaining-tokens', b'29642'), (b'x-ratelimit-reset-requests', b'3h11m17.601999999s'), (b'x-ratelimit-reset-tokens', b'715ms'), (b'x-request-id', b'req_01hz0y2xjsez9venzkm2htzxtb'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b293907f767ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does RCA stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What kind of mammal is a colt ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What happens when a body part falls asleep ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What cheery fellow got the ZIP code 9971 from the U.S. Postal Service in 1963 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the De Beers company founded ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Which area produces the least acidic coffee ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 01:05:31 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12486'), (b'x-ratelimit-remaining-tokens', b'29606'), (b'x-ratelimit-reset-requests', b'3h11m21.528999999s'), (b'x-ratelimit-reset-tokens', b'788ms'), (b'x-request-id', b'req_01hz0y2zkjfvyscj6x4ja61zxh'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b2939d5a4d7ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is about a specific topic, and the answer is likely to be a description or concept.
class_name: Description and abstract concept
class_index: 2
```
data: {'text': 'What ocean is the largest in the world ?', 'coarse_label': 4, 'fine_label': 35}
task_input: What ocean is the largest in the world ?, corse_label: 4
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What ocean is the largest in the world ?', 'examples_str': 'Question: What does RCA stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What kind of mammal is a colt ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What happens when a body part falls asleep ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What cheery fellow got the ZIP code 9971 from the U.S. Postal Service in 1963 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the De Beers company founded ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does RCA stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What kind of mammal is a colt ?
class_name: Entity 
class_index: 1
--------

Question: What happens when a body part falls asleep ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What cheery fellow got the ZIP code 9971 from the U.S. Postal Service in 1963 ?
class_name: Human being 
class_index: 3
--------

Question: Where is Erykah Badu originally from ?
class_name: Location 
class_index: 4
--------

Question: When was the De Beers company founded ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What ocean is the largest in the world ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does RCA stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What kind of mammal is a colt ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What happens when a body part falls asleep ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What cheery fellow got the ZIP code 9971 from the U.S. Postal Service in 1963 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the De Beers company founded ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What ocean is the largest in the world ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 01:05:32 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12486'), (b'x-ratelimit-remaining-tokens', b'29593'), (b'x-ratelimit-reset-requests', b'3h11m23.744s'), (b'x-ratelimit-reset-tokens', b'814ms'), (b'x-request-id', b'req_01hz0y2zvkeqt8tgkbbsmaffm6'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b2939f0bf67ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does RCA stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What kind of mammal is a colt ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What happens when a body part falls asleep ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What cheery fellow got the ZIP code 9971 from the U.S. Postal Service in 1963 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the De Beers company founded ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What ocean is the largest in the world ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 01:05:34 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12485'), (b'x-ratelimit-remaining-tokens', b'29607'), (b'x-ratelimit-reset-requests', b'3h11m27.677999999s'), (b'x-ratelimit-reset-tokens', b'786ms'), (b'x-request-id', b'req_01hz0y31w5ewgv847fhqtpc97w'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b293abeff17ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the largest ocean in the world, which is a geographic location.
class_name: Location
class_index: 4
data: {'text': "What South American capital is the world 's highest ?", 'coarse_label': 4, 'fine_label': 32}
task_input: What South American capital is the world 's highest ?, corse_label: 4
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': "What South American capital is the world 's highest ?", 'examples_str': 'Question: What does RCA stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What kind of mammal is a colt ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What happens when a body part falls asleep ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What cheery fellow got the ZIP code 9971 from the U.S. Postal Service in 1963 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the De Beers company founded ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does RCA stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What kind of mammal is a colt ?
class_name: Entity 
class_index: 1
--------

Question: What happens when a body part falls asleep ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What cheery fellow got the ZIP code 9971 from the U.S. Postal Service in 1963 ?
class_name: Human being 
class_index: 3
--------

Question: Where is Erykah Badu originally from ?
class_name: Location 
class_index: 4
--------

Question: When was the De Beers company founded ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What South American capital is the world 's highest ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does RCA stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What kind of mammal is a colt ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What happens when a body part falls asleep ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What cheery fellow got the ZIP code 9971 from the U.S. Postal Service in 1963 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the De Beers company founded ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What South American capital is the world 's highest ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 01:05:34 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'325'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12485'), (b'x-ratelimit-remaining-tokens', b'29595'), (b'x-ratelimit-reset-requests', b'3h11m29.781s'), (b'x-ratelimit-reset-tokens', b'809ms'), (b'x-request-id', b'req_01hz0y3231fbqstyads8rtddb0'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b293ad49397ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does RCA stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What kind of mammal is a colt ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What happens when a body part falls asleep ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What cheery fellow got the ZIP code 9971 from the U.S. Postal Service in 1963 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the De Beers company founded ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What South American capital is the world 's highest ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 01:05:36 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12484'), (b'x-ratelimit-remaining-tokens', b'29604'), (b'x-ratelimit-reset-requests', b'3h11m33.724999999s'), (b'x-ratelimit-reset-tokens', b'792ms'), (b'x-request-id', b'req_01hz0y3439eqqrjhcqp3k6153m'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b293ba2d5d7ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about a geographical location, specifically the capital of a country in South America.
class_name: Location
class_index: 4
data: {'text': 'What North American city boasts the biggest Polish population ?', 'coarse_label': 4, 'fine_label': 32}
task_input: What North American city boasts the biggest Polish population ?, corse_label: 4
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What North American city boasts the biggest Polish population ?', 'examples_str': 'Question: What does RCA stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What kind of mammal is a colt ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What happens when a body part falls asleep ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What cheery fellow got the ZIP code 9971 from the U.S. Postal Service in 1963 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the De Beers company founded ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does RCA stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What kind of mammal is a colt ?
class_name: Entity 
class_index: 1
--------

Question: What happens when a body part falls asleep ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What cheery fellow got the ZIP code 9971 from the U.S. Postal Service in 1963 ?
class_name: Human being 
class_index: 3
--------

Question: Where is Erykah Badu originally from ?
class_name: Location 
class_index: 4
--------

Question: When was the De Beers company founded ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What North American city boasts the biggest Polish population ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does RCA stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What kind of mammal is a colt ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What happens when a body part falls asleep ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What cheery fellow got the ZIP code 9971 from the U.S. Postal Service in 1963 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the De Beers company founded ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What North American city boasts the biggest Polish population ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 01:05:36 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12484'), (b'x-ratelimit-remaining-tokens', b'29596'), (b'x-ratelimit-reset-requests', b'3h11m35.744s'), (b'x-ratelimit-reset-tokens', b'808ms'), (b'x-request-id', b'req_01hz0y34bafxcsq5t6mx4g4gzp'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b293bbbea87ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does RCA stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What kind of mammal is a colt ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What happens when a body part falls asleep ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What cheery fellow got the ZIP code 9971 from the U.S. Postal Service in 1963 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the De Beers company founded ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What North American city boasts the biggest Polish population ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 01:05:39 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12483'), (b'x-ratelimit-remaining-tokens', b'29601'), (b'x-ratelimit-reset-requests', b'3h11m39.688999999s'), (b'x-ratelimit-reset-tokens', b'798ms'), (b'x-request-id', b'req_01hz0y36bheqqrz6fvbg6awfyy'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b293c899667ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is asking about a specific location, which is a city, and it's asking about a demographic characteristic, which is the population.
class_name: Location
class_index: 4
data: {'text': "Independent silversmith 's account for what percentage of silver production ?", 'coarse_label': 5, 'fine_label': 45}
task_input: Independent silversmith 's account for what percentage of silver production ?, corse_label: 5
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': "Independent silversmith 's account for what percentage of silver production ?", 'examples_str': 'Question: What does RCA stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What kind of mammal is a colt ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What happens when a body part falls asleep ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What cheery fellow got the ZIP code 9971 from the U.S. Postal Service in 1963 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the De Beers company founded ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does RCA stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What kind of mammal is a colt ?
class_name: Entity 
class_index: 1
--------

Question: What happens when a body part falls asleep ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What cheery fellow got the ZIP code 9971 from the U.S. Postal Service in 1963 ?
class_name: Human being 
class_index: 3
--------

Question: Where is Erykah Badu originally from ?
class_name: Location 
class_index: 4
--------

Question: When was the De Beers company founded ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Independent silversmith 's account for what percentage of silver production ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does RCA stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What kind of mammal is a colt ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What happens when a body part falls asleep ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What cheery fellow got the ZIP code 9971 from the U.S. Postal Service in 1963 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the De Beers company founded ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Independent silversmith 's account for what percentage of silver production ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 01:05:39 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12483'), (b'x-ratelimit-remaining-tokens', b'29586'), (b'x-ratelimit-reset-requests', b'3h11m41.087s'), (b'x-ratelimit-reset-tokens', b'828ms'), (b'x-request-id', b'req_01hz0y3783eqtbjkmxz8zqa7h7'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b293ce4df57ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does RCA stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What kind of mammal is a colt ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What happens when a body part falls asleep ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What cheery fellow got the ZIP code 9971 from the U.S. Postal Service in 1963 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the De Beers company founded ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Independent silversmith 's account for what percentage of silver production ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 01:05:41 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12482'), (b'x-ratelimit-remaining-tokens', b'29598'), (b'x-ratelimit-reset-requests', b'3h11m45.028999999s'), (b'x-ratelimit-reset-tokens', b'804ms'), (b'x-request-id', b'req_01hz0y398dewt8wrjzgkb4czeh'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b293db28a87ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about a percentage of silver production, which is a numeric value.
class_name: NUM
class_index: 5
data: {'text': 'How old is the universe ?', 'coarse_label': 5, 'fine_label': 44}
task_input: How old is the universe ?, corse_label: 5
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'How old is the universe ?', 'examples_str': 'Question: What does RCA stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What kind of mammal is a colt ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What happens when a body part falls asleep ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What cheery fellow got the ZIP code 9971 from the U.S. Postal Service in 1963 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the De Beers company founded ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does RCA stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What kind of mammal is a colt ?
class_name: Entity 
class_index: 1
--------

Question: What happens when a body part falls asleep ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What cheery fellow got the ZIP code 9971 from the U.S. Postal Service in 1963 ?
class_name: Human being 
class_index: 3
--------

Question: Where is Erykah Badu originally from ?
class_name: Location 
class_index: 4
--------

Question: When was the De Beers company founded ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: How old is the universe ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does RCA stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What kind of mammal is a colt ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What happens when a body part falls asleep ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What cheery fellow got the ZIP code 9971 from the U.S. Postal Service in 1963 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the De Beers company founded ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: How old is the universe ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 01:05:41 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12482'), (b'x-ratelimit-remaining-tokens', b'29594'), (b'x-ratelimit-reset-requests', b'3h11m47.773999999s'), (b'x-ratelimit-reset-tokens', b'812ms'), (b'x-request-id', b'req_01hz0y39fgfhsrajzvy5bdvmfb'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b293dc9a067ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does RCA stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What kind of mammal is a colt ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What happens when a body part falls asleep ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What cheery fellow got the ZIP code 9971 from the U.S. Postal Service in 1963 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the De Beers company founded ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: How old is the universe ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 01:05:44 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12481'), (b'x-ratelimit-remaining-tokens', b'29611'), (b'x-ratelimit-reset-requests', b'3h11m51.709s'), (b'x-ratelimit-reset-tokens', b'778ms'), (b'x-request-id', b'req_01hz0y3bg1eza9z22cjhawjvds'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b293e98c907ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the age of the universe, which is a numeric value.
class_name: NUM
class_index: 5
data: {'text': 'When was the Hoover Dam constructed ?', 'coarse_label': 5, 'fine_label': 39}
task_input: When was the Hoover Dam constructed ?, corse_label: 5
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'When was the Hoover Dam constructed ?', 'examples_str': 'Question: What does RCA stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What kind of mammal is a colt ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What happens when a body part falls asleep ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What cheery fellow got the ZIP code 9971 from the U.S. Postal Service in 1963 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the De Beers company founded ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does RCA stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What kind of mammal is a colt ?
class_name: Entity 
class_index: 1
--------

Question: What happens when a body part falls asleep ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What cheery fellow got the ZIP code 9971 from the U.S. Postal Service in 1963 ?
class_name: Human being 
class_index: 3
--------

Question: Where is Erykah Badu originally from ?
class_name: Location 
class_index: 4
--------

Question: When was the De Beers company founded ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: When was the Hoover Dam constructed ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does RCA stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What kind of mammal is a colt ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What happens when a body part falls asleep ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What cheery fellow got the ZIP code 9971 from the U.S. Postal Service in 1963 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the De Beers company founded ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: When was the Hoover Dam constructed ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 01:05:44 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12481'), (b'x-ratelimit-remaining-tokens', b'29603'), (b'x-ratelimit-reset-requests', b'3h11m53.74s'), (b'x-ratelimit-reset-tokens', b'794ms'), (b'x-request-id', b'req_01hz0y3br6e1jtdq2cdshtaqpg'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b293eb2dd67ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does RCA stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What kind of mammal is a colt ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What happens when a body part falls asleep ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What cheery fellow got the ZIP code 9971 from the U.S. Postal Service in 1963 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the De Beers company founded ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: When was the Hoover Dam constructed ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 01:05:46 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12480'), (b'x-ratelimit-remaining-tokens', b'29608'), (b'x-ratelimit-reset-requests', b'3h11m57.688999999s'), (b'x-ratelimit-reset-tokens', b'784ms'), (b'x-request-id', b'req_01hz0y3dr9fr4b5sggf2k1pxs7'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b293f7ffdf7ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about a specific event in the past, which is a numeric value.
class_name: NUM
class_index: 5
data: {'text': 'At what age did Rossini stop writing opera ?', 'coarse_label': 5, 'fine_label': 44}
task_input: At what age did Rossini stop writing opera ?, corse_label: 5
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'At what age did Rossini stop writing opera ?', 'examples_str': 'Question: What does RCA stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What kind of mammal is a colt ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What happens when a body part falls asleep ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What cheery fellow got the ZIP code 9971 from the U.S. Postal Service in 1963 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the De Beers company founded ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does RCA stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What kind of mammal is a colt ?
class_name: Entity 
class_index: 1
--------

Question: What happens when a body part falls asleep ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What cheery fellow got the ZIP code 9971 from the U.S. Postal Service in 1963 ?
class_name: Human being 
class_index: 3
--------

Question: Where is Erykah Badu originally from ?
class_name: Location 
class_index: 4
--------

Question: When was the De Beers company founded ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: At what age did Rossini stop writing opera ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does RCA stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What kind of mammal is a colt ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What happens when a body part falls asleep ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What cheery fellow got the ZIP code 9971 from the U.S. Postal Service in 1963 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the De Beers company founded ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: At what age did Rossini stop writing opera ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 01:05:46 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12480'), (b'x-ratelimit-remaining-tokens', b'29596'), (b'x-ratelimit-reset-requests', b'3h11m59.783s'), (b'x-ratelimit-reset-tokens', b'807ms'), (b'x-request-id', b'req_01hz0y3dz3e1kbpqnj90eehsrf'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b293f958ee7ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does RCA stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What kind of mammal is a colt ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: What happens when a body part falls asleep ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What cheery fellow got the ZIP code 9971 from the U.S. Postal Service in 1963 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: When was the De Beers company founded ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: At what age did Rossini stop writing opera ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 01:05:48 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12479'), (b'x-ratelimit-remaining-tokens', b'29606'), (b'x-ratelimit-reset-requests', b'3h12m3.721s'), (b'x-ratelimit-reset-tokens', b'788ms'), (b'x-request-id', b'req_01hz0y3fzhfvzs8njcsj5psgbt'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b294063b637ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the age of a specific person, which is a numeric value.
class_name: NUM
class_index: 5
responses: [0, 0, 0, 0, 1, 5, 2, 1, 2, 2, 2, 0, 3, 1, 3, 3, 2, 4, 4, 4, 5, 5, 5, 5], targets: [0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5]
num_invalid: 0
Preds tensor: tensor([[1., 0., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0.],
        [0., 1., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 1.],
        [0., 0., 1., 0., 0., 0.],
        [0., 1., 0., 0., 0., 0.],
        [0., 0., 1., 0., 0., 0.],
        [0., 0., 1., 0., 0., 0.],
        [0., 0., 1., 0., 0., 0.],
        [1., 0., 0., 0., 0., 0.],
        [0., 0., 0., 1., 0., 0.],
        [0., 1., 0., 0., 0., 0.],
        [0., 0., 0., 1., 0., 0.],
        [0., 0., 0., 1., 0., 0.],
        [0., 0., 1., 0., 0., 0.],
        [0., 0., 0., 0., 1., 0.],
        [0., 0., 0., 0., 1., 0.],
        [0., 0., 0., 0., 1., 0.],
        [0., 0., 0., 0., 0., 1.],
        [0., 0., 0., 0., 0., 1.],
        [0., 0., 0., 0., 0., 1.],
        [0., 0., 0., 0., 0., 1.]])
Targets tensor: tensor([0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5])
Eval Accuracy 6 proposed: 0.792, F1: 0.788, score: 1.58
best_score: 1.58
best_parameters: OrderedDict([('generator.examples_str', Parameter: Question: What does RCA stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What kind of mammal is a colt ?
class_name: Entity 
class_index: 1
--------

Question: What happens when a body part falls asleep ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What cheery fellow got the ZIP code 9971 from the U.S. Postal Service in 1963 ?
class_name: Human being 
class_index: 3
--------

Question: Where is Erykah Badu originally from ?
class_name: Location 
class_index: 4
--------

Question: When was the De Beers company founded ?
class_name: Numeric value 
class_index: 5
--------
)])
step: 7
train_batch: {'text': ['Where is Hearst Castle , built by publisher William Randolph Hearst ?', 'What are the top ten all-time money making NFL teams ?', 'What do you call a section of your finger from one joint to another ?', 'Which of the five senses develops first ?', 'What did 8 , CD NNS VBP TO VB NNP POS NN .', 'How do I find out the exact time of a sunset for a particular day ?', 'Where did the Japanese Imperial Forces surrender to end WWII ?', 'What 1953 film won Frank Sinatra a best supporting actor Oscar ?', 'Which Japanese car maker had its biggest percentage of sale in the domestic market ?', 'Which large U.S. city had the highest murder rate for 1988 ?'], 'coarse_label': tensor([4, 3, 1, 1, 1, 2, 4, 1, 3, 4]), 'fine_label': tensor([35, 28, 21, 13, 13, 26, 35,  5, 28, 32])}
before random_replace: [Sample(index=325, data={'text': 'What does RCA stand for ?', 'coarse_label': 0, 'fine_label': 1}), Sample(index=777, data={'text': 'What kind of mammal is a colt ?', 'coarse_label': 1, 'fine_label': 2}), Sample(index=94, data={'text': 'What happens when a body part falls asleep ?', 'coarse_label': 2, 'fine_label': 25}), Sample(index=1010, data={'text': 'What cheery fellow got the ZIP code 9971 from the U.S. Postal Service in 1963 ?', 'coarse_label': 3, 'fine_label': 29}), Sample(index=446, data={'text': 'Where is Erykah Badu originally from ?', 'coarse_label': 4, 'fine_label': 35}), Sample(index=1106, data={'text': 'When was the De Beers company founded ?', 'coarse_label': 5, 'fine_label': 39})]
after random_replace: [Sample(index=860, data={'text': 'What does the abbreviation OAS stand for ?', 'coarse_label': 0, 'fine_label': 1}), Sample(index=777, data={'text': 'What kind of mammal is a colt ?', 'coarse_label': 1, 'fine_label': 2}), Sample(index=609, data={'text': 'Why did the world enter a global depression in 1929 ?', 'coarse_label': 2, 'fine_label': 27}), Sample(index=1867, data={'text': 'What mayor made so many TV appearances he was asked to join AFTRA in 1984 ?', 'coarse_label': 3, 'fine_label': 29}), Sample(index=446, data={'text': 'Where is Erykah Badu originally from ?', 'coarse_label': 4, 'fine_label': 35}), Sample(index=1081, data={'text': 'How many school districts are there in the United States ?', 'coarse_label': 5, 'fine_label': 38})]
data: {'text': 'What does U.S.S.R. stand for ?', 'coarse_label': 0, 'fine_label': 1}
task_input: What does U.S.S.R. stand for ?, corse_label: 0
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What does U.S.S.R. stand for ?', 'examples_str': 'Question: What does the abbreviation OAS stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What kind of mammal is a colt ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why did the world enter a global depression in 1929 ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What mayor made so many TV appearances he was asked to join AFTRA in 1984 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many school districts are there in the United States ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does the abbreviation OAS stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What kind of mammal is a colt ?
class_name: Entity 
class_index: 1
--------

Question: Why did the world enter a global depression in 1929 ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What mayor made so many TV appearances he was asked to join AFTRA in 1984 ?
class_name: Human being 
class_index: 3
--------

Question: Where is Erykah Badu originally from ?
class_name: Location 
class_index: 4
--------

Question: How many school districts are there in the United States ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What does U.S.S.R. stand for ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the abbreviation OAS stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What kind of mammal is a colt ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why did the world enter a global depression in 1929 ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What mayor made so many TV appearances he was asked to join AFTRA in 1984 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many school districts are there in the United States ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does U.S.S.R. stand for ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 01:05:48 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12479'), (b'x-ratelimit-remaining-tokens', b'29609'), (b'x-ratelimit-reset-requests', b'3h12m5.715999999s'), (b'x-ratelimit-reset-tokens', b'782ms'), (b'x-request-id', b'req_01hz0y3g8efk3s6ef7zenpa23q'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b29407fd1c7ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the abbreviation OAS stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What kind of mammal is a colt ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why did the world enter a global depression in 1929 ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What mayor made so many TV appearances he was asked to join AFTRA in 1984 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many school districts are there in the United States ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does U.S.S.R. stand for ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 01:05:51 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12478'), (b'x-ratelimit-remaining-tokens', b'29599'), (b'x-ratelimit-reset-requests', b'3h12m9.66s'), (b'x-ratelimit-reset-tokens', b'802ms'), (b'x-request-id', b'req_01hz0y3j8pfgyagvv1062vt7zg'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b29414d8667ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking for the abbreviation of U.S.S.R.
class_name: ABBR
class_index: 0
```
data: {'text': 'What is the abbreviated form of the National Bureau of Investigation ?', 'coarse_label': 0, 'fine_label': 0}
task_input: What is the abbreviated form of the National Bureau of Investigation ?, corse_label: 0
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What is the abbreviated form of the National Bureau of Investigation ?', 'examples_str': 'Question: What does the abbreviation OAS stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What kind of mammal is a colt ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why did the world enter a global depression in 1929 ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What mayor made so many TV appearances he was asked to join AFTRA in 1984 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many school districts are there in the United States ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does the abbreviation OAS stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What kind of mammal is a colt ?
class_name: Entity 
class_index: 1
--------

Question: Why did the world enter a global depression in 1929 ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What mayor made so many TV appearances he was asked to join AFTRA in 1984 ?
class_name: Human being 
class_index: 3
--------

Question: Where is Erykah Badu originally from ?
class_name: Location 
class_index: 4
--------

Question: How many school districts are there in the United States ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What is the abbreviated form of the National Bureau of Investigation ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the abbreviation OAS stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What kind of mammal is a colt ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why did the world enter a global depression in 1929 ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What mayor made so many TV appearances he was asked to join AFTRA in 1984 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many school districts are there in the United States ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is the abbreviated form of the National Bureau of Investigation ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 01:05:51 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12478'), (b'x-ratelimit-remaining-tokens', b'29595'), (b'x-ratelimit-reset-requests', b'3h12m11.74s'), (b'x-ratelimit-reset-tokens', b'809ms'), (b'x-request-id', b'req_01hz0y3jgvfxdtfqyyyrte97gq'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b2941679867ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the abbreviation OAS stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What kind of mammal is a colt ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why did the world enter a global depression in 1929 ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What mayor made so many TV appearances he was asked to join AFTRA in 1984 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many school districts are there in the United States ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What is the abbreviated form of the National Bureau of Investigation ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 01:05:53 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12477'), (b'x-ratelimit-remaining-tokens', b'29589'), (b'x-ratelimit-reset-requests', b'3h12m15.684999999s'), (b'x-ratelimit-reset-tokens', b'822ms'), (b'x-request-id', b'req_01hz0y3mh2fenvqy7379b5mrw4'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b294234c277ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking for the abbreviated form of a specific organization, which is a common use of abbreviations.
class_name: ABBR
class_index: 0
```
data: {'text': "What do the letters ZIP stand for in the phrase `` ZIP code '' ?", 'coarse_label': 0, 'fine_label': 1}
task_input: What do the letters ZIP stand for in the phrase `` ZIP code '' ?, corse_label: 0
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': "What do the letters ZIP stand for in the phrase `` ZIP code '' ?", 'examples_str': 'Question: What does the abbreviation OAS stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What kind of mammal is a colt ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why did the world enter a global depression in 1929 ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What mayor made so many TV appearances he was asked to join AFTRA in 1984 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many school districts are there in the United States ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does the abbreviation OAS stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What kind of mammal is a colt ?
class_name: Entity 
class_index: 1
--------

Question: Why did the world enter a global depression in 1929 ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What mayor made so many TV appearances he was asked to join AFTRA in 1984 ?
class_name: Human being 
class_index: 3
--------

Question: Where is Erykah Badu originally from ?
class_name: Location 
class_index: 4
--------

Question: How many school districts are there in the United States ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What do the letters ZIP stand for in the phrase `` ZIP code '' ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the abbreviation OAS stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What kind of mammal is a colt ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why did the world enter a global depression in 1929 ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What mayor made so many TV appearances he was asked to join AFTRA in 1984 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many school districts are there in the United States ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What do the letters ZIP stand for in the phrase `` ZIP code '' ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 01:05:53 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12477'), (b'x-ratelimit-remaining-tokens', b'29583'), (b'x-ratelimit-reset-requests', b'3h12m17.741s'), (b'x-ratelimit-reset-tokens', b'833ms'), (b'x-request-id', b'req_01hz0y3ms5fbrtw8cfgpkccj2c'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b29424eda07ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the abbreviation OAS stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What kind of mammal is a colt ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why did the world enter a global depression in 1929 ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What mayor made so many TV appearances he was asked to join AFTRA in 1984 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many school districts are there in the United States ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What do the letters ZIP stand for in the phrase `` ZIP code '' ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 01:05:55 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12476'), (b'x-ratelimit-remaining-tokens', b'29591'), (b'x-ratelimit-reset-requests', b'3h12m21.671999999s'), (b'x-ratelimit-reset-tokens', b'818ms'), (b'x-request-id', b'req_01hz0y3psvfr4bpyrekq858scj'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b29431dfdf7ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the meaning of the abbreviation "ZIP", which is a common abbreviation for "Zone Improvement Plan" in the context of postal codes.
class_name: ABBR
class_index: 0
data: {'text': 'What does VCR stand for ?', 'coarse_label': 0, 'fine_label': 1}
task_input: What does VCR stand for ?, corse_label: 0
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What does VCR stand for ?', 'examples_str': 'Question: What does the abbreviation OAS stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What kind of mammal is a colt ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why did the world enter a global depression in 1929 ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What mayor made so many TV appearances he was asked to join AFTRA in 1984 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many school districts are there in the United States ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does the abbreviation OAS stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What kind of mammal is a colt ?
class_name: Entity 
class_index: 1
--------

Question: Why did the world enter a global depression in 1929 ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What mayor made so many TV appearances he was asked to join AFTRA in 1984 ?
class_name: Human being 
class_index: 3
--------

Question: Where is Erykah Badu originally from ?
class_name: Location 
class_index: 4
--------

Question: How many school districts are there in the United States ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What does VCR stand for ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the abbreviation OAS stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What kind of mammal is a colt ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why did the world enter a global depression in 1929 ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What mayor made so many TV appearances he was asked to join AFTRA in 1984 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many school districts are there in the United States ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does VCR stand for ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 01:05:55 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12476'), (b'x-ratelimit-remaining-tokens', b'29573'), (b'x-ratelimit-reset-requests', b'3h12m23.723999999s'), (b'x-ratelimit-reset-tokens', b'854ms'), (b'x-request-id', b'req_01hz0y3q2gfbrtyh1f1ad1yqht'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b2943399227ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the abbreviation OAS stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What kind of mammal is a colt ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why did the world enter a global depression in 1929 ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What mayor made so many TV appearances he was asked to join AFTRA in 1984 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many school districts are there in the United States ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does VCR stand for ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 01:05:58 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12475'), (b'x-ratelimit-remaining-tokens', b'29600'), (b'x-ratelimit-reset-requests', b'3h12m27.661s'), (b'x-ratelimit-reset-tokens', b'800ms'), (b'x-request-id', b'req_01hz0y3s2zejfs4c70x99ndm60'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b294407c3d7ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking for the abbreviation of a term, which is a common use case for abbreviations.
class_name: ABBR
class_index: 0
data: {'text': 'What sport can a free-legged pacer compete in ?', 'coarse_label': 1, 'fine_label': 17}
task_input: What sport can a free-legged pacer compete in ?, corse_label: 1
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What sport can a free-legged pacer compete in ?', 'examples_str': 'Question: What does the abbreviation OAS stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What kind of mammal is a colt ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why did the world enter a global depression in 1929 ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What mayor made so many TV appearances he was asked to join AFTRA in 1984 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many school districts are there in the United States ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does the abbreviation OAS stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What kind of mammal is a colt ?
class_name: Entity 
class_index: 1
--------

Question: Why did the world enter a global depression in 1929 ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What mayor made so many TV appearances he was asked to join AFTRA in 1984 ?
class_name: Human being 
class_index: 3
--------

Question: Where is Erykah Badu originally from ?
class_name: Location 
class_index: 4
--------

Question: How many school districts are there in the United States ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What sport can a free-legged pacer compete in ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the abbreviation OAS stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What kind of mammal is a colt ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why did the world enter a global depression in 1929 ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What mayor made so many TV appearances he was asked to join AFTRA in 1984 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many school districts are there in the United States ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What sport can a free-legged pacer compete in ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 01:05:58 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12475'), (b'x-ratelimit-remaining-tokens', b'29621'), (b'x-ratelimit-reset-requests', b'3h12m29.697s'), (b'x-ratelimit-reset-tokens', b'757ms'), (b'x-request-id', b'req_01hz0y3scffvt9324b71n9grpe'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b294426dbf7ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the abbreviation OAS stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What kind of mammal is a colt ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why did the world enter a global depression in 1929 ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What mayor made so many TV appearances he was asked to join AFTRA in 1984 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many school districts are there in the United States ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What sport can a free-legged pacer compete in ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 01:06:00 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12474'), (b'x-ratelimit-remaining-tokens', b'29595'), (b'x-ratelimit-reset-requests', b'3h12m33.636999999s'), (b'x-ratelimit-reset-tokens', b'810ms'), (b'x-request-id', b'req_01hz0y3vcvfbeb202ngzr2yb5w'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b2944f493f7ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is about a specific type of horse, which is a living being, so it's likely to be classified as a Human being.
class_name: HUM
class_index: 3
data: {'text': 'What was originally defined as one 1-millionth of the distance from the equator to the Pole ?', 'coarse_label': 1, 'fine_label': 21}
task_input: What was originally defined as one 1-millionth of the distance from the equator to the Pole ?, corse_label: 1
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What was originally defined as one 1-millionth of the distance from the equator to the Pole ?', 'examples_str': 'Question: What does the abbreviation OAS stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What kind of mammal is a colt ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why did the world enter a global depression in 1929 ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What mayor made so many TV appearances he was asked to join AFTRA in 1984 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many school districts are there in the United States ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does the abbreviation OAS stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What kind of mammal is a colt ?
class_name: Entity 
class_index: 1
--------

Question: Why did the world enter a global depression in 1929 ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What mayor made so many TV appearances he was asked to join AFTRA in 1984 ?
class_name: Human being 
class_index: 3
--------

Question: Where is Erykah Badu originally from ?
class_name: Location 
class_index: 4
--------

Question: How many school districts are there in the United States ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What was originally defined as one 1-millionth of the distance from the equator to the Pole ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the abbreviation OAS stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What kind of mammal is a colt ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why did the world enter a global depression in 1929 ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What mayor made so many TV appearances he was asked to join AFTRA in 1984 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many school districts are there in the United States ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What was originally defined as one 1-millionth of the distance from the equator to the Pole ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 01:06:00 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12474'), (b'x-ratelimit-remaining-tokens', b'29582'), (b'x-ratelimit-reset-requests', b'3h12m35.707999999s'), (b'x-ratelimit-reset-tokens', b'836ms'), (b'x-request-id', b'req_01hz0y3vp0fepam2tn59xn7xv6'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b294511ade7ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the abbreviation OAS stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What kind of mammal is a colt ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why did the world enter a global depression in 1929 ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What mayor made so many TV appearances he was asked to join AFTRA in 1984 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many school districts are there in the United States ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What was originally defined as one 1-millionth of the distance from the equator to the Pole ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 01:06:02 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12473'), (b'x-ratelimit-remaining-tokens', b'29583'), (b'x-ratelimit-reset-requests', b'3h12m39.646s'), (b'x-ratelimit-reset-tokens', b'834ms'), (b'x-request-id', b'req_01hz0y3xp8fvcv799ttqetvz7s'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b2945deee57ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is asking about a specific unit of measurement, which is a numeric value.
class_name: NUM
class_index: 5
data: {'text': 'What fuel do airplanes use ?', 'coarse_label': 1, 'fine_label': 18}
task_input: What fuel do airplanes use ?, corse_label: 1
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What fuel do airplanes use ?', 'examples_str': 'Question: What does the abbreviation OAS stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What kind of mammal is a colt ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why did the world enter a global depression in 1929 ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What mayor made so many TV appearances he was asked to join AFTRA in 1984 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many school districts are there in the United States ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does the abbreviation OAS stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What kind of mammal is a colt ?
class_name: Entity 
class_index: 1
--------

Question: Why did the world enter a global depression in 1929 ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What mayor made so many TV appearances he was asked to join AFTRA in 1984 ?
class_name: Human being 
class_index: 3
--------

Question: Where is Erykah Badu originally from ?
class_name: Location 
class_index: 4
--------

Question: How many school districts are there in the United States ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What fuel do airplanes use ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the abbreviation OAS stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What kind of mammal is a colt ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why did the world enter a global depression in 1929 ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What mayor made so many TV appearances he was asked to join AFTRA in 1984 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many school districts are there in the United States ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What fuel do airplanes use ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 01:06:02 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12473'), (b'x-ratelimit-remaining-tokens', b'29602'), (b'x-ratelimit-reset-requests', b'3h12m41.704s'), (b'x-ratelimit-reset-tokens', b'796ms'), (b'x-request-id', b'req_01hz0y3xzvekxb29ta92gdgpzk'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b2945fd88c7ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the abbreviation OAS stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What kind of mammal is a colt ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why did the world enter a global depression in 1929 ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What mayor made so many TV appearances he was asked to join AFTRA in 1984 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many school districts are there in the United States ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What fuel do airplanes use ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 01:06:05 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12472'), (b'x-ratelimit-remaining-tokens', b'29600'), (b'x-ratelimit-reset-requests', b'3h12m45.635999999s'), (b'x-ratelimit-reset-tokens', b'800ms'), (b'x-request-id', b'req_01hz0y400gfhd81k0wzaq23zjt'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b2946ccb697ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the fuel used by airplanes, which is a specific type of information.
class_name: DESC
class_index: 2
```
data: {'text': 'On what T.V. show could Tom Terrific be found ?', 'coarse_label': 1, 'fine_label': 5}
task_input: On what T.V. show could Tom Terrific be found ?, corse_label: 1
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'On what T.V. show could Tom Terrific be found ?', 'examples_str': 'Question: What does the abbreviation OAS stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What kind of mammal is a colt ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why did the world enter a global depression in 1929 ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What mayor made so many TV appearances he was asked to join AFTRA in 1984 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many school districts are there in the United States ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does the abbreviation OAS stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What kind of mammal is a colt ?
class_name: Entity 
class_index: 1
--------

Question: Why did the world enter a global depression in 1929 ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What mayor made so many TV appearances he was asked to join AFTRA in 1984 ?
class_name: Human being 
class_index: 3
--------

Question: Where is Erykah Badu originally from ?
class_name: Location 
class_index: 4
--------

Question: How many school districts are there in the United States ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: On what T.V. show could Tom Terrific be found ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the abbreviation OAS stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What kind of mammal is a colt ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why did the world enter a global depression in 1929 ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What mayor made so many TV appearances he was asked to join AFTRA in 1984 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many school districts are there in the United States ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: On what T.V. show could Tom Terrific be found ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 01:06:05 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12472'), (b'x-ratelimit-remaining-tokens', b'29593'), (b'x-ratelimit-reset-requests', b'3h12m47.772999999s'), (b'x-ratelimit-reset-tokens', b'814ms'), (b'x-request-id', b'req_01hz0y407mfbs80d0a76r6z8d4'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b2946e3c947ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the abbreviation OAS stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What kind of mammal is a colt ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why did the world enter a global depression in 1929 ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What mayor made so many TV appearances he was asked to join AFTRA in 1984 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many school districts are there in the United States ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: On what T.V. show could Tom Terrific be found ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 01:06:08 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12471'), (b'x-ratelimit-remaining-tokens', b'29595'), (b'x-ratelimit-reset-requests', b'3h12m51.707s'), (b'x-ratelimit-reset-tokens', b'810ms'), (b'x-request-id', b'req_01hz0y4286e9ktt5dfq4w8p9w6'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b2947b2fdf7ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about a TV show, which is a specific entity, and Tom Terrific is a character in that show.
class_name: Entity
class_index: 1
```
data: {'text': 'How do you select wine ?', 'coarse_label': 2, 'fine_label': 26}
task_input: How do you select wine ?, corse_label: 2
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'How do you select wine ?', 'examples_str': 'Question: What does the abbreviation OAS stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What kind of mammal is a colt ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why did the world enter a global depression in 1929 ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What mayor made so many TV appearances he was asked to join AFTRA in 1984 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many school districts are there in the United States ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does the abbreviation OAS stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What kind of mammal is a colt ?
class_name: Entity 
class_index: 1
--------

Question: Why did the world enter a global depression in 1929 ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What mayor made so many TV appearances he was asked to join AFTRA in 1984 ?
class_name: Human being 
class_index: 3
--------

Question: Where is Erykah Badu originally from ?
class_name: Location 
class_index: 4
--------

Question: How many school districts are there in the United States ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: How do you select wine ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the abbreviation OAS stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What kind of mammal is a colt ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why did the world enter a global depression in 1929 ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What mayor made so many TV appearances he was asked to join AFTRA in 1984 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many school districts are there in the United States ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: How do you select wine ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 01:06:08 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'325'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'1'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12471'), (b'x-ratelimit-remaining-tokens', b'29581'), (b'x-ratelimit-reset-requests', b'3h12m52.517s'), (b'x-ratelimit-reset-tokens', b'837ms'), (b'x-request-id', b'req_01hz0y43pjeqvtbjdapyr5fcww'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b294846fba7ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 1.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the abbreviation OAS stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What kind of mammal is a colt ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why did the world enter a global depression in 1929 ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What mayor made so many TV appearances he was asked to join AFTRA in 1984 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many school districts are there in the United States ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: How do you select wine ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 01:06:09 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12470'), (b'x-ratelimit-remaining-tokens', b'29601'), (b'x-ratelimit-reset-requests', b'3h12m57.465999999s'), (b'x-ratelimit-reset-tokens', b'798ms'), (b'x-request-id', b'req_01hz0y44qdepksgsmfszxv1bp9'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b2948afdcb7ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: This question is about a process or a method, which is related to a specific topic (wine selection), and it's not about a specific entity, location, or numeric value.
class_name: Description and abstract concept
class_index: 2
data: {'text': "What are some children 's rights ?", 'coarse_label': 2, 'fine_label': 25}
task_input: What are some children 's rights ?, corse_label: 2
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': "What are some children 's rights ?", 'examples_str': 'Question: What does the abbreviation OAS stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What kind of mammal is a colt ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why did the world enter a global depression in 1929 ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What mayor made so many TV appearances he was asked to join AFTRA in 1984 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many school districts are there in the United States ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does the abbreviation OAS stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What kind of mammal is a colt ?
class_name: Entity 
class_index: 1
--------

Question: Why did the world enter a global depression in 1929 ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What mayor made so many TV appearances he was asked to join AFTRA in 1984 ?
class_name: Human being 
class_index: 3
--------

Question: Where is Erykah Badu originally from ?
class_name: Location 
class_index: 4
--------

Question: How many school districts are there in the United States ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What are some children 's rights ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the abbreviation OAS stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What kind of mammal is a colt ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why did the world enter a global depression in 1929 ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What mayor made so many TV appearances he was asked to join AFTRA in 1984 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many school districts are there in the United States ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What are some children 's rights ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 01:06:10 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'332'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12470'), (b'x-ratelimit-remaining-tokens', b'29585'), (b'x-ratelimit-reset-requests', b'3h12m59.738s'), (b'x-ratelimit-reset-tokens', b'830ms'), (b'x-request-id', b'req_01hz0y44zmekxvrsr9cv135h0z'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b2948c9f467ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the abbreviation OAS stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What kind of mammal is a colt ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why did the world enter a global depression in 1929 ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What mayor made so many TV appearances he was asked to join AFTRA in 1984 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many school districts are there in the United States ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What are some children 's rights ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 01:06:12 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12469'), (b'x-ratelimit-remaining-tokens', b'29598'), (b'x-ratelimit-reset-requests', b'3h13m3.669s'), (b'x-ratelimit-reset-tokens', b'804ms'), (b'x-request-id', b'req_01hz0y4709eaerfseqnvsw1npy'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b2949989fb7ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about the rights of children, which are abstract concepts, so it falls under the category of Description and abstract concept.
class_name: "Description and abstract concept"
class_index: 2
data: {'text': 'What are some fun things to do in Cozumel , Mexico for teenagers ?', 'coarse_label': 2, 'fine_label': 25}
task_input: What are some fun things to do in Cozumel , Mexico for teenagers ?, corse_label: 2
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What are some fun things to do in Cozumel , Mexico for teenagers ?', 'examples_str': 'Question: What does the abbreviation OAS stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What kind of mammal is a colt ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why did the world enter a global depression in 1929 ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What mayor made so many TV appearances he was asked to join AFTRA in 1984 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many school districts are there in the United States ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does the abbreviation OAS stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What kind of mammal is a colt ?
class_name: Entity 
class_index: 1
--------

Question: Why did the world enter a global depression in 1929 ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What mayor made so many TV appearances he was asked to join AFTRA in 1984 ?
class_name: Human being 
class_index: 3
--------

Question: Where is Erykah Badu originally from ?
class_name: Location 
class_index: 4
--------

Question: How many school districts are there in the United States ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What are some fun things to do in Cozumel , Mexico for teenagers ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the abbreviation OAS stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What kind of mammal is a colt ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why did the world enter a global depression in 1929 ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What mayor made so many TV appearances he was asked to join AFTRA in 1984 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many school districts are there in the United States ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What are some fun things to do in Cozumel , Mexico for teenagers ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 01:06:12 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12469'), (b'x-ratelimit-remaining-tokens', b'29581'), (b'x-ratelimit-reset-requests', b'3h13m5.760999999s'), (b'x-ratelimit-reset-tokens', b'837ms'), (b'x-request-id', b'req_01hz0y477rfbev9t36w6112x43'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b2949b0b457ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the abbreviation OAS stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What kind of mammal is a colt ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why did the world enter a global depression in 1929 ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What mayor made so many TV appearances he was asked to join AFTRA in 1984 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many school districts are there in the United States ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What are some fun things to do in Cozumel , Mexico for teenagers ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 01:06:14 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12468'), (b'x-ratelimit-remaining-tokens', b'29590'), (b'x-ratelimit-reset-requests', b'3h13m9.695s'), (b'x-ratelimit-reset-tokens', b'820ms'), (b'x-request-id', b'req_01hz0y498bewjavy19zr9qbpf4'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b294a7fd497ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking about activities to do in a specific location, which is a location-based question.
class_name: Location
class_index: 4
data: {'text': 'What does hazmat stand for ?', 'coarse_label': 2, 'fine_label': 24}
task_input: What does hazmat stand for ?, corse_label: 2
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': 'What does hazmat stand for ?', 'examples_str': 'Question: What does the abbreviation OAS stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What kind of mammal is a colt ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why did the world enter a global depression in 1929 ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What mayor made so many TV appearances he was asked to join AFTRA in 1984 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many school districts are there in the United States ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does the abbreviation OAS stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What kind of mammal is a colt ?
class_name: Entity 
class_index: 1
--------

Question: Why did the world enter a global depression in 1929 ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What mayor made so many TV appearances he was asked to join AFTRA in 1984 ?
class_name: Human being 
class_index: 3
--------

Question: Where is Erykah Badu originally from ?
class_name: Location 
class_index: 4
--------

Question: How many school districts are there in the United States ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: What does hazmat stand for ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the abbreviation OAS stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What kind of mammal is a colt ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why did the world enter a global depression in 1929 ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What mayor made so many TV appearances he was asked to join AFTRA in 1984 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many school districts are there in the United States ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does hazmat stand for ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 01:06:14 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12468'), (b'x-ratelimit-remaining-tokens', b'29584'), (b'x-ratelimit-reset-requests', b'3h13m11.766999999s'), (b'x-ratelimit-reset-tokens', b'832ms'), (b'x-request-id', b'req_01hz0y49fnfbtap6f3z85dy7fe'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b294a97e5e7ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the abbreviation OAS stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What kind of mammal is a colt ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why did the world enter a global depression in 1929 ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What mayor made so many TV appearances he was asked to join AFTRA in 1984 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many school districts are there in the United States ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: What does hazmat stand for ?\nYour output:'}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 May 2024 01:06:16 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12467'), (b'x-ratelimit-remaining-tokens', b'29600'), (b'x-ratelimit-reset-requests', b'3h13m15.712s'), (b'x-ratelimit-reset-tokens', b'800ms'), (b'x-request-id', b'req_01hz0y4bfwefkrr9p5jv9pbrnt'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b294b648ea7ae0-SJC'), (b'Content-Encoding', b'gzip')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "200 OK"
Raw response: 
```
thought: The question is asking for the abbreviation of a term, which is a common use case for abbreviations.
class_name: ABBR
class_index: 0
data: {'text': "Who is the nebbish that is Marvel 's official mascot ?", 'coarse_label': 3, 'fine_label': 29}
task_input: Who is the nebbish that is Marvel 's official mascot ?, corse_label: 3
types: <class 'str'>, <class 'int'>
prompt_kwargs: {'input': "Who is the nebbish that is Marvel 's official mascot ?", 'examples_str': 'Question: What does the abbreviation OAS stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What kind of mammal is a colt ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why did the world enter a global depression in 1929 ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What mayor made so many TV appearances he was asked to join AFTRA in 1984 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many school districts are there in the United States ?\nclass_name: Numeric value \nclass_index: 5\n--------\n'}
system_prompt_str: You are a classifier. Given a Question, you need to classify it into one of the following classes:
Format: class_index. class_name, class_description
0. ABBR, Abbreviation
1. ENTY, Entity
2. DESC, Description and abstract concept
3. HUM, Human being
4. LOC, Location
5. NUM, Numeric value

<OUTPUT_FORMAT>
Your output should be formatted as a standard YAML instance with the following schema:
```
thought: Your reasoning to classify the question to class_name (str) (required)
class_name: class_name (str) (required)
class_index: class_index in range[0, 5] (int) (required)
```

-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!
-Follow the YAML formatting conventions with an indent of 2 spaces. 
-Quote the string values properly.

</OUTPUT_FORMAT>
<EXAMPLES>
Question: What does the abbreviation OAS stand for ?
class_name: Abbreviation 
class_index: 0
--------

Question: What kind of mammal is a colt ?
class_name: Entity 
class_index: 1
--------

Question: Why did the world enter a global depression in 1929 ?
class_name: Description and abstract concept 
class_index: 2
--------

Question: What mayor made so many TV appearances he was asked to join AFTRA in 1984 ?
class_name: Human being 
class_index: 3
--------

Question: Where is Erykah Badu originally from ?
class_name: Location 
class_index: 4
--------

Question: How many school districts are there in the United States ?
class_name: Numeric value 
class_index: 5
--------

</EXAMPLES>
Question: Who is the nebbish that is Marvel 's official mascot ?
Your output:
DEBUG:groq._base_client:Request options: {'method': 'post', 'url': '/openai/v1/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': "You are a classifier. Given a Question, you need to classify it into one of the following classes:\nFormat: class_index. class_name, class_description\n0. ABBR, Abbreviation\n1. ENTY, Entity\n2. DESC, Description and abstract concept\n3. HUM, Human being\n4. LOC, Location\n5. NUM, Numeric value\n\n<OUTPUT_FORMAT>\nYour output should be formatted as a standard YAML instance with the following schema:\n```\nthought: Your reasoning to classify the question to class_name (str) (required)\nclass_name: class_name (str) (required)\nclass_index: class_index in range[0, 5] (int) (required)\n```\n\n-Make sure to always enclose the YAML output in triple backticks (```). Please do not add anything other than valid YAML output!\n-Follow the YAML formatting conventions with an indent of 2 spaces. \n-Quote the string values properly.\n\n</OUTPUT_FORMAT>\n<EXAMPLES>\nQuestion: What does the abbreviation OAS stand for ?\nclass_name: Abbreviation \nclass_index: 0\n--------\n\nQuestion: What kind of mammal is a colt ?\nclass_name: Entity \nclass_index: 1\n--------\n\nQuestion: Why did the world enter a global depression in 1929 ?\nclass_name: Description and abstract concept \nclass_index: 2\n--------\n\nQuestion: What mayor made so many TV appearances he was asked to join AFTRA in 1984 ?\nclass_name: Human being \nclass_index: 3\n--------\n\nQuestion: Where is Erykah Badu originally from ?\nclass_name: Location \nclass_index: 4\n--------\n\nQuestion: How many school districts are there in the United States ?\nclass_name: Numeric value \nclass_index: 5\n--------\n\n</EXAMPLES>\nQuestion: Who is the nebbish that is Marvel 's official mascot ?\nYour output:"}], 'model': 'llama3-8b-8192', 'frequency_penalty': 0, 'n': 1, 'presence_penalty': 0, 'temperature': 0.0, 'top_p': 1}}
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Wed, 29 May 2024 01:06:16 GMT'), (b'Content-Type', b'application/json'), (b'Content-Length', b'326'), (b'Connection', b'keep-alive'), (b'Cache-Control', b'private, max-age=0, no-store, no-cache, must-revalidate'), (b'retry-after', b'2'), (b'vary', b'Origin'), (b'x-ratelimit-limit-requests', b'14400'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'12467'), (b'x-ratelimit-remaining-tokens', b'29589'), (b'x-ratelimit-reset-requests', b'3h13m17.768999999s'), (b'x-ratelimit-reset-tokens', b'822ms'), (b'x-request-id', b'req_01hz0y4bq3fr5tv06ssba5hbj3'), (b'via', b'1.1 google'), (b'alt-svc', b'h3=":443"; ma=86400'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'88b294b7b9e57ae0-SJC')])
INFO:httpx:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:groq._base_client:HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "429 Too Many Requests"
DEBUG:groq._base_client:Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/groq/_base_client.py", line 966, in _request
    response.raise_for_status()
  File "/Users/liyin/Documents/test/LightRAG/.venv/lib/python3.11/site-packages/httpx/_models.py", line 761, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.groq.com/openai/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
DEBUG:groq._base_client:Retrying due to status code 429
DEBUG:groq._base_client:1 retry left
INFO:groq._base_client:Retrying request to /openai/v1/chat/completions in 2.000000 seconds
